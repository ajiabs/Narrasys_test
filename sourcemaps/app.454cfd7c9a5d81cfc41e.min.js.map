{"version":3,"sources":["webpack:///app.454cfd7c9a5d81cfc41e.min.js","webpack:///./app/templates/item/modal.html","webpack:///external \"angular\"","webpack:///./app/templates/item/question-mc-inner.html","webpack:///./app/templates/toolbar-story.html","webpack:///./app/templates/item/sxs-annotation.html","webpack:///./app/templates/item/caption.html","webpack:///./app/templates/item/text-transmedia.html","webpack:///./app/templates/narrativelist.html","webpack:///./app/templates/item/searchresults-all.html","webpack:///./app/images/customer/Narrasys-Tree.png","webpack:///./app/images/checkmark.png","webpack:///./app/templates/narrative/default.html","webpack:///./app/templates/item/transcript.html","webpack:///./app/templates/item/image-thumbnail.html","webpack:///./app/templates/item/pullquote.html","webpack:///./app/templates/testbed-event.html","webpack:///./app/templates/timeline-story.html","webpack:///./app/templates/item/text-definition.html","webpack:///./app/templates/producer/upload-masterasset.html","webpack:///./app/templates/producer/questionauthoring.html","webpack:///./app/view-modes/watch-mode/watchmode.html","webpack:///./app/templates/root.html","webpack:///./app/templates/item/image.html","webpack:///./app/templates/scene/landingscreen.html","webpack:///./app/templates/producer/annotator-autocomplete.html","webpack:///./app/templates/scene/mirrored-twocol.html","webpack:///./app/templates/item/file-withimage.html","webpack:///./app/images/checkmark-empty.png","webpack:///./app/templates/item/review-annotation.html","webpack:///./app/templates/item/debug.html","webpack:///./app/templates/error.html","webpack:///./app/templates/producer/upload-producer.html","webpack:///./app/templates/scene/cornerH.html","webpack:///./app/templates/copyright.html","webpack:///./app/templates/item/link-descriptionfirst.html","webpack:///./app/images/no-avatar.gif","webpack:///./app/templates/scene/cornerV.html","webpack:///./app/templates/item/link-embed.html","webpack:///./app/templates/item/searchresults.html","webpack:///./app/templates/item/link-modal-thumb.html","webpack:///./app/scripts/directives/socialshare/social-share.html","webpack:///./app/templates/auth.html","webpack:///./app/templates/producer/item/sxs-video.html","webpack:///./app/templates/item/sxs-link.html","webpack:///./app/templates/producer/inputi18n.html","webpack:///./app/templates/producer/item/sxs-annotation.html","webpack:///./app/templates/producer/item/sxs-question.html","webpack:///./app/templates/item/image-fill.html","webpack:///./app/templates/item/image-caption-sliding.html","webpack:///./app/templates/navpanel.html","webpack:///./app/scripts/directives \\.html$","webpack:///./app/view-modes/video/video.html","webpack:///./app/templates/producer/item/sxs-image.html","webpack:///./app/templates/item/file.html","webpack:///./app/templates/item/sxs-file.html","webpack:///./app/templates/item/transcript-withthumbnail.html","webpack:///./app/templates/producer/addcontent.html","webpack:///./app/templates/user.html","webpack:///./app/images/autoscroll.svg","webpack:///./app/templates/producer/inputtime.html","webpack:///./app/templates/item/review-all.html","webpack:///./app/templates/video.html","webpack:///./app/templates/item/text-h1.html","webpack:///./app/templates/item/question-mc.html","webpack:///./app/templates/item/image-plain.html","webpack:///./app/templates/scene/centerVV-mondrial.backup.html","webpack:///./app/templates/scene/centerVV-Mondrian.html","webpack:///./app/templates \\.html$","webpack:///./app/templates/item/image-inline-withtext.html","webpack:///./app/view-modes \\.html$","webpack:///./app/templates/producer/episode.html","webpack:///./app/templates/producer/item/sxs-file.html","webpack:///./app/templates/scene/centerVV.html","webpack:///./app/templates/item/usc-badges.html","webpack:///./app/templates/item/review-windowfg.html","webpack:///./app/templates/error-404.html","webpack:///./app/templates/producer/asset-uploader.html","webpack:///./app/templates/producer/upload-sxs.html","webpack:///./app/templates/producer/upload-poster.html","webpack:///./app/templates/item/sxs-question.html","webpack:///./app/view-modes/review-mode-scenes/reviewmode-scenes.html","webpack:///./app/templates/iframe.html","webpack:///./app/templates/item/text-h2.html","webpack:///./app/view-modes/windowfg/windowfg.html","webpack:///./app/templates/scene/endingscreen.html","webpack:///./app/scripts/controllers/ContainerAssetsTestController.ts","webpack:///./app/scripts/models.ts","webpack:///./app/scripts/controllers/EditController.ts","webpack:///./app/scripts/controllers/ErrorController.ts","webpack:///./app/scripts/controllers/EventTestController.ts","webpack:///./app/scripts/controllers/ItemController.ts","webpack:///./app/scripts/controllers/PlayerController.ts","webpack:///./app/scripts/controllers/SceneController.ts","webpack:///./app/scripts/controllers/SearchPanelController.ts","webpack:///./app/scripts/controllers/TimelineController.ts","webpack:///./app/scripts/services/authSvc/authSvc.ts","webpack:///./app/scripts/services/awsSvc.ts","webpack:///./app/scripts/services/config.ts","webpack:///./app/scripts/services/ittUtils.ts","webpack:///./app/scripts/services/dataSvc/dataSvc.ts","webpack:///./app/scripts/services/errorSvc.ts","webpack:///./app/scripts/services/imageResizeSvc.ts","webpack:///./app/scripts/services/mockSvc.ts","webpack:///./app/scripts/services/modelSvc/modelSvc.ts","webpack:///./app/scripts/services/playbackService/playbackService.ts","webpack:///./app/scripts/services/questionAnswersSvc.ts","webpack:///./app/scripts/services/recursionHelper.ts","webpack:///./app/scripts/services/selectService.ts","webpack:///./app/scripts/services/timelineSvc/timelineSvc.ts","webpack:///./app/scripts/services/urlService.ts","webpack:///./app/scripts/services/basePlayerManager/playerManagerCommons.ts","webpack:///./app/scripts/services/html5/html5PlayerManager.svc.ts","webpack:///./app/scripts/services/html5/html5UrlService.ts","webpack:///./app/scripts/services/kaltura/kalturaPlayerManager.ts","webpack:///./app/scripts/services/kaltura/kalturaScriptLoader.ts","webpack:///./app/scripts/services/kaltura/kalturaUrlService.ts","webpack:///./app/scripts/services/youtube/YouTubePlayerManager.svc.ts","webpack:///./app/scripts/services/youtube/youtubeScriptLoader.ts","webpack:///./app/scripts/services/youtube/youtubeUrlService.ts","webpack:///./app/scripts/directives/autofocus.ts","webpack:///./app/scripts/directives/ittAnnotationField.ts","webpack:///./app/scripts/directives/ittColorSelect.ts","webpack:///./app/scripts/directives/ittDescriptionField.ts","webpack:///./app/scripts/directives/ittDisplaySelect.ts","webpack:///./app/scripts/directives/ittDynamicModel.ts","webpack:///./app/scripts/directives/ittFileField.ts","webpack:///./app/scripts/directives/ittFilesHandler.ts","webpack:///./app/scripts/directives/ittFlotChart.ts","webpack:///./app/scripts/directives/ittHighlightSelect.ts","webpack:///./app/scripts/directives/ittIframe.ts","webpack:///./app/scripts/directives/ittImageField.ts","webpack:///./app/scripts/directives/ittItem.ts","webpack:///./app/scripts/directives/ittItemDetailModal.ts","webpack:///./app/scripts/directives/ittItemEditor.ts","webpack:///./app/scripts/directives/ittLanguageFlags.ts","webpack:///./app/scripts/directives/ittLanguageSelect.ts","webpack:///./app/scripts/directives/ittLogin.ts","webpack:///./app/scripts/directives/magnet/ittMagnet.ts","webpack:///./app/scripts/directives/magnet/ittMagnetized.ts","webpack:///./app/scripts/directives/ittMcQuestion.ts","webpack:///./app/scripts/directives/ittNarrativeTimeline.ts","webpack:///./app/scripts/directives/ittOptionsDisabled.ts","webpack:///./app/scripts/directives/ittQuestionOptions.ts","webpack:///./app/scripts/directives/ittQuestionTextField.ts","webpack:///./app/scripts/directives/ittQuestionTypeSelect.ts","webpack:///./app/scripts/directives/ittReviewMode.ts","webpack:///./app/scripts/directives/ittRouteLoading.ts","webpack:///./app/scripts/directives/ittScene.ts","webpack:///./app/scripts/directives/ittSearchPanel.ts","webpack:///./app/scripts/directives/ittShowFocus.ts","webpack:///./app/scripts/directives/ittShowHideVisualOnly.ts","webpack:///./app/scripts/directives/ittSpeakerField.ts","webpack:///./app/scripts/directives/ittSpeakerThumbField.ts","webpack:///./app/scripts/directives/ittTabs.ts","webpack:///./app/scripts/directives/ittTab.ts","webpack:///./app/scripts/directives/ittTimeField.ts","webpack:///./app/scripts/directives/ittTimeline.ts","webpack:///./app/scripts/directives/ittTimestampSelect.ts","webpack:///./app/scripts/directives/ittTitleField.ts","webpack:///./app/scripts/directives/ittToolbarStory.ts","webpack:///./app/scripts/directives/ittTranscriptField.ts","webpack:///./app/scripts/directives/ittTransitionSelect.ts","webpack:///./app/scripts/directives/ittTypographySelect.ts","webpack:///./app/scripts/directives/ittUser.ts","webpack:///./app/scripts/directives/ittValidAsset.ts","webpack:///./app/scripts/directives/ittValidationTip.ts","webpack:///./app/scripts/directives/ittValidEpisodeUrl.ts","webpack:///./app/scripts/directives/ittValidPathslug.ts","webpack:///./app/scripts/directives/ittValidUrl.ts","webpack:///./app/scripts/directives/ittVideo.ts","webpack:///./app/scripts/directives/ittVolumeSlider.ts","webpack:///./app/scripts/directives/ittWidthWatch.ts","webpack:///./app/scripts/directives/sxsAddContent.ts","webpack:///./app/scripts/directives/sxsAnnotatorAutocomplete.ts","webpack:///./app/scripts/directives/sxsInputI18n.ts","webpack:///./app/scripts/directives/sxsInputTime.ts","webpack:///./app/scripts/directives/ittPlayerContainer.ts","webpack:///./app/episode/components/episode/ittEpisode.ts","webpack:///./app/episode/components/episode-editor/ittEpisodeEditor.ts","webpack:///./app/scripts/app.ts","webpack:///./app/scripts/constants.ts","webpack:///./app/scripts/controllers/controllers.module.ts","webpack:///./app/scripts/services/appState.ts","webpack:///./app/scripts/filters/filters.ts","webpack:///./app/scripts/services/basePlayerManager/index.ts","webpack:///./app/scripts/services/wistia/wistiaScriptLoader.ts","webpack:///./app/scripts/services/wistia/wistiaUrlService.ts","webpack:///./app/scripts/services/basePlayerManager/basePlayerManager.ts","webpack:///./app/scripts/services/playbackService/index.ts","webpack:///./app/scripts/services/wistia/wistiaPlayerManager.ts","webpack:///./app/scripts/services/uploadsService.ts","webpack:///./app/scripts/services/validation.svc.ts","webpack:///./app/scripts/services/analyticsSvc/analyticsSvc.ts","webpack:///./app/scripts/services/services.module.ts","webpack:///./app/scripts/directives/ittUploadTranscriptsField.ts","webpack:///./app/scripts/directives/ittAssetUploader.ts","webpack:///./app/scripts/directives/ittClipboard.ts","webpack:///./app/scripts/directives/ittContainer.ts","webpack:///./app/scripts/directives/ittContainerEpisodes.ts","webpack:///./app/scripts/directives/ittEditPencil.ts","webpack:///./app/scripts/directives/ittFlags.ts","webpack:///./app/scripts/directives/guest-accessible-url/npGuestAccessibleUrl.ts","webpack:///./app/scripts/directives/ittLoading.ts","webpack:///./app/scripts/directives/ittModal.ts","webpack:///./app/scripts/directives/npNarrativeDetail.ts","webpack:///./app/scripts/directives/npNarrativeEditor.ts","webpack:///./app/scripts/directives/npNarrativeList.ts","webpack:///./app/scripts/directives/npNarrativesContainer.ts","webpack:///./app/scripts/directives/npNarrativeContainer.ts","webpack:///./app/scripts/directives/ittNav.ts","webpack:///./app/scripts/directives/ittTemplateSelect.ts","webpack:///./app/scripts/directives/npTimelineEditor.ts","webpack:///./app/scripts/directives/ittTooltip.ts","webpack:///./app/scripts/directives/npUrlField.ts","webpack:///./app/scripts/directives/ittVideoPositionSelect.ts","webpack:///./app/scripts/directives/sxsContainerAssets.ts","webpack:///./app/scripts/directives/socialshare/ittEnableSocialshare.ts","webpack:///./app/scripts/directives/socialshare/ittSocialShare.ts","webpack:///./app/scripts/directives/ittFiledrop.ts","webpack:///./app/scripts/directives/ittUploadProgress.ts","webpack:///./app/scripts/directives/npProjectsContainer.ts","webpack:///./app/scripts/directives/directives.module.ts","webpack:///./app/episode/components/episode-list/ittEpisodeList.ts","webpack:///./app/episode/services/episodeTheme.service.ts","webpack:///./app/episode/services/episodeEdit.service.ts","webpack:///./app/episode/components/copyright/npCopyright.ts","webpack:///./app/episode/components/episode-footer/npEpisodeFooter.ts","webpack:///./app/episode/episode.module.ts","webpack:///./app/templates/scene/debug.html","webpack:///./app/templates/scene/centered.html","webpack:///./app/view-modes/review-mode/reviewmode.html","webpack:///./app/templates/item/usc-badges-inner.html","webpack:///./app/templates/producer/item.html","webpack:///./app/templates/player.html","webpack:///./app/templates/item/review-transmedia.html","webpack:///./app/templates/item/sxs-video.html","webpack:///./app/templates/scene/centeredPro.html","webpack:///./app/templates/item/image-linkonly.html","webpack:///./app/images/Narrasys_Banner.svg","webpack:///./app/templates/producer/item/sxs-link.html","webpack:///./app/templates/producer/container-assets.html","webpack:///./app/images/aspectratiopreserver-16x9.gif","webpack:///./app/templates/item/image-caption.html","webpack:///./app/templates/scene/1col.html","webpack:///./app/templates/searchpanel.html","webpack:///./app/images/customer/Narrasys_Logo.png","webpack:///./app/templates/scene/pip.html","webpack:///./app/templates/item/link-withimage-notitle.html","webpack:///./app/view-modes/discover-mode/discovermode.html","webpack:///./app/templates/item/sxs-image.html","webpack:///./app/templates/container.html","webpack:///./app/templates/item/pullquote-noattrib.html","webpack:///./app/templates/player-timeline.html","webpack:///./app/templates/item/link.html"],"names":["webpackJsonp","+o/S","module","exports","path","window","angular","run","c","put","0YuG","0ePo","1Wv5","__webpack_require__","html","2+b9","2/3b","3gcz","4bbU","55GB","5Tuk","p","6/Qv","6ze8","7GUz","7XCA","84qX","888c","9ij1","AZay","AeV0","AiEB","AxNG","CQGL","CVkk","D/IP","DJti","EDO7","F5VT","FFkw","FUk5","G4Wk","GGxq","GUWn","GeQP","GoGc","HyaP","IL3w","IiAB","JTcP","Jetm","JkHQ","JnVu","JoBD","JtGx","K96E","KP/u","LSM6","N29+","NnMI","O4Bc","OCYu","Of5n","Ogf/","webpackContext","req","webpackContextResolve","id","map","Error","./socialshare/social-share.html","keys","Object","resolve","Qi2g","RMtA","SwK8","TEP0","UW+C","V8p6","VUBB","WeeJ","X9vo","XOLC","XP8H","Y+RF","YALA","Youv","Ypjs","YxFl","ZcPu","./auth.html","./container.html","./copyright.html","./error-404.html","./error.html","./iframe.html","./item/caption.html","./item/debug.html","./item/file-withimage.html","./item/file.html","./item/image-caption-sliding.html","./item/image-caption.html","./item/image-fill.html","./item/image-inline-withtext.html","./item/image-linkonly.html","./item/image-plain.html","./item/image-thumbnail.html","./item/image.html","./item/link-descriptionfirst.html","./item/link-embed.html","./item/link-modal-thumb.html","./item/link-withimage-notitle.html","./item/link.html","./item/modal.html","./item/pullquote-noattrib.html","./item/pullquote.html","./item/question-mc-inner.html","./item/question-mc.html","./item/review-all.html","./item/review-annotation.html","./item/review-transmedia.html","./item/review-windowfg.html","./item/searchresults-all.html","./item/searchresults.html","./item/sxs-annotation.html","./item/sxs-file.html","./item/sxs-image.html","./item/sxs-link.html","./item/sxs-question.html","./item/sxs-video.html","./item/text-definition.html","./item/text-h1.html","./item/text-h2.html","./item/text-transmedia.html","./item/transcript-withthumbnail.html","./item/transcript.html","./item/usc-badges-inner.html","./item/usc-badges.html","./narrative/default.html","./narrativelist.html","./navpanel.html","./player-timeline.html","./player.html","./producer/addcontent.html","./producer/annotator-autocomplete.html","./producer/asset-uploader.html","./producer/container-assets.html","./producer/episode.html","./producer/inputi18n.html","./producer/inputtime.html","./producer/item.html","./producer/item/sxs-annotation.html","./producer/item/sxs-file.html","./producer/item/sxs-image.html","./producer/item/sxs-link.html","./producer/item/sxs-question.html","./producer/item/sxs-video.html","./producer/questionauthoring.html","./producer/upload-masterasset.html","./producer/upload-poster.html","./producer/upload-producer.html","./producer/upload-sxs.html","./root.html","./scene/1col.html","./scene/centerVV-Mondrian.html","./scene/centerVV-mondrial.backup.html","./scene/centerVV.html","./scene/centered.html","./scene/centeredPro.html","./scene/cornerH.html","./scene/cornerV.html","./scene/debug.html","./scene/endingscreen.html","./scene/landingscreen.html","./scene/mirrored-twocol.html","./scene/pip.html","./searchpanel.html","./testbed-event.html","./timeline-story.html","./toolbar-story.html","./user.html","./video.html","asq8","bKzE","./discover-mode/discovermode.html","./review-mode-scenes/reviewmode-scenes.html","./review-mode/reviewmode.html","./video/video.html","./watch-mode/watchmode.html","./windowfg/windowfg.html","cBzx","cWz7","cm1R","dt7p","eQIm","eSLu","emMF","fJsy","gJY5","gr72","hs0e","iEyP","kvzn","l1Qu","lVoZ","liE5","m2IE","__webpack_exports__","ContainerAssetsTestController","$scope","$routeParams","authSvc","logout","containerId","createInstance","type","data","model","ILink","IAnnotation","IBookmark","IChapter","IImage","IPlugin","IScene","IText","IUpload","INarrative","IAsset","ICustomer","ITimeline","IEpisode","IContainer","ILayoutTemplate","IItemTemplate","IEpisodeTemplate","assign","css_configuration","ICssConfiguration","fonts","IFont","ILayout","IStyle","EditController","$rootScope","$timeout","$window","selectService","appState","dataSvc","modelSvc","timelineSvc","MIMES","playbackService","episodeTheme","episodeEdit","onFormativeChecked","distractor","forEach","item","_plugin","distractors","_distractor","correct","undefined","updateEpisodeTemplate","$data","episode","templateId","then","uneditedScene","copy","userHasRole","canAccess","producerItemType","mimes","default","chooseAsset","assetType","showAssetPicker","w1","$on","e","attachPosterAsset","attachChosenAsset","endChooseAsset","w2","toggleUpload","addDistractor","push","text","index","length","addEvent","t","Math","round","getMetaProp","isOnExistingSceneStart","editCurrentScene","newEvent","generateEmptyItem","cur_episode_id","episodeId","episode_id","user","avatar_id","cache","editEvent","events","videoControlsActive","videoControlsLocked","resolveEpisodeEvents","injectEvents","onSelectChange","updateSceneTimes","$emit","isTranscript","_type","templateUrl","match","getTranscriptItems","episodes","items","filter","getItemIndex","centerIndex","i","len","_id","filterToItemBefore","centerItem","sort","sortByStartTime","itemBefore","isInternal","filterToBookends","itemsBeforeAndAfter","saveAdjustedEvents","operation","original","itemsToSave","transcriptItems","storeItem","saveEvent","toSave","blockDoubleClicks","adjusted","adjustScenes","scene","saveOperation","removeEvent","resolveIDs","assetId","asset_id","link_image_id","annotation_image_id","asset","assocEventWithAsset","timelineEvents","episodeEvents","setCurrentScene","updateEventTimes","removedAssets","deleteAsset","getScenes","getEpisodeScenes","getItemsAfter","after","itemsAfter","start_time","end_time","resetScenes","updatedScenes","originalScene","splice","fixEndTimes","scenes","duration","pushScene","exists","removeScene","a","b","modifiedScene","isDelete","sceneAtEpisodeTime","templateOpts","getTemplates","editEpisode","setEpisodeToEdit","deleteEvent","eventId","confirm","event","eventType","deleteItem","product","cancelEventEdit","originalEvent","cancelEpisodeEdit","deriveEpisode","resolveEpisodeContainers","setTheme","template","base","isCurrent","layouts","styles","stub","create","title","description","url","annotation","annotator","target","url_status","_pluginType","_version","questiontext","questiontype","correctfeedback","incorrectfeedback","plugin","sxs","en","name","time","stop","defaultTemplateUrls","transcript","link","image","file","question","video","extend","ErrorController","errorSvc","dismiss","cur","errors","notifications","EventTestController","mockSvc","mockEpisode","lang","ItemController","seek","KeyCodes","ENTER","SPACE","seekOnKeyPress","$event","passThrough","keyCode","stopPropagation","preventDefault","PlayerController","$location","$interval","config","analyticsSvc","calcNewWindowUrl","entityId","narrativeId","timelineId","mainVideoNewWindowUrl","access_token","iframeIOSOverlayHandler","open","viewMode","newMode","captureEpisodeActivity","mode","producerEditLayer","UPDATE_MAGNET","autoscroll","autoscrollBlocked","startScrollWatcher","handleAutoscroll","endSearch","$","trigger","toggleProducerPreview","epId","init","isFramed","max","document","documentElement","clientHeight","innerHeight","parent","postMessage","JSON","stringify","subject","height","wileyNag","displayName","indexOf","localStorageAllowed","localStorage","setItem","removeItem","getItem","show","nagWatch","$watch","n","noWileyNag","getEpisodeWatcher","toLowerCase","defaultLanguage","setLanguageStrings","display_title","container_id","getContainer","master_asset_id","watch","assets","masterAsset","addEndingScreen","loading","custId","containers","customer_id","productLoadedAs","addLandingScreen","getEpisode","episodeSegmentId","now","Date","showIframeIOSOverlay","isIframedIOS","controlTimer","videoControlsWatcher","isActive","cancel","showControls","isTouchDevice","allowControlsExit","toggleSearchPanel","searchPanel","windowWidth","searchText","getElementById","focus","toggleNavPanel","pause","navPanel","firstplayWatcher","play","hidePanel","panel","hidePanels","profilePanel","itemDetail","continue","isTrueGuest","autoscrollableNode","animatableScrollNode","autoscrollTimer","bind","stopScrollWatcher","unbind","enableAutoscroll","top","Infinity","curScroll","scrollTop","getBoundingClientRect","animate","escWatcher","SceneController","$filter","ittUtils","precalculateSceneValues","mainContentHasLeftSidebar","mainContentHasRightSidebar","mainContentHasBothSidebars","altContentHasLeftSidebar","altContentHasRightSidebar","altContentHasBothSidebars","showCurrent","inArray","contentItems","mainFgItems","mainBgItems","altFgItems","altBgItems","mainContentItems","altContentItems","centeredProTransmedia","isPullQuote","isH2","isLongTxt","isDef","byPullquoteOrH2","setBgImgUrl","col","bgSize","bgPosition","bgUrl","currItems","mainColBgOrFg","opacity","existy","cssBgUrl","test","layoutCss","background-image","background-size","background-position","SearchPanelController","sortBy","toggleSortBy","sortedBy","getFlippedSortValue","getToggledValue","currentSortBy","current","getFriendlySortText","indexed","indexEvents","typeCategories","showTypes","other","cosmetic","showAsHeader","TimelineController","setBtnClass","state","_getTimelineState","allowPlayback","controlText","timelineBtnClick","togglePlayback","restartEpisode","getTimelineState","changeSpeed","newSpeed","setSpeed","resetSpeed","markerPercent","toggleMute","setVolume","volume","authSvc_authSvc","$http","$q","_isGuest","roles","r","role","Roles","GUEST","svc","ADMINISTRATOR","INSTRUCTOR","STUDENT","CUSTOMER_ADMINISTRATOR","Resources","CUSTOMER","resource_id","resource_type","getCustomerIdsFromRoles","reduce","accm","getRoleForNarrative","exitLoop","getDefaultProductForRole","error","localStorageKey","cookie","method","apiDataBaseUrl","success","defaults","headers","common","Authorization","search","adminLogin","authKey","password","defer","param","auth_key","Content-Type","resolveUserData","getCurrentUser","reject","promise","authenticateDefer","authenticate","nonceParam","authenticateViaNonce","key","nonce","getAccessToken","token","getStoredToken","getNonce","storedData","fromJson","currentCustomer","customer","respData","updateUser","constructor","String","authentication_token","tok","get","response","avatar","track_episode_metrics","role_description","getRoleDescription","emails","email","roleKey","login_url","login_via_top_window_only","location","href","hash","awsSvc","fileBeingUploaded","multipartUpload","deferredUpload","currentRequest","awsCache","s3","chunkSize","chunkCount","chunksUploaded","chunks","chunkSearchIndex","files","fileMeta","fileIndex","bytesUploaded","deferredUploads","uploadPaused","getBucketListing","getUploadSession","listObjects","err","uploadContainerFiles","fileList","tag","uploadFiles","uploadUserFiles","userId","assetEndpoint","deferredUploadsPromises","deferred","startNextUpload","pauseUpload","cancelCurrentUploadRequests","isSmallUpload","chunkIndex","chunk","status","uploaded","notify","bytesSent","bytesTotal","size","resumeUpload","putObject","startNextUploadPart","cancelUpload","cancelMultipartUpload","networkError","deleteObject","bucketObject","params","Bucket","bucket","Key","getMultipartUploads","listMultipartUploads","getMultipartUploadParts","UploadId","listParts","parts","abortMultipartUpload","hasOwnProperty","sessionDeferred","access_key_id","AWS","update","accessKeyId","secretAccessKey","secret_access_key","sessionToken","session_token","region","awsRegion","maxRetries","httpOptions","timeout","Prefix","key_base","S3","ensureUniqueFilename","fileUploadPromise","uploadSmallFile","uploadBigFile","createAsset","reason","uniqueName","generateUUID","headObject","statusCode","findUnique","Uploads","d","getTime","replace","random","floor","toString","getMD5ForFileOrBlob","md5","ContentType","Body","ContentMD5","ACL","on","progress","loaded","total","createMultipartUpload","prepareUploadParts","awsMultipartUpload","ceil","start","end","retries","foundNextChunk","blob","slice","request","abort","all","partNumber","when","eTag","uploadPart","completePart","handleFailedPart","fileOrBlob","hashType","reader","FileReader","onload","result","util","crypto","Uint8Array","readAsArrayBuffer","PartNumber","ETag","part","MultipartUpload","Parts","completeMultipartUpload","foundAllUploadingChunks","assetData","original_filename","tags","post","config_config","host","youtube","domain","ittUtils_ittUtils","ngTimeout","fn","cancelNgTimeout","getSubdomain","truthy","isValidURL","stripHtmlTags","pick","bitwiseCeil","setNgOpts","intersection","parseTime","renameKey","capitalize","slugify","str","toUpperCase","obj","field","omit","_i","arguments","prop","split","x","y","ret","z","isNaN","parseFloat","isFinite","parse","oldName","newName","dataSvc_dataSvc","questionAnswersSvc","sendSocialshareEmail","tlId","SANE_POST","beginBackgroundTranslations","SANE_GET","batchUploadTranscripts","formData","transformRequest","identity","Content-type","generateNewNarrative","postData","resp","catch","getCustomerLinkStatusReportSpreadsheet","customerId","getAssetsByAssetIds","assetIds","assetIdsObj","asset_ids","fetchAndCacheAssetsByIds","asx","deleteContainer","PDELETE","getEpisodeTemplatesAdmin","ts","customer_ids","getEpisodeTemplatesByCustomerIds","custIds","fetchTemplates","templates","getTemplate","dataCache","getNarrative","cachedNarrative","narratives","subdomain","urlParams","narrative_subdomain","timelines","sort_order","getNarrativeOverview","GET","getNarrativeExportAsSpreadsheet","nId","cachedPurchases","getUserNarratives","getCustomerList","customers","getCustomer","retrieve","segmentId","local","getCommon","getEpisodeOverview","getNarrativeList","assocNarrativesWithCustomer","createUserGroup","groupName","POST","group","createNarrative","narrativeData","updateNarrative","SANE_PUT","createChildEpisode","childData","createEpisodeSegment","segmentData","storeTimeline","origTimeline","permitted","timeline","PUT","deleteTimeline","getSingleAsset","layout","style","gettingCommon","getCommonDefer","responses","cacheType","dataList","applies_to_episodes","pro_episode_template","event_types","css_name","display_name","createTemplate","templateData","template_id","layout_id","style_id","getAssetIdFromEvent","getAssetIdsFromEvents","idsobject","episodeData","episodeTemplate","getEvents","getEventActivityDataForUser","eventData","poster_frame_id","resolveEpisodeAssets","getContainerAncestry","container","parent_id","endpoint","activityType","evData","getUserAnswer","userAnswer","hasBeenAnswered","angularContinue","selected","selectedDistractor","postprocessCallback","putData","DELETE","getContainerRoot","customerIDs","getContainerAssets","children","getSiblings","child","overview","containerAssets","assetsHaveLoaded","createContainer","newContainer","parentId","updateContainer","createEpisode","storeEpisode","epData","preppedData","prepEpisodeForStorage","evtId","createAssetDefer","deriveAsset","evt","prepItemForStorage","prepped","fields","startFloat","endFloat","get_id_values","readCache","detachMasterAsset","detachEventAsset","val","found","debugInBrowser","realNames","ids","realName","cachedValue","errorSvc_errorSvc","exception","cause","note","imageResize","createFileFromDataURL","fileName","_blob","_dataURLToBlob","lastModifiedDate","readFileToImg","_img","Image","readFileToDataURI","imgUrl","src","onerror","img","_reader","onloadend","readAsDataURL","resizeImg","maxWidth","maxHeight","center","_canvas","createElement","_ctx","_getContext","_dx","_dy","_tmpCvsWidth","width","_tmpCvsHeight","_setCanvasWH","drawImage","_resizeImgWithCanvas","_finalWH","_calculateNewDimensions","toDataURL","calcAspectRatio","w","h","getImageTagType","SOCIAL_IMAGE_WIDE","SOCIAL_IMAGE_SQUARE","canvas","cW","cH","dx","dy","_resizeCvs","_resizeCtx","context","getContext","imageSmoothingEnabled","mozImageSmoothingEnabled","oImageSmoothingEnabled","webkitImageSmoothingEnabled","dataURL","parts_1","contentType_1","raw_1","decodeURIComponent","Blob","contentType","raw","atob","rawLength","uInt8Array","charCodeAt","srcWidth","srcHeight","_ratio","min","mockSvc_mockSvc","keepJsLintHappy","noop","created_at","languages","code","alternate_urls","attachment","base_path","content_type","extension","file_size","filename","frame_rate","frame_rate_d","frame_rate_n","sceneStub","keywords","scenetemplateurls","annotationStub","required","testLayouts","annotationTemplates","longtext","linkStub","isContent","questionFormativeStub","questionPollStub","questionTemp","uploadStub","upload","filltest","modelSvc_modelSvc","urlService","accessToken","startAt","playerType","baseNewWindowEndpoint","narrative","cachedNarrativesByCustomer","getCustomersAsArray","getNarrativesAsArray","_sortItems","chapter_marker","some","getNarrativeByPathOrId","pathOrId","path_slug","instance","tl","deriveEvent","deriveContainer","setLang","doResizeIframe","resizeIframeReviewMode","_asset","resolveVideo","haveNotLoadedChildData","childRefs","loadedChildData","searchableText","display_annotation","display_description","display_annotator","uscReviewModeHack","mixedContent","targetTop","isVideoUrl","isHttps","protocol","showInlineDetail","isPq","isHeader","isLongText","displayStartTime","langToSet","ep","chapters","annotators","langs","longKey","scenesLength","sceneItems","previousTranscript","itemsLength","scene_id","styleCss","cascadeStyles","templateCss","currentScene","isImgPlain","isInlineImgWText","isImgCap","isImgThumb","isBgImage","isH1","potentialHighlight","potentialTransitions","join","parents","previousEpisodeContainer","nextEpisodeContainer","navigation_depth","sceneId","thing","styleCategories","typography","color","highlight","timestamp","transition","cssArr","categoryValue","categoryName","sceneStyles","episodeStyles","poster","_internal","lastScene","isTranscoded","mediaSrcArr","playbackService_playbackService","youTubePlayerManager","html5PlayerManager","kalturaPlayerManager","wistiaPlayerManager","PLAYERSTATES_WORD","PLAYERSTATES","handleTimelineEnd","pid","_setPid","_existy","_playerInterfaces","seedPlayer","mainPlayer","parsedMedia","parseMediaSrcArr","pm","_getPlayerManagerFromMediaSrc","_playbackServiceHasBeenReset","_mainPlayerId","_pollBufferedPercent","seedPlayerManager","playerId","_playerManagers","pauseOtherPlayers","seekTo","restartFn","analyticsFn","getPlayerState","pi","setMetaProp","registerStateChangeListener","cb","_stateChangeCallbacks","unregisterStateChangeListener","getCurrentTime","getPlayerDiv","playbackRate","vol","_timelineState","setTimelineState","freezeMetaProps","unFreezeMetaProps","resetPlaybackService","resetPlayerManager","_mainPlayerBufferingPoll","handle$Destroy","_handleEmbedDestroy","_emitStateChange","renamePid","_getBufferedPercent","getBufferedPercent","_onPlayerReady","lastState","hasResumed","isBeingReset","_stateChangeCB","stateChangeEvent","emitterId","parsedMediaSrc","playerManager","questionAnswersSvc_questionAnswersSvc","saveAnswer","eventID","forceCaptureEventActivityWithPromise","getAnswers","readEventActivity","activityData","answers","activity","user_id","calculateCounts","grouped","incrementAnswerCount","answerCounts","answerIndex","recursionHelper","$compile","compile","element","isFunction","compiledContents","contents","remove","pre","scope","clone","append","apply","selectService_selectService","_setVisibility","bool","_visibility","_partialVis","_setAvailableImageOptsForLayout","sceneType","itemForm","isInline","_bgImagePositionSelectVisibility","position","_displaySelectVisibility","_videoPositionSelectVisibility","_select","display","value","_bgImageTitles","windowBg","isDisabled","videoOverlay","textBg","textFg","transmediaBg","transmediaFg","isAdmin","_userHasRole","getSceneName","_scenes","getSelectOpts","getVisibility","setupItemForm","stylesArr","_itemFormStub","_itemSpecificOpts","styleType","substr","j","customerIds","_sortAlpha","_titleFieldVisibility","_templateSelectVisibility","centered","centeredPro","cornerV","mirroredTwoCol","centerVV","centerVVMondrian","cornerH","pip","_speakerFieldVisibility","_imageFieldVisibility","linkTemplates","_D1","_D2","_D3","questionType","_currentSceneName","pin","imagePosition","showTab","itemType","tabTitle","_langOpts","imagePin","language","templateSelect","imageUpload","videoPosition","bgImagePosition","titleField","speakerField","1col","timelineSvc_timelineSvc","_onPlayerStateChange","_resetClocks","endingScreen","currentTime","ourTime","abs","stepEvent","startTimelineClock","startEventClock","startAtSpecificTime","updateEventStates","clock","stopEventClock","lastTick","_doEndingSequence","nextScene","currentDuration","markedEvents","handleScene","action","s","prevScene","groupByStartTime","array","prepGroupedEvents","displayArr","multiStop","toolTipText","layoutChange","foundStop","foundScene","foundInternalScene","chap","$index","enforceSingletonPauseListener","addEventListener","eventTimeout","timeMultiplier","speed","nocapture","captureData","seekStart","event_id","eventClockData","resetEventClock","lastTimelineTime","lastVideoTime","running","ignoreStopEvents","vidTime","handleEvent","nextEvent","lastEvent","timeToNextEvent","preloadImageAsset","_tick","thisTick","delta","Number","newTime","displayMarkedEvents","injectionTime","addMarkedEvent","sortTimeline","groupedEvents","wasFound","removeId","timelineEvent","tE","setFuture","setCurrent","setPast","alreadyPreloadedImages","urlService_urlService","youtubeUrlService","html5UrlService","kalturaUrlService","wistiaUrlService","parseInput","input","checkUrl","_urlSubServices","parsedMediaSrcArr","urlSrv","parsedMediaSrcObj","parseMediaSrc","canPlay","mimeType","getMimeType","getOutgoingUrl","videoAsset","videoObject","mp4","webm","m3u8","kaltura","wistia","extensionMatch","embeddableYoutubeUrl","you_tube_url","videoPixelSize","ext","disabled","navigator","userAgent","vendor","tDelimit","tParam","urls","_resolveMediaSrcArray","mediaSrc","concat","html5","playerManagerCommons","locals","getStateChangeListeners","getPlayer","_players","setInstance","setPlayer","meta","validKeys","getMetaObj","createMetaObj","props","newMetaObj","pauseFn","otherPlayerState","getInstance","predicate","destroyFn","_getPlayers","_destroyInstance","doRemove","sideEffects","players","commonMetaProps","html5Ending","onEnded","call","divID","isFrozen","plr","_attachEventListeners","onStateChange","_onStateChange","controls","load","freeze","newMeta","frozenMeta","_ignoreNextEventIfPause","plrInfo","_initPlayerDiv","newProps","videoObj","div","videoElm","_html5MetaObj","onSeeked","ev","this","isIEOrEdge","onPlaying","_a","onCanPlay","onPause","onBuffering","playerRendered","waitUntilReady","delay","readyState","player","playerState","muted","buffered","bufLen","bufStart","bufEnd","_getHtml5VideoObject","_drawPlayerDiv","quality","videoElement","fileType","classAttr","srcAttr","typeAttr","srcElement","setAttribute","appendChild","fallback","innerText","outerHTML","_formatPlayerStateChangeEvent","forceState","_getStateChangeListeners","evMap","playing","waiting","seeked","canplay","ended","evtName","_removeEventListeners","removeEventListener","_html5MetaProps","videoType","_validMetaKeys","parsedMediaObj","isHTML5VideoUrl","kalturaScriptLoader","handleSuccess","readyCallback","kdp","ktObj","_createKWidget","partnerId","entryId","uiconfId","getKalturaObject","_getPlayerDiv","_kalturaMetaObj","onMediaReady","_kdpEval","onPaused","onBufferEnd","currentState","isBuffering","cancelIttTimeout","onBufferStart","ittTimeout","_reset","onPlayerPlayEnd","onMediaError","onUpdatedPlaybackRate","onPlayerUpdatePlayhead","_sendKdpNotice","isMuted","v","notice","sendNotification","divId","partnerID","entryID","uiConfId","onReadyCB","embedObj","targetId","wid","uiconf_id","entry_id","flashvars","playbackRateSelector.plugin","controlBarContainer.plugin","largePlayBtn.plugin","loadingSpinner.plugin","closedCaptions.displayCaptions","embedControls","EmbedPlayer.NativeControls","EmbedPlayer.DisableHTML5FlashFallback","KWidget","embed","kMap","playerPlayed","playerPaused","bufferStartEvent","bufferEndEvent","playerPlayEnd","mediaError","mediaReady","updatedPlaybackRate","playerUpdatePlayhead","kBind","kUnbind","evaluate","_kalturaMetaProps","bufferTimeout","seekTimeout","lastVol","kalturaEndingFn","scriptKey","_scriptsMap","_loadScript","history","onDone","tagSrc","_getScriptTagSrc","_appendScript","firstScriptTag","getElementsByTagName","parentNode","insertBefore","_mimeType","buildAutoEmbedURLFromKalturaObject","isKalturaUrl","every","k","myArray","uniqueObjId","substring","exec","parseUrlParams","getKalturaObjectFromDynamicEmbedCode","kalturaObject","urlParamsString","charAt","embedCode","kWidgetParams","YTScriptLoader","ytId","extractYoutubeId","_youtubeMetaObj","ytInstance","tryAgain","_createInstance","onPlayerStateChange","onPlayerQualityChange","onReady","onError","handleFail","_getPidFromInstance","YT","PlayerState","ENDED","stopVideo","BUFFERING","waitForBuffering","cancelBuffering","playerReadyEv","getDuration","setPlaybackQuality","brokePlayerPID","getAvailablePlaybackRates","setPlaybackRate","_tryCommand","getVideoLoadedFraction","cueVideoById","_seekPauseListener","unMute","mute","isMainPlayer","videoId","getVideoData","video_id","lastTime","loadVideoById","videoID","stateChangeCB","qualityChangeCB","_controls","Player","playerVars","fs","enablejsapi","modestbranding","showinfo","rel","iv_load_policy","origin","wmode","onPlaybackQualityChange","getIframe","playerStateChange","command","returnVal","_youtubeMetaProps","bufferInterval","youtubeEnding","doReject","TIMEOUT","onYouTubeIframeAPIReady","origUrl","getYoutubeID","ytMatch","isYoutubeUrl","embedParams","outgoing","createEmbedLinkFromYoutubeId","ytid","suppressParams","autofocus","tagName","find","ittAnnotationField","restrict","ittItemForm","controller","onName","ctrl","textAreaName","controllerAs","bindToController","ittColorSelect","ittDescriptionField","modelOpts","updateOn","ittDisplaySelect","watchTemplate","handleChange","nv","isImageFillTemplate","onItemFormUpdate","layoutIndex","ittDynamicModel","$parse","terminal","priority","elem","attr","removeAttr","ittFileField","ittFilesHandler","onSelected","elm","$apply","ittFlotr2Chart","uniqueId","options","attrs","draw","el","o","chartLabel","createLabel","plot","chartContainer","legendContainer","legendFormatterFn","label","series","percent","labelFormatterFn","chartOptions","pie","background","formatter","legend","labelFormatter","noColumns","margin","backgroundColor","backgroundOpacity","sorted","grid","hoverable","tooltip","tooltipOpts","content","shifts","defaultTheme","css","observeData","$observe","addPercent","labelText","ittHighlightSelect","ittIframe","contenttype","validateFrameUrl","_ctrl","isLoading","_sandboxAttrs","iOSScroll","watcher","$watchGroup","sandbox","_btnConst","_unWatch","_modalWrapper","_otherModal","_frameBottom","_toolbarH","$ctrl","newVal","oldval","oldVal","newY","ittImageField","ittItem","validationSvc","forcetemplate","handleOutgoingLinkDisplay","isMixedContent","mixedContentUrl","urlIsEmbeddable","addClass","editableByThisUser","toggleDetailView","captureInteraction","toggleDetailOnKeyPress","forceModal","doAnimate","outgoingLinkOnKeyPress","outgoingLink","curTime","editItem","captureEventActivity","captureEmbed","eligibleForBadges","userEmail","totalAchieved","checkBadgeEligibility","requirements","achieved","countAchievements","count","pollLimit","badgePoll","badger","gettingBadge","credlyBadgeId","alreadyHadBadge","gotBadge","ittItemDetailModal","modalStyle","baseStyle","bottom","padding-top","imgStyle","overflow-y","z-index","ittItemEditor","uploadStatus","uneditedItem","episodeContainerId","itemEditor","watchEdits","newItem","oldItem","watchStyleEdits","forcePreview","fnord","setItemTime","setItemEndTime","getNextStartTime","currentItem","nextItem","nextStartTime","getCurrentScene","switchToAutoOrCustom","isSwitchingFromCustom","customEndTime","isAutoEndTime","dismissalWatcher","cancelEdit","assetUploaded","showUploadButtons","showUploadField","replaceAsset","detachAsset","ittLanguageFlags","ittLanguageSelect","langForm","watchLangForm","handleUpdates","langOpts","l","ittLogin","loginForm","narrId","badlogin","ittMagnet","onDestroy","onResize","$watches","isIOS","changeMagnet","$digest","watchBcr","left","documentOffset","_adjustBcrOffset","watchAppState","pageYOffset","body","handleNewMagnetBcr","newV","watchSize","is","handleSize","win","maxAllowableHeight","getMagnetBcr","readOnly","right","preCalcedBcr","magnetStore","MagnetStore","of","JUMP_TO_MAGNET","bcr","CHANGE_MAGNET","bcrCopy","magnetBoundingClientRect","$watchCollection","oldMode","ittMagnetized","jumpToMagnet","magnetElmBcr","animateTransition","TRANSITION_DURATION","scaleFactor","WIDTH","unwatch","ittMcQuestion","qid","choices","onChoice","showChart","scoreQuiz","answer","feedback","formatAnswersForFlotPieChart","chartData","answer_counts","scorePoll","ittNarrativeTimeline","NarrativeTimelineCtrl","ittOptionsDisabled","_disableOptions","fnDisableIfTrue","pos","expElements","attrToWatch","ngModel","disOptions","require","ittQuestionOptions","ittQuestionTextField","doValidate","ittQuestionTypeSelect","ittReviewMode","allScenes","fib","addOne","loadWatcher","ittRouteLoading","threshold","ittScene","twiddleScene","each","availableViewportHeight","offset","scrollTo","unwatchEdits","ittSearchPanel","ittShowFocus","newValue","first","ittShowHideVisualOnly","$animate","multiElement","removeClass","visualHideAnimation","fadeTo","ittSpeakerField","ittSpeakerThumbField","ittTabs","transclude","select","pane","panes","addPane","ittTab","tabsCtrl","ittTimeField","ittTimeline","adjustHigh","adjustLow","incrementVolume","currentVolume","decrementVolume","handlePosition","zoomLevel","zoomOffset","isSuppressed","timelineNode","timelineContainer","wasPlayed","initPlayheadEvents","autoZoom","savedZoomLevel","itemLength","toEnd","zoom","endAutoZoom","editWatcher","setNewLanguage","showSceneMenuTooltip","makeVisible","sceneMenuToolTip","userChangingVolume","volumeNode","currentTarget","updateVolume","movement","noApplyNeeded","newVolume","clientX","PAGEUP","PAGEDOWN","END","HOME","LEFTARROW","UPARROW","RIGHTARROW","DOWNARROW","onVolumeKeyDown","audioIcon","showTooltip","hideTooltip","zoomIn","stopWatching","zoomOut","startSeek","seekHandleVisible","isSeeking","userEventName","finishSeek","cancelSeek","seeking","willSeekTo","off","playhead","targetTouches","ittTimestampSelect","ittTitleField","isVisible","ittToolbarStory","ittTranscriptField","ittTransitionSelect","ittTypographySelect","ittUser","toggleEditing","isEditing","inPlayer","toggleUploadAvatar","uploadAvatar","_resizeWithService","dataUrl","_avatarFileFromImg","_postToAWS","uploads","getMyNarratives","myPurchases","purchase","daysUntilExpiration","expiration_date","narrative_id","nData","pur","ittValidAsset","ngModelCtrl","watchItem","handleChanges","tmplUrl","$setValidity","$validators","itemAsset","ittValidationTip","doInfo","ittValidEpisodeUrl","onValidationNotice","watchFields","validatedFields","$notice","episodeUrl","viewVal","$isEmpty","showInfo","message","_capitalize","ittValidPathslug","ctrls","validPathslug","parentCtrl","asSlug","_slugify","_gatherPathSlugs","pathSlugs","slugSet","ittValidUrl","supportUrl","modelVal","ittVideo","$sce","onInit","transcodedInterval","checkTranscoded","playerElement","trustAsHtml","autoplay","videoClick","setCssClass","cssClass","np--embed","paused","playerIsPaused","firstplay","showUnstartedOverlay","replay","rewind","showReplayOverlay","showMask","iOSVersion","currentEpisode","latestAsset","newAsset","$broadcast","clear","ittVolumeSlider","ittWidthWatch","isNarrow","sxsAddContent","expand","expanded","one","collapse","sxsAnnotatorAutocomplete","ngModelController","hasAnnotator","imageUrl","filteredAnnotators","_filteredAnnotators","_nextAnnotator","pop","_sortedAndFiltered","sortedObj","preselectedItem","which","selectByIndex","handleAutocomplete","newFilter","names","$setViewValue","autoCompleting","showAutocomplete","inputField","setSelectionRange","hideAutocomplete","addNewAnnotator","annotatorName","uploadAnnotatorImage","alert","sxsInputI18n","textAngularManager","inputtype","onEmitName","textangularname","getUTCMilliseconds","$taName","retrieveEditor","displayElements","trim","txt","sanitizePastedHtml","pasted","frag","innerHTML","textContent","sxsInputTime","ngForm","watchModel","parsedTime","setTime","handelValidation","validationMessage","isValidInput","validStartTime","validateStartTime","isOnExistingScene","validateSceneStartTime","format","$render","isOnSameStartTime","isValid","episodeDuration","realValue","invalid_end_time","mss","mins","secs","nudge","amt","tooltipHider","diff","showTools","fieldname","ittPlayerContainer","ittEpisode","ittEpisode_TEMPLATE","EpisodeController","ittEpisodeEditor","translationMessage","langArr","prefix","afterTranslationAttempt","doCheckForTranslations","handleError","waitForDuration","swap","createAssetFromTmp","tmpAsset","attachMediaSrc","urlOrEmbedCode","pmTypeAndMimeType","replacingMasterAsset","showmessage","mediaSrcUrl","afterReady","_master_asset_was_changed","detatchMasterAsset","saveEpisode","uneditedEpisode","masterAssetType","es","zh","pt","fr","de","it","languageWatcher","languageCount","lastSelectedLanguage","newLanguages","previousAsset","posterUploaded","showUploadButtonsPoster","showUploadFieldPoster","selectText","routerConfig","$routeProvider","reloadOnSearch","$route","authEffects","otherwise","xDomainConfig","$sceDelegateProvider","resourceUrlWhitelist","authInterceptorConfig","$httpProvider","useXDomain","withCredentials","interceptors","responseError","rejection","textAngularConfig","$provide","decorator","taRegisterTool","taOptions","defaultFileDropHandler","toolbar","debugInfoConfig","$compileProvider","isDev","currentHost","hostname","debugInfoEnabled","runFunction","currentRoute","fhotkb","activeElement","attributes","contenteditable","defineProperty","$inject","__extends","extendStatics","setPrototypeOf","__proto__","Array","__","prototype","UIAsset","_super","ITemplateImage","ITemplate","ci","timeline_image_ids","ITempTimeline","narrative_image_ids","IEvent","ILinkStatus","_this","IPluginData","noAvatarImg","isProducer","isNumber","RegExp","json","kb","toLocaleLowerCase","notVideos","tagMap","INITIAL_APP_STATE","platform","isIPhone","windowHeight","hideCaptions","crossEpisodePath","AppState","initService","getIOSVersion","iOSDeviceRe","versionRe","parseInt","overrides","watchWidth","ready","startAtTime","hasResumedFromStartAt","hasBeenPlayed","bufferedPercent","resetInProgress","WistiaScriptLoader","WISTIA_HREF","Wistia","parentElement","WistiaUrlService","mimetype","embedUrl","pmo","isWistia","isEmbed","extractId","parseIdfromUrl","u","basePlayerManager_BasePlayerManager","BasePlayerManager","statechangeCallbacks","metaObj","listener","destroyInstance","destroySideEffects","-1","0","1","2","3","5","4","6","wistiaPlayerManager___extends","__assign","WISTIA_PLAYERSTATES","beforeplay","wistiaMetaProps","bufferingInterval","wistiaPlayerManager_WistiaPlayerManager","WistiaPlayerManager","wistiaScriptLoader","_bufferCheckIntervalLength","setPlayerDiv","wistiaId","formatStateChangeEvent","mainPlayerId","createWpInstance","_","interval","lastReportedTime","timelineTime","emitStateChange","invokeMethod","rate","wistiaEmbedOptions","playbar","videoFoam","fullscreenButton","controlsVisibleOnLoad","playbackRateControl","playButton","settingsControl","qualityControl","smallPlayButton","volumeControl","wistiaInitQueue","wistiaInstance","attachEventListeners","boundPid","wistiaEvents","onPlay","onSeek","timechange","onTimechange","entries","UploadsService","uploadsDisplay","social_image_square","social_image_wide","uploadQueue","uploadTaggedFiles","fileLists","fileLists_1","uploadToAws","resetUploads","tagType","finally","ValidationService","parseCSP","csp","directive","directiveSet","shift","checkXFrameOpts","encodedUrl","encodeURIComponent","canEmbed","handleErrors","cspOrXFrameHeader","xFrameCanEmbed","xFrameHeaderCanEmbed","x_frame_options","cspCanEmbed","content_security_policy","displayObj","validateUrl","isValidVideoUrl","emailOrPlaceholder","inspectHeadersAsync","cachedResults","xFrameOptsObj","urlStatus","response_code","handleXframeOptsObj","stubXFOR","xFOResult","cspObj","ancestorSourceList","onlyAncestor","includes","ancestorSourceList_1","header","currentOrigin_1","parseInputUrl","xFrameArr","aElm","XFOResult","tipText","AnalyticsSvc","activityQueue","pollLength","startPolling","pollInterval","flushActivityQueue","stopPolling","userActivity","walltime","force","disableAnalytics","track_event_actions","readEpisodeActivity","apiDataBaseURl","actions","episodeUserMetrics","eventUserActions","age","dejitter","posts","euaPath","event_user_actions","episode_user_metrics","Name","service","factory","TEMPLATE","ittUploadTranscriptsField_UploadTranscriptsController","UploadTranscriptsController","showOptions","showUploader","selectedParam","maxDuration","transcripts","_maxDurParam","$onInit","handleTranscriptFiles","commenseUpload","formatParams","promises","_handleTranscripts","payload","onUploadComplete","reload","optionalParams","fd","FormData","UploadTranscripts","bindings","ittAssetUploader_AssetUploaderController","AssetUploaderController","$element","multiple","uploadsinprogress","instructions","manPage","mimeTypes","mimeTypesArr","errorText","m","$postLink","droptarget","fileinput","handleDrop","handleDragOver","handleDragEnter","handleDragLeave","$onChanges","changesObj","fileReceive","currentValue","commenseUploads","handleUploads","errormessage","checkMimeType","onFiledrop","setupUploadDisplay","oldstack","newstack","processUploads","acceptMimeTypes","from","strEndsWith","mimeTypeUntilWildcard","strStartsWith","callback","done","oneDone","dataTransfer","dropEffect","AssetUploader","ittClipboard_TEMPLATE","ClipboardController","copyText","textArea","execCommand","removeChild","_defaultText","bubbleEvent","sourceText","onCopy","customNotice","Clipboard","light","ittContainer_ContainerController","ContainerController","containerTypes","enumerable","configurable","depth","toggleNarrativeModal","showNarrativeModal","postNewNarrative","resolvingNarrative","narrativeResp","getLinkStatusReport","onToggleChildren","onContainerClick","$container","renameContainer","newContainerName","editingContainer","addContainer","newContainerTitle","addEpisodeToContainer","onContainerAdd","addingContainer","showChildren","onContainerRemove","Container","ittContainerEpisodes_TEMPLATE","ContainerEpisodesController","loadChildren","toggle","wasClicked","ContainerEpisodes","forAdmin","onNodeClick","ittEditPencil_TEMPLATE","EditPencilController","showPencil","sendEdit","onEdit","mouseEvent","EditPencil","ittFlags_TEMPLATE","ittFlags_FlagsController","FlagsController","_displays","invertColor","_ids","_flags","flags","previousValue_1","previousValue","currentValue_1","setFlags","f","_h1OrH2","_isEditingItemForm","Flags","npGuestAccessibleUrl_TEMPLATE","npGuestAccessibleUrl_GuestAccessibleUrlController","GuestAccessibleUrlController","placeholder","_subDomain","subDomain","pathPrefix","formatLTIUrl","formatGuestAccessibleUrl","hasNarrative","hasNarrativePathslug","hasTimeline","hasTimelinePathslug","formatUrlToCopy","guest_access_allowed","GuestAccessibleUrl","clipboardMode","ittLoading_TEMPLATE","Loading","_bcr","ittModal_TEMPLATE","ModalController","wrapperClass","Modal","modalClass","npNarrativeDetail_NarrativeDetailController","NarrativeDetailController","treeOpts","accept","dropped","destIndex","dest","source","_updateSortOrder","_persistTimelineSortUpdate","isOwner","_setTotalNarrativeDuration","toggleEditNarrativeModal","$undo","editingNarrative","toggleEditingTimeline","timelineUnderEdit","doneEditingTimeline","tmpTimeline","toggleOwnership","toggleEpisodeList","showEpisodeList","cust","updateTimeline","newTimeline","oldTimeline","addTmpTimeline","currTl","currSortOrder","fromTl","nextTlSortOrder","currIndex","newIndex","hidden","isTemp","head","tail","onEpisodeSelect","parent_episode","persistTmpTimeline","storeChildEpisode","childEpisode","tlData","handleEpisodeSegment","timeline_id","episode_segments","logErr","editorAction","newTl","exportToSpreadsheet","_arr","arr","sortIndex","prevSortIndex","_destIndex","totalNarrativeDuration","durs","NarrativeDetail","npNarrativeEditor_TEMPLATE","npNarrativeEditor_NarrativeEditorController","NarrativeEditorController","uploadsService","_narrative","_setNameFromContainer","_setCustomer","guestAccessEffects","trueAdmin","enable_social_sharing","disableSocialshare","selectCustomer","selectedCustomer","handleUpdate","socialImagesToUpload","root_container_id","onUpdate","$narrative","containerInfo","cId_1","unshift","NarrativeEditor","hidePathSlug","npNarrativeList_NarrativeListController","NarrativeListController","narrativeSelect","_updateAllEvenOdd","setSelectedNarrative","cachedNarratives","customerRowClick","$ev","narrativeRow","customersData","gotoNarrative","toggleRow","showNarratives","_toggleNarrativesOpened","_toggleNarrativesClosed","setRowClasses","hoverIndicator","container__row--even","evenOdd","container__row--odd","setNarrativeRowClasses","setNarrativeToEdit","narrativeToEdit","closeAddOrEditModal","navigate","addOrUpdateNarrative","_addOrUpdateNarr","_handleErr","toggleNarrativeRow","_fetchAndCacheNarratives","rest","nextCust","currentCust","lastNarr","_updateNarrativeEvenOdd","aName","bName","narrs","narr","custOnScope","NarrativeList","npNarrativesContainer_TEMPLATE","NarrativesContainerController","_resolveCustomers","cachedCustomers","NarrativesContainer","npNarrativeContainer_TEMPLATE","npNarrativeContainer_NarrativeContainerController","NarrativeContainerController","_resolveNarrative","cachedCustomer","narrativePath","cachedNarr","NarrativeContainer","disableSocialShareOnDev","narrativeRole","defaultProduct","currentTl","tlTitle","timelinePath","showPlayer","narrativeUrl","timelineUrl","enableSocialSharing","socialShareInfo","bannerImg","logo","ittNav_TEMPLATE","NavController","goToAccounts","Nav","onLogout","ittTemplateSelect_TEMPLATE","ittTemplateSelect_TemplateSelectController","TemplateSelectController","isAnnotation","isEpisode","isCenterVV","isMondrian","tmpl","form","onEpisodeTemplateChange","dataToEmit","onEpisodeEdit","TemplateSelect","npTimelineEditor_TEMPLATE","npTimelineEditor_TimelineEditorController","TimelineEditorController","underDelete","_timeline","tlFileds","tlToSave","$timeline","confirmDelete","TimelineEditor","onDelete","ittTooltip_TEMPLATE","TooltipController","mouseAction","showTip","Tooltip","__awaiter","thisArg","_arguments","P","generator","Promise","fulfilled","step","next","rejected","__generator","verb","op","TypeError","ops","trys","g","sent","throw","return","Symbol","iterator","npUrlField_TEMPLATE","npUrlField_UrlFieldController","UrlFieldController","iframeHeaders","404","301","eventUrl","onUrlFieldChange","updateTemplateOpts","_disableTemplateOpts","onFocused","_setValidity","_itemUrlValidationPipeline","handleEpisodeValidationMessage","_inspectHeaders","e_1","_b","_resetFields","opt","UrlField","onAttach","ittVideoPositionSelect_TEMPLATE","VideoPositionSelectController","VideoPositionSelect","sxsContainerAssets_SxsContainerAssetsController","SxsContainerAssetsController","newAssets","assetKey","isCustAdmin","mimeKey","up","showParent","toggleImages","onlyImages","toggleGrid","gridView","assetClick","onAssetSelect","$assetId","requestDeleteAsset","$asset","assetToDelete","SxsContainerAssets","ittEnableSocialshare_TEMPLATE","DEFAULT_DISPLAY_TEXT","initialImages","initialDisplay","defaultFromNarrative","ittEnableSocialshare_EnableSocialshareController","EnableSocialshareController","browseUploaded","setInitialDisplay","fetchAssetsOnInit","resetImgs","nAssedId","images","isUsingDefaultImages","fromNarrative","narrasysBranded","toggleBrowseUploaded","uploadedAssetSelected","imgAsset","setImageFromAsset","handleImage","currTag","checkAspectRatio","errorType","setValidity","handleTagmismatchError","fetchNarrativeImageAssets","fetchImageAssetsTimeline","getImageAssets","loadStatus","use","allIds","idsToFetch","toFetch","setCorrectImagesFromAssets","skipImgIdArray","assetsToFetch","currentTag","newTag","currentImage","removeImageId","addImageId","isMixedDefault","bothPathsSet","bothPathsNull","editorForm","$name","EnableSocialshare","SocialShareController","Socialshare","stubUrl","emailshareExpanded","textCopied","paths","formatShareUrl","onShare","provider","shareConfig","toggleEmailshare","socialshareText","shareTitle","socialshareUrl","share","closeAll","toggleExpanded","ontextCopied","handleEmailShare","$invalid","$error","$setTouched","IttSocialShare","providers","ittFiledrop_TEMPLATE","FiledropController","attachListeners","$onDestroy","removeListeners","onDrop","Filedrop","preview","ittUploadProgress_TEMPLATE","UploadProgress","npProjectsContainer_TEMPLATE","ProjectsContainerController","ProjectsContainer","component","animation","loadEpisodeForPlayer","scopeHack","ittEpisodeList_TEMPLATE","gatherIds","ittEpisodeList_EpisodeListController","EpisodeListController","failedLogin","root","rootIDs","walkContainers","selectEpisode","node","onRequestContainerRemove","containerToDelete","removeContainer","removeContainerSuccess","containerList","_evenOdd","findLastContainer","_container","lastClickedContainer","EpisodeList","onCancel","webfontloader","episodeTheme_service_EpisodeTheme","EpisodeTheme","linkId","_sheetLoading","set","loadThemeStyleSheet","loadFontFamily","linkTag","_changeHref","_appendLinkTag","_imgLoadEvtHack","font","sheetLoading","imgElm","_getHrefPath","episodeEdit_service_EpisodeEditService","EpisodeEditService","derived","resolved","newEpisode","customerTemplate","epResp","firstScene","$episode","duration_1","endTime_1","modifiedEvents_1","deletedScenes_1","endingScene","npCopyright_TEMPLATE","CopyrightController","itt","copyrightOrg","orgLinkUrl","orgLinkText","np","org","Copyright","npEpisodeFooter_TEMPLATE","EpisodeFooterController","legacy_banner_logo","legacy_logos","isFirstChange","brandingDivClass","EpisodeFooter","npEpisodeModule","services","components","cmp","templateSource","constant","assetLib","unstarted","buffering","quality changed","video cued","player ready","mNIM","mbIM","mrOr","nd4G","p2SB","p3P+","phYv","q06B","qZRx","qpRi","rFfA","rGHM","rLXe","rXKF","rdiM","rfeV","sGzq","teY+","uFtN","un+J","vjhS","vxq4","w2z7","w5Vi","wXer","x+pf","zuiT"],"mappings":"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","file":"app.454cfd7c9a5d81cfc41e.min.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"+o/S\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/modal.html';\nvar html = \"<div class=modal ng-style=modalStyle ng-click=dismiss();> <span ng-if=\\\"item._type == 'Link'\\\" ng-click=$event.stopPropagation()> <div class=modalmenu> <a href={{item.url}} target=_blank class=escapelink>(new window)</a> </div> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </span> <span ng-if=\\\"item._type == 'Upload'\\\"> <span ng-switch=\\\"item.asset.content_type.indexOf('image/')\\\"> <span ng-switch-when=-1> <div class=modalmenu> <a href={{item.asset.url}} target=_blank class=escapelink>(new window)</a> </div> <itt-iframe x-src={{item.asset.url}} item=item x-contenttype={{item.asset.content_type}}></itt-iframe> </span> <span ng-switch-default> <div class=modalimage ng-if=\\\"item._type == 'Upload'\\\"> <img ng-src={{item.asset.url}}> </div> </span> </span> </span> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"0YuG\":\n/***/ (function(module, exports) {\n\nmodule.exports = angular;\n\n/***/ }),\n\n/***/ \"0ePo\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/question-mc-inner.html';\nvar html = \"<div class=\\\"question item__text\\\"> <p ng-bind-html=\\\"plugin.questiontext | i18n\\\"></p> <div ng-if=!showChart> <div ng-repeat=\\\"distractor in choices\\\"> <div ng-if=\\\"(distractor.text | i18n) != ''\\\"> <label ng-class=\\\"{\\n\\t\\t\\t\\t\\tcorrect: plugin.hasBeenAnswered && distractor.correct,\\n\\t\\t\\t\\t\\tincorrect: plugin.hasBeenAnswered && !distractor.correct\\n\\t\\t\\t\\t}\\\"> <input ng-change=scoreQuiz($index) type=radio name=fnord ng-model=index ng-disabled=plugin.hasBeenAnswered value={{$index}} ng-checked=distractor.selected> <span ng-bind-html=\\\"distractor.text | i18n\\\"></span> </label> </div> </div> <div ng-if=plugin.hasBeenAnswered ng-bind-html=\\\"feedback() | i18n\\\"></div> </div> <div ng-if=showChart> <div ng-if=!plugin.hasBeenAnswered ng-repeat=\\\"distractor in plugin.distractors\\\"> <div ng-if=\\\"(distractor.text | i18n) != ''\\\"> <label> <input ng-change=scorePoll($index) type=radio name=fnord ng-disabled=plugin.hasBeenAnswered ng-model=$parent.plugin.selectedDistractor value={{$index}}> <span ng-bind-html=\\\"distractor.text | i18n\\\"></span> </label> </div> </div> <br> <div ng-if=plugin.hasBeenAnswered> <p ng-if=plugin.selectedDistractor>Here's how others answered this question. (Your choice was: <b ng-repeat=\\\"distractor in plugin.distractors | filter:{ index: plugin.selectedDistractor }\\\" ng-bind-html=\\\"distractor.text | i18n\\\"></b>) </p> <itt-flotr2-chart type={{chartType}} title=\\\"\\\" data={{chartData}} options={{chartOptions}}></itt-flotr2-chart> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"1Wv5\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/toolbar-story.html';\nvar html = \"<div class=toolbar> <div class=\\\"buttongroup nav-item scene-nav-btns\\\"> <a ng-if=\\\"appState.productLoadedAs == 'narrative' && !narrative.disable_navigation\\\" class=\\\"button button-exitEpisode\\\" href=/#/story/{{narrative.path_slug.en}}> <span>Exit</span> </a> <button tabindex=0 class=\\\"button button-nav\\\" ng-click=toggleNavPanel();> <span>Chapters</span> </button> </div> <div class=\\\"nav-item toolbar-logos\\\"> <img src=\" + __webpack_require__(\"teY+\") + \" id=toolbar-logo-big ng-if=\\\"episode.template.displayName === 'Narrasys Professional' && appState.windowWidth > 500\\\"> <img src=\" + __webpack_require__(\"5Tuk\") + \" id=toolbar-logo-small ng-if=\\\"episode.template.displayName === 'Narrasys Professional' && appState.windowWidth <= 500\\\"/> </div> <div class=\\\"nav-item new-window-btn\\\"> <div ng-if=\\\"appState.isFramed && (appState.productLoadedAs == 'player'\\n\\t \\t\\t\\t|| (appState.productLoadedAs == 'narrative'\\n\\t \\t\\t\\t&& !narrative.disable_new_window ) )\\\" class=\\\"escapegroup buttongroup\\\"> <a class=\\\"button button-mainframeescape\\\" ng-click=pause() ng-href={{calcNewWindowUrl()}} target=_blank> <span>New window</span> </a> </div> </div> <div class=\\\"nav-item searchgroup buttongroup\\\" ng-class=\\\"{cur: show.searchPanel}\\\"> <button tabindex=2 class=\\\"button button-search\\\" ng-click=toggleSearchPanel() aria-label=Search aria-expanded={{show.searchPanel}}> <span>Search</span> </button> <label for=searchtext class=hidden>Search Text</label> <input tabindex=2 name=searchtext id=searchtext type=text ng-show=show.searchPanel ng-model=appState.searchText ng-model-options=\\\"{ debounce: 200 }\\\"/> </div> <div class=\\\"nav-item socialshare social-buttongroup\\\"> <itt-social-share ng-if=socialShareInfo subdomain={{socialShareInfo.subDomain}} paths=\\\"{narrative: socialShareInfo.narrative, timeline: socialShareInfo.timeline}\\\" share-title={{socialShareInfo.tlTitle}} providers=\\\"['facebook', 'linkedin', 'twitter', 'google', 'reddit', 'email']\\\"> </itt-social-share> </div> <div class=\\\"nav-item profilegroup buttongroup\\\"> <a class=\\\"button button-preview\\\" ng-if=\\\"appState.productLoadedAs=='producer' && (userHasRole('admin') || userHasRole('customer admin'))\\\" ng-click=toggleProducerPreview()> <span ng-if=\\\"appState.product == 'producer'\\\">Preview</span> <span ng-if=\\\"appState.product == 'player'\\\">Edit</span> </a> <a class=\\\"button button-profile\\\" ng-hide=isTrueGuest() ng-click=\\\"appState.show.profilePanel = !appState.show.profilePanel\\\"> <span>Profile</span> </a> </div> </div> <div ng-cloak ng-show=show.navPanel class=\\\"navPanel topDrawer\\\" ng-class=episode.styleCss> <div class=parent ng-repeat=\\\"parent in episode.parents\\\" ng-bind-html=parent.display_name></div> <h2 ng-bind-html=episode.display_title class=fakeLink ng-click=seek(0)></h2> <div class=scene x-ng-if=\\\"chapter.display_annotation || chapter.display_title\\\" x-ng-repeat=\\\"chapter in episode.chapters\\\" x-ng-class=\\\"{currentScene: chapter.isCurrent}\\\" x-ng-click=seek(chapter.start_time)> <span class=displayTime>{{chapter.displayStartTime}}</span> <p> <button class=fakeLink tabindex=0 ng-bind-html=\\\"chapter.display_annotation || chapter.display_title\\\" x-ng-class=\\\"{sceneLink: !chapter.isCurrent}\\\" ng-focus=showControls()></button> <br> <span ng-bind-html=chapter.display_description></span> </p> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"2+b9\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/sxs-annotation.html';\nvar html = \"<div class=\\\"itemTemplate sxs-item\\\"> <a class=edit-event ng-click=editItem() ng-if=item.editableByThisUser>[Edit]</a> <div class=avatar> <img ng-src=\\\"{{item.avatar.url || appState.noAvatar}}\\\"> </div> <div class=itemHead> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <div class=text ng-bind-html=item.annotation.en></div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"2/3b\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/caption.html';\nvar html = \" <div class=\\\"itemTemplate itemCaption\\\"> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <div class=text ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"3gcz\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/text-transmedia.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=item__title> <h2 class=\\\"item__title item__title--transmedia\\\" ng-if=\\\"item.display_title | highlightSubstring: appState.searchText\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></h2> </div> </div> <div class=\\\"text item__text item__text--transmedia\\\" ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"4bbU\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/narrativelist.html';\nvar html = \"<div class=\\\"\\\"> <np-modal wrapper-class=responsive-modal__wrapper modal-class=narrative__modal ng-if=\\\"$ctrl.narrativeSelect || $ctrl.narrativeToEdit\\\"> <h3>{{$ctrl.narrativeSelect ? 'Add' : 'Edit'}} Narrative</h3> <np-narrative-editor customers=$ctrl.selectedCustomer narrative=$ctrl.narrativeToEdit hide-path-slug=$ctrl.narrativeSelect on-done=$ctrl.closeAddOrEditModal($undo) on-update=$ctrl.addOrUpdateNarrative($narrative)> </np-narrative-editor> </np-modal> <div ng-repeat=\\\"customer in $ctrl.customersData\\\" ng-click=\\\"$ctrl.customerRowClick(customer, $event)\\\" ng-class=$ctrl.setRowClasses(customer)> <span ng-click=\\\"$ctrl.toggleRow(customer, $event)\\\" ng-class=\\\"customer.showNarratives ? 'isOpen' : 'isClosed'\\\"> </span> <a>{{customer.name}}</a> <div ng-if=\\\"customer.isActive === true\\\"> <div ng-if=$ctrl.canAccess style=padding-left:1em> <np-tooltip tip-text=\\\"Add Narrative\\\"> <a class=\\\"icon__button button__add-inverted\\\" ng-click=$ctrl.setSelectedNarrative(customer)></a> </np-tooltip> </div> </div> <div ng-repeat=\\\"narrative in customer.narratives\\\" style=padding-left:2em ng-if=\\\"customer.showNarratives === true\\\" ng-click=\\\"$ctrl.toggleNarrativeRow(narrative, $event)\\\" ng-class=\\\"$ctrl.setNarrativeRowClasses(customer, narrative)\\\"> <div> <np-edit-pencil can-access=true on-edit=\\\"$ctrl.setNarrativeToEdit($event, narrative, customer)\\\"> <a>{{narrative.name.en}}</a> </np-edit-pencil> <p ng-if=narrative.description> <small>{{narrative.description.en}}</small> </p> <div ng-if=\\\"$ctrl.narrativeRow._id === narrative._id\\\"> <np-tooltip tip-text=\\\"Go to Narrative\\\"> <a ng-click=\\\"$ctrl.gotoNarrative(narrative._id, $event)\\\" class=\\\"icon__button button__generateNarrative\\\" title=\\\"Go to Narrative\\\"></a> </np-tooltip> <a> <np-guest-accessible-url narrative=narrative clipboard-mode=\\\"Click to Copy\\\"> </np-guest-accessible-url> </a> </div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"55GB\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/searchresults-all.html';\nvar html = \"<span ng-class=\\\"{'sxs-item': item.sxs}\\\"> <a ng-if=item.editableByThisUser class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div ng-style=\\\"\\n    item.sxs?{background:'url('+item.avatar.url+') no-repeat scroll right top / 40px 40px',minHeight:'40px'}:{}\\n    \\\" ng-class=\\\"{isCosmetic: item.cosmetic}\\\" class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" ng-if=\\\"item._type !== 'Chapter' && !item.chapter_marker\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> <div ng-if=\\\"item.display_annotator && item.producerItemType !== 'annotation' || item.isPq\\\" class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> <div ng-if=\\\"item.producerItemType == 'annotation' && item.display_title && !item.isHeader && !item.isPq\\\" class=authorName ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <span ng-if=\\\"item._type != 'Annotation' && item._type !== 'Chapter'\\\"> <a tabindex=0 ng-if=handleOutgoingLinkDisplay() class=\\\"fakeLink escapelink item__link--escape-link item__link--fake-link\\\" ng-click=outgoingLink(item.url) ng-bind-html=\\\"(item.display_title || '(Untitled)') | highlightSubstring: appState.searchText\\\"></a> <a tabindex=0 role=button class=\\\"fakeLink item__link--fake-link\\\" ng-if=!handleOutgoingLinkDisplay() x-ng-keypress=toggleDetailOnKeyPress($event) ng-click=\\\"item.showInlineDetail=!item.showInlineDetail\\\" ng-bind-html=\\\"(item.display_title || '(Untitled)') | highlightSubstring: appState.searchText\\\" aria-label=\\\"Toggle detail display of {{item.display_title}}\\\"></a> </span> <span ng-if=\\\"item._type === 'Chapter' || item.chapter_marker\\\"> <h2 class=searchChapter ng-bind-html=\\\"(item.display_annotation || item.display_title) | highlightSubstring: appState.searchText\\\"></h2> </span> </div> <div class=\\\"text item__text\\\"> <div ng-class=\\\"{showAsHeader: item.showAsHeader}\\\" ng-if=!item.chapter_marker ng-bind-html=\\\"item.display_annotation || item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <div class=itemDetail ng-if=item.showInlineDetail> <span ng-switch=item.producerItemType> <span ng-switch-when=file> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.asset.url,$event) ng-click=outgoingLink(item.asset.url) class=\\\"escapelink item__link--escape-link\\\">(new window)</a> <itt-iframe ng-if=\\\"appState.viewMode == 'review'\\\" x-src={{item.asset.url}} x-contenttype={{item.asset.content_type}}></itt-iframe> </span> <span ng-switch-when=link> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) class=\\\"escapelink item__link--escape-link\\\">(new window)</a> <itt-iframe ng-if=\\\"!item.isVideoUrl && appState.viewMode == 'review'\\\" x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=\\\"item.isVideoUrl && appState.viewMode == 'review'\\\" media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </span> <span ng-switch-when=video> <span ng-switch-when=file> <itt-video ng-if=\\\"item.isVideoUrl && appState.viewMode == 'review'\\\" media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.asset.url,$event) ng-click=outgoingLink(item.asset.url) class=\\\"escapelink item__link--escape-link\\\">(new window)</a> </span> </span> <span ng-switch-when=image> <div class=touchable style=position:relative> <img ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> </span> <span ng-switch-when=question> <div ng-if=item.asset.url class=touchable> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> <itt-mc-question show-chart=\\\"item.data._plugin.questiontype == 'mc-poll'\\\" choices=item.data._plugin.distractors on-choice=save data=item.data._plugin qid=item._id></itt-mc-question> </span> <span ng-switch-default> <span ng-if=\\\"item.data._pluginType == 'credlyBadge'\\\" ng-include=\\\"'templates/item/usc-badges-inner.html'\\\"></span> </span> </span> </div> </div> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"5Tuk\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"images/Narrasys-Tree.cc1cd923afd67c6dc362c6aa5c3b5399.png\";\n\n/***/ }),\n\n/***/ \"6/Qv\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"images/checkmark.80564877965f7d5b3ab0fccf3fde46c1.png\";\n\n/***/ }),\n\n/***/ \"6ze8\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/narrative/default.html';\nvar html = \"<div class=narrative> <div> <np-edit-pencil can-access=$ctrl.canAccess on-edit=$ctrl.toggleEditNarrativeModal()> <h2 ng-bind-html=$ctrl.narrative.name.en></h2> </np-edit-pencil> <p ng-bind-html=$ctrl.narrative.description.en></p> <p>Total Duration: {{$ctrl.totalNarrativeDuration | asTime}}</p> </div> <div class=episode__button-row> <div ng-if=$ctrl.canAccess> <np-tooltip tip-text=\\\"Add Timeline\\\" ng-class=\\\"{overlay: $ctrl.timelineUnderEdit || $ctrl.tmpTimeline}\\\"> <a class=\\\"icon__button button__add-inverted\\\" ng-click=\\\"$ctrl.addTmpTimeline(null, $ctrl.narrative.timelines)\\\"></a> </np-tooltip> <np-tooltip tip-text=\\\"Export links to spreadsheet\\\"> <a class=\\\"icon__button button__export-spreadsheet\\\" ng-click=$ctrl.exportToSpreadsheet($ctrl.narrative._id)> </a> </np-tooltip> <np-guest-accessible-url narrative=$ctrl.narrative sub-domain={{$ctrl.narrative.narrative_subdomain}} clipboard-mode=\\\"Click to copy URL\\\"> </np-guest-accessible-url> </div> </div> <np-modal ng-if=$ctrl.showEpisodeList> <np-episode-list depth=0 context=narrative class=\\\"admin episodePicker\\\" on-episode-select=$ctrl.onEpisodeSelect(node) on-cancel=\\\"$ctrl.toggleEpisodeList(); $ctrl.doneEditingTimeline()\\\"> </np-episode-list> </np-modal> <np-modal wrapper-class=responsive-modal__wrapper modal-class=narrative__modal ng-if=\\\"$ctrl.editingNarrative || $ctrl.timelineUnderEdit != null\\\"> <div ng-if=$ctrl.editingNarrative> <np-narrative-editor narrative=$ctrl.narrative customers=$ctrl.customers on-done=$ctrl.toggleEditNarrativeModal($undo) on-update=$ctrl.updateNarrative($narrative)> </np-narrative-editor> </div> <div ng-if=\\\"$ctrl.timelineUnderEdit != null\\\"> <np-timeline-editor class=tl__editor timeline=$ctrl.timelineUnderEdit narrative=$ctrl.narrative container-id={{$ctrl.customers[0].root_container_id}} on-done=$ctrl.doneEditingTimeline() on-update=\\\"$ctrl.editorAction($timeline, $ctrl.timelineUnderEdit)\\\" on-delete=$ctrl.deleteTimeline($timeline)> </np-timeline-editor> </div> </np-modal> <div ui-tree=$ctrl.treeOpts ng-if=\\\"$ctrl.narrative.timelines.length !== 0\\\"> <div ui-tree-nodes ng-model=$ctrl.narrative.timelines> <div class=\\\"storyTimeline hoverIndicator\\\" ng-class-even=\\\"'container__row--even'\\\" ng-class-odd=\\\"'container__row--odd'\\\" ng-mouseenter=\\\"rowHover = true\\\" ng-mouseleave=\\\"rowHover = false\\\" ui-tree-node ng-repeat=\\\"timeline in $ctrl.narrative.timelines |\\n               filter: ($ctrl.canAccess === false || undefined) && {hidden: false}\\\"> <div ng-class=\\\"{'timeline--hidden': timeline.hidden}\\\"> <span ng-show=\\\"$ctrl.canAccess && rowHover\\\" class=tlDrag__handle ui-tree-handle> <i class=\\\"fa fa-arrows\\\"></i> </span> <div class=tl__wrapper> <np-edit-pencil can-access=$ctrl.canAccess force=\\\"rowHover && $ctrl.canAccess\\\" on-edit=$ctrl.toggleEditingTimeline(timeline)> <h3> <i ng-if=timeline.hidden class=\\\"fa fa-eye-slash\\\"></i> <a href=/#/story/{{$ctrl.narrative._id}}/{{timeline._id}}>{{timeline.name.en}}</a> </h3> </np-edit-pencil> <p>{{timeline.episode_segments[0].end_time | asTime}}</p> <p>{{timeline.description.en}}</p> <div class=tl__addButton> <div ng-if=\\\"rowHover && $ctrl.canAccess\\\" class=episode__button-row> <div> <np-tooltip tip-text=\\\"Insert Timeline\\\"> <a class=\\\"icon__button button__add-inverted\\\" ng-click=\\\"$ctrl.addTmpTimeline(timeline, $ctrl.narrative.timelines)\\\"></a> </np-tooltip> <np-guest-accessible-url narrative=$ctrl.narrative timeline=timeline clipboard-mode=\\\"Copy to Clipboard\\\"> </np-guest-accessible-url> </div> </div> </div> </div> </div> </div> </div> </div> </div> <a ng-if=$ctrl.narrative.support_url target=_blank ng-href={{$ctrl.narrative.support_url}}>Support</a> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"7GUz\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/transcript.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=\\\"itemTemplate transcript\\\"> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> </div> <div class=icon style=float:left;margin-right:.5em> <img ng-if=item.asset.url ng-src={{item.asset.url}}> <div class=clear></div> </div> <div class=\\\"authorName item__title\\\" ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> <div class=\\\"text item__text item__text--transcript\\\" ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"7XCA\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/image-thumbnail.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"thumbnail touchable\\\" x-ng-class=\\\"{fullsize: item.showInlineDetail || item.isActive}\\\" x-ng-click=toggleDetailView()> <img ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> <div class=\\\"text item__text\\\"> <div class=\\\"title item__title item__title--image-thumbnail\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div class=\\\"text item__text item__text--image text--image-thumbnail\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"84qX\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/pullquote.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=\\\"itemTemplate headerItem\\\"> <div class=category></div> <div class=\\\"pullquote item__text item__text--pullquote\\\" ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> <div class=pullquoteSpeaker ng-if=item.display_annotator> — <span ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></span></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"888c\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/testbed-event.html';\nvar html = \"<style>.testContentPane{border:1px solid #000;position:absolute;overflow:hidden;top:3em;left:2em;right:2em;bottom:10em}.testEditorPane{position:absolute;bottom:0;z-index:2;left:0;right:0;height:10em;overflow-y:scroll}label{margin:0 2em}</style> <div class=controls> <label> Content pane type: <select size=1 ng-model=testbed.contentType ng-init=\\\"testbed.contentType='content'\\\"> <option value=content>Content</option> <option value=fill>Overlay</option> </select> </label> <label ng-if=\\\"testbed.contentType == 'content'\\\"> <input type=checkbox ng-model=testbed.isNarrow> Narrow content pane </label> <label> Item state: <select size=1 ng-model=item.state ng-init=\\\"item.state='isCurrent'\\\"> <option value=isCurrent>Current</option> <option value=isPast>Past</option> <option value=isFuture>Future</option> </select> </label> <label> <input type=checkbox ng-model=testbed.showCurrent ng-init=\\\"testbed.showCurrent = false;\\\"> Hide non-current items </label> </div> <div class=\\\"testContentPane allowHighlights allowSidebars hasLeftSidebar hasRightSidebar {{testbed.contentType}}\\\" ng-class=\\\"{isNarrow: testbed.isNarrow, showCurrent: testbed.showCurrent}\\\"> <div ng-if=\\\"!(testbed.showCurrent && item.state!='isCurrent')\\\" class=\\\"item animate\\\" itt-item=item ng-class=\\\"item.styleCss + ' ' + item.state\\\"></div> </div> <div class=testEditorPane itt-item-editor=item></div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"9ij1\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/timeline-story.html';\nvar html = \"<div class=timeline ng-show=!isSuppressed ng-cloak> <button tabindex=0 ng-focus=showControls() class=button ng-class=setBtnClass() ng-click=timelineBtnClick()> <span class=control-text>{{controlText}}</span> </button> <div class=progressbarBox> <div class=pbarTop> <span ng-if=\\\"appState.product == 'producer'\\\"> <a class=\\\"button button-zoomout\\\" ng-if=\\\"zoomLevel != 1\\\" ng-click=zoomOut()> <span class=control-text>Zoom out</span> </a> <small ng-if=\\\"zoomLevel != 1\\\">Zoom: {{zoomLevel*100}}%</small> <a class=\\\"button button-zoomin\\\" ng-click=zoomIn()> <span class=control-text>Zoom in</span> </a> </span> </div> <div class=pbarMain> <button ng-focus=showControls() ng-class=\\\"{invisible: playbackService.getMetaProp('time') == 0}\\\" class=\\\"button button-prev\\\" ng-click=prevScene()> <span class=control-text>Previous</span> </button> <button ng-focus=showControls() tabindex=0 ng-class=\\\"{invisible: playbackService.getMetaProp('time')>= playbackService.getMetaProp('duration')- 0.1}\\\" class=\\\"button button-next\\\" ng-click=nextScene()> <span class=control-text>Next</span> </button> <div class=progressbar> <div class=mask> <div class=progressbarContainer style=width:{};> <div class=buffered ng-style=\\\"{width: playbackService.getMetaProp('bufferedPercent')+'%'}\\\"></div> <div class=played ng-style=\\\"{width: markerPercent(playbackService.getMetaProp('time'))+'%'}\\\"></div> </div> </div> <div class=progressbarContainer style=width:{};> <div class=handle ng-show=isSeeking ng-style=\\\"{left: markerPercent(willSeekTo)+'%'}\\\"> <div class=tip ng-show=seekHandleVisible>{{willSeekTo | asTime}}</div> </div> <div class=tooltip ng-if=eventGroup.showTooltip ng-repeat=\\\"eventGroup in timeline.displayMarkedEvents\\\" ng-style=\\\"{left: markerPercent(eventGroup.start_time)+'%'}\\\"> <span class=content ng-bind-html=eventGroup.toolTipText></span> </div> <div class=\\\"handle sxsHandle playhead\\\" ng-show=appState.editEvent ng-style=\\\"{left: markerPercent(appState.editEvent.start_time)+'%'}\\\"> <div class=tip ng-click=\\\"\\\">{{appState.editEvent.start_time | asTime}}</div> </div> </div> <div class=\\\"playhead mask\\\"> <div class=progressbarContainer ng-style=\\\"{width: zoomLevel+'00%'}\\\"> <div class=marker ng-mouseover=showTooltip(eventGroup) ng-mouseout=hideTooltip(eventGroup) ng-repeat=\\\"eventGroup in timeline.displayMarkedEvents\\\" ng-style=\\\"{left: markerPercent(eventGroup.start_time)+'%'}\\\" ng-if=\\\"eventGroup.stop || eventGroup.toolTipText || appState.product == 'producer' && eventGroup.toolTipText != null\\\" ng-class=\\\"{stop: eventGroup.stop && !eventGroup.multiStop, mini: eventGroup.layoutChange, multi: eventGroup.multiStop}\\\"> </div> <div ng-if=appState.editEvent class=editingItem ng-style=\\\"{left: markerPercent(appState.editEvent.start_time)+'%', right: markerPercent(playbackService.getMetaProp('duration') - appState.editEvent.end_time)+'%'}\\\"></div> </div> </div> </div> </div> <div class=pbarBottom> <span class=timedisplay> {{playbackService.getMetaProp('time')| asTime}} / {{playbackService.getMetaProp('duration') | asTime}} <span class=speedcontrol> <button ng-focus=showControls() class=button-speedcontrol ng-click=changeSpeed(-0.25) aria-label=\\\"Slow down video\\\"> <div ng-class=\\\"{arrowLeft: playbackService.getMetaProp('timeMultiplier') > 0.5}\\\"></div> </button> <span class=speeddisplay ng-click=resetSpeed()>{{playbackService.getMetaProp('timeMultiplier')}}x</span> <button ng-focus=showControls() class=button-speedcontrol ng-click=changeSpeed(0.25) aria-label=\\\"Speed up video\\\"> <div ng-class=\\\"{arrowRight: playbackService.getMetaProp('timeMultiplier') < 2}\\\"></div> </button> </span> </span> <span style=display:inline-block;height:1em;position:relative ng-if=\\\"episode.languages.length > 1\\\"> <select size=1 ng-model=appState.lang class=languageSelector ng-change=setNewLanguage() ng-options=\\\"language.code as ('['+language.code.toUpperCase()+']') for language in episode.languages\\\"> </select> </span> <button ng-focus=showControls() tabindex=0 ng-if=\\\"appState.viewMode == 'watch'\\\" class=\\\"button button-captions\\\" ng-click=\\\"appState.hideCaptions=!appState.hideCaptions\\\" ng-class=\\\"{active: !appState.hideCaptions}\\\"> <span class=control-text>Captions</span> </button> <a ng-if=\\\"appState.viewMode=='watch'\\\" class=\\\"button button-fullscreen active\\\" ng-click=\\\"viewMode('discover')\\\"> <span class=control-text>Exit fullscreen</span> </a> <a ng-if=\\\"appState.viewMode!='watch'\\\" class=\\\"button button-fullscreen\\\" ng-click=\\\"viewMode('watch')\\\"> <span class=control-text>Fullscreen video</span> </a> <span ng-if=!appState.isTouchDevice> <button ng-focus=showControls() tabindex=0 class=\\\"button button-mute {{audioIcon()}}\\\" ng-click=toggleMute()> <span class=control-text>Mute</span> </button> <itt-volume-slider></itt-volume-slider> </span> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"AZay\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/text-definition.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div> <div class=\\\"itemTemplate definition\\\"> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"item__title item__title--definition\\\"> <span ng-if=\\\"item.display_title | highlightSubstring: appState.searchText\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></span> </div> </div> <div class=\\\"text item__text item__text--definition\\\" ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"AeV0\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/upload-masterasset.html';\nvar html = \" <div ng-if=showAssetPicker class=floatAssetPicker> <div class=scrollContainer> <sxs-container-assets container-id={{episodeContainerId}}></sxs-container-assets> </div> <div class=controlsContainer> <button ng-click=endChooseAsset();>Cancel</button> </div> </div> <div> <div ng-if=\\\"(masterAsset.original_filename) && !showUploadButtonsMaster\\\"> {{masterAsset.display_name}} <button class=button ng-click=\\\"replaceAsset('Master')\\\"> Replace</button> <button class=button ng-click=detachMasterAsset()>Remove</button> </div> <div ng-if=\\\"showUploadButtonsMaster || !(masterAsset.original_filename)\\\"> <span ng-if=showUploadFieldMaster> <itt-asset-uploader container-id={{episodeContainerId}} callback=assetUploaded(data)></itt-asset-uploader> </span> <span ng-if=!showUploadFieldMaster> <button class=button ng-click=\\\"chooseAsset('Master')\\\">Browse uploaded assets</button> <button class=button ng-click=\\\"toggleUpload('Master')\\\">Upload new asset</button> </span> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"AiEB\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/questionauthoring.html';\nvar html = \"<div style=margin:1em> <p>This is a standalone editor for question items. Fill in the fields below, then copy the JSON data below into the existing authoring tool. To edit an existing question paste its JSON into the json field and the editor will separate it out into editable fields.</p> <table class=authoringForm> <tr> <td class=label>Question type</td> <td> <select ng-model=question.questiontype> <option value=mc-poll>Poll</option> <option value=mc-formative>Formative</option> </select> </td> </tr> <tr> <td class=label>Question text</td> <td> <textarea rows=4 ng-model=question.questiontext>\\n\\t\\t\\t\\t</textarea> </td> </tr> <tr> <td colspan=2>Answer choices. <span ng-if=\\\"question.questiontype == 'mc-formative'\\\">Check the correct answer (if more than one is selected, either will count as correct).</span>To remove an answer choice, just leave it blank. </td> </tr> <tr ng-repeat=\\\"distractor in question.distractors\\\"> <td class=label> <input type=checkbox ng-model=distractor.correct ng-if=\\\"question.questiontype == 'mc-formative'\\\"> </td> <td> <input type=text ng-model=distractor.text> </td> </tr> <tr> <td class=label><a ng-click=addDistractor()>add another</a> </td> <td> </td> </tr> <tr ng-if=\\\"question.questiontype == 'mc-formative'\\\"> <td class=label>Feedback for correct answer</td> <td> <input type=text ng-model=question.correctfeedback> </td> </tr> <tr ng-if=\\\"question.questiontype == 'mc-formative'\\\"> <td class=label>Feedback for incorrect answer</td> <td> <input type=text ng-model=question.incorrectfeedback> </td> </tr> <tr> <td colspan=2> <br> <hr> <br> </td> </tr> <tr> <td class=label>JSON data: <span ng-if=editwarning>Invalid JSON!</span> </td> <td> <textarea rows=10 ng-model=pluginjson></textarea> </td> </tr> </table> <br> <hr> <br> <p class=label>Question preview:</p> <div class=item> <div ng-if=preview itt-item=questionpreview></div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"AxNG\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'view-modes/watch-mode/watchmode.html';\nvar html = \" <div ng-if=\\\"appState.viewMode == 'watch'\\\" style=padding-bottom:100%> <div class=watchMode> <div itt-magnet id=watchModeVideoMagnet class=videoMagnet> <img src=\" + __webpack_require__(\"rXKF\") + \"> </div> </div> <span class=watchModeCaptions ng-class=\\\"{padForBottomToolbar: appState.videoControlsActive}\\\"> <div class=\\\"item watchModeCaption\\\" ng-if=\\\"item.isCurrent && !appState.hideCaptions\\\" ng-repeat=\\\"item in episode.items | transcript\\\" ng-class=item.state itt-item=item forcetemplate=caption> </div> </span> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"CQGL\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/root.html';\nvar html = \"<div class=\\\"rootLogin standaloneAncillaryPage\\\" itt-login> <np-nav on-logout=logout()></np-nav> <div class=inner> <div ng-if=appState.user._id> <div itt-user></div> </div> <div ng-if=!appState.user._id> <form ng-submit=adminLogin()> <h1>Sign in to Narrative Producer</h1> <label> <span>Username</span> <input type=email name=auth_key ng-model=loginForm.auth_key> </label> <label> <span>Password</span> <input type=password name=password ng-model=loginForm.password> </label> <input class=\\\"submit button\\\" type=submit value=\\\"Sign in\\\"> <span class=error ng-if=badlogin>Sorry, try again?</span> </form> </div> <br style=clear:both> </div> <small ng-if=!appState.user._id><a href={{apiDataBaseUrl}}/oauth2>OAuth</a></small> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"CVkk\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/image.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=category> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text\\\"> <div class=\\\"title item__title item__title--image\\\"> <a class=\\\"fakeLink item__link--fake-link\\\" role=button tabindex=0 ng-click=toggleDetailView() x-ng-keypress=toggleDetailOnKeyPress($event) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <div class=\\\"item__text item__text--image\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <div class=itemDetail x-ng-if=item.showInlineDetail> <div class=touchable style=position:relative> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"D/IP\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/scene/landingscreen.html';\nvar html = \"<div class=\\\"landingscreen stretchToViewportShort\\\"> <div> <div class=\\\"pane introtext\\\"> <h1 ng-bind-html=episode.display_title></h1> <p id=episode--description ng-bind-html=episode.display_description></p> <br> </div> <div itt-magnet class=videoMagnet> <img src=\" + __webpack_require__(\"rXKF\") + \"> </div> <div class=landingscreen-end></div> <div class=clear></div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"DJti\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"EDO7\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/annotator-autocomplete.html';\nvar html = \"<div style=position:relative ng-show=!hasAnnotator()> <input class=annotatorChooser type=text ng-model=searchText ng-focus=showAutocomplete() ng-blur=hideAutocomplete() ng-change=handleAutocomplete()> <div class=\\\"autocompleteList animate transitionFade\\\" ng-if=autoCompleting> <div class=autocompleteItem ng-repeat=\\\"annotator in filteredAnnotators\\\" ng-click=select(annotator) ng-class=\\\"{selected: ($index == preselectedItem)}\\\" style=white-space:nowrap> <img ng-src={{annotator.imageUrl}}> <span ng-bind-html=\\\"(annotator.key | highlightSubstring: searchText) || '(New speaker)'\\\"></span> </div> </div> </div> <div style=position:relative ng-show=hasAnnotator()> <div sxs-input-i18n=item.annotator x-inputtype=\\\"'input'\\\"></div> <a style=position:absolute;top:3px;right:10px ng-click=\\\"item.annotator={}\\\">(x)</a> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"F5VT\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/scene/mirrored-twocol.html';\nvar html = \" <div class=\\\"scene cornerV\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=col> <div itt-magnet class=videoMagnet> <img src=\" + __webpack_require__(\"rXKF\") + \"> </div> <div class=\\\"pane mainPane\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{singleitem: altContentItems.length==1, isNarrow: isNarrow, isEmpty: altContentItems.length == 0}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altItems = (altContentItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> <div class=col> <div class=\\\"pane altPane stretchToViewport\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (mainContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (mainContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: mainContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: mainContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: mainContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in showCurrent ? (mainContentItems | isCurrent) : mainContentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"FFkw\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/file-withimage.html';\nvar html = \" <a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=category> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text item__text--file-with-image\\\"> <span ng-if=handleOutgoingLinkDisplay()> <span ng-if=!item.targetTop> <div class=\\\"title item__title item__title--file-with-image\\\"> <a tabindex=0 class=\\\"escapelink item__link--escape-link\\\" x-ng-keypress=outgoingLinkOnKeyPress(item.asset.url,$event) ng-click=outgoingLink(item.asset.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <a tabindex=0 ng-if=item.asset.url x-ng-keypress=outgoingLinkOnKeyPress(item.asset.url,$event) ng-click=outgoingLink(item.asset.url)> <img ng-src={{item.asset.url}}> </a> </span> <span ng-if=item.targetTop> <div class=\\\"title item__title item__title--file-with-image\\\"> <a tabindex=0 target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <a tabindex=0 target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)> <img ng-src={{item.asset.url}}> </a> </span> </span> <span ng-if=!handleOutgoingLinkDisplay()> <div class=\\\"title item__title item__title--file-with-image\\\"> <a role=button x-ng-keypress=toggleDetailOnKeyPress($event) class=\\\"fakeLink item__link--fake-link\\\" tabindex=0 ng-click=toggleDetailView() ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <img ng-click=toggleDetailView() ng-src={{item.asset.url}}> </span> </div> <div class=\\\"item__text item__text--file-with-image\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <div class=itemDetail ng-if=item.showInlineDetail> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) class=escapelink>(new window)</a> <itt-iframe x-src={{item.asset.url}} item=item x-contenttype={{item.asset.content_type}}></itt-iframe> </div> <div class=clear></div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"FUk5\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"images/checkmark-empty.eccafa854fceac6359bac2609d44e2ce.png\";\n\n/***/ }),\n\n/***/ \"G4Wk\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/review-annotation.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div ng-class=\\\"{isCosmetic: item.cosmetic}\\\"> <div ng-if=item.isTranscript class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <div class=text ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> </div> <div ng-if=!item.isTranscript ng-include=item.templateUrl></div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"GGxq\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/debug.html';\nvar html = \"<div class=itemTemplate> <pre ng-if=itemDebug>{{item | pretty}}</pre> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"GUWn\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/error.html';\nvar html = \"<span ng-if=\\\"errorSvc.errors.length || errorSvc.notifications.length\\\" class=errors> <div class=error ng-repeat=\\\"error in errorSvc.errors\\\" ng-click=dismiss(error)> <h3><i class=\\\"fa fa-exclamation-triangle error-red\\\"></i>Error: <span ng-bind-html=\\\"error.cause || error.exception.data.error || error.exception.data.base[0]|| error.exception.data || '(unknown reason)'\\\"></span></h3> <p ng-if=error.exception.config.url> <i>(While trying to load {{error.exception.config.url}})</i> </p> <p ng-if=\\\"error.exception.status == 401\\\"> Please <span ng-if=user.login_url> <a ng-if=user.login_via_top_window_only ng-click=logout(); ng-href={{user.login_url}} target=_top>click here</a> <a ng-if=!user.login_via_top_window_only ng-click=logout(); ng-href={{user.login_url}}>click here</a> to log back in. </span> <span ng-if=!user.login_url> <a ng-click=logout();>reset your session</a> and start over. </span> </p> </div> <div class=notification ng-repeat=\\\"notification in errorSvc.notifications\\\"> <a style=float:right ng-click=dismiss(notification)>[x]</a> <p><i class=\\\"fa fa-info-circle info-blue\\\"></i> <strong> Note: </strong> {{notification.text}}</p> </div> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"GeQP\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/upload-producer.html';\nvar html = \" <div ng-if=showAssetPicker class=floatAssetPicker> <div class=scrollContainer> <sxs-container-assets container-id={{episodeContainerId}} mime-key={{item.producerItemType}}></sxs-container-assets> </div> <div class=controlsContainer> <button ng-click=endChooseAsset();>Cancel</button> </div> </div> <div> <ng-model ng-model=item.asset name=itemAsset itt-valid-asset item=item></ng-model> <div ng-if=\\\"item.asset && !showUploadButtons\\\"> {{item.asset.display_name}} <button class=button ng-click=replaceAsset()>Replace</button> <button class=button ng-click=\\\"detachAsset(); selectService.onSelectChange(item, itemForm)\\\">Remove</button> </div> <div ng-if=\\\"showUploadButtons || !item.asset\\\"> <span ng-if=showUploadField> <itt-asset-uploader container-id={{episodeContainerId}} ng-if=canAccess callback=assetUploaded(data) mime-types={{mimes}}> </itt-asset-uploader> </span> <span ng-if=!showUploadField> <button class=button ng-click=chooseAsset()>Browse uploaded</button> <button class=button ng-click=toggleUpload()>Upload new</button> </span> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"GoGc\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/scene/cornerH.html';\nvar html = \" <div class=\\\"scene cornerH\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=row> <div itt-magnet class=videoMagnet> <img src=\" + __webpack_require__(\"rXKF\") + \"> </div> <div class=\\\"pane mainPane matchVideoHeight\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer\\\" ng-class=\\\"{singleitem: mainContentItems.length==1, isNarrow: isNarrow, isEmpty: mainContentItems.length == 0}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainItems = (mainContentItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> <div class=row> <div class=\\\"pane altPane\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (altContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (altContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: altContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: altContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: altContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in showCurrent ? (altContentItems | isCurrent) : altContentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"HyaP\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/copyright.html';\nvar html = \"TELLING STORY player &#169; <span ng-bind-html=\\\"now | date:'yyyy'\\\"></span> <a href=//inthetelling.com target=_blank>IN THE TELLING</a>. All rights reserved. <br> <a href=/privacy.html target=_blank>Privacy</a> <span ng-if=narrative.support_url> - <a ng-href={{narrative.support_url}}>Support</a> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"IL3w\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/link-descriptionfirst.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=category> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text\\\"> <div class=\\\"item__text--link text--description-first\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> <div class=\\\"title item__title item__title--link title--description-first\\\"> <a tabindex=0 ng-if=\\\"handleOutgoingLinkDisplay() && !item.targetTop\\\" class=\\\"escapelink item__escape-link item__link--escape-link escape-link--description-first\\\" x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> <a tabindex=0 ng-if=\\\"handleOutgoingLinkDisplay() && item.targetTop\\\" target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> <a tabindex=0 ng-if=!handleOutgoingLinkDisplay() ng-click=toggleDetailView() ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> </div> <div class=itemDetail ng-if=item.showInlineDetail> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) class=\\\"escapelink item__link--escape-link escape-link--description-first\\\">(new window)</a> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"IiAB\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"images/no-avatar.a012e2f1c64d5ed04112b126c8c347ba.gif\";\n\n/***/ }),\n\n/***/ \"JTcP\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/scene/cornerV.html';\nvar html = \" <div class=\\\"scene cornerV\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=col> <div itt-magnet class=videoMagnet> <img src=\" + __webpack_require__(\"rXKF\") + \"> </div> <div class=\\\"pane mainPane\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{singleitem: mainContentItems.length==1, isNarrow: isNarrow, isEmpty: mainContentItems.length == 0}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainItems = (mainContentItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> <div class=col> <div class=\\\"pane altPane stretchToViewport\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (altContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (altContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: altContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: altContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: altContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in showCurrent ? (altContentItems | isCurrent) : altContentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"Jetm\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/link-embed.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text\\\"> <div class=\\\"title item__title item__title--link title--link-embed\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div class=\\\"item__text--link text--link-embed\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <a tabindex=0 class=\\\"escapelink item__link--escape-link escape-link--link-embed\\\" x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)>(new window)</a> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"JkHQ\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/searchresults.html';\nvar html = \"<div ng-class=\\\"{\\nsearchitem:true,\\nisSxS: item.sxs,\\nisCurrent: ((item.start_time <= playbackService.getMetaProp('time')) && (item.end_time > playbackService.getMetaProp('time'))),\\nisCosmetic: item.cosmetic\\n}\\\" ng-style=\\\"item.sxs?{backgroundImage:'url('+item.avatar.url+')'}:{}\\\"> <a class=edit-event ng-click=editItem(item._id)> <span>Edit item</span> </a> <span class=displayTime> <button class=fakeLink tabindex=2 ng-click=\\\"seek(item.start_time, item._id)\\\">{{item.displayStartTime}}</button> </span> <span class=type ng-bind-html=\\\"(item.display_title || item.display_annotator) | highlightSubstring: appState.searchText\\\"></span> <div class=description ng-bind-html=\\\"(item.display_description || item.display_annotation) | highlightSubstring: appState.searchText\\\"></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"JnVu\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/link-modal-thumb.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text\\\"> <span ng-if=handleOutgoingLinkDisplay()> <span ng-if=!item.targetTop> <div class=\\\"title item__title item__title--link title--link-modal\\\"> <a tabindex=0 class=\\\"escapelink item__link--escape-link escape-link--link-modal\\\" x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <a tabindex=0 ng-if=item.asset.url x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)> <img ng-if=item.asset.url ng-src={{item.asset.url}}> </a> </span> <span ng-if=item.targetTop> <div class=\\\"title item__title item__title--link title--link-modal\\\"> <a tabindex=0 target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <a tabindex=0 target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)> <img ng-if=item.asset.url ng-src={{item.asset.url}}> </a> </span> </span> <span ng-if=!handleOutgoingLinkDisplay()> <div class=\\\"title item__title item__title--link title--link-modal\\\"> <a role=button x-ng-keypress=toggleDetailOnKeyPress($event) class=\\\"fakeLink item__link--fake-link\\\" tabindex=0 ng-click=forceModal(false) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <img ng-if=item.asset.url ng-click=forceModal(false) ng-src={{item.asset.url}}> </span> <div class=\\\"item__text item__text--link text--link-modal\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> </div> <div class=itemDetail ng-if=\\\"item.showInlineDetail && appState.viewMode === 'review'\\\"> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) class=\\\"escapelink item__link--escape-link escape-link--link-modal\\\">(new window)</a> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </div> <div class=clear></div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"JoBD\":\n/***/ (function(module, exports) {\n\nvar path = 'scripts/directives/socialshare/social-share.html';\nvar html = \"<span class=itt-socialshare> <span ng-if=!$ctrl.expanded> <a class=\\\"button button-facebook\\\" ng-click=\\\"$ctrl.onShare('facebook')\\\"></a> <a class=\\\"button button-linkedin\\\" ng-click=\\\"$ctrl.onShare('linkedin')\\\"></a> <a class=\\\"button button-share\\\" ng-click=$ctrl.toggleExpanded()></a> </span> <div class=socialshare__row ng-if=$ctrl.expanded> <button class=socialshare__exit ng-click=$ctrl.toggleExpanded()> </button> <div class=socialshare__row--expanded> <div> <p>Share episode</p> <a ng-repeat=\\\"provider in $ctrl.providers\\\" class=button ng-click=$ctrl.onShare(provider) ng-class=\\\"'button-' + provider\\\"> </a> </div> <div> <p>Copy link</p> <div class=socialshare__clipboard> <np-clipboard light=true custom-notice=true on-copy=$ctrl.ontextCopied($event) source-text={{$ctrl.stubUrl}}> </np-clipboard> <div ng-if=$ctrl.textCopied> <span class=\\\"button button-text-copied\\\"></span> <span class=text--notice>(Link copied to clipboard)</span> </div> </div> </div> <np-modal wrapper-class=email-modal__wrapper modal-class=email-modal__content ng-if=$ctrl.emailshareExpanded> <form name=emailshareForm> <div class=socialshare__email-row> <div class=socialshare__email-from> <span> <label for=ssFromName>From name</label> <input type=text id=ssFromName ng-model=email.from_name required/> </span> <span> <label for=ssFromEmail>From email</label> <input type=email id=ssFromEmail ng-model=email.from_email_address required/> </span> </div> <div class=socialshare__email-to> <span> <label for=ssToName>To name</label> <input id=ssToName type=text ng-model=email.to_name required/> </span> <span> <label for=ssToEmail>To email</label> <input type=email id=ssToEmail ng-model=email.to_email_address required/> </span> </div> <div class=socialshare__email-subject> <span> <label for=ssSubject>Subject</label> <input type=text id=ssSubject ng-init=\\\"email.subject = $ctrl.shareTitle\\\" ng-model=email.subject required/> </span> </div> <div class=socialshare__email-message> <label for=ssMessage>Message</label> <textarea id=ssMessage ng-model=email.message required></textarea> </div> <div class=socialshare__email-sender-copy> <span> <input type=checkbox id=ssSenderCopy ng-init=\\\"email.sender_copy = true\\\" ng-model=email.sender_copy /> <label for=ssSenderCopy>Send me a copy</label> </span> </div> <div class=socialshare__email-buttons> <button ng-click=\\\"$ctrl.handleEmailShare(email, emailshareForm)\\\" type=submit>Send email</button> <button ng-click=$ctrl.toggleEmailshare()>Close</button> </div> </div> </form> </np-modal> </div> </div> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"JtGx\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/auth.html';\nvar html = \"<div itt-login style=margin:2em> <a style=\\\"animation:delayedFadeIn 5s\\\" href=/#/ >Home</a> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"K96E\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/item/sxs-video.html';\nvar html = \"<span class=\\\"eventIcon icon-video\\\"></span> <np-url-field data=item label=\\\"Video url\\\" context=editor-video itt-item-form=ittItemForm></np-url-field> <itt-title-field do-validate=false data=item itt-item-form=ittItemForm></itt-title-field> <itt-description-field data=item></itt-description-field> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"KP/u\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/sxs-link.html';\nvar html = \"<div class=\\\"itemTemplate sxs-item\\\"> <a class=edit-event ng-click=editItem() ng-if=item.editableByThisUser>[Edit]</a> <div class=avatar> <img ng-src=\\\"{{item.avatar.url || appState.noAvatar }}\\\"> </div> <div class=itemHead> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <a ng-if=handleOutgoingLinkDisplay() class=escapelink ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.title.en ||'(Untitled)'\\\"></a> <h3 ng-if=!handleOutgoingLinkDisplay() ng-bind-html=\\\"item.title.en ||'(Untitled)'\\\"></h3> <div class=text ng-bind-html=item.description.en></div> <div class=itemDetail ng-if=\\\"item.url && !handleOutgoingLinkDisplay() && item.url != 'https://'\\\"> <div class=modalmenu> <a ng-click=outgoingLink(item.url) class=escapelink>(new window)</a> </div> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"LSM6\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/inputi18n.html';\nvar html = \"<input ng-if=\\\"inputtype=='input'\\\" ng-model=field[appState.lang] name={{textangularname}} ng-required=doValidate> <text-angular ng-if=\\\"inputtype=='textarea'\\\" name={{textangularname}} ng-required=doValidate ng-model=field[appState.lang] ta-paste=sanitizePastedHtml($html) ta-default-wrap=span ng-blur=trim()></text-angular> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"N29+\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/item/sxs-annotation.html';\nvar html = \" <span class=\\\"eventIcon icon-comment\\\"></span> <div class=field> <div class=label>Comment </div> <div class=input sxs-input-i18n=item.annotation autofocus x-inputtype=\\\"'textarea'\\\"></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"NnMI\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/item/sxs-question.html';\nvar html = \"<span class=\\\"eventIcon icon-question\\\"></span> <div class=field> <div class=label>Question type </div> <div class=input> <select ng-model=item.data._plugin.questiontype> <option value=mc-poll>Poll</option> <option value=mc-formative>Formative</option> </select> </div> </div> <div class=field> <div class=label>Question text </div> <div class=input autofocus sxs-input-i18n=item.data._plugin.questiontext x-inputtype=\\\"'textarea'\\\"></div> </div> <div class=field> <div class=label>Question Title </div> <div class=input> <input type=text ng-model=item.title.en autofocus> </div> </div> <div class=field> <div class=label>Image (optional) </div> <div class=input ng-include=\\\"'templates/producer/upload-sxs.html'\\\"> </div> </div> <div class=field ng-repeat=\\\"distractor in item.data._plugin.distractors track by $index\\\"> <div class=label> {{$index | alpha}} &nbsp; <input type=checkbox ng-model=distractor.correct ng-if=\\\"item.data._plugin.questiontype == 'mc-formative'\\\"> </div> <div class=input sxs-input-i18n=distractor.text x-inputtype=\\\"'textarea'\\\"></div> </div> <div class=field> <div class=input> <button ng-click=addDistractor($event)>Add distractor</button> </div> </div> <div class=field ng-if=\\\"item.data._plugin.questiontype == 'mc-formative'\\\"> <div class=label>Feedback when correct </div> <div class=input sxs-input-i18n=item.data._plugin.correctfeedback x-inputtype=\\\"'textarea'\\\"></div> </div> <div class=field ng-if=\\\"item.data._plugin.questiontype == 'mc-formative'\\\"> <div class=label>Feedback when incorrect </div> <div class=input sxs-input-i18n=item.data._plugin.incorrectfeedback x-inputtype=\\\"'textarea'\\\"></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"O4Bc\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/image-fill.html';\nvar html = \" <a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=\\\"itemTemplate imageFill\\\" ng-style=\\\"{'background-image': 'url(' + item.asset.cssBgUrl + ')'}\\\"> <img class=fillImg ng-src={{item.asset.url}}> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"OCYu\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/image-caption-sliding.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"captionContainer touchable\\\"> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> <div class=\\\"caption slidingcaption\\\"> <div class=\\\"title item__title item__title--image item__title--image-caption-sliding\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div class=\\\"text item__text item__text--image item__text--image-caption-sliding\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"Of5n\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/navpanel.html';\nvar html = \"<span class=navPanel> <div class=parent ng-repeat=\\\"parent in episode.parents\\\" ng-bind-html=parent.display_name></div> <div class=scene x-ng-if=scene.display_title x-ng-repeat=\\\"scene in episode.scenes\\\" x-ng-class=\\\"{currentScene: scene.isCurrent}\\\" x-ng-click=seek(scene.start_time)> <span class=displayTime>{{scene.displayStartTime}}</span> <p> <button class=fakeLink tabindex=0 ng-bind-html=scene.display_title x-ng-class=\\\"{sceneLink: !scene.isCurrent}\\\" ng-focus=showControls()></button> <br> <span ng-bind-html=scene.display_description></span> </p> </div> <div class=crossEpisode> <a class=prevEpisode ng-if=episode.previousEpisodeContainer ng-href=/#/{{appState.crossEpisodePath}}/{{episode.previousEpisodeContainer.episodes[0]}} title={{episode.previousEpisodeContainer.display_name}}>Previous episode</a> <a class=nextEpisode ng-if=episode.nextEpisodeContainer ng-href=/#/{{appState.crossEpisodePath}}/{{episode.nextEpisodeContainer.episodes[0]}} title={{episode.nextEpisodeContainer.display_name}}>Next Episode</a> </div> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"Ogf/\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./socialshare/social-share.html\": \"JoBD\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Ogf/\";\n\n/***/ }),\n\n/***/ \"Qi2g\":\n/***/ (function(module, exports) {\n\nvar path = 'view-modes/video/video.html';\nvar html = \"<div itt-magnetized class=\\\"pane videoContainer\\\"> <span ng-if=\\\"episode.swap && episode.replacingMasterAsset\\\" style=visibility:hidden> <itt-video class=\\\"video contentLayer\\\" media-src-arr=episode.swap.mediaSrcArr poster=episode.poster player-id=episode.swap._id main-player=true> </itt-video> </span> <span ng-if=\\\"episode.masterAsset && !episode.replacingMasterAsset\\\"> <itt-video class=\\\"video contentLayer\\\" media-src-arr=episode.masterAsset.mediaSrcArr poster=episode.poster player-id=episode.masterAsset._id main-player=true> </itt-video> </span> <div class=\\\"pane fill overlay fgLayer\\\"> <div ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item class=\\\"item animate\\\" ng-repeat=\\\"item in episode.items | itemLayout:'videoOverlay' | isCurrent\\\"> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"RMtA\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/item/sxs-image.html';\nvar html = \"<span class=\\\"eventIcon icon-image\\\"></span> <div class=field> <div class=label>Title </div> <div class=input> <input type=text ng-model=item.title.en autofocus> </div> </div> <div class=field> <div class=label>Image </div> <div class=input ng-include=\\\"'templates/producer/upload-sxs.html'\\\"> </div> </div> <div class=field> <div class=label>Description </div> <div class=input sxs-input-i18n=item.description x-inputtype=\\\"'textarea'\\\"></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"SwK8\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/file.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text item__text--file\\\"> <div class=\\\"title item__title item__title--file\\\"> <a role=button tabindex=0 x-ng-keypress=toggleDetailOnKeyPress($event) ng-click=toggleDetailView() ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <div class=\\\"item__text item__text--file\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <div class=itemDetail ng-if=item.showInlineDetail> <span ng-switch=\\\"item.asset.content_type.indexOf('image/')\\\"> <span ng-switch-when=-1> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.asset.url,$event) ng-click=outgoingLink(item.asset.url) class=\\\"escapelink item__link--escape-link\\\">(new window)</a> <itt-iframe x-src={{item.asset.url}} item=item x-contenttype={{item.asset.content_type}}></itt-iframe> </span> <span ng-switch-default> <img ng-src={{item.asset.url}}> </span> </span> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"TEP0\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/sxs-file.html';\nvar html = \"<div class=\\\"itemTemplate sxs-item\\\"> <a class=edit-event ng-click=editItem() ng-if=item.editableByThisUser>[Edit]</a> <div class=avatar> <img ng-src=\\\"{{item.avatar.url || appState.noAvatar}}\\\"> </div> <div class=itemHead> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <a ng-click=outgoingLink(item.asset.url) ng-bind-html=\\\"item.title.en ||'(Untitled)'\\\"></a> <div class=text ng-bind-html=item.description.en></div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"UW+C\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/transcript-withthumbnail.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=\\\"itemTemplate transcript\\\"> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> </div> <div class=icon style=float:left;margin-right:.5em> <img ng-if=item.asset.url ng-src={{item.asset.url}}> <div class=clear></div> </div> <div class=\\\"authorName item__title\\\" ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> <div class=\\\"text item__text\\\" ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"V8p6\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/addcontent.html';\nvar html = \"<div ng-show=\\\"!appState.editEvent && !appState.editEpisode\\\" class=controlPanel ng-class=\\\"{\\n\\tisProducer: appState.product == 'producer',\\n\\tisSxS: appState.product == 'sxs'\\n}\\\"> <div ng-if=\\\"appState.product == 'producer'\\\" class=editButtonPanel> <a class=\\\"button button-episode\\\" ng-click=editEpisode()>Edit episode</a> <a class=\\\"button button-scene\\\" ng-if=\\\"playbackService.getMetaProp('time') > 0  && playbackService.getMetaProp('time') < (playbackService.getMetaProp('duration') - 0.1) && appState.viewMode == 'discover'\\\" ng-click=editCurrentScene()>Edit Layout</a> </div> <div class=\\\"producer addButtonPanel\\\" ng-show=\\\"!item && playbackService.getMetaProp('time') > 0 && playbackService.getMetaProp('time') < (playbackService.getMetaProp('duration') - 0.1) \\\"> <span ng-if=expanded style=\\\"padding:0 1em\\\" class=\\\"animate transitionExpandW\\\"> <span ng-if=\\\"appState.product == 'sxs'\\\"> <a class=\\\"button button-comment\\\" ng-click=\\\"addEvent('annotation')\\\">Comment</a> <a class=\\\"button button-link\\\" ng-click=\\\"addEvent('link')\\\">Link</a> <a class=\\\"button button-question\\\" ng-click=\\\"addEvent('question')\\\">Question</a> <a class=\\\"button button-image\\\" ng-click=\\\"addEvent('image')\\\">Image</a> <a class=\\\"button button-file\\\" ng-click=\\\"addEvent('file')\\\">File</a> <a class=\\\"button button-video\\\" ng-click=\\\"addEvent('video')\\\">Video</a> </span> <span ng-if=\\\"appState.product == 'producer'\\\"> <a class=\\\"button button-scene\\\" ng-click=\\\"addEvent('scene')\\\">Layout</a> <a class=\\\"button button-comment\\\" ng-click=\\\"addEvent('transcript')\\\">Transcript</a> <a class=\\\"button button-comment\\\" ng-click=\\\"addEvent('annotation')\\\">Annotation</a> <a class=\\\"button button-link\\\" ng-click=\\\"addEvent('link')\\\">Link</a> <a class=\\\"button button-image\\\" ng-click=\\\"addEvent('image')\\\">Image</a> <a class=\\\"button button-file\\\" ng-click=\\\"addEvent('file')\\\" ng-if=\\\"userHasRole('admin') || userHasRole('customer admin')\\\">File</a> <a class=\\\"button button-question\\\" ng-click=\\\"addEvent('question')\\\">Question</a> <a class=\\\"button button-chapter\\\" ng-click=\\\"addEvent('chapter')\\\">Chapter</a> </span> </span> <span ng-if=!expanded> <a class=\\\"button button-add\\\" ng-click=expand()>Add</a> </span> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"VUBB\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/user.html';\nvar html = \"<div class=userHome> <div class=user__info> <div class=user__item> <div class=user__label>Role</div> <h4>{{user.role_description}}</h4> <hr> </div> <div clas=user__item> <div class=user__label>Name</div> <np-edit-pencil can-access=true on-edit=toggleEditing() ng-if=!isEditing> <p>{{user.name}}</p> </np-edit-pencil> <div ng-if=isEditing> <input class=userEditable ng-model=user.name> <button class=button ng-click=\\\"updateUser(); toggleEditing()\\\">save</button> <button class=button ng-click=toggleEditing()>cancel</button> </div> <hr> </div> <div class=user__item ng-if=!isTrueGuest()> <div class=user__label>Email</div> <div>{{user.email}}</div> <hr> </div> <div class=user__item ng-if=!isTrueGuest()> <div class=user__avatar> <div class=user__label>Avatar</div> <div> <img ng-src=\\\"{{appState.user.avatar || appState.noAvatar }}\\\"> </div> <div ng-if=\\\"showUploadField && !uploads\\\"> <input type=file accept=image/* itt-files-handler on-selected=uploadAvatar(files)> </div> <button class=button ng-click=toggleUploadAvatar()>{{showUploadField ? 'cancel' : 'replace'}}</button> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"WeeJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"images/autoscroll.417c83d1f0b2eb6bceb7e048e66ede9d.svg\";\n\n/***/ }),\n\n/***/ \"X9vo\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/inputtime.html';\nvar html = \"<span class=floaterContainer> <input class=inputfield ng-model=model name=time ng-focus=showTools(true) ng-blur=showTools(false) ng-model-options=\\\"{ updateOn: 'blur' }\\\" style=max-width:150px ng-class=\\\"{invalid: (fieldname == 'end_time' && item.invalid_end_time)}\\\"> <div class=floater ng-if=tooltip> <ul style=list-style:none;white-space:nowrap> <li style=text-align:center;font-size:150%> <a ng-click=nudge(-5)>«</a> <a ng-click=nudge(-1)>‹</a> <span> &nbsp;&nbsp; </span> <a ng-click=nudge(1)>›</a> <a ng-click=nudge(5)>»</a> </li> <li ng-click=\\\"setTime(playbackService.getMetaProp('time'))\\\"> <a>Set to current time ({{::format(playbackService.getMetaProp('time'))}})</a> </li> <span ng-if=\\\"item._type != 'Scene' && scene().start_time > 0\\\"> <li ng-if=\\\"fieldname=='start_time'\\\" ng-click=setTime(scene().start_time)> <a>Beginning of layout ({{format(scene().start_time)}})</a> </li> <li ng-if=\\\"fieldname=='end_time'\\\" ng-click=setTime(scene().end_time)> <a>End of layout ({{format(scene().end_time)}})</a> </li> <li ng-if=\\\"fieldname=='end_time' && isTranscript()\\\" ng-click=TODO> <a>Auto (TODO)</a> </li> </span> </ul> </div> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"XOLC\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/review-all.html';\nvar html = \" <span ng-switch=\\\"(item._type == 'Annotation' && item.templateUrl != 'templates/item/text-transmedia.html' && item.templateUrl != 'templates/item/text-definition.html')\\\"> <span ng-switch-when=true> <div ng-include=\\\"'templates/item/review-annotation.html'\\\"></div> </span> <span ng-switch-default> <div ng-include=\\\"'templates/item/review-transmedia.html'\\\"></div> </span> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"XP8H\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/video.html';\nvar html = \" <div class=np-video ng-if=\\\"$ctrl.mediaSrcArr.length > 0\\\" ng-class=\\\"{'np--embed': $ctrl.mainPlayer === false}\\\"> <div class=np-video__overlay-ui ng-if=$ctrl.showMask() ng-class=$ctrl.setCssClass() ng-click=$ctrl.videoClick()> </div> <div class=np-video__wrapper> <div class=np-video__element ng-bind-html=::$ctrl.playerElement></div> </div> <div class=\\\"poster overlay fill\\\" ng-if=\\\"$ctrl.poster && $ctrl.playbackService.getMetaProp('time') === 0\\\" ng-style=\\\"{backgroundImage:'url('+$ctrl.poster.url+')'}\\\"> </div> </div> <div ng-if=\\\"$ctrl.mediaSrcArr.length < 1\\\" class=np-video__empty> <div ng-if=\\\"$ctrl.isTranscoded === false\\\"> <h3>Video is currently transcoding.</h3> <p>The page will refresh when the transcode is complete!</p> </div> <h1 ng-if=\\\"$ctrl.isTranscoded === true\\\"> No video source available... </h1> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"Y+RF\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/text-h1.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=\\\"itemTemplate headerItem\\\"> <div class=category></div> <div class=\\\"item__text item__text--h1\\\"> <h1 ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></h1> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"YALA\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/question-mc.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text item__text--question-mc\\\"> <div class=\\\"title item__title item__title--question-mc\\\" ng-if=\\\"item.display_title | highlightSubstring: appState.searchText\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div ng-if=item.asset.url class=touchable style=float:right;max-width:50%;padding-right:.5em> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> <itt-mc-question show-chart=\\\"item.data._plugin.questiontype == 'mc-poll'\\\" choices=item.data._plugin.distractors on-choice=save data=item.data._plugin qid=item._id></itt-mc-question> <div class=clear></div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"Youv\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/image-plain.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=touchable> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"Ypjs\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/scene/centerVV-mondrial.backup.html';\nvar html = \" <div class=\\\"scene centerVV-mondrian\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=col> <div class=\\\"pane altPane stretchToViewport\\\"> <div class=\\\"fill bgLayer bg-alt\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (altContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (altContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: altContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: altContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: altContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate mondrian\\\" ng-repeat=\\\"item in showCurrent ? (altContentItems | isCurrent) : altContentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> <div class=col> <div class=\\\"fill bgLayer bg-main\\\"> <div ng-if=\\\"currentMainBgItems.length > 0\\\" class=\\\"item animate\\\" ng-repeat=\\\"item in currentMainBgItems = (mainBgItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div ng-if=\\\"currentMainBgItems.length === 0\\\"> <div class=static-bg__main--mondrian></div> </div> </div> <div itt-magnet class=videoMagnet> <img src=\" + __webpack_require__(\"rXKF\") + \"> </div> <div class=\\\"pane mainPane\\\"> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{isNarrow: isNarrow, isEmpty: mainContentItems.length == 0}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainItems = (mainContentItems | isCurrent | filter:byPullquoteOrH2 )\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"YxFl\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/scene/centerVV-Mondrian.html';\nvar html = \" <div class=\\\"scene centerVV-mondrian\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=col> <div class=static-bg__alt ng-style=\\\"setBgImgUrl(scene.items, 'mainCol')\\\"></div> <div itt-magnet class=videoMagnet> <img src=\" + __webpack_require__(\"rXKF\") + \"> </div> <div class=\\\"pane altPane stretchToViewport\\\"> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{singleitem: mainContentItems.length==1, isNarrow: isNarrow, isEmpty: mainContentItems.length == 0}\\\" itt-width-watch> <div class=\\\"item animate centerVV-h2\\\" ng-repeat=\\\"item in mainItems = (mainContentItems | isCurrent | filter:byPullquoteOrH2)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> </div> </div> <div class=col> <div class=static-bg__main ng-style=\\\"setBgImgUrl(scene.items, 'altCol')\\\"></div> <div class=\\\"pane mainPane\\\"> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (altContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (altContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: altContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: altContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: altContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in showCurrent ? (altContentItems | isCurrent) : altContentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"ZcPu\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./auth.html\": \"JtGx\",\n\t\"./container.html\": \"w5Vi\",\n\t\"./copyright.html\": \"HyaP\",\n\t\"./error-404.html\": \"eSLu\",\n\t\"./error.html\": \"GUWn\",\n\t\"./iframe.html\": \"iEyP\",\n\t\"./item/caption.html\": \"2/3b\",\n\t\"./item/debug.html\": \"GGxq\",\n\t\"./item/file-withimage.html\": \"FFkw\",\n\t\"./item/file.html\": \"SwK8\",\n\t\"./item/image-caption-sliding.html\": \"OCYu\",\n\t\"./item/image-caption.html\": \"rdiM\",\n\t\"./item/image-fill.html\": \"O4Bc\",\n\t\"./item/image-inline-withtext.html\": \"asq8\",\n\t\"./item/image-linkonly.html\": \"qpRi\",\n\t\"./item/image-plain.html\": \"Youv\",\n\t\"./item/image-thumbnail.html\": \"7XCA\",\n\t\"./item/image.html\": \"CVkk\",\n\t\"./item/link-descriptionfirst.html\": \"IL3w\",\n\t\"./item/link-embed.html\": \"Jetm\",\n\t\"./item/link-modal-thumb.html\": \"JnVu\",\n\t\"./item/link-withimage-notitle.html\": \"un+J\",\n\t\"./item/link.html\": \"zuiT\",\n\t\"./item/modal.html\": \"+o/S\",\n\t\"./item/pullquote-noattrib.html\": \"wXer\",\n\t\"./item/pullquote.html\": \"84qX\",\n\t\"./item/question-mc-inner.html\": \"0ePo\",\n\t\"./item/question-mc.html\": \"YALA\",\n\t\"./item/review-all.html\": \"XOLC\",\n\t\"./item/review-annotation.html\": \"G4Wk\",\n\t\"./item/review-transmedia.html\": \"phYv\",\n\t\"./item/review-windowfg.html\": \"eQIm\",\n\t\"./item/searchresults-all.html\": \"55GB\",\n\t\"./item/searchresults.html\": \"JkHQ\",\n\t\"./item/sxs-annotation.html\": \"2+b9\",\n\t\"./item/sxs-file.html\": \"TEP0\",\n\t\"./item/sxs-image.html\": \"vxq4\",\n\t\"./item/sxs-link.html\": \"KP/u\",\n\t\"./item/sxs-question.html\": \"gr72\",\n\t\"./item/sxs-video.html\": \"q06B\",\n\t\"./item/text-definition.html\": \"AZay\",\n\t\"./item/text-h1.html\": \"Y+RF\",\n\t\"./item/text-h2.html\": \"kvzn\",\n\t\"./item/text-transmedia.html\": \"3gcz\",\n\t\"./item/transcript-withthumbnail.html\": \"UW+C\",\n\t\"./item/transcript.html\": \"7GUz\",\n\t\"./item/usc-badges-inner.html\": \"nd4G\",\n\t\"./item/usc-badges.html\": \"dt7p\",\n\t\"./narrative/default.html\": \"6ze8\",\n\t\"./narrativelist.html\": \"4bbU\",\n\t\"./navpanel.html\": \"Of5n\",\n\t\"./player-timeline.html\": \"x+pf\",\n\t\"./player.html\": \"p3P+\",\n\t\"./producer/addcontent.html\": \"V8p6\",\n\t\"./producer/annotator-autocomplete.html\": \"EDO7\",\n\t\"./producer/asset-uploader.html\": \"emMF\",\n\t\"./producer/container-assets.html\": \"rLXe\",\n\t\"./producer/episode.html\": \"cBzx\",\n\t\"./producer/inputi18n.html\": \"LSM6\",\n\t\"./producer/inputtime.html\": \"X9vo\",\n\t\"./producer/item.html\": \"p2SB\",\n\t\"./producer/item/sxs-annotation.html\": \"N29+\",\n\t\"./producer/item/sxs-file.html\": \"cWz7\",\n\t\"./producer/item/sxs-image.html\": \"RMtA\",\n\t\"./producer/item/sxs-link.html\": \"rGHM\",\n\t\"./producer/item/sxs-question.html\": \"NnMI\",\n\t\"./producer/item/sxs-video.html\": \"K96E\",\n\t\"./producer/questionauthoring.html\": \"AiEB\",\n\t\"./producer/upload-masterasset.html\": \"AeV0\",\n\t\"./producer/upload-poster.html\": \"gJY5\",\n\t\"./producer/upload-producer.html\": \"GeQP\",\n\t\"./producer/upload-sxs.html\": \"fJsy\",\n\t\"./root.html\": \"CQGL\",\n\t\"./scene/1col.html\": \"rfeV\",\n\t\"./scene/centerVV-Mondrian.html\": \"YxFl\",\n\t\"./scene/centerVV-mondrial.backup.html\": \"Ypjs\",\n\t\"./scene/centerVV.html\": \"cm1R\",\n\t\"./scene/centered.html\": \"mbIM\",\n\t\"./scene/centeredPro.html\": \"qZRx\",\n\t\"./scene/cornerH.html\": \"GoGc\",\n\t\"./scene/cornerV.html\": \"JTcP\",\n\t\"./scene/debug.html\": \"mNIM\",\n\t\"./scene/endingscreen.html\": \"liE5\",\n\t\"./scene/landingscreen.html\": \"D/IP\",\n\t\"./scene/mirrored-twocol.html\": \"F5VT\",\n\t\"./scene/pip.html\": \"uFtN\",\n\t\"./searchpanel.html\": \"sGzq\",\n\t\"./testbed-event.html\": \"888c\",\n\t\"./timeline-story.html\": \"9ij1\",\n\t\"./toolbar-story.html\": \"1Wv5\",\n\t\"./user.html\": \"VUBB\",\n\t\"./video.html\": \"XP8H\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"ZcPu\";\n\n/***/ }),\n\n/***/ \"asq8\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/image-inline-withtext.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text\\\"> <div class=\\\"title item__title item__title--image-inline-with-text\\\" ng-if=\\\"item.display_title | highlightSubstring: appState.searchText\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div class=touchable> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> <div class=\\\"item__text item__text--image text--inline-with-text\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> <div class=clear></div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"bKzE\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./discover-mode/discovermode.html\": \"vjhS\",\n\t\"./review-mode-scenes/reviewmode-scenes.html\": \"hs0e\",\n\t\"./review-mode/reviewmode.html\": \"mrOr\",\n\t\"./video/video.html\": \"Qi2g\",\n\t\"./watch-mode/watchmode.html\": \"AxNG\",\n\t\"./windowfg/windowfg.html\": \"lVoZ\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"bKzE\";\n\n/***/ }),\n\n/***/ \"cBzx\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/episode.html';\nvar html = \"<div class=\\\"itemEdit authoringForm\\\"> <form name=ittEpisodeForm class=doValidate> <div ng-if=\\\"appState.product == 'producer'\\\"> <div class=ittTabs itt-tabs> <div class=ittTab itt-tab title=Episode> <div class=field ng-hide=\\\"!userHasRole('admin')\\\"> <div class=label>Master asset type</div> <div class=input> <select size=1 ng-model=masterAssetType> <option value=Video>Native Video</option> <option value=WebUrl>Youtube / Kaltura / Wistia</option> </select> </div> </div> <div class=field ng-if=\\\"masterAssetType == 'Video' && userHasRole('admin')\\\"> <div class=label>Video</div> <div class=input ng-include=\\\"'templates/producer/upload-masterasset.html'\\\"></div> </div> <np-url-field label=\\\"Video URL\\\" ng-if=\\\"masterAssetType === 'WebUrl'\\\" data=::masterAsset.mediaSrcArr[0] context=episode on-attach=attachMediaSrc($url)> </np-url-field> <div class=field ng-if=showmessage> <div class=input ng-bind-html=showmessage></div> </div> <itt-title-field data=episode model-opts=\\\"{ debounce: 500 }\\\" do-validate=true itt-item-form=ittEpisodeForm></itt-title-field> <itt-description-field data=episode model-opts=\\\"{debounce: 50}\\\"></itt-description-field> <div class=field ng-if=\\\"userHasRole('admin')\\\"> <div class=label>Poster image </div> <div class=input ng-include=\\\"'templates/producer/upload-poster.html'\\\"> </div> </div> <div class=field> <div class=label>Status</div> <div class=input> <select size=1 ng-model=episode.status> <option value=Published>Published</option> <option value=Unpublished>Unpublished</option> </select> </div> </div> <itt-language-flags></itt-language-flags> <itt-language-select ng-if=\\\"languageCount > 1\\\" data=episode lang-form=langForm> </itt-language-select> <div class=field ng-if=\\\"episode.languages.length > 1\\\"> <div class=label>Current Language</div> <div class=input> <select size=1 ng-model=appState.lang ng-change=forcePreview() ng-options=\\\"language.code as ('['+language.code.toUpperCase()+']') for language in episode.languages\\\"> </select> </div> </div> <div class=field ng-if=\\\"userHasRole('admin') && episode.languages.length > 1\\\"> <div class=label>Translations</div> <div class=input ng-if=\\\"doCheckForTranslations == null\\\"> {{translationMessage(episode.languages)}} <button ng-click=beginBackgroundTranslations(episode._id)>Begin translation</button> </div> <div ng-if=\\\"doCheckForTranslations === true\\\"> {{afterTranslationAttempt}} </div> </div> <itt-upload-transcripts ng-if=\\\"episode.master_asset_id && !episode._master_asset_was_changed  && (userHasRole('admin') || userHasRole('customer admin'))\\\" episode-id={{episode._id}}> </itt-upload-transcripts> </div> <div class=ittTab itt-tab title=Style> <np-template-select data=episode on-episode-edit=updateEpisodeTemplate($data)></np-template-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> </div> </div> <div class=ittTabFoot> <a ng-click=cancelEdit()>Cancel</a> &nbsp; &nbsp; <button ng-click=saveEpisode() ng-disabled=\\\"blockDoubleClicks || ittEpisodeForm.$invalid\\\">Save</button> </div> </form> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"cWz7\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/item/sxs-file.html';\nvar html = \"<span class=\\\"eventIcon icon-file\\\"></span> <div class=field> <div class=label>Title </div> <div class=input> <input type=text ng-model=item.title.en autofocus> </div> </div> <div class=field> <div class=label>File </div> <div class=input ng-include=\\\"'templates/producer/upload-sxs.html'\\\"> </div> </div> <div class=field> <div class=label>Description </div> <div class=input sxs-input-i18n=item.description x-inputtype=\\\"'textarea'\\\"></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"cm1R\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/scene/centerVV.html';\nvar html = \" <div class=\\\"scene centerVV\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=col> <div class=static-bg__main ng-style=\\\"setBgImgUrl(scene.items, 'mainCol')\\\"></div> <div itt-magnet class=videoMagnet> <img src=\" + __webpack_require__(\"rXKF\") + \"> </div> <div class=\\\"pane mainPane\\\"> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{singleitem: mainContentItems.length==1, isNarrow: isNarrow, isEmpty: mainContentItems.length == 0}\\\" itt-width-watch> <div class=\\\"item animate centerVV-h2\\\" ng-repeat=\\\"item in mainItems = (mainContentItems | isCurrent | filter:byPullquoteOrH2)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> </div> </div> <div class=col> <div class=static-bg__alt ng-style=\\\"setBgImgUrl(scene.items, 'altCol')\\\"></div> <div class=\\\"pane altPane stretchToViewport\\\"> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (altContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (altContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: altContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: altContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: altContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in showCurrent ? (altContentItems | isCurrent) : altContentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"dt7p\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/usc-badges.html';\nvar html = \"<div class=\\\"itemTemplate uscBadges\\\"> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> </div> <span ng-include=\\\"'templates/item/usc-badges-inner.html'\\\"></span> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"eQIm\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/review-windowfg.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=text> <div class=title> <a tabindex=0 ng-click=seek(item.start_time) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <div class=text ng-if=\\\"item.data._plugin._type == 'question'\\\"> You have <span ng-if=!item.data._plugin.hasBeenAnswered> not yet </span> answered this <span ng-if=\\\"item.data._plugin.questiontype == 'mc-poll'\\\"> poll </span> question. </div> <div class=text ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> <div class=clear></div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"eSLu\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/error-404.html';\nvar html = \"<div class=errors> <div class=error> <h3>Error: no such route</h3> <p><i>404. File not found. Sorry!</i></p> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"emMF\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/asset-uploader.html';\nvar html = \"<div class=assetUploader> <div ng-if=$ctrl.uploads.length> <div class=uploadList ng-repeat=\\\"upload in $ctrl.uploads\\\"> <span class=uploadName> {{$ctrl.uploadStatus[$index].name}}: </span> <span class=uploadProgress> <span ng-if=$ctrl.uploadStatus[$index].done>Upload complete</span> <div ng-if=$ctrl.uploadStatus[$index].error>Error</div> <span ng-if=\\\"!$ctrl.uploadStatus[$index].done && !$ctrl.uploadStatus[$index].error\\\"> <progress ng-attr-max={{$ctrl.uploadStatus[$index].bytesTotal}} ng-attr-value={{$ctrl.uploadStatus[$index].bytesSent}}> </progress> <span ng-switch=$ctrl.uploadStatus[$index].percent> <span ng-switch-when=100>...</span> <span ng-switch-default>{{$ctrl.uploadStatus[$index].percent}}%</span> </span> </span> </span> <div ng-if=$ctrl.uploadStatus[$index].error>{{$ctrl.uploadStatus[$index].error}}</div> </div> <span ng-if=\\\"$ctrl.uploadsinprogress > 0\\\">{{$ctrl.uploadsinprogress}} files remaining <button ng-if=!$ctrl.paused ng-click=$ctrl.pauseUpload()>Pause</button> <button ng-if=$ctrl.paused ng-click=$ctrl.resumeUpload()>Resume</button> <button ng-click=$ctrl.cancelUpload()>Cancel</button> </span> </div> <div ng-if=$ctrl.errormessage class=error-red ng-bind-html=$ctrl.errormessage></div> <div class=uploadDropTarget> <a style=float:right ng-click=\\\"$ctrl.showInstructions = !$ctrl.showInstructions\\\">(?)</a> Drag and drop <span ng-if=$ctrl.multiple>files</span> <span ng-if=!$ctrl.multiple>a file</span> here <br> <small> or choose <span ng-if=$ctrl.multiple>files</span> <span ng-if=!$ctrl.multiple>a file</span> to upload: <input class=uploadFileInput type=file multiple=true itt-files-handler on-selected=$ctrl.handleUploads(files)> </small> <div ng-if=$ctrl.showInstructions style=text-align:left> <small>{{$ctrl.manPage}}</small> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"fJsy\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/upload-sxs.html';\nvar html = \" <div> <div ng-if=\\\"(item.asset) && !showUploadButtons\\\"> {{item.asset.display_name}} <button class=button ng-click=replaceAsset(item.asset._id)> Replace this asset </button> </div> <div ng-if=\\\"showUploadButtons || !(item.asset)\\\"> <itt-asset-uploader ng-if=\\\"item.producerItemType === 'image'\\\" callback=assetUploaded(data)></itt-asset-uploader> <itt-asset-uploader ng-if=\\\"item.producerItemType === 'file'\\\" callback=assetUploaded(data) mime-types=\\\"application/*, text/*, audio/*, model/*\\\" instructions=\\\"We currently accept all non-image or non-video files.\\\" error-text=\\\"Please make sure you are not trying to upload an image or video file.\\\"> </itt-asset-uploader> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"gJY5\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/upload-poster.html';\nvar html = \" <div ng-if=showAssetPicker class=floatAssetPicker> <div class=scrollContainer> <sxs-container-assets container-id={{episodeContainerId}}></sxs-container-assets> </div> <div class=controlsContainer> <button ng-click=endChooseAsset();>Cancel</button> </div> </div> <div> <div ng-if=\\\"episode.poster && !showUploadButtonsPoster\\\"> {{episode.poster.display_name}} <button class=button ng-click=\\\"replaceAsset('Poster')\\\">Replace this</button> </div> <div ng-if=\\\"showUploadButtonsPoster || !episode.poster\\\"> <span ng-if=showUploadFieldPoster> <itt-asset-uploader container-id={{episodeContainerId}} callback=posterUploaded(data)></itt-asset-uploader> </span> <span ng-if=!showUploadFieldPoster> <button class=button ng-click=\\\"chooseAsset('Poster')\\\">Browse uploaded</button> <button class=button ng-click=\\\"toggleUpload('Poster')\\\">Upload new</button> </span> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"gr72\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/sxs-question.html';\nvar html = \"<div class=\\\"itemTemplate sxs-item\\\"> <a class=edit-event ng-click=editItem() ng-if=item.editableByThisUser> <span>Edit item</span> </a> <div class=avatar> <img ng-src=\\\"{{item.avatar.url || appState.noAvatar }}\\\"> </div> <div class=itemHead> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <div class=text> <div class=title ng-if=\\\"item.display_title | highlightSubstring: appState.searchText\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div ng-if=item.asset.url class=touchable style=float:right;max-width:50%;padding-right:.5em> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> <itt-mc-question show-chart=\\\"item.data._plugin.questiontype == 'mc-poll'\\\" choices=item.data._plugin.distractors on-choice=save data=item.data._plugin qid=item._id> <div class=clear></div> </itt-mc-question></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"hs0e\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'view-modes/review-mode-scenes/reviewmode-scenes.html';\nvar html = \"<div class=\\\"scene animate transitionFade\\\" ng-class=\\\"{navigable: scene.display_title}\\\" ng-repeat=\\\"scene in scenes\\\" ng-if=!scene._internal> <div class=\\\"pane mainPane\\\"> <div class=\\\"content allowHighlights\\\" ng-class=\\\"{isNarrow: isNarrow}\\\" itt-width-watch> <h1 class=sceneTitle ng-if=scene.display_title ng-bind-html=scene.display_title></h1> <div ng-if=\\\"appState.windowWidth < 480\\\" class=\\\"item animate\\\" ng-repeat=\\\"item in scene.items| reviewMode | orderBy:'start_time'\\\" ng-class=\\\"item.state + ' ' + item.uscReviewModeHack\\\" itt-item=item forcetemplate=review-all></div> <div ng-if=\\\"appState.windowWidth >= 480\\\" class=\\\"item animate\\\" ng-repeat=\\\"item in scene.items | reviewMode | annotation | orderBy:'start_time'\\\" ng-class=item.state itt-item=item forcetemplate=review-annotation></div> </div> </div> <div ng-if=\\\"appState.windowWidth >= 480\\\" class=\\\"pane altPane\\\"> <div class=\\\"content allowHighlights\\\" ng-class=\\\"{isNarrow: isNarrow}\\\" itt-width-watch> <img ng-if=\\\"$index==1\\\" src=\" + __webpack_require__(\"rXKF\") + \" class=videoPadding> <div class=\\\"item animate\\\" ng-repeat=\\\"item in scene.items | reviewMode | transmedia\\\" ng-class=\\\"item.state + ' ' + item.uscReviewModeHack\\\" itt-item=item forcetemplate=review-transmedia> </div> </div> </div> </div> <np-loading ng-if=isLoading></np-loading> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"iEyP\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/iframe.html';\nvar html = \"<div class=iframeContainer> <np-loading ng-if=$ctrl.isLoading></np-loading> <iframe ng-if=!ctrl.isLoading ng-src={{$ctrl.src}} ng-attr-scrolling={{$ctrl.iOSScroll}} ng-style=$ctrl.styles ng-attr-sandbox={{$ctrl.sandbox}}> </iframe> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"kvzn\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/text-h2.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=\\\"itemTemplate headerItem\\\"> <div class=category></div> <div class=\\\"item__text item__text--h2\\\"> <h2 ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></h2> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"l1Qu\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"lVoZ\":\n/***/ (function(module, exports) {\n\nvar path = 'view-modes/windowfg/windowfg.html';\nvar html = \"<div ng-if=\\\"(episode.items | isCurrent | itemLayout:'windowFg').length > 0\\\" class=\\\"overlay windowFg fgLayer animate transitionFade\\\"> <div class=\\\"content w-modal\\\"> <div ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item class=\\\"item animate timestampNone\\\" ng-repeat=\\\"item in episode.items | isCurrent | itemLayout:'windowFg'\\\"> </div> <a ng-if=!appState.editEvent class=button-continue ng-click=continue()> <span>Continue</span> </a> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"liE5\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/scene/endingscreen.html';\nvar html = \"<div class=\\\"endingscreen stretchToViewport\\\"> <div class=\\\"pane introtext\\\"> <p>Thanks for watching:&nbsp; <span ng-bind-html=episode.display_title></span> </p> <br> </div> <div itt-magnet class=videoMagnet> <img src=\" + __webpack_require__(\"rXKF\") + \"> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"m2IE\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./app/styles/app.scss\nvar app = __webpack_require__(\"l1Qu\");\nvar app_default = /*#__PURE__*/__webpack_require__.n(app);\n\n// EXTERNAL MODULE: ./app/styles/vendor.scss\nvar vendor = __webpack_require__(\"DJti\");\nvar vendor_default = /*#__PURE__*/__webpack_require__.n(vendor);\n\n// EXTERNAL MODULE: ./app/scripts/plugin/plugins.ts\nvar plugins = __webpack_require__(\"NGC4\");\n\n// EXTERNAL MODULE: ./node_modules/core-js/client/shim.js\nvar shim = __webpack_require__(\"oTj3\");\nvar shim_default = /*#__PURE__*/__webpack_require__.n(shim);\n\n// EXTERNAL MODULE: external \"angular\"\nvar external__angular_ = __webpack_require__(\"0YuG\");\nvar external__angular__default = /*#__PURE__*/__webpack_require__.n(external__angular_);\n\n// EXTERNAL MODULE: ./node_modules/angular-ui-tree/index.js\nvar angular_ui_tree = __webpack_require__(\"wdTO\");\nvar angular_ui_tree_default = /*#__PURE__*/__webpack_require__.n(angular_ui_tree);\n\n// EXTERNAL MODULE: ./node_modules/rangy/lib/rangy-core.js\nvar rangy_core = __webpack_require__(\"5Nri\");\nvar rangy_core_default = /*#__PURE__*/__webpack_require__.n(rangy_core);\n\n// EXTERNAL MODULE: ./node_modules/rangy/lib/rangy-selectionsaverestore.js\nvar rangy_selectionsaverestore = __webpack_require__(\"VUCL\");\nvar rangy_selectionsaverestore_default = /*#__PURE__*/__webpack_require__.n(rangy_selectionsaverestore);\n\n// EXTERNAL MODULE: ./node_modules/textAngular/dist/textAngular-sanitize.min.js\nvar textAngular_sanitize_min = __webpack_require__(\"mcSx\");\nvar textAngular_sanitize_min_default = /*#__PURE__*/__webpack_require__.n(textAngular_sanitize_min);\n\n// EXTERNAL MODULE: ./node_modules/textAngular/dist/textAngular.min.js\nvar textAngular_min = __webpack_require__(\"cs5V\");\nvar textAngular_min_default = /*#__PURE__*/__webpack_require__.n(textAngular_min);\n\n// EXTERNAL MODULE: ./node_modules/angular-socialshare/index.js\nvar angular_socialshare = __webpack_require__(\"ihzJ\");\nvar angular_socialshare_default = /*#__PURE__*/__webpack_require__.n(angular_socialshare);\n\n// EXTERNAL MODULE: ./app/config.js\nvar app_config = __webpack_require__(\"w2z7\");\nvar config_default = /*#__PURE__*/__webpack_require__.n(app_config);\n\n// CONCATENATED MODULE: ./app/scripts/controllers/ContainerAssetsTestController.ts\n/**\n * Created by githop on 3/30/17.\n */\nContainerAssetsTestController.$inject = ['$scope', '$routeParams', 'authSvc'];\nfunction ContainerAssetsTestController($scope, $routeParams, authSvc) {\n    $scope.logout = authSvc.logout;\n    $scope.containerId = $routeParams.containerId;\n}\n\n// CONCATENATED MODULE: ./app/scripts/models.ts\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Created by githop on 5/1/17.\n */\nvar UIAsset = /** @class */ (function () {\n    function UIAsset() {\n    }\n    return UIAsset;\n}());\nvar IStyle = /** @class */ (function (_super) {\n    __extends(IStyle, _super);\n    function IStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return IStyle;\n}(UIAsset));\n\nvar ILayout = /** @class */ (function (_super) {\n    __extends(ILayout, _super);\n    function ILayout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ILayout;\n}(UIAsset));\n\nvar ITemplateImage = /** @class */ (function () {\n    function ITemplateImage() {\n    }\n    return ITemplateImage;\n}());\n\nvar ICssConfiguration = /** @class */ (function () {\n    function ICssConfiguration() {\n    }\n    return ICssConfiguration;\n}());\n\nvar IFont = /** @class */ (function () {\n    function IFont() {\n    }\n    return IFont;\n}());\n\nvar ITemplate = /** @class */ (function () {\n    function ITemplate() {\n    }\n    return ITemplate;\n}());\n\nvar IEpisodeTemplate = /** @class */ (function (_super) {\n    __extends(IEpisodeTemplate, _super);\n    function IEpisodeTemplate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return IEpisodeTemplate;\n}(ITemplate));\n\nvar IItemTemplate = /** @class */ (function (_super) {\n    __extends(IItemTemplate, _super);\n    function IItemTemplate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return IItemTemplate;\n}(ITemplate));\n\nvar ILayoutTemplate = /** @class */ (function (_super) {\n    __extends(ILayoutTemplate, _super);\n    function ILayoutTemplate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ILayoutTemplate;\n}(ITemplate));\n\nvar IEpisode = /** @class */ (function () {\n    function IEpisode() {\n    }\n    IEpisode.prototype.setCurrentScene = function (scene) {\n        if (this.scenes && this.scenes.length) {\n            var ci = this.scenes.indexOf(scene);\n            var pre = this.scenes.slice(0, ci);\n            var post = this.scenes.slice(ci + 1);\n            scene.setCurrent();\n            if (pre.length > 0) {\n                pre.forEach(function (s) { return s.setPast(); });\n            }\n            if (post.length > 0) {\n                post.forEach(function (s) { return s.setFuture(); });\n            }\n            this.scenes = pre.concat([scene], post);\n        }\n    };\n    return IEpisode;\n}());\n\nvar IContainer = /** @class */ (function () {\n    function IContainer() {\n    }\n    return IContainer;\n}());\n\nvar ITimeline = /** @class */ (function () {\n    function ITimeline() {\n        this.timeline_image_ids = [];\n    }\n    return ITimeline;\n}());\n\nvar ITempTimeline = /** @class */ (function (_super) {\n    __extends(ITempTimeline, _super);\n    function ITempTimeline() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ITempTimeline;\n}(ITimeline));\n\nvar ICustomer = /** @class */ (function () {\n    function ICustomer() {\n    }\n    return ICustomer;\n}());\n\nvar INarrative = /** @class */ (function () {\n    function INarrative() {\n        this.narrative_image_ids = [];\n    }\n    return INarrative;\n}());\n\nvar IAsset = /** @class */ (function () {\n    function IAsset() {\n    }\n    return IAsset;\n}());\n\nvar IEvent = /** @class */ (function () {\n    function IEvent() {\n        this.layouts = ['inline'];\n    }\n    //group ??\n    //event_category ??\n    IEvent.prototype.setFuture = function () {\n        this.state = 'isFuture';\n        this.isCurrent = false;\n    };\n    IEvent.prototype.setPast = function () {\n        this.state = 'isPast';\n        this.isCurrent = false;\n    };\n    IEvent.prototype.setCurrent = function () {\n        this.isCurrent = true;\n        this.state = 'isCurrent';\n    };\n    return IEvent;\n}());\n\nvar ILinkStatus = /** @class */ (function () {\n    function ILinkStatus() {\n    }\n    return ILinkStatus;\n}());\n\nvar ILink = /** @class */ (function (_super) {\n    __extends(ILink, _super);\n    function ILink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ILink;\n}(IEvent));\n\nvar IAnnotation = /** @class */ (function (_super) {\n    __extends(IAnnotation, _super);\n    function IAnnotation() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.chapter_marker = false;\n        return _this;\n    }\n    return IAnnotation;\n}(IEvent));\n\nvar IBookmark = /** @class */ (function (_super) {\n    __extends(IBookmark, _super);\n    function IBookmark() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return IBookmark;\n}(IEvent));\n\nvar IChapter = /** @class */ (function (_super) {\n    __extends(IChapter, _super);\n    function IChapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return IChapter;\n}(IEvent));\n\nvar IImage = /** @class */ (function (_super) {\n    __extends(IImage, _super);\n    function IImage() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return IImage;\n}(IEvent));\n\nvar IPluginData = /** @class */ (function () {\n    function IPluginData() {\n    }\n    return IPluginData;\n}());\nvar IPlugin = /** @class */ (function (_super) {\n    __extends(IPlugin, _super);\n    function IPlugin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return IPlugin;\n}(IEvent));\n\nvar IScene = /** @class */ (function (_super) {\n    __extends(IScene, _super);\n    function IScene() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return IScene;\n}(IEvent));\n\nvar IText = /** @class */ (function (_super) {\n    __extends(IText, _super);\n    function IText() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return IText;\n}(IEvent));\n\nvar IUpload = /** @class */ (function (_super) {\n    __extends(IUpload, _super);\n    function IUpload() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return IUpload;\n}(IEvent));\n\nfunction createInstance(type, data) {\n    var model;\n    switch (type) {\n        case 'Link':\n            model = new ILink();\n            break;\n        case 'Annotation':\n            model = new IAnnotation();\n            break;\n        case 'Bookmark':\n            model = new IBookmark();\n            break;\n        case 'Chapter':\n            model = new IChapter();\n            break;\n        case 'Image':\n            model = new IImage();\n            break;\n        case 'Plugin':\n            model = new IPlugin();\n            break;\n        case 'Scene':\n            model = new IScene();\n            break;\n        case 'Text':\n            model = new IText();\n            break;\n        case 'Upload':\n            model = new IUpload();\n            break;\n        case 'Narrative':\n            model = new INarrative();\n            break;\n        case 'Asset':\n            model = new IAsset();\n            break;\n        case 'Customer':\n            model = new ICustomer();\n            break;\n        case 'Timeline':\n            model = new ITimeline();\n            break;\n        case 'Episode':\n            model = new IEpisode();\n            break;\n        case 'Container':\n            model = new IContainer();\n            break;\n        case 'LayoutTemplate':\n            model = new ILayoutTemplate();\n            break;\n        case 'ItemTemplate':\n            model = new IItemTemplate();\n            break;\n        case 'EpisodeTemplate':\n            model = new IEpisodeTemplate();\n            Object.assign(model, data);\n            //handle any 'relations'\n            if (data.css_configuration) {\n                model.css_configuration = Object.assign(new ICssConfiguration(), data.css_configuration);\n            }\n            if (data.fonts) {\n                model.fonts = Object.assign(new IFont(), data.fonts);\n            }\n            return model;\n        case 'Layout':\n            model = new ILayout();\n            break;\n        case 'Style':\n            model = new IStyle();\n            break;\n    }\n    Object.assign(model, data);\n    return model;\n}\n\n// CONCATENATED MODULE: ./app/scripts/controllers/EditController.ts\n\n\nEditController.$inject = [\n    '$scope',\n    '$rootScope',\n    '$timeout',\n    '$window',\n    'selectService',\n    'appState',\n    'dataSvc',\n    'modelSvc',\n    'timelineSvc',\n    'authSvc',\n    'MIMES',\n    'playbackService',\n    'episodeTheme',\n    'episodeEdit'\n];\nfunction EditController($scope, $rootScope, $timeout, $window, selectService, appState, dataSvc, modelSvc, timelineSvc, authSvc, MIMES, playbackService, episodeTheme, episodeEdit) {\n    $scope.uneditedScene = angular.copy($scope.item); // to help with diff of original scenes\n    // HACK assetType below is optional, only needed when there is more than one asset to manage for a single object (for now, episode poster + master asset)\n    // Poor encapsulation of the upload controls. Sorry about that.\n    $scope.userHasRole = authSvc.userHasRole;\n    $scope.canAccess = authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin');\n    $scope.selectService = selectService;\n    if ($scope.item && MIMES[$scope.item.producerItemType]) {\n        $scope.mimes = MIMES[$scope.item.producerItemType];\n    }\n    else {\n        $scope.mimes = MIMES.default;\n    }\n    $scope.chooseAsset = function (assetType) {\n        assetType = assetType || '';\n        $scope.showAssetPicker = true;\n        $scope.w1 = $rootScope.$on('UserSelectedAsset', function (e, id) {\n            if (assetType === 'Poster') {\n                $scope.attachPosterAsset(id); // in ittEpisodeEditor\n            }\n            else {\n                $scope.attachChosenAsset(id); // in ittItemEditor or ittEpisodeEditor\n            }\n            $scope[\"showUploadButtons\" + assetType] = false;\n            $scope.endChooseAsset();\n        });\n        $scope.w2 = $rootScope.$on('userKeypress.ESC', $scope.endChooseAsset);\n    };\n    $scope.endChooseAsset = function () {\n        $scope.w1();\n        $scope.w2();\n        $scope.showAssetPicker = false;\n    };\n    $scope.toggleUpload = function (assetType) {\n        assetType = assetType || '';\n        $scope[\"showUploadField\" + assetType] = !$scope[\"showUploadField\" + assetType];\n    };\n    $scope.addDistractor = function () {\n        $scope.item.data._plugin.distractors.push({\n            text: \"\",\n            index: ($scope.item.data._plugin.distractors.length + 1)\n        });\n    };\n    $scope.onFormativeChecked = onFormativeChecked;\n    function onFormativeChecked(distractor) {\n        angular.forEach($scope.item.data._plugin.distractors, function (_distractor) {\n            if (_distractor !== distractor) {\n                _distractor.correct = undefined;\n            }\n        });\n    }\n    $scope.addEvent = function (producerItemType) {\n        if (producerItemType === 'scene') {\n            var t = Math.round(playbackService.getMetaProp('time') * 100) / 100;\n            if (modelSvc.isOnExistingSceneStart(t)) {\n                return $scope.editCurrentScene(t);\n            }\n        }\n        // console.log(\"itemEditController.addEvent\");\n        var newEvent = generateEmptyItem(producerItemType);\n        newEvent.cur_episode_id = appState.episodeId;\n        newEvent.episode_id = appState.episodeId;\n        if (appState.user && appState.user.avatar_id) {\n            newEvent.avatar_id = appState.user.avatar_id;\n        }\n        modelSvc.cache(\"event\", newEvent);\n        appState.editEvent = modelSvc.events[\"internal:editing\"];\n        appState.videoControlsActive = true; // TODO see playerController showControls; this may not be sufficient on touchscreens\n        appState.videoControlsLocked = true;\n        modelSvc.resolveEpisodeEvents(appState.episodeId);\n        timelineSvc.injectEvents([modelSvc.events[\"internal:editing\"]]);\n        if (producerItemType === 'scene') {\n            //to set the defaults on the first pass\n            selectService.onSelectChange(appState.editEvent);\n            timelineSvc.updateSceneTimes(appState.episodeId);\n        }\n        $rootScope.$emit('searchReindexNeeded'); // HACK\n    };\n    var isTranscript = function (item) {\n        if (item._type === 'Annotation' && item.templateUrl.match(/transcript/)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    var getTranscriptItems = function () {\n        var episode = modelSvc.episodes[appState.episodeId];\n        var allItems = angular.copy(episode.items);\n        return allItems.filter(isTranscript);\n    };\n    var getItemIndex = function (items, item) {\n        var centerIndex = 0;\n        for (var i = 0, len = items.length; i < len; i++) {\n            if (items[i]._id === item._id) {\n                centerIndex = i;\n                break;\n            }\n        }\n        return centerIndex;\n    };\n    var filterToItemBefore = function (items, centerItem) {\n        items = items.sort(sortByStartTime);\n        var centerIndex = getItemIndex(items, centerItem);\n        var itemBefore = [];\n        if (centerIndex === 0) {\n            return itemBefore;\n        }\n        else {\n            if (centerIndex < items.length - 1) {\n                if (centerIndex >= 1) {\n                    if (!isInternal(items[centerIndex - 1])) {\n                        itemBefore.push(items[centerIndex - 1]);\n                    }\n                }\n            }\n        }\n        return itemBefore;\n    };\n    var filterToBookends = function (items, centerItem) {\n        items = items.sort(sortByStartTime);\n        var centerIndex = getItemIndex(items, centerItem);\n        var itemsBeforeAndAfter = [];\n        if (centerIndex === 0) {\n            if (centerIndex < items.length - 1) {\n                if (!isInternal(items[centerIndex + 1])) {\n                    itemsBeforeAndAfter.push(items[centerIndex + 1]);\n                }\n            }\n        }\n        else {\n            if (centerIndex < items.length - 1) {\n                if (!isInternal(items[centerIndex + 1])) {\n                    itemsBeforeAndAfter.push(items[centerIndex + 1]);\n                }\n                if (centerIndex >= 1) {\n                    if (!isInternal(items[centerIndex - 1])) {\n                        itemsBeforeAndAfter.push(items[centerIndex - 1]);\n                    }\n                }\n            }\n        }\n        return itemsBeforeAndAfter;\n    };\n    // Editing some events has side effects on other events; this stores those side effects.\n    // assuming that this is called after a resolve and that we are dealing with events that have been adjusted already\n    var saveAdjustedEvents = function (item, operation, original) {\n        if (isTranscript(item)) {\n            var itemsToSave = [];\n            var transcriptItems = getTranscriptItems();\n            switch (operation) {\n                case \"create\":\n                    itemsToSave = filterToBookends(transcriptItems, item);\n                    console.log('adjust for create');\n                    break;\n                case \"delete\":\n                    itemsToSave = filterToItemBefore(transcriptItems, item);\n                    console.log('adjust for delete');\n                    break;\n                case \"update\":\n                    // TODO this should be updating the adjusted events, not delete-and-create.\n                    if (original) {\n                        saveAdjustedEvents(original, \"delete\");\n                    }\n                    saveAdjustedEvents(item, \"create\");\n                    console.log('adjust for update');\n                    break;\n            }\n            angular.forEach(itemsToSave, function (item) {\n                dataSvc.storeItem(item)\n                    .then(function () {\n                    console.log('updated transcript item', item);\n                }, function (data) {\n                    console.error(\"FAILED TO STORE EVENT\", data);\n                });\n            });\n        }\n    };\n    $scope.saveEvent = function () {\n        var toSave = angular.copy(appState.editEvent);\n        $scope.blockDoubleClicks = true;\n        //assign current episode_id\n        toSave.cur_episode_id = appState.episodeId;\n        if (toSave._type === 'Scene') {\n            var adjusted = adjustScenes(toSave);\n            angular.forEach(adjusted, function (scene) {\n                dataSvc.storeItem(scene)\n                    .then(function () {\n                    // console.log(\"scene end_time updated\");\n                }, function (data) {\n                    console.error(\"FAILED TO STORE EVENT\", data);\n                });\n            });\n        }\n        dataSvc.storeItem(toSave)\n            .then(function (data) {\n            data.cur_episode_id = appState.episodeId;\n            var saveOperation = 'update';\n            if (appState.editEvent._id === 'internal:editing') {\n                // update the new item with its real ID (and remove the temp version)\n                timelineSvc.removeEvent(\"internal:editing\");\n                delete (modelSvc.events[\"internal:editing\"]);\n                modelSvc.cache(\"event\", dataSvc.resolveIDs(data));\n                modelSvc.resolveEpisodeEvents(appState.episodeId);\n                saveOperation = 'create';\n                var assetId = data.asset_id || data.link_image_id || data.annotation_image_id;\n                if (assetId && toSave.asset && toSave.asset._id === assetId) {\n                    modelSvc.assocEventWithAsset(data._id, assetId);\n                }\n            }\n            if (data._type === 'Scene') {\n                timelineSvc.timelineEvents = [];\n                timelineSvc.injectEvents(modelSvc.episodeEvents(appState.episodeId), 0);\n                // sometimes the scene prior to the new onne being created is set to be the current scene\n                modelSvc.episodes[appState.episodeId].setCurrentScene(modelSvc.events[data._id]);\n            }\n            else {\n                modelSvc.resolveEpisodeEvents(appState.episodeId);\n                timelineSvc.updateEventTimes(modelSvc.events[data._id]);\n            }\n            // currently only runs on transcript items\n            saveAdjustedEvents(data, saveOperation);\n            // Delete attached asset(s)  (this should only occur for sxs items, for now)\n            // yes we could combine these into one call I suppose but there will almost always only be one\n            // unless the user was very indecisive and uploaded/detached a bunch of assets to the same event.\n            // It was probably already a premature optimization to use an array here in the first place\n            // see ittItemEditor to see where toSave.removedAssets is setup as below is the only\n            // reference in this file.\n            angular.forEach(toSave.removedAssets, function (id) {\n                dataSvc.deleteAsset(id);\n            });\n            appState.editEvent = false;\n            $rootScope.$emit('searchReindexNeeded'); // HACK\n        }, function (data) {\n            console.error(\"FAILED TO STORE EVENT\", data);\n        });\n    };\n    var getScenes = modelSvc.getEpisodeScenes;\n    var isInternal = function (item) {\n        return (item._id && item._id.match(/internal/));\n    };\n    $scope.getItemsAfter = function (items, after) {\n        var itemsAfter = [];\n        for (var i = 0, len = items.length; i < len; i++) {\n            if (!isInternal(items[i])) {\n                if (after < items[i].start_time || after < items[i].end_time) {\n                    itemsAfter.push(items[i]);\n                }\n            }\n        }\n        return itemsAfter;\n    };\n    var resetScenes = function (updatedScenes, originalScene) {\n        for (var i = 0; i < updatedScenes.length; i++) {\n            if (typeof (updatedScenes[i]._id) === 'undefined' || updatedScenes[i]._id === 'internal:editing') {\n                updatedScenes.splice(i, 1);\n                break;\n            }\n            if (originalScene) {\n                if (updatedScenes[i]._id === originalScene._id) {\n                    updatedScenes[i] = originalScene;\n                    break;\n                }\n            }\n        }\n        return updatedScenes;\n    };\n    var fixEndTimes = function (scenes, duration) {\n        for (var i = 1, len = scenes.length; i < len; i++) {\n            if (i === len - 1) {\n                scenes[i].end_time = duration;\n            }\n            else {\n                if (scenes[i].end_time !== scenes[i + 1].start_time) {\n                    scenes[i].end_time = scenes[i + 1].start_time;\n                }\n            }\n        }\n    };\n    var pushScene = function (scenes, scene) {\n        var exists = false;\n        for (var i = 0, len = scenes.length; i < len; i++) {\n            if (scenes[i]._id === scene._id) {\n                exists = true;\n                //do nothing, as already exists\n                break;\n            }\n        }\n        if (!exists) {\n            scenes.push(scene);\n        }\n    };\n    var removeScene = function (scenes, id) {\n        for (var i = 0, len = scenes.length; i < len; i++) {\n            if (scenes[i]._id === id) {\n                scenes.splice(i, 1);\n                break;\n            }\n        }\n    };\n    var sortByStartTime = function (a, b) {\n        return a.start_time - b.start_time;\n    };\n    var adjustScenes = function (modifiedScene, isDelete) {\n        var duration = playbackService.getMetaProp('duration');\n        var scenes = angular.copy(getScenes());\n        var adjusted = [];\n        // get scenes back into original state (before editing,adding,deleting)\n        if (isDelete) {\n            pushScene(scenes, $scope.uneditedScene);\n        }\n        else {\n            resetScenes(scenes, $scope.uneditedScene);\n        }\n        scenes = scenes.sort(sortByStartTime);\n        fixEndTimes(scenes, duration);\n        // now scenes is back to pre edit state.  let's drop in our new scene and then see what is impacted (and needs updating)\n        removeScene(scenes, modifiedScene._id);\n        if (!isDelete) {\n            scenes.push(modifiedScene);\n        }\n        scenes = scenes.sort(sortByStartTime);\n        for (var i = 1, len = scenes.length; i < len; i++) {\n            if (i === len - 1) {\n                if (scenes[i].end_time !== duration) {\n                    scenes[i].end_time = duration;\n                    adjusted.push(scenes[i]);\n                }\n            }\n            else {\n                if (scenes[i].end_time !== scenes[i + 1].start_time) {\n                    scenes[i].end_time = scenes[i + 1].start_time;\n                    adjusted.push(scenes[i]);\n                }\n            }\n        }\n        return adjusted;\n    };\n    $scope.editCurrentScene = function (t) {\n        var scene = modelSvc.sceneAtEpisodeTime(appState.episodeId, t);\n        appState.editEvent = modelSvc.events[scene._id];\n        appState.editEvent.templateOpts = selectService.getTemplates('scene');\n        appState.editEvent.cur_episode_id = appState.episodeId;\n        appState.editEvent.episode_id = appState.episodeId;\n        appState.editEvent.producerItemType = 'scene';\n        appState.videoControlsActive = true; // TODO see playerController showControls; this may not be sufficient on touchscreens\n        appState.videoControlsLocked = true;\n        selectService.onSelectChange(appState.editEvent);\n    };\n    $scope.editEpisode = function () {\n        episodeEdit.setEpisodeToEdit();\n    };\n    $scope.deleteEvent = function (eventId) {\n        if (window.confirm(\"Are you sure you wish to delete this item?\")) {\n            //fabricate scene event\n            var event = {};\n            event._id = eventId;\n            var eventType = modelSvc.events[eventId]._type;\n            if (eventType === 'Scene') {\n                var adjusted = adjustScenes(event, true);\n                angular.forEach(adjusted, function (scene) {\n                    dataSvc.storeItem(scene)\n                        .then(function () {\n                        // console.log(\"scene end_time updated\");\n                    }, function (data) {\n                        console.error(\"FAILED TO STORE EVENT\", data);\n                    });\n                });\n            }\n            dataSvc.deleteItem(eventId)\n                .then(function () {\n                if (appState.product === 'sxs' && modelSvc.events[eventId].asset) {\n                    dataSvc.deleteAsset(modelSvc.events[eventId].asset._id);\n                }\n                timelineSvc.removeEvent(eventId);\n                delete modelSvc.events[eventId];\n                modelSvc.resolveEpisodeEvents(appState.episodeId);\n                if (eventType === 'Scene' || eventType === 'Chapter') {\n                    timelineSvc.updateSceneTimes(appState.episodeId);\n                }\n                saveAdjustedEvents(event, \"delete\");\n                appState.editEvent = false;\n                appState.videoControlsLocked = false;\n            }, function (data) {\n                console.warn(\"failed to delete:\", data);\n            });\n        }\n    };\n    $scope.cancelEventEdit = function (originalEvent) {\n        var episodeId = originalEvent.cur_episode_id ? originalEvent.cur_episode_id : originalEvent.episode_id;\n        if (appState.editEvent._id === 'internal:editing') {\n            delete (modelSvc.events['internal:editing']);\n            timelineSvc.removeEvent(\"internal:editing\");\n        }\n        else {\n            modelSvc.events[appState.editEvent._id] = originalEvent;\n        }\n        modelSvc.resolveEpisodeEvents(episodeId);\n        if (originalEvent._type === 'Scene') {\n            timelineSvc.updateSceneTimes(episodeId);\n        }\n        else {\n            timelineSvc.updateEventTimes(originalEvent);\n        }\n        appState.editEvent = false;\n        appState.videoControlsLocked = false;\n    };\n    $scope.cancelEpisodeEdit = function (originalEvent) {\n        modelSvc.episodes[appState.episodeId] = originalEvent;\n        modelSvc.deriveEpisode(modelSvc.episodes[originalEvent._id]);\n        modelSvc.resolveEpisodeContainers(originalEvent._id); // only needed for navigation_depth changes\n        modelSvc.resolveEpisodeEvents(originalEvent._id); // needed for template or style changes\n        // console.log(\"Episode StyleCss is now \", modelSvc.episodes[originalEvent._id].styleCss);\n        episodeTheme.setTheme(originalEvent.template);\n        appState.editEpisode = false;\n        appState.videoControlsLocked = false;\n    };\n    var generateEmptyItem = function (type) {\n        var base = {\n            \"_id\": \"internal:editing\",\n            \"start_time\": playbackService.getMetaProp('time'),\n            \"episode_id\": appState.episodeId,\n            // \"type\": type,  <-- NOPE that's a bug.  Confusing, so I'm leaving in this comment:  API types are Plugin, Scene, Upload, Link; these producer item types are different\n            \"isCurrent\": true,\n            \"producerItemType\": type,\n            \"layouts\": [\"inline\"],\n            \"styles\": []\n        };\n        /*\n         Item types:\n    \n         producer only\n         scene\n         transcript\n         annotation\n    \n         sxs only\n         comment\n    \n         sxs and producer\n         image\n         file\n         link\n         question\n         video (injected episode) TODO\n         */\n        var stub = Object.create(null);\n        if (type === 'scene') {\n            stub = {\n                \"_type\": \"Scene\",\n                \"title\": {},\n                \"description\": {}\n            };\n        }\n        if (type === 'chapter') {\n            stub = {\n                '_type': 'Chapter',\n                'title': {},\n                'description': {}\n            };\n        }\n        if (type === 'video') {\n            // TODO: this should be an injected episode with the linked/uploaded video as its master asset.\n            // For now we're faking it as a link item.\n            stub = {\n                \"_type\": \"Link\",\n                \"link_image_id\": \"\",\n                \"url\": \"\",\n                \"title\": {},\n                \"description\": {}\n            };\n        }\n        if (type === 'comment' || type === 'transcript' || type === 'annotation') {\n            stub = {\n                \"_type\": \"Annotation\",\n                \"annotation\": {},\n                \"annotator\": {},\n                \"annotation_image_id\": \"\"\n            };\n        }\n        if (type === 'file' || type === 'image') {\n            stub = {\n                \"_type\": \"Upload\",\n                \"asset_id\": \"\",\n                \"title\": {},\n                \"description\": {}\n            };\n        }\n        if (type === 'link') {\n            stub = {\n                \"_type\": \"Link\",\n                \"link_image_id\": \"\",\n                \"url\": \"https://\",\n                \"title\": {},\n                \"target\": \"_self\",\n                \"description\": {},\n                \"url_status\": {}\n            };\n        }\n        if (type === 'question') {\n            // TODO i18n\n            stub = {\n                \"_type\": \"Plugin\",\n                \"title\": {},\n                \"data\": {\n                    \"_pluginType\": \"question\",\n                    \"_version\": 2,\n                    \"_plugin\": {\n                        \"questiontext\": \"\",\n                        \"questiontype\": \"mc-formative\",\n                        \"distractors\": [{\n                                \"index\": 1,\n                                \"text\": \"\"\n                            }, {\n                                \"index\": 2,\n                                \"text\": \"\"\n                            }, {\n                                \"index\": 3,\n                                \"text\": \"\"\n                            }, {\n                                \"index\": 4,\n                                \"text\": \"\"\n                            }],\n                        \"correctfeedback\": \"\",\n                        \"incorrectfeedback\": \"\"\n                    }\n                }\n            };\n            stub.plugin = stub.data._plugin;\n        }\n        if (appState.product === 'sxs') {\n            // SxS overrides a lot of the item options:\n            stub.sxs = true; // temporary?\n            stub.annotator = {\n                en: appState.user.name\n            };\n            stub.layouts = [\"windowFg\"];\n            stub.end_time = appState.time;\n            stub.stop = true;\n            stub.templateUrl = 'templates/item/sxs-' + type + '.html';\n        }\n        else {\n            var defaultTemplateUrls = {\n                \"scene\": \"templates/scene/centered.html\",\n                \"transcript\": \"templates/item/transcript.html\",\n                \"annotation\": \"templates/item/text-h2.html\",\n                \"link\": \"templates/item/link.html\",\n                \"image\": \"templates/item/image-plain.html\",\n                \"file\": \"templates/item/file.html\",\n                \"question\": \"templates/item/question-mc.html\",\n                \"video\": \"TODO:VIDEO\"\n            };\n            stub.templateOpts = selectService.getTemplates(type);\n            stub.templateUrl = defaultTemplateUrls[type];\n        }\n        angular.extend(base, stub);\n        return createInstance(stub._type, base);\n    };\n    $scope.updateEpisodeTemplate = updateEpisodeTemplate;\n    function updateEpisodeTemplate($data) {\n        episodeEdit.updateEpisodeTemplate($data.episode, $data.templateId)\n            .then(function (episode) { return $scope.episode = episode; });\n    }\n}\n\n// CONCATENATED MODULE: ./app/scripts/controllers/ErrorController.ts\nErrorController.$inject = ['$scope', 'errorSvc', 'appState', 'authSvc'];\nfunction ErrorController($scope, errorSvc, appState, authSvc) {\n    // console.log(\"errorController\", $scope);\n    $scope.errorSvc = errorSvc;\n    $scope.logout = authSvc.logout;\n    $scope.user = appState.user;\n    // probably should split this into separate functions for errors and notifications, but good enough for now\n    $scope.dismiss = function (cur) {\n        // this use of splice to remove items from the middle of the array in place works here\n        // only because we're only removing a single item.  For multiple removes in one pass, will need to  scan backwards through the array\n        for (var i = 0; i < errorSvc.errors.length; i++) {\n            if (errorSvc.errors[i] === cur) {\n                errorSvc.errors.splice(i, 1);\n                i = errorSvc.errors.length; // break loop since we already removed our item\n            }\n        }\n        for (i = 0; i < errorSvc.notifications.length; i++) {\n            if (errorSvc.notifications[i] === cur) {\n                errorSvc.notifications.splice(i, 1);\n                i = errorSvc.notifications.length;\n            }\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/controllers/EventTestController.ts\nEventTestController.$inject = ['$scope', '$routeParams', 'mockSvc', 'modelSvc', 'appState'];\nfunction EventTestController($scope, $routeParams, mockSvc, modelSvc, appState) {\n    // console.log('EventTestContrller');\n    mockSvc.mockEpisode(\"ep1\");\n    appState.episodeId = \"ep1\";\n    appState.product = 'producer';\n    appState.lang = \"en\";\n    // $scope.itemId = $routeParams[\"eventId\"];\n    $scope.item = modelSvc.events[$routeParams.eventId];\n    console.log(modelSvc);\n}\n\n// CONCATENATED MODULE: ./app/scripts/controllers/ItemController.ts\nItemController.$inject = ['$scope', 'timelineSvc'];\nfunction ItemController($scope, timelineSvc) {\n    $scope.seek = function (t) {\n        timelineSvc.seek(t, \"clickedOnItem\", $scope.item._id);\n    };\n    var KeyCodes = {\n        ENTER: 13,\n        SPACE: 32\n    };\n    $scope.seekOnKeyPress = function (t, $event) {\n        var e = $event;\n        var passThrough = true;\n        switch (e.keyCode) {\n            case KeyCodes.ENTER:\n                $scope.seek(t);\n                passThrough = false;\n                break;\n            case KeyCodes.SPACE:\n                $scope.seek(t);\n                passThrough = false;\n                break;\n            default:\n                passThrough = true;\n                break;\n        }\n        if (!passThrough) {\n            $event.stopPropagation();\n            $event.preventDefault();\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/constants.ts\n/**\n * Created by githop on 6/14/17.\n */\n//const / type pattern\nvar SOCIAL_IMAGE_SQUARE = 'social_image_square';\nvar SOCIAL_IMAGE_WIDE = 'social_image_wide';\nvar CHANGE_MAGNET = 'magnet.changeMagnet';\nvar JUMP_TO_MAGNET = 'magnet.jumpToMagnet';\nvar UPDATE_MAGNET = 'magnet.updateMagnet';\n\n// CONCATENATED MODULE: ./app/scripts/controllers/PlayerController.ts\n//TODO Some of this could be split into separate controllers (though that may not confer any advantage other than keeping this file small...)\n\nPlayerController.$inject = ['$scope', '$location', '$rootScope', '$routeParams', '$timeout', '$interval', 'config', 'appState', 'dataSvc', 'modelSvc', 'timelineSvc', 'analyticsSvc', 'authSvc', 'selectService', 'playbackService', 'episodeTheme'];\nfunction PlayerController($scope, $location, $rootScope, $routeParams, $timeout, $interval, config, appState, dataSvc, modelSvc, timelineSvc, analyticsSvc, authSvc, selectService, playbackService, episodeTheme) {\n    // console.log(\"playerController\", $scope);\n    $scope.episodeTheme = episodeTheme;\n    $scope.viewMode = function (newMode) {\n        appState.viewMode = newMode;\n        analyticsSvc.captureEpisodeActivity(\"modeChange\", {\n            \"mode\": newMode\n        });\n        appState.producerEditLayer = 0;\n        if (newMode === 'review') {\n            // magnet animation looks too choppy when loading review mode; skip it:\n            $timeout(function () {\n                $rootScope.$emit(UPDATE_MAGNET);\n            });\n            appState.autoscroll = true;\n            appState.autoscrollBlocked = false;\n            startScrollWatcher();\n            $timeout(handleAutoscroll); // timeout is for edge case where user loads review mode first, before handleAutoscroll is defined below...\n        }\n        else {\n            appState.autoscroll = false;\n            // appState.autoscrollBlocked = true;\n        }\n        if (newMode === 'watch') {\n            $scope.endSearch();\n        }\n        $timeout(function () {\n            $(window)\n                .trigger('resize'); // possible fix for unreproducible-by-me layout issue in review mode\n        });\n    };\n    if ($routeParams.viewMode) {\n        $timeout(function () {\n            $scope.viewMode($routeParams.viewMode);\n        });\n    }\n    // $scope.changeProducerEditLayer = function (newLayer) {\n    // \tappState.producerEditLayer = appState.producerEditLayer + newLayer;\n    // \t// I'm sure there's a fancier way to do this but\n    // \tif (appState.producerEditLayer === 2) {\n    // \t\tappState.producerEditLayer = 1;\n    // \t}\n    // \tif (appState.producerEditLayer === -2) {\n    // \t\tappState.producerEditLayer = -1;\n    // \t}\n    // };\n    $scope.toggleProducerPreview = function () {\n        appState.product = (appState.product === 'producer') ? 'player' : 'producer';\n    };\n    /* LOAD EPISODE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */\n    if ($routeParams.epId) {\n        appState.init();\n        appState.episodeId = $routeParams.epId;\n    }\n    else {\n        $scope.narrativeId = $routeParams.narrativeId;\n    }\n    if (appState.isFramed) {\n        /*\n         workaround for when instructure canvas fails to size our iframe correctly\n         This will be harmless in other platforms:\n         */\n        if (Math.max(document.documentElement.clientHeight, window.innerHeight || 0) < 151) {\n            window.parent.postMessage(JSON.stringify({\n                subject: 'lti.frameResize',\n                height: \"650px\"\n            }), '*');\n        }\n    }\n    var wileyNag = function () {\n        // HACK design-by-committee TS-829 for framed Wiley episodes.\n        // (If localStorage is blocked, default to not showing the overlay to avoid annoying them with repeats.)\n        if (!appState.isFramed || (modelSvc.episodes[appState.episodeId].template.displayName.indexOf('Wiley') === -1)) {\n            return;\n        }\n        var localStorageAllowed = true;\n        try {\n            localStorage.setItem(\"iCanHazStorage\", 1);\n        }\n        catch (e) {\n            localStorageAllowed = false;\n        }\n        if (localStorageAllowed) {\n            localStorage.removeItem(\"iCanHazStorage\");\n        }\n        if (localStorageAllowed && !(localStorage.getItem(\"noWileyNag\"))) {\n            appState.show.wileyNag = true;\n            var nagWatch = $scope.$watch(function () {\n                return playbackService.getMetaProp('time');\n            }, function (n) {\n                if (n) {\n                    appState.show.wileyNag = false;\n                    nagWatch();\n                }\n            });\n        }\n        $scope.noWileyNag = function () {\n            appState.show.wileyNag = false;\n            localStorage.setItem(\"noWileyNag\", \"1\");\n        };\n        // END WILEY HACK\n    };\n    var getEpisodeWatcher = $rootScope.$on(\"dataSvc.getEpisode.done\", function () {\n        // getEpisodeWatcher();\n        // Wait until we have both the master asset and the episode's items; update the timeline and current language when found\n        appState.lang = ($routeParams.lang) ? $routeParams.lang.toLowerCase() : modelSvc.episodes[appState.episodeId].defaultLanguage;\n        //need to set narrative on scope for disable_new_window feature for narratives\n        //this used to happen in ittNarrativeTimelineJs, but has been deprecated\n        modelSvc.setLanguageStrings();\n        wileyNag(); // HACK\n        document.title = modelSvc.episodes[appState.episodeId].display_title; // TODO: update this on language change\n        // console.log(\"getEpisode.done fired\", modelSvc.episodes[appState.episodeId]);\n        // producer needs the episode container:\n        var containerId = modelSvc.episodes[appState.episodeId].container_id;\n        dataSvc.getContainer(containerId, appState.episodeId).then(function () {\n            if (modelSvc.episodes[appState.episodeId].master_asset_id) {\n                // watch for the master asset to exist, so we know duration; then call addEndingScreen and timelineSvc.init.\n                // HACK this is a weird place for this.\n                var watch = $scope.$watch(function () {\n                    return modelSvc.assets[modelSvc.episodes[appState.episodeId].master_asset_id];\n                }, function (masterAsset) {\n                    if (masterAsset && Object.keys(masterAsset).length > 1) {\n                        watch();\n                        modelSvc.addEndingScreen(appState.episodeId); // needs master asset to exist so we can get duration\n                        timelineSvc.init(appState.episodeId);\n                        $scope.loading = false;\n                        $rootScope.$emit(UPDATE_MAGNET);\n                    }\n                });\n            }\n            else {\n                // Episode has no master asset\n                console.log('episode has no master asset!');\n                $scope.loading = false;\n                // TODO add help screen for new users. For now, just pop the 'edit episode' pane:\n                if (appState.product === 'producer') {\n                    appState.editEpisode = modelSvc.episodes[appState.episodeId];\n                    var custId = modelSvc.containers[containerId].customer_id;\n                    appState.editEpisode.templateOpts = selectService.getTemplates('episode', [custId]);\n                }\n                appState.videoControlsActive = true; // TODO see playerController showControls; this may not be sufficient on touchscreens\n                appState.videoControlsLocked = true;\n            }\n            if (appState.productLoadedAs === 'producer' && !(authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin'))) {\n                // TODO redirect instead?\n                appState.product = 'player';\n                appState.productLoadedAs = 'player';\n            }\n        });\n    });\n    if (modelSvc.episodes[appState.episodeId]) {\n        // recycle existing episode data.   TODO: DRY the repeated code below from inside getEpisodeWatcher\n        appState.lang = ($routeParams.lang) ? $routeParams.lang.toLowerCase() : modelSvc.episodes[appState.episodeId].defaultLanguage;\n        document.title = modelSvc.episodes[appState.episodeId].display_title; // TODO: update this on language change\n        if (modelSvc.episodes[appState.episodeId].master_asset_id) {\n            timelineSvc.init(appState.episodeId);\n        }\n        else {\n            // TODO add help screen for new users. For now, just pop the 'edit episode' pane:\n            if (appState.product === 'producer') {\n                appState.editEpisode = modelSvc.episodes[appState.episodeId];\n            }\n            appState.videoControlsActive = true; // TODO see playerController showControls; this may not be sufficient on touchscreens\n            appState.videoControlsLocked = true;\n        }\n        if (appState.productLoadedAs === 'producer' && !(authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin'))) {\n            // TODO redirect instead?\n            appState.product = 'player';\n            appState.productLoadedAs = 'player';\n        }\n    }\n    else {\n        $scope.loading = true;\n        modelSvc.addLandingScreen(appState.episodeId);\n        dataSvc.getEpisode(appState.episodeId, appState.episodeSegmentId);\n    }\n    $scope.appState = appState;\n    $scope.playbackService = playbackService;\n    $scope.show = appState.show; // yes, slightly redundant, but makes templates a bit easier to read\n    $scope.now = new Date();\n    // $scope.newWindowUrl = config.apiDataBaseUrl + \"/v1/new_window\";\n    // if (appState.narrativeId) {\n    //   $scope.newWindowUrl = $scope.newWindowUrl + \"?narrative=\" + appState.narrativeId + \"&timeline=\" + appState.timelineId;\n    // } else {\n    //   $scope.newWindowUrl = $scope.newWindowUrl + \"?episode=\" + appState.episodeId;\n    // }\n    $scope.showIframeIOSOverlay = appState.isIframedIOS();\n    $scope.iframeIOSOverlayHandler = iframeIOSOverlayHandler;\n    $scope.calcNewWindowUrl = calcNewWindowUrl;\n    function calcNewWindowUrl() {\n        var entityId = appState.narrativeId || appState.episodeId;\n        var timelineId = appState.timelineId;\n        return modelSvc.mainVideoNewWindowUrl(appState.user.access_token, entityId, timelineId, playbackService.getMetaProp('time'));\n    }\n    function iframeIOSOverlayHandler() {\n        window.open(calcNewWindowUrl());\n    }\n    // put this in template instead\n    // if (appState.user.access_token) {\n    // \t$scope.newWindowUrl = $scope.newWindowUrl + \"&access_token=\" + appState.user.access_token;\n    // } else {\n    // \t// HACK wait for user info to finish loading\n    // \t$timeout(function () {\n    // \t\t$scope.newWindowUrl = $scope.newWindowUrl + \"&access_token=\" + appState.user.access_token;\n    // \t}, 500);\n    // }\n    /* END LOAD EPISODE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */\n    /* BEGIN TOOLBAR HIDE/REVEAL- - - - - - - - - - - - - - - - - - - - - - - - - - - - - */\n    // TODO put this in own controller\n    // Bottom toolbar starts out hidden.  5s after using a control or leaving the pane, fade out controls.\n    //   If mouse re-enters pane, keep the controls visible.\n    appState.videoControlsActive = false;\n    var controlTimer;\n    var keepControls;\n    var videoControlsWatcher = $scope.$watch(function () {\n        return appState.videoControlsActive;\n    }, function (isActive) {\n        if (isActive) {\n            $timeout.cancel(controlTimer);\n            controlTimer = $timeout(function () {\n                if (!keepControls) {\n                    appState.videoControlsActive = false;\n                }\n            }, 5000);\n        }\n    });\n    $scope.showControls = function () {\n        // console.log(\"showControls\");\n        $timeout.cancel(controlTimer);\n        appState.videoControlsActive = true;\n        if (appState.isTouchDevice) {\n            $scope.allowControlsExit(); // otherwise it sticks permanently on touchscreens. TODO find a better way\n        }\n    };\n    // $scope.keepControls = function () {\n    // \tconsole.log(\"keepControls\");\n    // \tappState.videoControlsLocked = true;\n    // };\n    $scope.allowControlsExit = function () {\n        // console.log(\"allowControlsExit. Locked state is \", appState.videoControlsLocked);\n        // appState.videoControlsLocked = false;\n        $timeout.cancel(controlTimer);\n        controlTimer = $timeout(function () {\n            if (!appState.videoControlsLocked) {\n                appState.videoControlsActive = false;\n            }\n        }, 5000);\n    };\n    /* END TOOLBAR HIDE/REVEAL- - - - - - - - - - - - - - - - - - - - - - - - - - - - - */\n    // Misc toolbars too small to rate their own controllers\n    $scope.toggleSearchPanel = function () {\n        appState.show.searchPanel = !appState.show.searchPanel;\n        console.log('toggle search pane!', appState.show.searchPanel);\n        if (appState.windowWidth < 480) {\n            $scope.viewMode('review');\n        }\n        else {\n            $scope.viewMode(appState.show.searchPanel ? 'review' : 'discover');\n        }\n        appState.searchText = '';\n        if (appState.show.searchPanel) {\n            $timeout(function () {\n                document.getElementById('searchtext').focus();\n            });\n        }\n    };\n    $scope.endSearch = function () {\n        appState.searchText = '';\n        appState.show.searchPanel = false;\n    };\n    $scope.toggleNavPanel = function () {\n        // console.log(\"toggleNavPanel\");\n        timelineSvc.pause();\n        appState.show.navPanel = !appState.show.navPanel;\n    };\n    $scope.seek = function (t) {\n        // triggered by nav panel\n        timelineSvc.seek(t, \"sceneMenu\");\n        appState.show.navPanel = false;\n    };\n    $scope.pause = function () {\n        timelineSvc.pause();\n    };\n    // Intercepts the first play of the video and decides whether to show the help panel beforehand.\n    // Disabling this,since we're not showing a help panel anymore, but keeping it in case we change our minds on that\n    var firstplayWatcher = $rootScope.$on(\"video.firstPlay\", function () {\n        // if (localStorageAllowed && appState.time === 0 && !(localStorage.getItem(\"noMoreHelp\"))) {\n        // \t// appState.show.helpPanel = true;\n        // } else {\n        timelineSvc.play();\n        // }\n    });\n    $scope.hidePanel = function (panel) {\n        // console.log(\"hidePanel\", panel);\n        appState.show[panel] = false;\n        // console.log(appState);\n    };\n    $scope.hidePanels = function () {\n        // dismiss ALL THE THINGS\n        appState.show.navPanel = false;\n        appState.show.profilePanel = false;\n        appState.itemDetail = false;\n        $rootScope.$emit(\"player.dismissAllPanels\");\n    };\n    $scope.play = function () {\n        console.log('PlayerController#play');\n        timelineSvc.play();\n    };\n    $scope.continue = function () {\n        // console.log(\"continue\", modelSvc.episodes[appState.episodeId].masterAsset.duration, appState.time);\n        // If we're close to the end, jsut move to the ending screen and stop.\n        if (modelSvc.episodes[appState.episodeId].masterAsset.duration - playbackService.getMetaProp('time') < 0.2) {\n            timelineSvc.pause();\n            timelineSvc.seek(modelSvc.episodes[appState.episodeId].masterAsset.duration - 0.01);\n        }\n        else {\n            timelineSvc.play();\n        }\n    };\n    $scope.userHasRole = authSvc.userHasRole;\n    $scope.logout = authSvc.logout;\n    $scope.isTrueGuest = authSvc.isTrueGuest;\n    // - - - - - - - - -  - - - - - - - - - - - - - - -\n    // Autoscroll\n    // Some jQuery dependencies here (namespaced bindings, animated scroll)\n    // appstate.autoscroll = we are in a mode which wants autoscroll\n    // appstate.autoscrollBlocked = user has disabled autoscroll (by scrolling manually)\n    // (Those are in modelSvc instead of $scope becuase in future we'll want scenes to be able to autoscroll too)\n    // isn't it weird how we read the scrollTop from (window), but have to animate it on (body,html)?\n    // NOTE: When we had the #CONTAINER position:fixed hack for fullscreen safari, this needed to be configurable to point to\n    // #CONTAINER instead of window.  Have removed that, but leaving this here in case we bring it back:\n    //console.log(\"AppState scroll stuff\", \"scroll:\", appState.autoscroll, \"blocked:\", appState.autoscrollBlocked, appState.isTouchDevice);\n    if (appState.isTouchDevice && appState.viewMode === 'review') {\n        appState.autoscroll = true;\n    }\n    var autoscrollableNode = $(window);\n    var animatableScrollNode = $('html,body');\n    var autoscrollTimer = false;\n    var startScrollWatcher = function () {\n        //console.log(\"startScrollWatcher\");\n        if (autoscrollTimer) {\n            return;\n        }\n        autoscrollTimer = $interval(handleAutoscroll, 400);\n        autoscrollableNode.bind(\"scroll\", function () {\n            // User-initiated scrolling should block autoscroll.\n            // console.log(\"user scrolled\");\n            animatableScrollNode.stop();\n            stopScrollWatcher();\n            appState.autoscrollBlocked = true;\n        });\n        // handleAutoscroll();\n    };\n    var stopScrollWatcher = function () {\n        console.log(\"stopScrollWatcher\");\n        autoscrollableNode.unbind(\"scroll\");\n        $interval.cancel(autoscrollTimer);\n        autoscrollTimer = false;\n    };\n    $scope.enableAutoscroll = function () {\n        // console.log(\"Enabling autoscroll\");\n        if (appState.autoscrollBlocked) {\n            appState.autoscrollBlocked = false;\n            startScrollWatcher();\n        }\n    };\n    // TODO this is a relatively expensive watch.  Could greatly increase its $interval if we\n    // support directly triggering it from timeline on seek()...\n    var handleAutoscroll = function () {\n        //console.log(\"handleAutoscroll\", \"scroll:\", appState.autoscroll, \"blocked:\", appState.autoscrollBlocked);\n        // if autoscroll is true and autoscrollBlocked is false,\n        // find the topmost visible current item and scroll to put it in the viewport.\n        // WARNING this may break if item is inside scrollable elements other than #CONTAINER\n        if (appState.autoscrollBlocked || !appState.autoscroll) {\n            return;\n        }\n        // find topmost visible current items.\n        // Limiting search to .reviewMode for now, because it was matching and trying to scroll to modals;\n        // when we add more generalized autoscroll support within scenes that will need to change of course\n        var top = Infinity;\n        var curScroll = autoscrollableNode.scrollTop();\n        // HACK. Need to limit this to search within a pane\n        angular.forEach($('.isCurrent:visible'), function (item) {\n            var t = item.getBoundingClientRect()\n                .top + curScroll;\n            if (t < top) {\n                top = t;\n            }\n        });\n        if (top === Infinity) {\n            return;\n        }\n        // There's a visible current item; is it within the viewport?\n        var slop = 180;\n        if ((top > curScroll + slop) && // below top of viewport\n            ((top - curScroll) < (document.documentElement.clientHeight - slop)) // above bottom of viewport\n        ) {\n            return;\n        }\n        if (top < slop && curScroll < slop) {\n            return; // too close to top of window to bother\n        }\n        // Okay, we got past all those returns; it must be time to scroll\n        // console.log(\"handleAutoscroll triggering a scroll\");\n        stopScrollWatcher();\n        animatableScrollNode.animate({\n            \"scrollTop\": top - slop\n        }, 1500);\n        // Don't use jQuery's animation callback; this would get called twice because animatableScrollNode is two nodes...\n        $timeout(function () {\n            startScrollWatcher();\n        }, 1750); // allow extra time; iPad was still capturing the tail end of the animated scroll\n    };\n    startScrollWatcher();\n    // - - - - - - - - -  - - - - - - - - - - - - - - -\n    var escWatcher = $rootScope.$on(\"userKeypress.ESC\", $scope.hidePanels);\n    $scope.$on('$destroy', function () {\n        videoControlsWatcher();\n        getEpisodeWatcher();\n        firstplayWatcher();\n        escWatcher();\n    });\n}\n\n// CONCATENATED MODULE: ./app/scripts/controllers/SceneController.ts\nSceneController.$inject = ['$scope', '$filter', 'ittUtils'];\nfunction SceneController($scope, $filter, ittUtils) {\n    $scope.byPullquoteOrH2 = byPullquoteOrH2;\n    $scope.centeredProTransmedia = centeredProTransmedia;\n    $scope.setBgImgUrl = setBgImgUrl;\n    $scope.precalculateSceneValues = precalculateSceneValues;\n    function precalculateSceneValues() {\n        // console.log(\"precalcSceneValues\");\n        // clear out old calculations in case we're re-precalculating\n        delete $scope.mainContentHasLeftSidebar;\n        delete $scope.mainContentHasRightSidebar;\n        delete $scope.mainContentHasBothSidebars;\n        delete $scope.altContentHasLeftSidebar;\n        delete $scope.altContentHasRightSidebar;\n        delete $scope.altContentHasBothSidebars;\n        // some scene templates let you specify showCurrent for one or more columns; others do it automatically (that will be in the template)\n        $scope.showCurrent = ($.inArray(\"showCurrent\", $scope.scene.layouts) > -1);\n        // Precalculate each fg, bg, and content pane on scene creation for performance.\n        $scope.contentItems = $filter(\"isContent\")($scope.scene.items);\n        $scope.mainFgItems = $filter(\"itemLayout\")($scope.scene.items, \"mainFg\");\n        $scope.mainBgItems = $filter(\"itemLayout\")($scope.scene.items, \"mainBg\");\n        $scope.altFgItems = $filter(\"itemLayout\")($scope.scene.items, \"altFg\");\n        $scope.altBgItems = $filter(\"itemLayout\")($scope.scene.items, \"altBg\");\n        // Content is a little trickier:\n        // * splitRequired:\n        //   main = transcript + optional   / alt=required - transcript\n        // * splitOptional:\n        //   main=transcript + required / alt=optional - transcript\n        // * splitTransmedia (default):\n        //   main=annotation except text-transmedia or text-definition, alt=inverse\n        // (Note splitRequired and splitOptional are legacy)\n        // Main content pane:\n        if ($.inArray(\"splitRequired\", $scope.scene.layouts) > -1) {\n            $scope.mainContentItems = $filter(\"transcriptandoptional\")($scope.contentItems);\n        }\n        else if ($.inArray(\"splitOptional\", $scope.scene.layouts) > -1) {\n            $scope.mainContentItems = $filter(\"transcriptandrequired\")($scope.contentItems);\n        }\n        else {\n            $scope.mainContentItems = $filter(\"annotation\")($scope.contentItems);\n        }\n        // alt content pane is inverse of main:\n        if ($.inArray(\"splitRequired\", $scope.scene.layouts) > -1) {\n            $scope.altContentItems = $filter(\"required\")($scope.contentItems);\n        }\n        else if ($.inArray(\"splitOptional\", $scope.scene.layouts) > -1) {\n            $scope.altContentItems = $filter(\"optional\")($scope.contentItems);\n        }\n        else {\n            $scope.altContentItems = $filter(\"transmedia\")($scope.contentItems);\n        }\n        // Check for left and right sidebars\n        for (var i = 0; i < $scope.mainContentItems.length; i++) {\n            if ($.inArray(\"burstL\", $scope.mainContentItems[i].layouts) > -1 ||\n                $.inArray(\"sidebarL\", $scope.mainContentItems[i].layouts) > -1 ||\n                $.inArray(\"burst\", $scope.mainContentItems[i].layouts) > -1) {\n                $scope.mainContentHasLeftSidebar = true;\n            }\n            if ($.inArray(\"burstR\", $scope.mainContentItems[i].layouts) > -1 ||\n                $.inArray(\"sidebarR\", $scope.mainContentItems[i].layouts) > -1 ||\n                $.inArray(\"burst\", $scope.mainContentItems[i].layouts) > -1) {\n                $scope.mainContentHasRightSidebar = true;\n            }\n            if ($scope.mainContentHasLeftSidebar && $scope.mainContentHasRightSidebar) {\n                $scope.mainContentHasBothSidebars = true;\n                i = $scope.mainContentItems.length; // no need to keep checking the rest\n            }\n        }\n        for (i = 0; i < $scope.altContentItems.length; i++) {\n            if ($.inArray(\"burstL\", $scope.altContentItems[i].layouts) > -1 ||\n                $.inArray(\"sidebarL\", $scope.altContentItems[i].layouts) > -1 ||\n                $.inArray(\"burst\", $scope.altContentItems[i].layouts) > -1) {\n                $scope.altContentHasLeftSidebar = true;\n            }\n            if ($.inArray(\"burstR\", $scope.altContentItems[i].layouts) > -1 ||\n                $.inArray(\"sidebarR\", $scope.altContentItems[i].layouts) > -1 ||\n                $.inArray(\"burst\", $scope.altContentItems[i].layouts) > -1) {\n                $scope.altContentHasRightSidebar = true;\n            }\n            if ($scope.altContentHasLeftSidebar && $scope.altContentHasRightSidebar) {\n                $scope.altContentHasBothSidebars = true;\n                i = $scope.altContentItems.length; // no need to keep checking the rest\n            }\n        }\n    }\n    function centeredProTransmedia(item) {\n        var isPullQuote = item.templateUrl === 'templates/item/pullquote.html';\n        var isH2 = item.templateUrl === 'templates/item/text-h2.html';\n        var isLongTxt = item.templateUrl === 'templates/item/text-transmedia.html';\n        var isDef = item.templateUrl === 'templates/item/text-definition.html';\n        return (isPullQuote || isH2 || isLongTxt || isDef) ? item : false;\n    }\n    function byPullquoteOrH2(item) {\n        var isPullQuote = item.templateUrl === 'templates/item/pullquote.html';\n        var isH2 = item.templateUrl === 'templates/item/text-h2.html';\n        return (isPullQuote || isH2) ? item : false;\n    }\n    function setBgImgUrl(items, col) {\n        var currItems = $filter('isCurrent')(items);\n        var mainColBgOrFg = $filter(col)(currItems);\n        var bgStyle;\n        var opacity = 1;\n        var bgSize;\n        var bgPosition;\n        var bgUrl;\n        if (mainColBgOrFg.length > 0 && ittUtils.existy(mainColBgOrFg[0].asset)) {\n            bgUrl = 'url(' + mainColBgOrFg[0].asset.cssBgUrl + ')';\n            if (/Bg/.test(mainColBgOrFg[0].layoutCss)) {\n                opacity = 0.25;\n            }\n            bgStyle = mainColBgOrFg[0].styles[0];\n            //fill and stretch = background-size: 100% 100%, background-position: 50% 50%\n            switch (bgStyle) {\n                case 'cover':\n                    bgSize = 'cover';\n                    return { 'background-image': bgUrl, 'background-size': bgSize, 'opacity': opacity };\n                case 'contain':\n                    bgSize = 'contain';\n                    bgPosition = 'center';\n                    return {\n                        'background-image': bgUrl,\n                        'background-size': bgSize,\n                        'opacity': opacity,\n                        'background-position': bgPosition\n                    };\n                case 'fill':\n                    bgSize = '100% 100%';\n                    bgPosition = '50% 50%';\n                    return {\n                        'background-image': bgUrl,\n                        'background-size': bgSize,\n                        'opacity': opacity,\n                        'background-position': bgPosition\n                    };\n                case 'tl':\n                    bgSize = 'auto';\n                    bgPosition = 'top left';\n                    return {\n                        'background-image': bgUrl,\n                        'background-size': bgSize,\n                        'opacity': opacity,\n                        'background-position': bgPosition\n                    };\n                case 'tr':\n                    bgSize = 'auto';\n                    bgPosition = 'top right';\n                    return {\n                        'background-image': bgUrl,\n                        'background-size': bgSize,\n                        'opacity': opacity,\n                        'background-position': bgPosition\n                    };\n                case 'bl':\n                    bgSize = 'auto';\n                    bgPosition = 'bottom left';\n                    return {\n                        'background-image': bgUrl,\n                        'background-size': bgSize,\n                        'opacity': opacity,\n                        'background-position': bgPosition\n                    };\n                case 'br':\n                    bgSize = 'auto';\n                    bgPosition = 'bottom right';\n                    return {\n                        'background-image': bgUrl,\n                        'background-size': bgSize,\n                        'opacity': opacity,\n                        'background-position': bgPosition\n                    };\n            }\n            //do nothing\n            return '';\n        }\n    }\n}\n\n// CONCATENATED MODULE: ./app/scripts/controllers/SearchPanelController.ts\nSearchPanelController.$inject = ['$scope', '$rootScope', '$timeout', 'appState'];\nfunction SearchPanelController($scope, $rootScope, $timeout, appState) {\n    // Events searchableText is:\n    // (event.display_annotation || event.display_description) + \" \" + (event.display_title || event.display_annotator)\n    // default sort order\n    $scope.sortBy = \"startTime\";\n    $scope.toggleSortBy = function (sortedBy) {\n        $scope.sortBy = getFlippedSortValue(sortedBy);\n        appState.autoscroll = ($scope.sortBy === 'startTime'); // autoscroll only when sorted by time\n    };\n    $scope.getToggledValue = function (currentSortBy) {\n        return getFlippedSortValue(currentSortBy);\n    };\n    var getFlippedSortValue = function (current) {\n        if (current === \"startTime\") {\n            return \"type\";\n        }\n        else {\n            return \"startTime\";\n        }\n    };\n    $scope.getFriendlySortText = function (sortBy) {\n        if (sortBy === \"startTime\") {\n            return \"time\";\n        }\n        else {\n            return \"type\";\n        }\n    };\n    // generate searchable text for the episode (on demand).\n    // TODO need to handle multi-episode timelines.\n    $scope.indexed = false;\n    $scope.indexEvents = function () {\n        if (!$scope.episode.items) {\n            $timeout(function () {\n                $scope.indexEvents();\n            }, 300);\n            return false;\n        }\n        $scope.indexed = true;\n        // map the increasingly-misnamed producerItemType to search categories.\n        // Array so we can control sort order in panel.\n        $scope.typeCategories = [\n            \"transcript\", \"annotation\", \"file\", \"image\", \"link\", \"video\", \"question\", \"other\"\n        ];\n        // map type literals to pretty/printable version.\n        $scope.showTypes = {\n            transcript: {\n                name: \"Transcript\",\n                items: []\n            },\n            annotation: {\n                name: \"Annotations\",\n                items: []\n            },\n            file: {\n                name: \"Files\",\n                items: []\n            },\n            image: {\n                name: \"Images\",\n                items: []\n            },\n            link: {\n                name: \"Links\",\n                items: []\n            },\n            video: {\n                name: \"Videos\",\n                items: []\n            },\n            question: {\n                name: \"Questions\",\n                items: []\n            },\n            other: {\n                name: \"Other\",\n                items: []\n            }\n        };\n        angular.forEach($scope.episode.items, function (item) {\n            // include cosmetic items only in producer:\n            if (appState.product !== 'producer' && item.cosmetic) {\n                return;\n            }\n            if (item._type === 'Scene') {\n                return;\n            }\n            // build 'by type' arrays:\n            if (item.producerItemType && $scope.showTypes[item.producerItemType]) {\n                $scope.showTypes[item.producerItemType].items.push(item);\n            }\n            else {\n                $scope.showTypes.other.items.push(item);\n            }\n            // control whether annotations are shown header-style:\n            if (item.producerItemType === 'annotation') {\n                // HACK template url dependency\n                item.showAsHeader = !(item.templateUrl.match(/(transmedia|definition)/));\n            }\n        });\n    };\n    $rootScope.$on('searchReindexNeeded', $scope.indexEvents); // HACK\n}\n\n// CONCATENATED MODULE: ./app/scripts/controllers/TimelineController.ts\nTimelineController.$inject = [\n    '$scope',\n    '$rootScope',\n    'timelineSvc',\n    'playbackService',\n    'analyticsSvc',\n    'appState',\n    'modelSvc'\n];\nfunction TimelineController($scope, $rootScope, timelineSvc, playbackService, analyticsSvc, appState, modelSvc) {\n    $scope.playbackService = playbackService;\n    $scope.timelineBtnClick = timelineBtnClick;\n    $scope.setBtnClass = setBtnClass;\n    $rootScope.$on('userKeypress.SPACE', timelineBtnClick);\n    function setBtnClass() {\n        var state = _getTimelineState();\n        if (playbackService.allowPlayback(state) === true) {\n            $scope.controlText = 'play';\n            return 'button-play';\n        }\n        $scope.controlText = 'pause';\n        return 'button-pause';\n    }\n    function timelineBtnClick() {\n        playbackService.togglePlayback(null, timelineSvc.restartEpisode, analyticsSvc.captureEpisodeActivity.bind(analyticsSvc));\n    }\n    function _getTimelineState() {\n        return playbackService.getTimelineState();\n    }\n    $scope.changeSpeed = function (n) {\n        // console.log(\"timelineController.changeSpeed\");\n        // Limit speed to between 0.5 and 2 inclusive\n        var newSpeed = playbackService.getMetaProp('timeMultiplier') + n;\n        if (newSpeed < 0.5) {\n            newSpeed = 0.5;\n        }\n        if (newSpeed > 2) {\n            newSpeed = 2;\n        }\n        timelineSvc.setSpeed(newSpeed);\n    };\n    $scope.resetSpeed = function () {\n        timelineSvc.setSpeed(1);\n    };\n    $scope.markerPercent = function (t) {\n        // console.log('marker %', t);\n        return (t === undefined ? 0 : t / playbackService.getMetaProp('duration') * 100);\n    };\n    // Yeah, this is a little odd.  Letting timelineSvc manage all video-related functions,\n    // including sound, so we can maintain state across multiple videos.\n    $scope.toggleMute = function () {\n        timelineSvc.toggleMute();\n    };\n    $scope.setVolume = function (volume) {\n        timelineSvc.setVolume(volume);\n    };\n    /* DEAD CODE\n     $scope.toggleFullscreen = function () {\n     if (isInFullscreenMode()) {\n     exitFullscreen();\n     } else {\n     enterFullscreen();\n     }\n     };\n  \n     var isInFullscreenMode = function () {\n     return ((document.fullScreenElement && document.fullScreenElement !== null) || // alternative standard methods\n     document.mozFullScreen || document.webkitIsFullScreen); // current working methods\n     };\n  \n     var fullscreenWatcher = $scope.$watch(function () {\n     return isInFullscreenMode();\n     }, function (newVal) {\n     appState.isInFullscreenMode = newVal;\n     });\n     $scope.$on('$destroy', function () {\n     fullscreenWatcher();\n     });\n  \n     var exitFullscreen = function () {\n     if (document.exitFullscreen) {\n     document.exitFullscreen();\n     } else if (document.mozCancelFullScreen) {\n     document.mozCancelFullScreen();\n     } else if (document.webkitExitFullscreen) {\n     document.webkitExitFullscreen();\n     }\n     };\n  \n     var enterFullscreen = function () {\n     var element = document.getElementById('CONTAINER');\n     if (element.requestFullScreen) {\n     element.requestFullScreen();\n     } else if (element.mozRequestFullScreen) {\n     element.mozRequestFullScreen();\n     } else if (element.webkitRequestFullScreen) {\n     element.webkitRequestFullScreen();\n     }\n     };\n     */\n    $scope.$on('$destroy', function () {\n        // Make sure that the clock and event timers are destroyed too\n        timelineSvc.pause();\n    });\n}\n\n// CONCATENATED MODULE: ./app/scripts/controllers/controllers.module.ts\n/**\n * Created by githop on 3/30/17.\n */\n\n\n\n\n\n\n\n\n\n\nvar ittControllers = angular.module('itt.controllers', [])\n    .controller('EditController', EditController)\n    .controller('ErrorController', ErrorController)\n    .controller('EventTestController', EventTestController)\n    .controller('ItemController', ItemController)\n    .controller('PlayerController', PlayerController)\n    .controller('SceneController', SceneController)\n    .controller('SearchPanelController', SearchPanelController)\n    .controller('TimelineController', TimelineController)\n    .controller('ContainerAssetsTestController', ContainerAssetsTestController);\n/* harmony default export */ var controllers_module = (ittControllers);\n\n// CONCATENATED MODULE: ./app/scripts/filters/filters.ts\n\n// TODO make up my mind about 'foo' versus 'isFoo'\n\n\nvar ittFilters = angular.module('itt.filters', [])\n    .filter('itemLayout', function () {\n    return function (items, layout) {\n        var ret = [];\n        angular.forEach(items, function (item) {\n            if (item.layouts && item.layouts[0] === layout) {\n                ret.push(item);\n            }\n        });\n        return ret;\n    };\n})\n    .filter('mainCol', function () {\n    return function (items) {\n        var ret = [];\n        angular.forEach(items, function (item) {\n            if (item.layouts && (item.layouts[0] === 'mainBg' || item.layouts[0] === 'mainFg')) {\n                ret.push(item);\n            }\n        });\n        return ret;\n    };\n})\n    .filter('altCol', function () {\n    return function (items) {\n        var ret = [];\n        angular.forEach(items, function (item) {\n            if (item.layouts && (item.layouts[0] === 'altBg' || item.layouts[0] === 'altFg')) {\n                ret.push(item);\n            }\n        });\n        return ret;\n    };\n})\n    .filter('annotation', function () {\n    return function (items) {\n        var ret = [];\n        angular.forEach(items, function (item) {\n            if (item._type === 'Annotation' && !item.templateUrl.match(/(transmedia|definition)/)) {\n                ret.push(item);\n            }\n        });\n        return ret;\n    };\n})\n    .filter('transmedia', function () {\n    return function (items) {\n        var ret = [];\n        angular.forEach(items, function (item) {\n            if (item._type !== 'Annotation' || item.templateUrl.match(/(transmedia|definition)/)) {\n                ret.push(item);\n            }\n        });\n        return ret;\n    };\n})\n    .filter('transcript', function () {\n    return function (items) {\n        var ret = [];\n        angular.forEach(items, function (item) {\n            if (item.isTranscript) {\n                ret.push(item);\n            }\n        });\n        return ret;\n    };\n})\n    .filter('isCurrent', function () {\n    return function (items) {\n        var ret = [];\n        angular.forEach(items, function (item) {\n            if (item.isCurrent) {\n                ret.push(item);\n            }\n        });\n        return ret;\n    };\n})\n    .filter('isContent', function () {\n    return function (items) {\n        var ret = [];\n        angular.forEach(items, function (item) {\n            if (item.isContent) {\n                ret.push(item);\n            }\n        });\n        return ret;\n    };\n})\n    .filter('reviewMode', ['appState', function (appState) {\n        return function (items) {\n            var ret = [];\n            var isProducer = (appState.product === 'producer');\n            // player, sxs: non-cosmetic, and isContent or windowFg.\n            // producer: everything.\n            angular.forEach(items, function (item) {\n                if (isProducer ||\n                    (!item.cosmetic &&\n                        (item.isContent || item.layouts.indexOf('windowFg') > -1))) {\n                    ret.push(item);\n                }\n            });\n            return ret;\n        };\n    }])\n    .filter('transcriptandrequired', function () {\n    // returns transcript AND required transmedia:\n    return function (items) {\n        var ret = [];\n        angular.forEach(items, function (item) {\n            if (item.isTranscript || item.required) {\n                ret.push(item);\n            }\n        });\n        return ret;\n    };\n})\n    .filter('transcriptandoptional', function () {\n    // returns transcript AND optional transmedia\n    return function (items) {\n        var ret = [];\n        angular.forEach(items, function (item) {\n            if (item.isTranscript || (!item.isTranscript && !item.required)) {\n                ret.push(item);\n            }\n        });\n        return ret;\n    };\n})\n    .filter('required', function () {\n    // returns only required transmedia (no transcript):\n    return function (items) {\n        var ret = [];\n        angular.forEach(items, function (item) {\n            if (!item.isTranscript && item.required) {\n                ret.push(item);\n            }\n        });\n        return ret;\n    };\n})\n    .filter('optional', function () {\n    // returns only optional transmedia (no transcript)\n    return function (items) {\n        var ret = [];\n        angular.forEach(items, function (item) {\n            if (!item.isTranscript && !item.required) {\n                ret.push(item);\n            }\n        });\n        return ret;\n    };\n})\n    .filter('highlightSubstring', function () {\n    return function (text, search) {\n        // console.log(\"Search highlight\",text,search);\n        if (!text) {\n            return;\n        }\n        if (search || angular.isNumber(search)) {\n            return text.toString().replace(new RegExp(search.toString(), 'gi'), '<span class=\"ui-match\">$&</span>');\n        }\n        else {\n            return text;\n        }\n    };\n})\n    .filter('pretty', function () {\n    return function (json) {\n        return JSON.stringify(json, undefined, 2);\n    };\n})\n    .filter('i18n', ['appState', function (appState) {\n        // Used for plugin data only; other fields precalculate into display_foo.\n        // let's see if this is a huge performance hit, if not maybe we'll skip the precalc...\n        return function (input) {\n            if (!input) {\n                return \"\";\n            }\n            if (typeof (input) === 'object') {\n                return input[appState.lang] || input.en || \"\";\n            }\n            return input;\n        };\n    }])\n    .filter('asBytes', function () {\n    // quick + sloppy\n    return function (b) {\n        if (!b) {\n            return \"\";\n        }\n        var kb = Math.floor(b / 1024);\n        if (kb < 1024) {\n            return kb + \"Kb\";\n        }\n        var mb = Math.floor(kb / 10.24) / 100;\n        return mb + \"Mb\";\n    };\n})\n    .filter('asPercent', function () {\n    return function (n) {\n        return isNaN(n) ? (Math.floor(n * 100)) + \"%\" : '0%';\n    };\n})\n    .filter('stripParams', function () {\n    return function (x) {\n        return x.substr(0, x.indexOf('?'));\n    };\n})\n    .filter('asTime', function () {\n    return function (t) {\n        if (isNaN(t)) {\n            return \"0:00\";\n        }\n        if (t < 0) {\n            return \"0:00\";\n        }\n        return Math.floor(t / 60) + \":\" + (\"0\" + Math.floor(t) % 60).slice(-2);\n    };\n})\n    .filter('alpha', function () {\n    // To label ng-repeats by letter, use {{$index | alpha}}\n    return function (n) {\n        return 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')[n % 26];\n    };\n})\n    .filter('capitalize', function () {\n    return function (str) {\n        return !!str ? str.charAt(0).toUpperCase() + str.substr(1).toLocaleLowerCase() : '';\n    };\n})\n    .filter('vidsFromCustAdmins', function () {\n    //assets is actually an object when it comes in.\n    return function (assets) {\n        var notVideos = [];\n        angular.forEach(assets, function (asset) {\n            if (!/video/.test(asset.content_type)) {\n                notVideos.push(asset);\n            }\n        });\n        return notVideos;\n    };\n})\n    .filter('langDisplay', ['ittUtils', function (ittUtils) {\n        var _existy = ittUtils.existy;\n        var keys = {\n            'en': 'English',\n            'es': 'Spanish',\n            'zh': 'Chinese',\n            'pt': 'Portuguese',\n            'fr': 'French',\n            'de': 'German',\n            'it': 'Latin'\n        };\n        return function (code) {\n            if (_existy(code)) {\n                return keys[code];\n            }\n            return '';\n        };\n    }])\n    .filter('slugify', ['ittUtils', function (ittUtils) {\n        return function (str) {\n            if (ittUtils.existy(str)) {\n                return ittUtils.slugify(str);\n            }\n            return '';\n        };\n    }])\n    .filter('tagName', [function () {\n        var tagMap = (_a = {},\n            _a[SOCIAL_IMAGE_SQUARE] = 'Square',\n            _a[SOCIAL_IMAGE_WIDE] = 'Wide',\n            _a);\n        return function (str) {\n            if (str && tagMap.hasOwnProperty(str)) {\n                return tagMap[str];\n            }\n        };\n        var _a;\n    }]);\n/* harmony default export */ var filters = (ittFilters);\n\n// CONCATENATED MODULE: ./app/scripts/services/appState.ts\n/*\n Stash for shared information, to save us a lot of $watching and $emitting.\n It's convenient.  Maybe -too- convenient.\n\n I have a sinking feeling this is probably an elaborate wheel-reinvention of $rootScope, but hey, it works\n\n */\nvar noAvatarImg = __webpack_require__(\"IiAB\");\n/**\n * @ngdoc service\n * @name iTT.service:appState\n * @description\n * POJO designed to store application state during app runtime. All values are initiazed as boolean and set to false.\n * Values are then updated in place by injecting the appState into the relevant destination\n * and overwriting the initial values\n * @requires $interval\n * @requires config\n * @property {Object} user whatever authSvc gets back from getAccessToken\n * @property {String} episodeId ID of current episode (Initialized as bool set to false).\n * @property {String} episodeSegmentId ID of current episode segment (only relevant in narratives)\n * @property {String} narrativeId also only relevant in narratives\n * @property {String} timelineId ID of timeline\n * @property {Boolean} isFramed are we inside an iframe?  Don't use !== because IE8 gets it wrong\n * @property {Boolean} isTouchDevice Determines whether or not client is touch enabled via user agent\n * @property {Boolean} isIphone iPhone has weird video handling, see  timelineSvc\n * @property {Number} windowWidth width of content pane, updated every 50ms\n * @property {Number} windowHeight height of content pane, updated every 50ms\n * @property {String} viewMode Sets view mode based upon window width\n * @property {Number} producerEditLayer a bit hacky, this.  Only has an effect in producer in discover mode;\n * 0 is default, -1 is background layers only, 1 is foreground layers only\n * @property {Number} time current playhead position (in seconds) relative to timeline NOT TO EPISODE!\n * @property {Number} bufferedPercent portion of video that has been buffered\n * (as pct instead of time because that's how youtube reports it, and that's what we end up displaying anyway)\n * @property {Number} timeMultiplier sets player speed (0.5 = half speed; 2=double;etc)\n * @property {Number} duration duration of timeline (in seconds)\n * @property {String} timelineState \"playing\", \"paused\", or \"buffering\" (set by timelineSvc).\n * Future = \"locked\" (by stop question or etc)\n * @property {Boolean} hasBeenPlayed set to true after first time the video plays\n * (used so we can interrupt that first play with a helpful help)\n * @property {Number} volume Audio for main video\n * @property {Boolean} muted audio for main video\n * @property {Boolean} hideCaptions visibility of \"closed captions\" in watch mode\n * @property {Object} show Object with SearchPanel and NavPanel properties which are booleans\n * @property {Boolean} videoControlsActive whether bottom toolbar is visible\n * @property {Boolean} videoControlsLocked force bottom toolbar to stay in its current visible/hidden state\n * @property {Object} itemDetail Put item data here to show it as a modal overlay\n * @property {Boolean} autoscroll scroll window to make current items visible (in relevant modes)\n * @property {Boolean} autoscrollBlocked User has disabled autoscroll\n * @property {String} product \"player\", \"sxs\", or \"producer\"\n * @property {String} productLoadedAs same as product but only set on initial load,\n * this lets producer toggle back to player preview temporarily\n * @property {Object} editEvent Scene or item currently being edited by user.\n * @property {Object} editEpisode Episode currently being edited by user.\n * yes I did kind of paint myself into a corner here\n * @property {Object} lang set to false so the episode default knows when to override it\n */\n// appState.$inject = ['$interval', 'config'];\nvar INITIAL_APP_STATE = {\n    noAvatarImg: noAvatarImg,\n    user: {},\n    episodeId: false,\n    episodeSegmentId: false,\n    narrativeId: false,\n    timelineId: false,\n    resizeIframeReviewMode: false,\n    isFramed: (window.parent != window),\n    isTouchDevice: (/iPad|iPod|iPhone/.test(navigator.platform) || /Android/.test(navigator.userAgent)),\n    isIEOrEdge: (/Trident|Edge/.test(navigator.userAgent) || /Trident|Edge/.test(navigator.platform)),\n    isIPhone: /iPod|iPhone/.test(navigator.platform),\n    iOSVersion: '',\n    windowWidth: 0,\n    windowHeight: 0,\n    viewMode: ($(window).width() > 480) ? 'discover' : 'review',\n    producerEditLayer: 0,\n    // 0 is default, -1 is background layers only, 1 is foreground layers only\n    hideCaptions: false,\n    show: {\n        searchPanel: false,\n        // helpPanel: false,\n        navPanel: false\n    },\n    videoControlsActive: false,\n    videoControlsLocked: false,\n    itemDetail: false,\n    autoscroll: false,\n    autoscrollBlocked: false,\n    crossEpisodePath: '',\n    product: '',\n    productLoadedAs: '',\n    // this lets producer toggle back to player preview temporarily\n    editEvent: false,\n    editEpisode: false,\n    // svc.youtubeIsReady: false,\n    // Set to true when youtube API finishes loading.  DO NOT set this to false on init,\n    // otherwise navigating from episode to episode breaks\n    // (we reinit on new episode but that won't trigger youtube's ready event)\n    lang: false // set to false\n};\nvar AppState = /** @class */ (function () {\n    function AppState($interval, config) {\n        this.$interval = $interval;\n        this.config = config;\n        this.initService();\n    }\n    AppState.getIOSVersion = function (navigator) {\n        var iOSDeviceRe = /iP(hone|od|ad)/;\n        var versionRe = /OS (\\d+)_(\\d+)_?(\\d+)?/;\n        if (iOSDeviceRe.test(navigator.platform) || iOSDeviceRe.test(navigator.userAgent)) {\n            var v = (navigator.appVersion).match(versionRe);\n            return [parseInt(v[1], 10), parseInt(v[2], 10), parseInt(v[3] || 0, 10)];\n        }\n    };\n    AppState.prototype.init = function () {\n        var crossEpisodePath;\n        if (this.product === 'sxs' || this.product === 'producer') {\n            crossEpisodePath = this.product;\n        }\n        else {\n            crossEpisodePath = 'episode'; // yeah, that was kind of a dumb decision to switch from episode to \"player\"\n        }\n        var overrides = {\n            crossEpisodePath: crossEpisodePath,\n            iOSVersion: AppState.getIOSVersion(navigator),\n            product: this.product,\n            productLoadedAs: this.productLoadedAs,\n            user: this.user || {}\n        };\n        Object.assign(this, INITIAL_APP_STATE, overrides);\n    };\n    AppState.prototype.initService = function () {\n        this.init();\n        this.watchWidth();\n    };\n    AppState.prototype.watchWidth = function () {\n        var _this = this;\n        this.$interval(function () {\n            _this.windowHeight = angular.element(window).height();\n            _this.windowWidth = angular.element(window).width();\n        }, 50, 0, false);\n        if (this.config.debugInBrowser) {\n            console.log('appState:', this);\n        }\n    };\n    AppState.prototype.isIframedIOS = function () {\n        return (this.isFramed && this.isIOS());\n    };\n    AppState.prototype.isIOS = function () {\n        return (this.iOSVersion && this.iOSVersion[0] && this.iOSVersion[0] > 0);\n    };\n    AppState.$inject = ['$interval', 'config'];\n    return AppState;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/services/authSvc/authSvc.ts\nauthSvc_authSvc.$inject = ['config', '$routeParams', '$http', '$q', '$location', 'ittUtils', 'appState', 'modelSvc', 'errorSvc'];\nfunction authSvc_authSvc(config, $routeParams, $http, $q, $location, ittUtils, appState, modelSvc, errorSvc) {\n    // console.log('authSvc factory');\n    var svc = {};\n    var Roles = {\n        ADMINISTRATOR: \"admin\",\n        INSTRUCTOR: \"instructor\",\n        STUDENT: \"student\",\n        GUEST: \"guest\",\n        CUSTOMER_ADMINISTRATOR: 'customer admin'\n    };\n    var Resources = {\n        CUSTOMER: 'Customer'\n    };\n    svc.isTrueGuest = isTrueGuest;\n    function isTrueGuest() {\n        var _isGuest = true;\n        angular.forEach(appState.user.roles, function (r) {\n            if (r.role !== Roles.GUEST) {\n                _isGuest = false;\n            }\n        });\n        return _isGuest;\n    }\n    svc.userHasRole = function (role) {\n        if (appState.user && appState.user.roles) {\n            for (var i = 0; i < appState.user.roles.length; i++) {\n                if (appState.user.roles[i].role === role) {\n                    if (!(role === Roles.ADMINISTRATOR && ittUtils.existy(appState.user.roles[i].resource_id))) {\n                        return true;\n                    }\n                }\n                else if (role === Roles.CUSTOMER_ADMINISTRATOR && appState.user.roles[i].role === Roles.ADMINISTRATOR &&\n                    ittUtils.existy(appState.user.roles[i].resource_id) &&\n                    appState.user.roles[i].resource_type === Resources.CUSTOMER) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    svc.getCustomerIdsFromRoles = function () {\n        if (appState.user && appState.user.roles) {\n            return appState.user.roles.reduce(function (accm, i) {\n                if (i.role === Roles.ADMINISTRATOR &&\n                    ittUtils.existy(i.resource_id) &&\n                    i.resource_type === Resources.CUSTOMER) {\n                    accm.push(i.resource_id);\n                }\n                return accm;\n            }, []);\n        }\n    };\n    svc.getRoleForNarrative = function (narrativeId, roles) {\n        roles = typeof roles !== 'undefined' ? roles : appState.user.roles;\n        var role = \"\";\n        var exitLoop = false;\n        if (roles) {\n            for (var i = 0; i < roles.length; i++) {\n                switch (roles[i].role) {\n                    case Roles.ADMINISTRATOR:\n                        if (roles[i].resource_id && roles[i].resource_id !== narrativeId) {\n                            continue; // they are an admin, but not in this narrative, so let's keep going\n                        }\n                        else {\n                            role = \"admin\";\n                            exitLoop = true; //if they are an admin, then we can just get out as it trumps\n                        }\n                        break;\n                    case Roles.INSTRUCTOR:\n                        if (roles[i].resource_id && roles[i].resource_id !== narrativeId) {\n                            continue;\n                        }\n                        else {\n                            role = roles[i].role;\n                        }\n                        break;\n                    case Roles.STUDENT:\n                        if (roles[i].resource_id && roles[i].resource_id !== narrativeId) {\n                            continue;\n                        }\n                        else {\n                            role = role === \"instructor\" ? role : roles[i].role;\n                        }\n                        break;\n                    case Roles.GUEST:\n                        if (roles[i].resource_id && roles[i].resource_id !== narrativeId) {\n                            continue;\n                        }\n                        else {\n                            role = role === \"instructor\" || role === \"student\" ? role : roles[i].role;\n                        }\n                        break;\n                }\n                if (exitLoop) {\n                    break;\n                }\n            }\n        }\n        return role;\n    };\n    svc.getDefaultProductForRole = function (role) {\n        /*\n         This was making it impossible for users with admin role to see editor or player interface.\n         For now, producer should be used only at the /#/episode urls, editor at the narrative urls\n         (producer only works with individual episodes atm anyway)\n         TODO later on we'll make this user-selectable within the product UI (and probably\n         eliminate appState.productLoadedAs and the /#/episode, /#/editor, etc routes)\n         */\n        var product = \"player\";\n        if (appState.productLoadedAs === 'narrative') {\n            if (role === Roles.ADMINISTRATOR || role === Roles.INSTRUCTOR) {\n                product = \"sxs\";\n            }\n        }\n        else {\n            errorSvc.error({\n                data: \"authSvc.getDefaultProductForRole should only be used within narratives for now\"\n            });\n        }\n        return product;\n    };\n    svc.logout = function () {\n        // Clear these even if the logout call fails (which it will if the token in localStorage has expired).\n        // DO NOT clear the Authorization header yet (it's needed for the logout server call)\n        try {\n            localStorage.removeItem(config.localStorageKey);\n            document.cookie = 'XSRF-TOKEN=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n            document.cookie = '_tellit-api_session=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n        }\n        catch (e) {\n            // user disabled cookies, so no need to try to remove them...\n        }\n        appState.user = {};\n        $http({\n            method: 'GET',\n            url: config.apiDataBaseUrl + \"/logout\"\n        })\n            .success(function () {\n            delete $http.defaults.headers.common.Authorization; // now it's safe\n            $location.path('/')\n                .search({\n                logout: 1\n            });\n        })\n            .error(function () {\n            delete $http.defaults.headers.common.Authorization; // if it exists at all here, it's definitely invalid\n            $location.path('/')\n                .search({\n                logout: 1\n            });\n        });\n    };\n    svc.adminLogin = function (authKey, password) {\n        var defer = $q.defer();\n        $http({\n            method: 'POST',\n            url: config.apiDataBaseUrl + \"/auth/identity/callback\",\n            data: $.param({\n                \"auth_key\": authKey,\n                \"password\": password\n            }),\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        })\n            .success(function (data) {\n            $http.defaults.headers.common.Authorization = 'Token token=\"' + data.access_token + '\"';\n            resolveUserData(data);\n            svc.getCurrentUser()\n                .then(function () {\n                defer.resolve(data);\n            });\n        })\n            .error(function (data) {\n            defer.reject(data);\n        });\n        return defer.promise;\n    };\n    /*\n  \n     authentication paths:\n     header + user data: resolve immediately\n     header + no user data: call show_user (this shouldn't be possible, but I coded it in at some point for some reason...)\n     key in url param: call get_nonce\n     token in localStorage: set header, call show_user\n     nothing: get_nonce\n  \n     */\n    var authenticateDefer = $q.defer();\n    svc.authenticate = function (nonceParam) {\n        if ($http.defaults.headers.common.Authorization) {\n            //appState#init will initialize an empty object as the user property, which will always make\n            //appState.user truthy, thus need to check to see if we actually have a loaded user by looking for the id.\n            if (appState.user._id) {\n                // Have header and user; all done.\n                authenticateDefer.resolve();\n            }\n            else {\n                // begin dubious code block\n                console.warn(\"Have auth header but no appState.user data. Not sure this should ever happen, TODO delete this from authSvc if it continues to not happen\");\n                svc.getCurrentUser()\n                    .then(function () {\n                    authenticateDefer.resolve();\n                }, function () {\n                    return svc.authenticateViaNonce(nonceParam);\n                });\n                // end of dubious code block\n            }\n        }\n        else if ($routeParams.key) {\n            // Have key in route\n            var nonce = $routeParams.key;\n            $location.search('key', null); // hide the param from the url.  reloadOnSearch must be turned off in $routeProvider!\n            return svc.getAccessToken(nonce);\n        }\n        else {\n            var token = svc.getStoredToken();\n            if (token) {\n                // have localStorage token; try it\n                $http.defaults.headers.common.Authorization = 'Token token=\"' + token + '\"';\n                svc.getCurrentUser()\n                    .then(function () {\n                    // token worked\n                    authenticateDefer.resolve();\n                }, function () {\n                    // token expired; clear everything and start over\n                    try {\n                        localStorage.removeItem(config.localStorageKey);\n                        document.cookie = 'XSRF-TOKEN=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n                        document.cookie = '_tellit-api_session=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n                    }\n                    catch (e) {\n                        // user disabled cookies\n                    }\n                    appState.user = {};\n                    return svc.authenticateViaNonce(nonceParam);\n                });\n            }\n            else {\n                console.log('auth Via Nonce', nonceParam);\n                // no login info at all, start from scratch\n                return svc.authenticateViaNonce(nonceParam);\n            }\n        }\n        return authenticateDefer.promise;\n    };\n    svc.authenticateViaNonce = function (nonceParam) {\n        var defer = $q.defer();\n        svc.getNonce(nonceParam)\n            .then(function (nonce) {\n            svc.getAccessToken(nonce)\n                .then(function () {\n                defer.resolve();\n            });\n        });\n        return defer.promise;\n    };\n    svc.getStoredToken = function () {\n        var storedData = {};\n        try {\n            if (!localStorage) {\n                return false;\n            }\n            localStorage.getItem(config.localStorageKey);\n            storedData = angular.fromJson(localStorage.getItem(config.localStorageKey));\n            var currentCustomer = config.apiDataBaseUrl.match(/\\/\\/([^\\.]*)./)[1];\n            if (storedData.customer !== currentCustomer) {\n                console.log(\"deleting wrong-customer token: was \", storedData.customer, \" should be \", currentCustomer);\n                localStorage.removeItem(config.localStorageKey);\n                storedData = {};\n            }\n            return storedData.token || false;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    svc.getCurrentUser = function () {\n        var defer = $q.defer();\n        $http({\n            method: 'GET',\n            url: config.apiDataBaseUrl + '/show_user'\n        })\n            .success(function (respData) {\n            resolveUserData(respData);\n            defer.resolve();\n        })\n            .error(function () {\n            defer.reject();\n        });\n        return defer.promise;\n    };\n    svc.updateUser = function (user) {\n        var defer = $q.defer();\n        $http({\n            method: 'PUT',\n            url: config.apiDataBaseUrl + '/users/' + user._id,\n            data: user\n        })\n            .success(function (respData) {\n            resolveUserData(respData);\n            defer.resolve();\n        })\n            .error(function () {\n            defer.reject();\n        });\n        return defer.promise;\n    };\n    var resolveUserData = function (data) {\n        // Modify the structure of the roles data if necessary.  This is a temporary fix and can be removed after the new roles system is in place.\n        if (data.roles !== null && data.roles !== undefined && data.roles.length > 0 && data.roles[0].constructor === String) {\n            var roles = [];\n            for (var i = 0; i < data.roles.length; i++) {\n                var role = {\n                    role: data.roles[i]\n                };\n                roles.push(role);\n            }\n            data.roles = roles;\n        }\n        // updates appState.user and localStorage\n        var user = {\n            access_token: data.access_token || data.authentication_token,\n            customer: config.apiDataBaseUrl.match(/\\/\\/([^\\.]*)./)[1],\n            //                                                            Logging in with one customer invalidates the key for any others for the same user,\n            //                                                            otherwise we'd just store separate ones per customer\n            roles: data.roles\n        };\n        angular.forEach([\"_id\", \"name\", \"email\", \"track_event_actions\", \"track_episode_metrics\", \"avatar_id\"], function (key) {\n            if (data[key]) {\n                user[key] = data[key];\n            }\n        });\n        var tok = svc.getStoredToken();\n        if (user.avatar_id && tok) {\n            // console.log('culprit identified', tok);\n            $http.defaults.headers.common.Authorization = 'Token token=\"' + tok + '\"';\n            // Load and cache avatar asset for current user\n            $http.get(config.apiDataBaseUrl + \"/v1/assets/\" + user.avatar_id).then(function (response) {\n                // console.log(\"GOT AVATAR\", response);\n                modelSvc.cache(\"asset\", response.data);\n                appState.user.avatar = response.data.url; // convenience for now, may be better to use modelSvc here\n            });\n        }\n        // API BUG workaround\n        if (data[\"track_episode_metrics:\"]) {\n            user.track_episode_metrics = true;\n        }\n        if (user.roles) {\n            user.role_description = getRoleDescription(user.roles[0]);\n        }\n        if (data.emails) {\n            user.email = data.emails[0];\n        }\n        appState.user = user;\n        try {\n            localStorage.setItem(config.localStorageKey, JSON.stringify({\n                token: user.access_token,\n                customer: user.customer\n            }));\n        }\n        catch (e) { }\n    };\n    var getRoleDescription = function (roleKey) {\n        if (roleKey === undefined) {\n            return \"User\";\n        }\n        if (roleKey.role === 'admin') {\n            return \"Administrator\";\n        }\n        if (roleKey.role === undefined) {\n            return \"User\";\n        }\n        if (roleKey.role === \"guest\") {\n            return \"Guest user\";\n        }\n        if (roleKey.role.match(/student/i)) {\n            return \"Student\";\n        }\n        if (roleKey.role.match(/instructor/i)) {\n            return \"Instructor\";\n        }\n        return roleKey;\n    };\n    svc.getNonce = function (nonceParam) {\n        var defer = $q.defer();\n        var url = config.apiDataBaseUrl + \"/v1/get_nonce\";\n        if (nonceParam) {\n            url = url + \"?\" + nonceParam;\n        }\n        $http.get(url)\n            .success(function (data) {\n            if (data.nonce) {\n                defer.resolve(data.nonce);\n            }\n            else {\n                // Guest access is not allowed\n                if (data.login_url && data.login_url !== null) {\n                    if (data.login_via_top_window_only) {\n                        window.top.location.href = data.login_url;\n                    }\n                    else {\n                        window.location.href = data.login_url;\n                    }\n                    defer.reject();\n                }\n                else {\n                    console.warn(\"get_nonce returned a null login_url\");\n                    if (window.location.hash !== '#/') {\n                        window.location.href = \"/#/\";\n                    }\n                    defer.reject();\n                }\n            }\n        })\n            .error(function () {\n            defer.reject();\n        });\n        return defer.promise;\n    };\n    svc.getAccessToken = function (nonce) {\n        var defer = $q.defer();\n        $http.get(config.apiDataBaseUrl + \"/v1/get_access_token/\" + nonce)\n            .success(function (data) {\n            resolveUserData(data);\n            $http.defaults.headers.common.Authorization = 'Token token=\"' + data.access_token + '\"';\n            svc.getCurrentUser()\n                .then(function () {\n                defer.resolve(data);\n            });\n        })\n            .error(function () {\n            // console.error(\"get_access_token failed:\", data, status);\n            defer.reject();\n        });\n        return defer.promise;\n    };\n    return svc;\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/awsSvc.ts\nawsSvc.$inject = ['$http', '$q', 'config'];\nfunction awsSvc($http, $q, config) {\n    // console.log('awsSvc, user: ', appState.user);\n    var MAX_CHUNKS = 1000;\n    var MAX_RETRIES = 4;\n    var MAX_SIMUL_PARTS_UPLOADING = 3;\n    var REQUEST_TIMEOUT = 30000; //30 seconds (default is 2 minutes)\n    var PUBLIC_READ = \"public-read\";\n    var PENDING = \"pending\";\n    var UPLOADING = \"uploading\";\n    var FAILED = \"failed\";\n    var COMPLETE = \"complete\";\n    var svc = {};\n    var awsCache = {\n        s3: {}\n    };\n    var fiveMB = 1024 * 1024 * 5;\n    var chunkSize = 0;\n    var chunkCount = 0;\n    var chunksUploaded = 0;\n    var chunks = [];\n    var chunkSearchIndex = 0;\n    var files = [];\n    var fileMeta = {};\n    var fileIndex = 0;\n    var fileBeingUploaded;\n    var bytesUploaded = 0;\n    var multipartUpload;\n    var deferredUploads = [];\n    var deferredUpload;\n    var currentRequest;\n    var uploadPaused = false;\n    svc.awsCache = function () {\n        return awsCache;\n    };\n    svc.getBucketListing = function () {\n        var defer = $q.defer();\n        getUploadSession().then(function listObjects() {\n            awsCache.s3.listObjects(function (err, data) {\n                if (err) {\n                    console.error(err, err.stack); // an error occurred\n                    defer.reject();\n                }\n                else {\n                    // console.log('awsSvc, got bucket listing!', data);\n                    defer.resolve(data); // successful response\n                }\n            });\n        });\n        return defer.promise;\n    };\n    /*\n     CRUFT asset creation endpoint is passed down through uploadFiles, startNextUpload, and createAsset.\n     TODO Refactor to create asset record outside of awsSvc, after returned promise from uploadFiles (meaning we could go back to a single svc.uploadFiles fn),\n     or at the very least to handle it within these next two functions instead of passing it all the way down the chain\n     */\n    svc.uploadContainerFiles = function (containerId, fileList, tag) {\n        console.log('aws - upload container files', containerId, fileList);\n        return uploadFiles(\"/v1/containers/\" + containerId + \"/assets\", fileList, tag);\n    };\n    svc.uploadUserFiles = function (userId, fileList) {\n        return uploadFiles(\"/v1/users/\" + userId + \"/assets\", fileList);\n    };\n    //Pass in a FileList object and the container in which the files are to be placed\n    var uploadFiles = function (assetEndpoint, fileList, tag) {\n        var deferredUploadsPromises = [];\n        // console.log('files: ', files);\n        for (var i = 0; i < fileList.length; i++) {\n            //can access this with regular array index\n            //https://developer.mozilla.org/en-US/docs/Web/API/FileList#Example\n            files.push(fileList[i]);\n            if (tag != null) {\n                fileMeta[fileList[i].name] = [tag];\n                console.log('adding meta stuff', fileMeta);\n            }\n            var deferred = $q.defer();\n            deferredUploads.push(deferred);\n            deferredUploadsPromises.push(deferred.promise);\n        }\n        startNextUpload(assetEndpoint);\n        // console.log('DEFERRED UPLOADS: ', deferredUploads);\n        return deferredUploadsPromises;\n    };\n    svc.pauseUpload = function () {\n        if (fileBeingUploaded && !uploadPaused) {\n            uploadPaused = true;\n            cancelCurrentUploadRequests();\n            if (isSmallUpload()) {\n                bytesUploaded = 0;\n            }\n            else {\n                var chunkIndex = 0;\n                bytesUploaded = 0;\n                while (chunkIndex < chunkCount) {\n                    var chunk = chunks[chunkIndex];\n                    if (chunk.status === COMPLETE) {\n                        bytesUploaded += chunk.uploaded;\n                    }\n                    chunkIndex++;\n                }\n            }\n            deferredUpload.notify({\n                bytesSent: bytesUploaded,\n                bytesTotal: fileBeingUploaded.size\n            });\n        }\n    };\n    svc.resumeUpload = function () {\n        if (fileBeingUploaded && uploadPaused) {\n            uploadPaused = false;\n            if (isSmallUpload()) {\n                putObject();\n            }\n            else {\n                for (var i = 0; i < MAX_SIMUL_PARTS_UPLOADING; i++) {\n                    startNextUploadPart();\n                }\n            }\n        }\n    };\n    svc.cancelUpload = function () {\n        if (fileBeingUploaded) {\n            uploadPaused = false;\n            bytesUploaded = 0;\n            cancelCurrentUploadRequests();\n            if (!isSmallUpload()) {\n                svc.cancelMultipartUpload(multipartUpload);\n                multipartUpload = null;\n            }\n            fileBeingUploaded = null;\n            // deferredUpload.notify({\n            // \tbytesSent: 0,\n            // \tbytesTotal: 0\n            // });\n            deferredUploads[fileIndex].reject(\"Canceled by user\");\n        }\n        // cancel pending uploads as well\n        for (var i = fileIndex + 1; i < files.length; i++) {\n            deferredUploads[i].reject(\"Canceled by user\");\n        }\n        fileIndex = files.length;\n    };\n    svc.networkError = function () {\n        if (fileBeingUploaded) {\n            cancelCurrentUploadRequests();\n        }\n    };\n    svc.deleteObject = function (bucketObject) {\n        var defer = $q.defer();\n        getUploadSession().then(function deleteObject() {\n            var params = {\n                Bucket: bucketObject.bucket,\n                Key: bucketObject.Key\n            };\n            awsCache.s3.deleteObject(params, function (err, data) {\n                if (err) {\n                    console.error(err, err.stack); // an error occurred\n                    defer.reject();\n                }\n                else {\n                    // console.log('awsSvc, deleted object!', data);\n                    defer.resolve(data); // successful response\n                }\n            });\n        });\n        return defer.promise;\n    };\n    svc.getMultipartUploads = function () {\n        var defer = $q.defer();\n        getUploadSession().then(function listMultipartUploads() {\n            awsCache.s3.listMultipartUploads(function (err, data) {\n                if (err) {\n                    console.error(err, err.stack); // an error occurred\n                    defer.reject();\n                }\n                else {\n                    // console.log('awsSvc, got mulipart upload listing!', data);\n                    defer.resolve(data); // successful response\n                }\n            });\n        });\n        return defer.promise;\n    };\n    svc.getMultipartUploadParts = function (index, multipartUpload) {\n        var defer = $q.defer();\n        getUploadSession().then(function listParts() {\n            var params = {\n                Bucket: multipartUpload.bucket,\n                Key: multipartUpload.Key,\n                UploadId: multipartUpload.UploadId\n            };\n            awsCache.s3.listParts(params, function (err, data) {\n                if (err) {\n                    console.error(err, err.stack); // an error occurred\n                    defer.reject();\n                }\n                else {\n                    // console.log('awsSvc, got mulipart upload listing!', data);\n                    defer.resolve({\n                        i: index,\n                        parts: data\n                    }); // successful response\n                }\n            });\n        });\n        return defer.promise;\n    };\n    svc.cancelMultipartUpload = function (multipartUpload) {\n        var defer = $q.defer();\n        getUploadSession().then(function abortMultipartUpload() {\n            var params = {\n                Bucket: multipartUpload.bucket,\n                Key: multipartUpload.Key,\n                UploadId: multipartUpload.UploadId\n            };\n            awsCache.s3.abortMultipartUpload(params, function (err, data) {\n                if (err) {\n                    console.error(err, err.stack); // an error occurred\n                    defer.reject();\n                }\n                else {\n                    // console.log('awsSvc, deleted mulipart upload!', data);\n                    defer.resolve(data); // successful response\n                }\n            });\n        });\n        return defer.promise;\n    };\n    //Internal functions\n    var getUploadSession = function () {\n        if (awsCache.hasOwnProperty('sessionDeferred')) {\n            return awsCache.sessionDeferred.promise;\n        }\n        else {\n            awsCache.sessionDeferred = $q.defer();\n        }\n        $http.get(config.apiDataBaseUrl + \"/v1/aws/s3/upload_session\")\n            .success(function (data) {\n            if (data.access_key_id) {\n                AWS.config.update({\n                    accessKeyId: data.access_key_id,\n                    secretAccessKey: data.secret_access_key,\n                    sessionToken: data.session_token,\n                    region: config.awsRegion\n                });\n                var params = {\n                    maxRetries: 0,\n                    httpOptions: { timeout: REQUEST_TIMEOUT },\n                    params: {\n                        Bucket: data.bucket,\n                        Prefix: data.key_base\n                    }\n                };\n                awsCache.s3 = new AWS.S3(params);\n                awsCache.sessionDeferred.resolve(data);\n            }\n            else {\n                awsCache.sessionDeferred.reject();\n            }\n        })\n            .error(function () {\n            awsCache.sessionDeferred.reject();\n        });\n        return awsCache.sessionDeferred.promise;\n    };\n    var startNextUpload = function (assetEndpoint) {\n        // console.log('START NEXT UPLOAD: ', files.length, ', ', fileIndex, ', ', fileBeingUploaded);\n        if (files.length > fileIndex && !fileBeingUploaded) {\n            fileBeingUploaded = files[fileIndex];\n            if (fileBeingUploaded.type === \"\") {\n                // console.log('ABORTING UPLOAD, COULD NOT DETERMINE FILE TYPE FOR FILE:', fileBeingUploaded);\n                deferredUploads[fileIndex].reject('Could not determine file type for file \\'' + fileBeingUploaded.name + '\\'');\n                fileBeingUploaded = null;\n                fileIndex++;\n                startNextUpload(assetEndpoint);\n                return;\n            }\n            // console.log('files: ', files);\n            // console.log('awsSvc uploading file', fileBeingUploaded);\n            ensureUniqueFilename().then(function () {\n                var fileUploadPromise;\n                if (isSmallUpload()) {\n                    fileUploadPromise = uploadSmallFile();\n                }\n                else {\n                    fileUploadPromise = uploadBigFile();\n                }\n                fileUploadPromise.then(function () {\n                    createAsset(assetEndpoint);\n                }, function (reason) {\n                    deferredUploads[fileIndex].reject(reason);\n                }, function (update) {\n                    deferredUploads[fileIndex].notify(update);\n                });\n            });\n        }\n    };\n    var ensureUniqueFilename = function (deferred) {\n        deferred = deferred || $q.defer();\n        fileBeingUploaded.uniqueName = generateUUID();\n        getUploadSession().then(function () {\n            // console.log('awsSvc, ensureUniqueFilename: ', fileBeingUploaded.uniqueName);\n            //First check for an object with the same name\n            var params = {\n                Key: awsCache.s3.config.params.Prefix + fileBeingUploaded.uniqueName\n            };\n            awsCache.s3.headObject(params, function (err) {\n                if (err) {\n                    if (err.statusCode !== 404) {\n                        console.error(err, err.stack); // an error occurred\n                        deferred.reject(err);\n                    }\n                    else {\n                        // Then, if this is going to be a multipart upload, make sure there isn't already a multipart upload with the same name\n                        if (isSmallUpload()) {\n                            deferred.resolve();\n                        }\n                        else {\n                            svc.getMultipartUploads().then(function (data) {\n                                var findUnique = function (name) {\n                                    // console.log(\"Looking for a unique name\", name);\n                                    for (var i = 0; i < data.Uploads.length; i++) {\n                                        // console.log(\"trying \", data.Uploads[i].Key);\n                                        if (data.Uploads[i].Key === awsCache.s3.config.params.Prefix + name) {\n                                            // console.log(\"Not unique; try again\");\n                                            return findUnique(generateUUID());\n                                        }\n                                    }\n                                    return name;\n                                };\n                                fileBeingUploaded.uniqueName = findUnique(fileBeingUploaded.uniqueName);\n                                deferred.resolve();\n                            });\n                        }\n                    }\n                }\n                else {\n                    //Had a filename collision, try again\n                    fileBeingUploaded.uniqueName = generateUUID();\n                    ensureUniqueFilename(deferred);\n                }\n            });\n        });\n        return deferred.promise;\n    };\n    var generateUUID = function () {\n        var d = new Date().getTime();\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n        });\n        return uuid;\n    };\n    //var generateUniqueFilename = function(filename) {\n    //    var parts = filename.split('.');\n    //    var fileExt = \"\";\n    //    if(parts.length > 1) {\n    //\tfileExt = \".\"+parts.pop();\n    //    }\n    //    var basename = parts.join('.');\n    //    var date = new Date();\n    //    return basename+\"_\"+date.getTime()+fileExt;\n    //};\n    var isSmallUpload = function () {\n        if (fileBeingUploaded.size <= fiveMB) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    var uploadSmallFile = function () {\n        // console.log('awsSvc uploading small file');\n        deferredUpload = $q.defer();\n        putObject().then(function (data) {\n            console.log('UPLOAD SMALL FILE COMPLETE', data);\n        }, function (reason) {\n            console.error('UPLOAD SMALL FILE FAILED: ', reason);\n        }, function (update) {\n            console.log('UPLOAD SMALL FILE UPDATE: ', update);\n        });\n        return deferredUpload.promise;\n    };\n    var putObject = function () {\n        var defer = $q.defer();\n        getUploadSession().then(function putObject() {\n            // console.log('awsSvc, putting object with key: ', awsCache.s3.config.params.Prefix + fileBeingUploaded.uniqueName);\n            getMD5ForFileOrBlob(fileBeingUploaded, 'base64').then(function (md5) {\n                var params = {\n                    Key: awsCache.s3.config.params.Prefix + fileBeingUploaded.uniqueName,\n                    ContentType: fileBeingUploaded.type,\n                    Body: fileBeingUploaded,\n                    ContentMD5: md5,\n                    ACL: PUBLIC_READ\n                };\n                currentRequest = awsCache.s3.putObject(params, function (err, data) {\n                    if (err) {\n                        console.error(err, err.stack); // an error occurred\n                        deferredUpload.reject();\n                    }\n                    else {\n                        // console.log('awsSvc, uploaded file!', data);\n                        deferredUpload.resolve(data); // successful response\n                    }\n                });\n                currentRequest.on('httpUploadProgress', function (progress) {\n                    deferredUpload.notify({\n                        bytesSent: progress.loaded,\n                        bytesTotal: progress.total\n                    });\n                }).on('error', function (err, response) {\n                    console.error('error: ', err, response);\n                    deferredUpload.reject(\"An error occured while uploading the file, please try again.\");\n                });\n            });\n        }, function (reason) {\n            console.error('PUT OBJECT FAILED: ', reason);\n        }, function (update) {\n            console.log('PUT OBJECT UPDATE: ', update);\n        });\n        return defer.promise;\n    };\n    var uploadBigFile = function () {\n        // console.log('awsSvc uploading big file');\n        deferredUpload = $q.defer();\n        createMultipartUpload().then(prepareUploadParts).then(function startUpload() {\n            for (var i = 0; i < MAX_SIMUL_PARTS_UPLOADING; i++) {\n                startNextUploadPart();\n            }\n        });\n        return deferredUpload.promise;\n    };\n    var createMultipartUpload = function () {\n        var defer = $q.defer();\n        getUploadSession().then(function createMultipartUpload() {\n            var params = {\n                Key: awsCache.s3.config.params.Prefix + fileBeingUploaded.uniqueName,\n                ContentType: fileBeingUploaded.type,\n                ACL: PUBLIC_READ\n            };\n            awsCache.s3.createMultipartUpload(params, function (err, data) {\n                if (err) {\n                    console.error(err, err.stack); // an error occurred\n                    defer.reject();\n                }\n                else {\n                    // console.log('awsSvc, created multipart upload!', data);\n                    defer.resolve(data); // successful response\n                }\n            });\n        });\n        return defer.promise;\n    };\n    var prepareUploadParts = function (awsMultipartUpload) {\n        var defer = $q.defer();\n        multipartUpload = awsMultipartUpload;\n        chunks = [];\n        chunkCount = 0;\n        chunksUploaded = 0;\n        chunkSearchIndex = 0;\n        chunkSize = fiveMB;\n        bytesUploaded = 0;\n        if (fileBeingUploaded.size > chunkSize * MAX_CHUNKS) {\n            chunkSize = Math.ceil(fileBeingUploaded.size / MAX_CHUNKS);\n        }\n        chunkCount = Math.ceil(fileBeingUploaded.size / chunkSize);\n        for (var i = 0; i < chunkCount; i++) {\n            var chunk = {};\n            chunk.start = i * chunkSize;\n            chunk.end = chunk.start + chunkSize;\n            chunk.uploaded = 0;\n            if (chunk.end > fileBeingUploaded.size) {\n                chunk.end = fileBeingUploaded.size;\n            }\n            chunk.status = PENDING;\n            chunk.retries = 0;\n            chunks.push(chunk);\n        }\n        defer.resolve();\n        return defer.promise;\n    };\n    var startNextUploadPart = function () {\n        var defer = $q.defer();\n        var chunkIndex = chunkSearchIndex;\n        var foundNextChunk = false;\n        if (!uploadPaused) {\n            while (!foundNextChunk && chunkIndex < chunkCount) {\n                var chunk = chunks[chunkIndex];\n                if (chunk.status === PENDING) {\n                    foundNextChunk = true;\n                    chunk.status = UPLOADING;\n                    var blob = fileBeingUploaded.slice(chunk.start, chunk.end);\n                    chunk.cancel = function () {\n                        chunk.request.abort();\n                        chunk.status = PENDING;\n                        chunk.uploaded = 0;\n                    };\n                    // use $q.all to pass along the part number parameter\n                    $q.all({\n                        partNumber: $q.when(chunkIndex + 1),\n                        eTag: uploadPart(chunkIndex + 1, blob)\n                    }).then(completePart, handleFailedPart).then(function (data) {\n                        defer.resolve(data);\n                    }, function (reason) {\n                        console.error(\"UPLOAD PART FAILED: \", reason);\n                        defer.reject(reason);\n                    }, function (update) {\n                        defer.update(update);\n                    });\n                }\n                else if (chunk.status === COMPLETE && chunkIndex === chunkSearchIndex) {\n                    chunkSearchIndex++;\n                }\n                chunkIndex++;\n            }\n            if (!foundNextChunk) {\n                defer.reject(\"All chunks uploaded\");\n            }\n        }\n        else {\n            defer.reject(\"Upload paused\");\n        }\n        return defer.promise;\n    };\n    var getMD5ForFileOrBlob = function (fileOrBlob, hashType) {\n        var defer = $q.defer();\n        var reader = new FileReader();\n        reader.onload = function () {\n            var data = reader.result;\n            defer.resolve(AWS.util.crypto.md5(new Uint8Array(data), hashType));\n        };\n        reader.readAsArrayBuffer(fileOrBlob);\n        return defer.promise;\n    };\n    var uploadPart = function (partNumber, blob, defer) {\n        // console.log('awsSvc, Uploading part: ', partNumber);\n        if (!defer) {\n            defer = $q.defer();\n        }\n        getUploadSession().then(function () {\n            getMD5ForFileOrBlob(blob, 'base64').then(function (md5) {\n                //console.log(\"MD5 for part '\", partNumber, \"' of size '\", blob.size,\"' is \", md5);\n                var params = {\n                    Bucket: multipartUpload.Bucket,\n                    Key: multipartUpload.Key,\n                    UploadId: multipartUpload.UploadId,\n                    PartNumber: partNumber,\n                    ContentMD5: md5,\n                    Body: blob\n                };\n                chunks[partNumber - 1].request = awsCache.s3.uploadPart(params, function (err, data) {\n                    if (err) {\n                        if (chunks[partNumber - 1].retries < MAX_RETRIES) {\n                            console.error(\"RETRYING PART UPLOAD FOR CHUNK \", partNumber);\n                            chunks[partNumber - 1].request.abort();\n                            chunks[partNumber - 1].retries++;\n                            uploadPart(partNumber, blob, defer);\n                        }\n                        else {\n                            console.error(\"PART UPLOAD FAILED FOR CHUNK \", partNumber, err, err.stack); // an error occurred\n                            chunks[partNumber - 1].status = FAILED;\n                            defer.reject(err);\n                        }\n                    }\n                    else {\n                        //console.log('awsSvc, uploadedPart! data.ETag:', data.ETag);\n                        defer.resolve(data.ETag); // successful response\n                    }\n                });\n                chunks[partNumber - 1].request.on('httpUploadProgress', function (progress) {\n                    bytesUploaded += progress.loaded - chunks[partNumber - 1].uploaded;\n                    chunks[partNumber - 1].uploaded = progress.loaded;\n                    deferredUpload.notify({\n                        bytesSent: bytesUploaded,\n                        bytesTotal: fileBeingUploaded.size\n                    });\n                }).on('error', function (err, response) {\n                    console.log('PART UPLOAD FAILED ON UPDATE: ', err, response);\n                    //defer.reject(err);\n                    //}).on('httpError', function (err, response) {\n                    //\tconsole.log('HTTP ERROR: ', err, response);\n                    //}).on('httpDone', function (response) {\n                    //\tconsole.log('HTTP DONE: ', response);\n                });\n            });\n        });\n        return defer.promise;\n    };\n    var completePart = function (data) {\n        var defer = $q.defer();\n        chunks[data.partNumber - 1].status = COMPLETE;\n        chunks[data.partNumber - 1].part = {\n            ETag: data.eTag,\n            PartNumber: data.partNumber\n        };\n        chunksUploaded++;\n        if (chunksUploaded === chunkCount) {\n            var parts = [];\n            for (var i = 0; i < chunkCount; i++) {\n                parts.push(chunks[i].part);\n            }\n            var params = {\n                Bucket: multipartUpload.Bucket,\n                Key: multipartUpload.Key,\n                UploadId: multipartUpload.UploadId,\n                MultipartUpload: {\n                    Parts: parts\n                }\n            };\n            awsCache.s3.completeMultipartUpload(params, function (err, data) {\n                if (err) {\n                    console.error(err, err.stack); // an error occurred\n                    deferredUpload.reject(err);\n                    defer.reject(err);\n                }\n                else {\n                    deferredUpload.resolve(data);\n                    defer.resolve(data);\n                }\n            });\n        }\n        else {\n            startNextUploadPart();\n        }\n        return defer.promise;\n    };\n    var handleFailedPart = function (err) {\n        console.error(\"PART OF MULTIPART UPLOAD FAILED, CANCELLING UPLOAD\", err);\n        svc.cancelMultipartUpload(multipartUpload);\n        deferredUpload.reject(err);\n    };\n    var cancelCurrentUploadRequests = function () {\n        if (isSmallUpload()) {\n            currentRequest.abort();\n        }\n        else {\n            var chunkIndex = chunkSearchIndex;\n            var foundAllUploadingChunks = false;\n            while (!foundAllUploadingChunks && chunkIndex < chunkCount) {\n                var chunk = chunks[chunkIndex];\n                if (chunk.status === UPLOADING) {\n                    // console.log('awsSvc, Cancelling upload of chunk: ', chunkIndex);\n                    chunk.cancel();\n                }\n                else if (chunk.status === PENDING) {\n                    foundAllUploadingChunks = true;\n                }\n                chunkIndex++;\n            }\n        }\n    };\n    var createAsset = function (assetEndpoint) {\n        var deferred = $q.defer();\n        var assetData = {\n            'url': 'https://s3.amazonaws.com/' + awsCache.s3.config.params.Bucket + '/' + awsCache.s3.config.params.Prefix + fileBeingUploaded.uniqueName,\n            'type': fileBeingUploaded.type,\n            'size': fileBeingUploaded.size,\n            'original_filename': fileBeingUploaded.name\n        };\n        //add tag if necessary\n        if (fileMeta[fileBeingUploaded.name]) {\n            Object.assign(assetData, { tags: fileMeta[fileBeingUploaded.name] });\n            fileMeta[fileBeingUploaded.name] = null;\n        }\n        $http.post(config.apiDataBaseUrl + assetEndpoint, assetData)\n            .success(function (data) {\n            deferredUploads[fileIndex].resolve(data);\n            fileBeingUploaded = null;\n            fileIndex++;\n            startNextUpload(assetEndpoint);\n        })\n            .error(function () {\n            deferredUploads[fileIndex].reject();\n            fileBeingUploaded = null;\n            fileIndex++;\n            startNextUpload(assetEndpoint);\n        });\n        return deferred.promise;\n    };\n    return svc;\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/config.ts\nconfig_config.$inject = [];\nfunction config_config() {\n    var config = window.config ? window.config : {};\n    // Find out the API data url, if not specified:\n    if (!config.apiDataBaseUrl) {\n        config.apiDataBaseUrl = \"//\" + window.location.host;\n    }\n    if (!config.localStorageKey) {\n        config.localStorageKey = \"storyToken\";\n    }\n    if (!config.youtube) {\n        config.youtube = {\n            domain: \"//gdata.youtube.com/\",\n            timeout: 5000\n        };\n    }\n    return config;\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/ittUtils.ts\nittUtils_ittUtils.$inject = ['$timeout'];\nfunction ittUtils_ittUtils($timeout) {\n    return {\n        getSubdomain: getSubdomain,\n        existy: existy,\n        truthy: truthy,\n        generateUUID: generateUUID,\n        isValidURL: isValidURL,\n        stripHtmlTags: stripHtmlTags,\n        pick: pick,\n        bitwiseCeil: bitwiseCeil,\n        setNgOpts: setNgOpts,\n        intersection: intersection,\n        parseTime: parseTime,\n        renameKey: renameKey,\n        ngTimeout: ngTimeout,\n        cancelNgTimeout: cancelNgTimeout,\n        capitalize: capitalize,\n        slugify: slugify\n    };\n    function ngTimeout(fn, duration) {\n        return $timeout(fn, duration || 0);\n    }\n    function cancelNgTimeout(fn) {\n        $timeout.cancel(fn);\n    }\n}\nfunction capitalize(str) {\n    if (existy(str)) {\n        return str.slice(0, 1).toUpperCase() + str.slice(1);\n    }\n}\n//using bitwise operators up to 20% faster than Math.ceil (js hint not a fan of bitwise operators)\nfunction bitwiseCeil(n) {\n    return n + (n < 0 ? 0 : 1) >> 0; // jshint ignore:line\n}\nfunction pick(obj, keys) {\n    return keys.reduce(function (accm, field) {\n        if (existy(obj[field])) {\n            accm[field] = angular.copy(obj[field]);\n        }\n        return accm;\n    }, {});\n}\nfunction omit(obj) {\n    var keys = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        keys[_i - 1] = arguments[_i];\n    }\n    return Object.keys(obj).reduce(function (result, prop) {\n        if (keys.indexOf(prop) === -1) {\n            result[prop] = obj[prop];\n        }\n        return result;\n    }, {});\n}\nfunction stripHtmlTags(str) {\n    return String(str).replace(/<\\/?[^>]*>/gm, '');\n}\nfunction getSubdomain(host) {\n    if (host.indexOf('.') < 0) {\n        return null;\n    }\n    else {\n        return host.split('.')[0];\n    }\n}\nfunction existy(x) {\n    return x != null;\n}\n/*\n e.g. [null, undefined, '', 0, 1, false true].map(truthy)\n -> [false, false, false, false, true, false, true]\n */\nfunction truthy(x) {\n    return (x != false) && existy(x);\n}\nfunction generateUUID() {\n    //js hint does not like the bitwise operators in use below.\n    /* jshint ignore:start */\n    var d = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n    });\n    return uuid;\n    /* jshint ignore:end */\n}\nfunction isValidURL(url) {\n    var URL_REGEXP = /^(((?:http)s?:\\/\\/)|(?:\\/\\/))(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\\.)+(?:[A-Z]{2,6}\\.?|[A-Z0-9-]{2,}\\.?)|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})(?::\\d+)?(?:\\/?|[\\/?]\\S+)$/i;\n    return URL_REGEXP.test(url);\n}\n//this function depends on selectSerivce, and getSelectOpts being defined on the\n//controller where used.\nfunction setNgOpts(type) {\n    return \"option.value as option.name for option in $ctrl.getSelectOpts('\" + type + \"')\";\n}\nfunction intersection(x, y) {\n    var ret = [];\n    for (var i = 0; i < x.length; i++) {\n        for (var z = 0; z < y.length; z++) {\n            if (x[i] == y[z]) {\n                ret.push(i);\n                break;\n            }\n        }\n    }\n    return ret;\n}\n// supports these formats: \"1:10\", 1m10s\", \"1m\", \"10s\", or a plain number (in seconds)\nfunction parseTime(t) {\n    if (!isNaN(parseFloat(t)) && isFinite(t)) {\n        return t;\n    }\n    var parse = t.match(/^(\\d+)[m:]([\\d\\.]+)s?$/);\n    if (parse) {\n        return (parseFloat(parse[1] * 60) + parseFloat(parse[2]));\n    }\n    parse = t.match(/^([\\d\\.]+)s$/);\n    if (parse) {\n        return parseFloat(parse[1]);\n    }\n    parse = t.match(/^([\\d\\.]+)m$/);\n    if (parse) {\n        return parseFloat(parse[1] * 60);\n    }\n    console.error(\"Tried to parse invalid time string: \", t);\n}\nfunction renameKey(oldName, newName, obj) {\n    if (obj.hasOwnProperty(oldName) && !obj.hasOwnProperty(newName) && oldName !== newName) {\n        obj[newName] = obj[oldName];\n        delete obj[oldName];\n    }\n}\nfunction slugify(str) {\n    return str.toLowerCase().replace(/ /g, '-').replace(/[^\\w-]/g, '');\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/dataSvc/dataSvc.ts\n// TODO: load and resolve categories\n\n\ndataSvc_dataSvc.$inject = ['$q', '$http', '$routeParams', '$rootScope', '$location', 'ittUtils', 'config', 'authSvc', 'appState', 'modelSvc', 'errorSvc', 'mockSvc', 'questionAnswersSvc', 'episodeTheme'];\nfunction dataSvc_dataSvc($q, $http, $routeParams, $rootScope, $location, ittUtils, config, authSvc, appState, modelSvc, errorSvc, mockSvc, questionAnswersSvc, episodeTheme) {\n    var svc = Object.create(null);\n    /* ------------------------------------------------------------------------------ */\n    svc.sendSocialshareEmail = sendSocialshareEmail;\n    function sendSocialshareEmail(tlId, email) {\n        return SANE_POST(\"/v3/timelines/\" + tlId + \"/share_via_email\", email);\n    }\n    svc.beginBackgroundTranslations = beginBackgroundTranslations;\n    function beginBackgroundTranslations(episodeId) {\n        return SANE_GET('/v3/episodes/' + episodeId + '/update_translations');\n    }\n    //NEED to find impl with params arg\n    svc.batchUploadTranscripts = batchUploadTranscripts;\n    function batchUploadTranscripts(episodeId, formData, params) {\n        var config = {\n            transformRequest: angular.identity,\n            headers: { 'Content-type': undefined }\n        };\n        if (ittUtils.existy(params) && Object.keys(params).length > 0) {\n            Object.assign(config, { params: params });\n        }\n        // return $q(function(resolve){return resolve(formData)});\n        return SANE_POST('/v3/episodes/' + episodeId + '/events/import_subtitles', formData, config);\n    }\n    //used in ittContainer\n    svc.generateNewNarrative = generateNewNarrative;\n    function generateNewNarrative(containerId, postData) {\n        return SANE_POST('/v3/containers/' + containerId + '/narratives', postData)\n            .then(function (resp) {\n            return resp.data;\n        })\n            .catch(function (e) {\n            console.error('Error generating new narrative:', e);\n        });\n    }\n    // WARN ittNarrative and ittNarrativeTimeline call dataSvc directly, bad practice. At least put modelSvc in between\n    svc.getNarrative = function (narrativeId) {\n        // Special case here, since it needs to call getNonce differently:\n        var defer = $q.defer();\n        var cachedNarrative = modelSvc.narratives[narrativeId];\n        var subdomain = ittUtils.getSubdomain($location.host());\n        var urlParams = '';\n        if (ittUtils.existy(cachedNarrative) && ittUtils.existy(cachedNarrative.narrative_subdomain) && subdomain !== cachedNarrative.narrative_subdomain) {\n            urlParams = '?customer=' + cachedNarrative.narrative_subdomain;\n        }\n        authSvc.authenticate('narrative=' + narrativeId).then(function () {\n            $http.get(config.apiDataBaseUrl + '/v3/narratives/' + narrativeId + '/resolve' + urlParams)\n                .then(function (response) {\n                response.data.timelines.sort(function (a, b) {\n                    return a.sort_order - b.sort_order;\n                });\n                modelSvc.cache('narrative', svc.resolveIDs(response.data));\n                defer.resolve(modelSvc.narratives[response.data._id]);\n            });\n        });\n        return defer.promise;\n    };\n    svc.getNarrativeOverview = function (narrativeId) {\n        return GET('/v3/narratives/' + narrativeId);\n    };\n    svc.getNarrativeExportAsSpreadsheet = function (nId) {\n        var url = '/v3/narratives/' + nId + '.xlsx';\n        window.open(url);\n    };\n    svc.getCustomerLinkStatusReportSpreadsheet = getCustomerLinkStatusReportSpreadsheet;\n    function getCustomerLinkStatusReportSpreadsheet(customerId) {\n        var url = '/v3/customers/' + customerId + '/link_status.xlsx';\n        window.open(url);\n    }\n    var cachedPurchases = false;\n    svc.getUserNarratives = function (userId) {\n        if (cachedPurchases) {\n            var defer = $q.defer();\n            defer.resolve(cachedPurchases);\n            return defer.promise;\n        }\n        else {\n            return GET('/v3/users/' + userId + '/narrative_purchases', function (data) {\n                cachedPurchases = data;\n                return data;\n            });\n        }\n    };\n    svc.getCustomerList = function () {\n        return GET('/v3/customers/', function (customers) {\n            angular.forEach(customers, function (customer) {\n                modelSvc.cache('customer', customer);\n            });\n            return customers;\n        });\n    };\n    svc.getCustomer = function (customerId, retrieve) {\n        if (!(authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin'))) {\n            return $q(function (resolve) {\n                resolve({});\n            });\n        }\n        if (modelSvc.customers[customerId]) {\n            if (retrieve) {\n                return $q(function (resolve) {\n                    resolve(modelSvc.customers[customerId]);\n                });\n            }\n            // have it already, or at least already getting it\n        }\n        else {\n            return SANE_GET('/v3/customers/' + customerId)\n                .then(function (customer) {\n                modelSvc.cache('customer', customer); // the real thing\n                return modelSvc.customers[customer._id];\n            })\n                .catch(function (e) { return console.log('wtf mate?', e); });\n        }\n    };\n    // getEpisode just needs to retrieve all episode data from the API, and pass it on\n    // to modelSvc.  No promises needed, let the $digest do the work\n    svc.getEpisode = function (epId, segmentId) {\n        if (!epId) {\n            throw ('no episode ID supplied to dataSvc.getEpisode');\n        }\n        // Removing this as it caused race conditions: sometimes the asset and event data has already been loaded, sometimes not.\n        // This will cause epsiode data to be requested from the api every time the page loads, instead of trying to recycle the cache, but that's probably safer anyway\n        // if (modelSvc.episodes[epId]) {\n        // \tconsole.log(\"have episode: \", modelSvc.episodes[epId]);\n        // \t$rootScope.$emit(\"dataSvc.getEpisode.done\");\n        // \treturn; // already requested\n        // }\n        modelSvc.cache('episode', {\n            _id: epId\n        }); // init with empty object to be filled by asynch process\n        if ($routeParams.local) {\n            mockSvc.mockEpisode(epId);\n            // console.log(\"Got all events\");\n            $rootScope.$emit('dataSvc.getEpisode.done');\n        }\n        else {\n            authSvc.authenticate()\n                .then(function () {\n                return getCommon();\n            })\n                .then(function () {\n                return getEpisode(epId, segmentId);\n            });\n        }\n    };\n    svc.getEpisodeOverview = function (epId) {\n        return GET('/v3/episodes/' + epId);\n    };\n    svc.getNarrativeList = function (customer) {\n        if (!ittUtils.existy(customer)) {\n            return GET('/v3/narratives/');\n        }\n        return GET('/v3/narratives?customer_id=' + customer._id)\n            .then(function (narratives) {\n            modelSvc.assocNarrativesWithCustomer(customer, narratives);\n        });\n    };\n    svc.createUserGroup = function (groupName) {\n        return POST('/v3/groups', {\n            'group': {\n                'name': groupName\n            }\n        });\n    };\n    svc.createNarrative = function (narrativeData) {\n        delete narrativeData.templateUrl;\n        return SANE_POST('/v3/narratives', narrativeData);\n    };\n    svc.updateNarrative = function (narrativeData) {\n        delete narrativeData.templateUrl;\n        return SANE_PUT('/v3/narratives/' + narrativeData._id, narrativeData);\n    };\n    svc.createChildEpisode = function (childData) {\n        // console.log(\"about to create child epsiode\", childData);\n        return POST('/v3/episodes', {\n            'episode': childData\n        });\n    };\n    svc.createEpisodeSegment = function (narrativeId, segmentData) {\n        return POST('/v3/timelines/' + narrativeId + '/episode_segments', segmentData);\n    };\n    svc.storeTimeline = function (narrativeId, origTimeline) {\n        var permitted = [\n            'sort_order',\n            'path_slug',\n            'name',\n            'description',\n            'hidden',\n            'timeline_image_ids',\n            'narrative_id',\n            '_id'\n        ];\n        var timeline = ittUtils.pick(origTimeline, permitted);\n        if (timeline._id) {\n            return PUT('/v3/timelines/' + timeline._id, timeline, function (ret) {\n                // TEMPORARY until api stops doing this\n                if (typeof ret.name === 'string') {\n                    ret.name = {\n                        en: ret.name\n                    };\n                }\n                if (typeof ret.description === 'string') {\n                    ret.description = {\n                        en: ret.description\n                    };\n                }\n                return ret;\n            });\n        }\n        else {\n            return POST('/v3/narratives/' + narrativeId + '/timelines', timeline, function (ret) {\n                // TEMPORARY until api stops doing this\n                if (typeof ret.name === 'string') {\n                    ret.name = {\n                        en: ret.name\n                    };\n                }\n                if (typeof ret.description === 'string') {\n                    ret.description = {\n                        en: ret.description\n                    };\n                }\n                return ret;\n            });\n        }\n    };\n    // /v3/timelines/:id\n    svc.deleteTimeline = function (tlId) {\n        return PDELETE('/v3/timelines/' + tlId).then(function (resp) {\n            return resp;\n        });\n    };\n    svc.getSingleAsset = function (assetId) {\n        if (assetId) {\n            return GET('/v1/assets/' + assetId);\n        }\n        else {\n            return $q(function (resolve) {\n                resolve(undefined);\n            });\n        }\n    };\n    var dataCache = {\n        template: {},\n        layout: {},\n        style: {}\n    };\n    // Gets all layouts, styles, and templates\n    var gettingCommon = false;\n    var getCommonDefer = $q.defer();\n    var getCommon = function () {\n        // console.log(\"dataSvc.getCommon\");\n        if (gettingCommon) {\n            return getCommonDefer.promise;\n        }\n        else {\n            gettingCommon = true;\n            $q.all([\n                $http.get(config.apiDataBaseUrl + '/v1/templates'),\n                $http.get(config.apiDataBaseUrl + '/v1/layouts'),\n                $http.get(config.apiDataBaseUrl + '/v1/styles')\n            ])\n                .then(function (responses) {\n                svc.cache('templates', responses[0].data);\n                svc.cache('layouts', responses[1].data);\n                svc.cache('styles', responses[2].data);\n                gettingCommon = true;\n                getCommonDefer.resolve();\n            }, function () {\n                // console.error(\"getCommon failed\", failure);\n                gettingCommon = false;\n                getCommonDefer.reject();\n            });\n        }\n        return getCommonDefer.promise;\n    };\n    svc.getCommon = getCommon; // TEMPORARY for ittContainer, so it can get the scene template ID.  After template refactor none of this id stuff will be necessary\n    svc.cache = function (cacheType, dataList) {\n        // console.log(\"dataSvc.cache\", cacheType, dataList);\n        angular.forEach(dataList, function (item) {\n            if (cacheType === 'templates') {\n                /* API format:\n                 _id\t\t\t\t\t\t\t\t\t\"528d17ebba4f65e578000007\"\n                 applies_to_episodes\tfalse  (if true, event_types is empty)\n                 created_at\t\t\t\t\t\"2013-11-20T20:13:31Z\"\n                 event_types\t\t\t\t\t[\"Scene\"]    (or Annotation, Link, Upload)\n                 name\t\t\t\t\t\t\t\t\"Scene 2 columns right\"\n                 updated_at\t\t\t\t\t\"2013-11-20T20:13:31Z\"\n                 url\t\t\t\t\t\t\t\t\t\"templates/scene-centered.html\"\n                 type: string\n                 */\n                if (item.applies_to_episodes) {\n                    dataCache.template[item._id] = createInstance('EpisodeTemplate', {\n                        id: item._id,\n                        url: item.url,\n                        type: 'Episode',\n                        displayName: item.name,\n                        customer_ids: item.customer_ids,\n                        css_configuration: item.css_configuration,\n                        fonts: item.fonts,\n                        pro_episode_template: item.pro_episode_template\n                    });\n                }\n                else if (item.event_types && item.event_types && item.event_types[0] === 'Scene') {\n                    dataCache.template[item._id] = createInstance('LayoutTemplate', {\n                        id: item._id,\n                        url: item.url,\n                        type: 'Scene',\n                        displayName: item.name\n                    });\n                }\n                else {\n                    dataCache.template[item._id] = createInstance('ItemTemplate', {\n                        id: item._id,\n                        url: item.url,\n                        type: item.event_types && item.event_types[0],\n                        displayName: item.name\n                    });\n                }\n                // console.log('template?', dataCache.template[item._id]);\n            }\n            else if (cacheType === 'layouts') {\n                /* API format:\n                 _id\t\t\t\t\t\t\t\t\t\"528d17ebba4f65e57800000a\"\n                 created_at\t\t\t\t\t\"2013-11-20T20:13:31Z\"\n                 css_name\t\t\t\t\t\t\"videoLeft\"\n                 description\t\t\t\t\t\"The video is on the left\"\n                 display_name\t\t\t\t\"Video Left\"\n                 updated_at\t\t\t\t\t\"2013-11-20T20:13:31Z\"\n                 */\n                dataCache.layout[item._id] = createInstance('Layout', {\n                    id: item._id,\n                    css_name: item.css_name,\n                    displayName: item.display_name\n                });\n            }\n            else if (cacheType === 'styles') {\n                /* API format:\n                 _id\t\t\t\t\t\t\"528d17f1ba4f65e578000036\"\n                 created_at\t\t\"2013-11-20T20:13:37Z\"\n                 css_name\t\t\t\"typographySerif\"\n                 description\t\t\"Controls the fonts and relative text sizes\"\n                 display_name\t\"Typography Serif\"\n                 updated_at\t\t\"2013-11-20T20:13:37Z\"\n                 */\n                dataCache.style[item._id] = createInstance('Style', {\n                    id: item._id,\n                    css_name: item.css_name,\n                    displayName: item.display_name\n                });\n            }\n        });\n    };\n    // TODO more template management: add/delete/edit\n    svc.createTemplate = function (templateData) {\n        // TEMPORARY.  Doesn't check to see if it's adding a duplicate, or do any other sort of data prophylaxis\n        /*  sample:\n         {\n         url: 'templates/item/foo.html',\n         name: 'foo',\n         event_types: ['Upload'], // Upload, Scene, Plugin, Annotation, Link\n         applies_to_episode: false,\n         applies_to_narrative: false\n         }\n         */\n        return POST('/v1/templates', templateData);\n    };\n    // svc.createStyle = function (styleData) {\n    // \t// ALSO TEMPORARY, UNSAFE\n    // \treturn POST(\"/v1/styles\", styleData);\n    // };\n    // transform API common IDs into real values\n    svc.resolveIDs = function (obj) {\n        // console.log(\"resolving IDs\", obj);\n        // temporary:\n        // if (obj.everyone_group && !obj.template_id) {\n        //   obj.templateUrl = 'templates/narrative/default.html';\n        // }\n        if (obj.template_id) {\n            if (dataCache.template[obj.template_id]) {\n                if (obj.master_asset_id == null) {\n                    obj.templateUrl = dataCache.template[obj.template_id].url;\n                }\n            }\n            else {\n                errorSvc.error({\n                    data: 'Couldn\\'t get templateUrl for id ' + obj.template_id\n                });\n            }\n        }\n        if (obj.layout_id) {\n            var layouts = [];\n            if (obj.type === 'Scene') {\n                layouts = ['', ''];\n            }\n            angular.forEach(obj.layout_id, function (id) {\n                if (dataCache.layout[id]) {\n                    if (obj.type === 'Scene') {\n                        //conditions outside of 'showCurrent' necessary for USC scholar\n                        if (dataCache.layout[id].css_name === 'showCurrent') {\n                            layouts[1] = dataCache.layout[id].css_name;\n                        }\n                        else if (dataCache.layout[id].css_name === 'splitRequired') {\n                            layouts[2] = dataCache.layout[id].css_name;\n                        }\n                        else {\n                            layouts[0] = dataCache.layout[id].css_name;\n                        }\n                    }\n                    else {\n                        layouts.push(dataCache.layout[id].css_name);\n                    }\n                }\n                else {\n                    errorSvc.error({\n                        data: 'Couldn\\'t get layout for id ' + id\n                    });\n                }\n            });\n            if (layouts.length > 0) {\n                obj.layouts = layouts;\n            }\n            //delete obj.layout_id;\n        }\n        if (obj.style_id) {\n            var styles = [];\n            angular.forEach(obj.style_id, function (id) {\n                if (dataCache.style[id]) {\n                    styles.push(dataCache.style[id].css_name);\n                }\n                else {\n                    errorSvc.error({\n                        data: 'Couldn\\'t get style for id ' + id\n                    });\n                }\n            });\n            if (styles.length > 0) {\n                obj.styles = styles;\n            }\n            //delete obj.style_id;\n        }\n        return obj;\n    };\n    var getAssetIdFromEvent = function (event) {\n        if (event.hasOwnProperty('asset_id')) {\n            if (event.asset_id) {\n                return event.asset_id;\n            }\n        }\n        if (event.hasOwnProperty('annotation_image_id')) {\n            if (event.annotation_image_id) {\n                return event.annotation_image_id;\n            }\n        }\n        if (event.hasOwnProperty('link_image_id')) {\n            if (event.link_image_id) {\n                return event.link_image_id;\n            }\n        }\n        if (event.hasOwnProperty('avatar_id')) {\n            if (event.avatar_id) {\n                return event.avatar_id;\n            }\n        }\n    };\n    var getAssetIdsFromEvents = function (events) {\n        //asset_id,\n        //annotation_image_id\n        //link_image_id\n        var idsobject = {}; //object is way faster to prevent duplicates\n        for (var i = 0, length = events.length; i < length; i++) {\n            var id = getAssetIdFromEvent(events[i]);\n            if (id) {\n                if (!(id in idsobject)) {\n                    idsobject[id] = 0;\n                }\n            }\n        }\n        //now make an array instead of an object\n        var ids = Object.keys(idsobject);\n        return ids;\n    };\n    svc.getAssetsByAssetIds = getAssetsByAssetIds;\n    function getAssetsByAssetIds(assetIds) {\n        var assetIdsObj = Object.create(null);\n        assetIdsObj.asset_ids = assetIds;\n        return SANE_POST('/v1/assets', assetIdsObj)\n            .then(function (resp) { return resp.data.files; });\n    }\n    svc.fetchAndCacheAssetsByIds = fetchAndCacheAssetsByIds;\n    function fetchAndCacheAssetsByIds(assetIds) {\n        return getAssetsByAssetIds(assetIds)\n            .then(function (assets) {\n            assets.forEach(function (asset) {\n                modelSvc.cache('asset', asset);\n            });\n            //return cached assets\n            return assetIds.reduce(function (asx, id) {\n                asx.push(modelSvc.assets[id]);\n                return asx;\n            }, []);\n        });\n    }\n    // auth and common are already done before this is called.  Batches all necessary API calls to construct an episode\n    var getEpisode = function (epId, segmentId) {\n        // The url and return data differ depending on whether we're getting a (resolved) segment or a normal episode:\n        // console.log(\"dataSvc.getEpisode\");\n        var url = (segmentId) ? '/v3/episode_segments/' + segmentId + '/resolve' : '/v3/episodes/' + epId;\n        $http.get(config.apiDataBaseUrl + url)\n            .success(function (ret) {\n            var episodeData = Object.create(null);\n            if (ret) {\n                episodeData = (ret.episode ? ret.episode : ret); // segment has the episode data in ret.episode; that's all we care about at this point\n            }\n            if (episodeData.status === 'Published' || authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin')) {\n                var episodeTemplate = dataCache.template[episodeData.template_id];\n                episodeData.template = episodeTemplate;\n                modelSvc.cache('episode', svc.resolveIDs(episodeData));\n                if (episodeTemplate) {\n                    episodeTheme.setTheme(episodeTemplate);\n                }\n                getEvents(epId, segmentId)\n                    .success(function (events) {\n                    events = events || [];\n                    getEventActivityDataForUser(events, 'Plugin', epId);\n                    angular.forEach(events, function (eventData) {\n                        eventData.cur_episode_id = epId; // So the player doesn't need to care whether it's a child or parent episode\n                        modelSvc.cache('event', svc.resolveIDs(eventData));\n                    });\n                    modelSvc.resolveEpisodeEvents(epId);\n                    var assetIds = getAssetIdsFromEvents(events);\n                    assetIds = (typeof assetIds !== 'undefined' && assetIds.length > 0) ? assetIds : [];\n                    // we need to also get the master asset and poster, while we are at it\n                    assetIds.push(episodeData.master_asset_id);\n                    //add template assets - more to come.\n                    if (episodeData.poster_frame_id) {\n                        assetIds.push(episodeData.poster_frame_id);\n                    }\n                    //add template assets\n                    // if (episodeTemplate.css_configuration) {\n                    //   const templateLogoImgId = episodeTemplate.css_configuration.image_logo_bottom_right_id;\n                    //   assetIds.push(templateLogoImgId);\n                    // }\n                    //batch get assets\n                    getAssetsByAssetIds(assetIds)\n                        .then(function (assets) {\n                        assets.forEach(function (asset) {\n                            modelSvc.cache('asset', asset);\n                        });\n                        modelSvc.resolveEpisodeAssets(epId);\n                        $rootScope.$emit('dataSvc.getEpisode.done');\n                    });\n                })\n                    .error(function () {\n                    errorSvc.error({\n                        data: 'API call to get events failed.'\n                    });\n                });\n            }\n            else {\n                errorSvc.error({\n                    data: 'This episode has not yet been published.'\n                });\n            }\n        })\n            .error(function () {\n            errorSvc.error({\n                data: 'API call to /v3/episodes/' + epId + ' failed (bad episode ID?)'\n            });\n        });\n    };\n    // calls getContainer, iterates to all parents before finally resolving\n    svc.getContainerAncestry = function (containerId, episodeId, defer) {\n        defer = defer || $q.defer();\n        svc.getContainer(containerId, episodeId)\n            .then(function (id) {\n            var container = modelSvc.containers[id];\n            if (container.parent_id) {\n                svc.getContainerAncestry(container.parent_id, episodeId, defer);\n            }\n            else {\n                defer.resolve(id);\n            }\n        });\n        return defer.promise;\n    };\n    //getEvents returns the data via a promise, instead of just setting modelSvc\n    var getEvents = function (epId, segmentId) {\n        var endpoint = (segmentId) ? '/v3/episode_segments/' + segmentId + '/events' : '/v3/episodes/' + epId + '/events';\n        return $http.get(config.apiDataBaseUrl + endpoint);\n    };\n    var getEventActivityDataForUser = function (events, activityType, epId) {\n        angular.forEach(events, function (eventData) {\n            if (eventData.type === 'Plugin') {\n                (function (evData) {\n                    questionAnswersSvc.getUserAnswer(evData._id, appState.user._id)\n                        .then(function (userAnswer) {\n                        if (userAnswer.data) {\n                            evData.data._plugin.hasBeenAnswered = true;\n                            var i = 0;\n                            var angularContinue = true;\n                            angular.forEach(evData.data._plugin.distractors, function (distractor) {\n                                if (angularContinue) {\n                                    if (distractor.index === userAnswer.data.index) {\n                                        distractor.selected = true;\n                                        evData.data._plugin.selectedDistractor = distractor.index;\n                                        angularContinue = false;\n                                    }\n                                    i++;\n                                }\n                            });\n                            modelSvc.cache('event', svc.resolveIDs(evData));\n                        }\n                        else {\n                            console.error('Got no user data from getUserAnswer:', userAnswer);\n                        }\n                    });\n                }(eventData));\n            }\n        });\n        modelSvc.resolveEpisodeEvents(epId);\n    };\n    /* ------------------------------------------------------------------------------ */\n    // PRODUCER\n    // a different idiom here, let's see if this is easier to conceptualize.\n    // to use GET(), pass in the API endpoint, and an optional callback for post-processing of the results\n    var GET = function (path, postprocessCallback) {\n        // console.log(\"GET\", path);\n        var defer = $q.defer();\n        authSvc.authenticate()\n            .then(function () {\n            $http.get(config.apiDataBaseUrl + path)\n                .then(function (response) {\n                var ret = response.data;\n                if (postprocessCallback) {\n                    ret = postprocessCallback(ret);\n                }\n                return defer.resolve(ret);\n            });\n        });\n        return defer.promise;\n    };\n    var SANE_GET = function (path) {\n        //wrapping a method in a promises that is already using functions that return promises\n        //is an anti-pattern.\n        //simply return this promise\n        return authSvc.authenticate()\n            .then(function () {\n            //then return this promise\n            return $http.get(config.apiDataBaseUrl + path)\n                .then(function (resp) {\n                //SANE_GET will resolve to this\n                return resp.data;\n            });\n        });\n    };\n    var SANE_POST = function (path, data, config) {\n        if (config) {\n            return $http.post(path, data, config);\n        }\n        return $http.post(path, data);\n    };\n    var SANE_PUT = function (path, data) {\n        return $http.put(config.apiDataBaseUrl + path, data);\n    };\n    var PUT = function (path, putData, postprocessCallback) {\n        var defer = $q.defer();\n        $http({\n            method: 'PUT',\n            url: config.apiDataBaseUrl + path,\n            data: putData\n        })\n            .success(function (response) {\n            var ret = response;\n            if (postprocessCallback) {\n                ret = postprocessCallback(ret);\n            }\n            defer.resolve(ret);\n        });\n        return defer.promise;\n    };\n    var POST = function (path, postData, postprocessCallback) {\n        var defer = $q.defer();\n        $http({\n            method: 'POST',\n            url: config.apiDataBaseUrl + path,\n            data: postData\n        })\n            .success(function (response) {\n            var ret = response;\n            if (postprocessCallback) {\n                ret = postprocessCallback(ret);\n            }\n            defer.resolve(ret);\n        });\n        return defer.promise;\n    };\n    var DELETE = function (path) {\n        var defer = $q.defer();\n        $http({\n            method: 'DELETE',\n            url: config.apiDataBaseUrl + path,\n        })\n            .success(function (data) {\n            // console.log(\"Deleted:\", data);\n            return defer.resolve(data);\n        });\n        return defer.promise;\n    };\n    var PDELETE = function (path) {\n        return $http({\n            method: 'DELETE',\n            url: config.apiDataBaseUrl + path\n        }).then(function (resp) {\n            return resp;\n        });\n    };\n    /*\n     Circumstances in which we need containers:\n     - start at root, climb down on demand\n     - start at episode, need all ancestors\n  \n     loading any container should\n     - cache its own (complete) data\n     - cache its (incomplete) children\n     load all of its ancestors if not already present (datasvc will need to keep a list of container_ids it's already requested, to avoid circular refs to modelSvc)\n  \n     */\n    svc.getContainerRoot = function () {\n        // This is only used by episodelist.  Loads root container, returns a list of root-level container IDs\n        return GET('/v3/containers', function (containers) {\n            var customerIDs = [];\n            angular.forEach(containers, function (customer) {\n                // cache the customer data:\n                modelSvc.cache('container', customer);\n                customerIDs.push(customer._id);\n            });\n            return customerIDs;\n        });\n    };\n    svc.getContainer = function (id, episodeId) {\n        return GET('/v3/containers/' + id, function (containers) {\n            modelSvc.cache('container', containers[0]);\n            var container = modelSvc.containers[containers[0]._id];\n            // Get the container' asset list:\n            svc.getContainerAssets(id, episodeId);\n            // Ensure container.children refers to items in modelSvc cache:\n            if (container.children) {\n                for (var i = 0; i < container.children.length; i++) {\n                    container.children[i] = modelSvc.containers[container.children[i]._id];\n                }\n                // QUICK HACK to get episode status for inter-episode nav; stuffing it into the container data\n                // Wasteful of API calls, discards useful data\n                var getSiblings = false;\n                if (!episodeId) {\n                    getSiblings = true; // we're in a container list\n                }\n                // if (episodeId && modelSvc.episodes[episodeId].navigation_depth > 0) {\n                // \tgetSiblings = true;\n                // }\n                if (getSiblings) {\n                    angular.forEach(container.children, function (child) {\n                        if (child.episodes[0]) {\n                            svc.getEpisodeOverview(child.episodes[0])\n                                .then(function (overview) {\n                                if (overview) {\n                                    child.status = overview.status;\n                                    child.title = overview.title; // name == container, title == episode\n                                    modelSvc.cache('container', child); // trigger setLang\n                                }\n                                else {\n                                    // This shouldn't ever happen, but apparently it does.\n                                    // (Is this a permissions error? adding warning to help track it down)\n                                    console.error('Got no episode data for ', child.episodes[0]);\n                                }\n                            });\n                        }\n                    });\n                }\n            }\n            return containers[0]._id;\n        });\n    };\n    svc.getContainerAssets = function (containerId, episodeId) {\n        return $http.get(config.apiDataBaseUrl + '/v1/containers/' + containerId + '/assets')\n            .success(function (containerAssets) {\n            modelSvc.containers[containerId].assetsHaveLoaded = true;\n            angular.forEach(containerAssets.files, function (asset) {\n                modelSvc.cache('asset', asset);\n            });\n            modelSvc.resolveEpisodeAssets(episodeId);\n        });\n    };\n    svc.createContainer = function (container) {\n        var defer = $q.defer();\n        // TODO sanitize\n        var newContainer = {\n            container: {\n                customer_id: container.customer_id,\n                name: container.name,\n                parent_id: container.parent_id\n                // keywords: [] // for now\n            }\n        };\n        // store in API and resolve with results instead of container\n        POST('/v3/containers', newContainer)\n            .then(function (data) {\n            // console.log(\"CREATED CONTAINER\", data);\n            modelSvc.cache('container', data);\n            var newContainer = modelSvc.containers[data._id];\n            var parentId = newContainer.parent_id;\n            // add it to the parent's child list (WARN I'm mucking around in modelSvc inappropriately here I think)\n            // console.log(modelSvc.containers[parentId]);\n            modelSvc.containers[parentId].children.push(newContainer);\n            defer.resolve(newContainer);\n        });\n        return defer.promise;\n    };\n    svc.updateContainer = function (container) {\n        //TODO sanitize\n        var defer = $q.defer();\n        if (!container._id) {\n            console.error('Tried to update a container with no id', container);\n            defer.reject();\n        }\n        PUT('/v3/containers/' + container._id, container, function (data) {\n            modelSvc.cache('container', data);\n            defer.resolve(data);\n        });\n        return defer.promise;\n    };\n    svc.deleteContainer = deleteContainer;\n    function deleteContainer(containerId) {\n        // DANGER WILL ROBINSON incomplete and unsafe.\n        // only for deleting test data for now, don't expose this to the production team.\n        return PDELETE('/v3/containers/' + containerId);\n    }\n    // Create new episodes, c.f. storeEpisode.   TODO mild cruft\n    svc.createEpisode = function (episode) {\n        //Default the status of the episode to 'Unpublished'\n        episode.status = 'Unpublished';\n        var defer = $q.defer();\n        // console.log(\"Attempting to create \", episode);\n        POST('/v3/episodes', episode)\n            .then(function (data) {\n            // console.log(\"Created episode: \", data);\n            // muck around in modelSvc.containers again:\n            modelSvc.containers[data.container_id].episodes = [data._id];\n            modelSvc.containers[data.container_id].status = data.status;\n            defer.resolve(data);\n        });\n        return defer.promise;\n    };\n    // Update existing episodes, c.f. createEpisode TODO mild cruft\n    svc.storeEpisode = function (epData) {\n        var preppedData = prepEpisodeForStorage(epData);\n        console.log('prepped for storage:', preppedData);\n        if (preppedData != null) {\n            return PUT('/v3/episodes/' + preppedData._id, preppedData);\n        }\n        else {\n            return $q.reject(false);\n        }\n    };\n    svc.deleteItem = function (evtId) {\n        return DELETE('/v3/events/' + evtId);\n    };\n    svc.createAsset = function (containerId, asset) {\n        var createAssetDefer = $q.defer();\n        asset.container_id = containerId;\n        if (asset._id && asset._id.match(/internal/)) {\n            delete asset._id;\n        }\n        asset = modelSvc.deriveAsset(asset);\n        console.log('Attempting to create asset ', asset);\n        POST('/v1/containers/' + containerId + '/assets', asset)\n            .then(function (data) {\n            modelSvc.containers[data.file.container_id].episodes = [data.file._id];\n            modelSvc.cache('asset', data.file);\n            createAssetDefer.resolve(data.file);\n            //modelSvc.resolveEpisodeAssets(episodeId);\n        });\n        return createAssetDefer.promise;\n    };\n    svc.deleteAsset = function (assetId) {\n        return DELETE('/v1/assets/' + assetId);\n    };\n    // TODO need safety checking here\n    svc.storeItem = function (evt) {\n        evt = prepItemForStorage(evt);\n        if (!evt) {\n            return $q.reject({});\n        }\n        if (evt && evt._id && !evt._id.match(/internal/)) {\n            // update\n            return PUT('/v3/events/' + evt._id, {\n                event: evt\n            });\n        }\n        else {\n            // create\n            return POST('/v3/episodes/' + evt.episode_id + '/events', {\n                event: evt\n            });\n        }\n    };\n    var prepItemForStorage = function (evt) {\n        // Events, that is\n        var prepped = {};\n        if (evt._id && evt._id.match(/internal/)) {\n            delete evt._id;\n        }\n        //  The data we want to store:\n        var fields = [\n            '_id',\n            //\t\t\t\t\"producerItemType\", // Nope\n            'start_time',\n            'end_time',\n            'episode_id',\n            'chapter_marker',\n            'template_id',\n            'templateUrl',\n            'stop',\n            'required',\n            'cosmetic',\n            'sxs',\n            'title',\n            'url',\n            'target',\n            'url_status',\n            'annotator',\n            'annotation',\n            'description',\n            'data',\n            'asset_id',\n            'link_image_id',\n            'annotation_image_id',\n            'avatar_id'\n        ];\n        prepped.type = evt._type;\n        for (var i = 0; i < fields.length; i++) {\n            if (evt[fields[i]] !== undefined) {\n                prepped[fields[i]] = angular.copy(evt[fields[i]]);\n            }\n        }\n        // check that end_time is greater than start time\n        if (prepped.start_time && prepped.end_time) {\n            var startFloat = parseFloat(prepped.start_time);\n            var endFloat = parseFloat(prepped.end_time);\n            if (isNaN(startFloat) || isNaN(endFloat)) {\n                errorSvc.error({\n                    data: 'Tried to store an invalid start_time or end_time.'\n                });\n                return false;\n            }\n            if (startFloat > endFloat) {\n                errorSvc.error({\n                    data: 'Tried to store a start_time that is after the end_time.'\n                });\n                return false;\n            }\n        }\n        // clean up multiple choice question Plugin data\n        if (prepped.data) {\n            delete prepped.data._plugin.selectedDistractor;\n            delete prepped.data._plugin.hasBeenAnswered;\n            delete prepped.data._plugin._type;\n            if (prepped.data._plugin.distractors.length) {\n                for (i = 0; i < prepped.data._plugin.distractors.length; i++) {\n                    delete prepped.data._plugin.distractors[i].selected;\n                }\n            }\n        }\n        // TODO if Credly badge events are ever authorable in producer we will have to do the same\n        // filtering of user data for those here.   Let's not\n        prepped.style_id = [];\n        prepped.layout_id = [];\n        // convert style/layout selections back into their IDs.\n        // trust evt.styles[] and evt.layouts[], DO NOT use styleCss (it contains the scene and episode data too!)\n        prepped.style_id = get_id_values('style', evt.styles);\n        prepped.layout_id = get_id_values('layout', evt.layouts);\n        if (evt._type === 'Chapter') {\n            return prepped;\n        }\n        var template = svc.readCache('template', 'url', evt.templateUrl);\n        if (template) {\n            prepped.template_id = template.id;\n        }\n        if (prepped.template_id) {\n            return prepped;\n        }\n        else {\n            errorSvc.error({\n                data: 'Tried to store a template with no ID: ' + evt.templateUrl\n            });\n            return false;\n        }\n    };\n    svc.prepItemForStorage = prepItemForStorage;\n    // No, we should not be storing episodes with no master asset halfway through editing\n    svc.detachMasterAsset = function (epData) {\n        var preppedData = prepEpisodeForStorage(epData);\n        preppedData.master_asset_id = null;\n        console.log('prepped sans master_asset_id for storage:', preppedData);\n        if (preppedData) {\n            return PUT('/v3/episodes/' + preppedData._id, preppedData);\n        }\n        else {\n            return $q.reject(false);\n        }\n    };\n    svc.detachEventAsset = function (evt, assetId) {\n        evt = prepItemForStorage(evt);\n        if (!evt) {\n            return false;\n        }\n        if (evt.asset_id === assetId) {\n            evt.asset_id = null;\n        }\n        if (evt.link_image_id === assetId) {\n            evt.link_image_id = null;\n        }\n        if (evt.annotation_image_id === assetId) {\n            evt.annotation_image_id = null;\n        }\n        if (evt && evt._id && !evt._id.match(/internal/)) {\n            // update\n            return PUT('/v3/events/' + evt._id, {\n                event: evt\n            });\n        }\n        else {\n            // create\n            return POST('/v3/episodes/' + evt.episode_id + '/events', {\n                event: evt\n            });\n        }\n    };\n    var prepEpisodeForStorage = function (epData) {\n        if (epData._id && epData._id.match(/internal/)) {\n            delete epData._id;\n        }\n        var fields = [\n            '_id',\n            'title',\n            'description',\n            'container_id',\n            'customer_id',\n            'master_asset_id',\n            'poster_frame_id',\n            'status',\n            'languages',\n            'template_id'\n            // \"navigation_depth\"\n            // (0 for no cross-episode nav, 1 for siblings only, 2 for course and session, 3 for customer/course/session)\n        ];\n        var prepped = pick(epData, fields);\n        prepped.style_id = get_id_values('style', epData.styles);\n        var template = svc.readCache('template', 'id', epData.template_id);\n        if (template && template.id) {\n            prepped.template_id = template.id;\n            return prepped;\n        }\n        else {\n            errorSvc.error({\n                data: 'Tried to store a template with no ID: ' + epData.template_id\n            });\n            return null;\n        }\n    };\n    // careful to only use this for guaranteed unique fields (style and layout names, basically)\n    svc.readCache = function (cache, field, val) {\n        var found = false;\n        angular.forEach(dataCache[cache], function (item) {\n            if (item[field] === val) {\n                found = item;\n            }\n        });\n        if (found) {\n            return found;\n        }\n        return false;\n    };\n    if (config.debugInBrowser) {\n        // console.log(\"DataSvc:\", svc);\n        console.log('DataSvc cache:', dataCache);\n    }\n    svc.getTemplates = function () {\n        return Object.keys(dataCache.template).map(function (t) {\n            return dataCache.template[t];\n        });\n    };\n    svc.getEpisodeTemplatesAdmin = getEpisodeTemplatesAdmin;\n    function getEpisodeTemplatesAdmin() {\n        if (!authSvc.userHasRole('admin')) {\n            return;\n        }\n        return svc.getTemplates()\n            .reduce(function (ts, t) {\n            if (t instanceof IEpisodeTemplate) {\n                ts.push({\n                    id: t.id,\n                    name: t.displayName,\n                    customer_ids: t.customer_ids\n                });\n            }\n            return ts;\n        }, []);\n    }\n    svc.getEpisodeTemplatesByCustomerIds = getEpisodeTemplatesByCustomerIds;\n    function getEpisodeTemplatesByCustomerIds(custIds) {\n        return svc.getTemplates()\n            .reduce(function (ts, t) {\n            if (t instanceof IEpisodeTemplate) {\n                var hasCustomer = intersection(custIds, t.customer_ids);\n                if (hasCustomer.length > 0) {\n                    ts.push({\n                        id: t.id,\n                        name: t.displayName,\n                        customer_ids: t.customer_ids\n                    });\n                }\n            }\n            return ts;\n        }, []);\n    }\n    svc.fetchTemplates = fetchTemplates;\n    function fetchTemplates() {\n        return SANE_GET('/v1/templates')\n            .then(function (templates) { return svc.cache('templates', templates); })\n            .then(function () { return svc.getTemplates(); });\n    }\n    svc.getTemplate = getTemplate;\n    function getTemplate(id) {\n        return dataCache.template[id];\n    }\n    /*\n     gets ID of Style Class when given the 'css_name'. 'css_name' is a attribute on the Style Class.\n     for example:\n     get_id_values('style', ['cover', '']) -> ['532708d8ed245331bd000007', '52e15b47c9b715cfbb00003f']\n     */\n    var get_id_values = function (cache, realNames) {\n        // convert real styles and layouts back into id arrays. Not for templateUrls!\n        var ids = [];\n        angular.forEach(realNames, function (realName) {\n            if (realName) {\n                var cachedValue = svc.readCache(cache, 'css_name', realName);\n                if (cachedValue) {\n                    ids.push(cachedValue.id);\n                }\n                else {\n                    errorSvc.error({\n                        data: 'Tried to store a ' + cache + ' with no ID: ' + realName\n                    });\n                    return false;\n                }\n            }\n        });\n        return ids;\n    };\n    return svc;\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/errorSvc.ts\n/*\n to throw explicit errors:\n errorSvc.error({data: \"This episode has not yet been published.\"});\n errorSvc.notify({data: \"This hovercraft is full of Monty Python quotes.\"});\n\n throw() or other js errors also get sent here by $exceptionHandler (though we're ignoring them for now)\n */\nerrorSvc_errorSvc.$inject = ['$location'];\nfunction errorSvc_errorSvc($location) {\n    var svc = {};\n    // TODO This is a mess.  make the field names less ridiculously inconsistent.\n    svc.init = function () {\n        svc.errors = [];\n        svc.notifications = [];\n    };\n    svc.init();\n    svc.error = function (exception, cause) {\n        if (exception && (exception.status === 401 || exception.status === 403)) {\n            // \"unauthorized\" errors will clear login state for now.\n            // TODO in future there may be cases where this isn't desirable (i.e. when we support more roles,\n            // it may make sense to keep an existing role in place even if the user attempts to do something they're not allowed to?)\n            console.warn(exception.status, \" detected\");\n            // hacky special case for login page\n            if ($location.path() === '/') {\n                exception = undefined;\n            }\n        }\n        if (exception && exception.data) {\n            // API errors go here.\n            if (typeof exception.data === \"string\") {\n                // hide ruby stack trace:\n                exception.data = exception.data.replace(/\\n/g, '').replace(/==/g, '').replace(/-----.*/g, '');\n                svc.errors.push({\n                    \"exception\": exception\n                });\n            }\n            else {\n                svc.errors.push({\n                    \"exception\": exception\n                });\n            }\n        }\n        else {\n            // generic thrown javascript error.  TODO show these too, but only in dev environment (they're often not meaningful)\n            console.warn(\"ErrorSvc caught error: \", exception, cause);\n        }\n    };\n    svc.notify = function (note) {\n        svc.notifications.push({\n            'text': note\n        });\n    };\n    return svc;\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/imageResizeSvc.ts\n/**\n *\n * Created by githop on 3/23/16.\n */\n\n/**\n * @ngdoc service\n * @name iTT.service:imageResize\n * @requires $q\n * @description\n * Resize images and convert File Objects into images. Used in practice to resize images client side prior\n * to uploading to AWS. Basic Idea is to resize images client side with HTML5 Canvas. The resized image\n * is converted back into a File object so it can be passed to the AWS service.\n * {@link https://github.com/InTheTelling/client/blob/master/app/scripts/services/imageResize.js source}\n */\nimageResize.$inject = ['$q'];\nfunction imageResize($q) {\n    return {\n        calcAspectRatio: calcAspectRatio,\n        createFileFromDataURL: createFileFromDataURL,\n        readFileToDataURI: readFileToDataURI,\n        readFileToImg: readFileToImg,\n        resizeImg: resizeImg,\n        getImageTagType: getImageTagType\n    };\n    /**\n     * @ngdoc method\n     * @name #createFileFromDataURL\n     * @methodOf iTT.service:imageResize\n     * @description\n     * Creates a File object from a data url.\n     * @param {String} url base64 encoded string as url\n     * @param {String} fileName name of file\n     * @returns {Object} File object containing an image.\n     * @example\n     * <pre>\n     *     var file = imageResize.createFileFromDataURL(dataUrl);\n     * </pre>\n     */\n    function createFileFromDataURL(url, fileName) {\n        var _blob = _dataURLToBlob(url);\n        _blob.name = 'resized' + fileName;\n        _blob.lastModifiedDate = new Date();\n        return _blob;\n    }\n    /**\n     * @ngdoc method\n     * @name #readFileToImg\n     * @methodOf iTT.service:imageResize\n     * @description\n     * Creates an Image from a File Object\n     * @param {Object} file File Object\n     * @returns {Object} Promise that resolves to an Image\n     * @example\n     * <pre>\n     *     imageResize.readFileToImg(file).then(function(file) {\n           *     \t\t//do stuff with file\n           *     }));\n     * </pre>\n     */\n    function readFileToImg(file) {\n        var _img = new Image();\n        return readFileToDataURI(file).then(function (imgUrl) {\n            _img.src = imgUrl;\n            return $q(function (resolve, reject) {\n                _img.onload = function () {\n                    resolve(_img);\n                };\n                _img.onerror = function () {\n                    reject('Error Loading Image');\n                };\n            }).then(function (img) {\n                return img;\n            });\n        });\n    }\n    function readFileToDataURI(file) {\n        var _reader = new FileReader();\n        return $q(function (resolve, reject) {\n            _reader.onloadend = function () {\n                resolve(_reader.result);\n            };\n            _reader.onerror = function () {\n                reject(_reader.error);\n            };\n            _reader.readAsDataURL(file);\n        }).then(function (imgUrl) { return imgUrl; });\n    }\n    /**\n     * @ngdoc method\n     * @name #resizeImg\n     * @methodOf iTT.service:imageResize\n     * @description\n     * Resize image by reducing width/height by factor of 2\n     * @param {Object} img Image to resize.\n     * @param {Number} maxWidth target with of image resize.\n     * @param {Number} maxHeight target height of image resize.\n     * @param {Boolean} center Toggle image centering\n     * @returns {String} Promise that resolves to a data url.\n     * @example\n     * <pre>\n     *     imageResize.resizeImg(img, 60, 60, true)\n     *     .then(function(resizedImg) {\n           *     //do stuff with resizedImg\n           *     });\n     * </pre>\n     */\n    function resizeImg(img, maxWidth, maxHeight, center) {\n        return $q(function (resolve) {\n            var _canvas = document.createElement('canvas');\n            var _ctx = _getContext(_canvas);\n            var _dx = 0, _dy = 0;\n            var _tmpCvsWidth = img.width, _tmpCvsHeight = img.height;\n            _setCanvasWH(_canvas, _tmpCvsWidth, _tmpCvsHeight);\n            _ctx.drawImage(img, 0, 0, _tmpCvsWidth, _tmpCvsHeight);\n            //step down the image size by half for a smoother overall resize.\n            //break here because we want our final resize out of the loop\n            //to still be a down step.\n            while ((_tmpCvsWidth > maxWidth || _tmpCvsHeight > maxHeight) &&\n                !((_tmpCvsWidth * 0.5) < maxWidth || (_tmpCvsHeight * 0.5) < maxHeight)) {\n                img.width = img.width * 0.5;\n                img.height = img.height * 0.5;\n                _tmpCvsWidth = img.width;\n                _tmpCvsHeight = img.height;\n                _canvas = _resizeImgWithCanvas(_canvas, _tmpCvsWidth, _tmpCvsHeight);\n            }\n            var _finalWH = _calculateNewDimensions(_canvas.width, _canvas.height, maxWidth, maxHeight);\n            //handle centering of non-square resized images\n            if (center) {\n                //image is taller than it is wide\n                //center it vertically\n                if (_finalWH.height < maxHeight) {\n                    _dy = (maxHeight - _finalWH.height) / 2;\n                }\n                //image is wider than it is tall\n                //center it horizontally\n                if (_finalWH.width < maxWidth) {\n                    _dx = (maxWidth - _finalWH.width) / 2;\n                }\n            }\n            //console.log('final draw params: ', 'cvs', _canvas, 'finalWH', _finalWH, 'dx dy', _dx, _dy);\n            _canvas = _resizeImgWithCanvas(_canvas, _finalWH.width, _finalWH.height, maxWidth, maxHeight, _dx, _dy);\n            resolve(_canvas.toDataURL('image/png', 1.0));\n        });\n    }\n    function calcAspectRatio(w, h) {\n        return w / h;\n    }\n    function getImageTagType(w, h) {\n        var aspectRatio = calcAspectRatio(w, h);\n        if (aspectRatio > 1.25) {\n            return SOCIAL_IMAGE_WIDE;\n        }\n        else {\n            return SOCIAL_IMAGE_SQUARE;\n        }\n    }\n    /**\n     * @private\n     * @ngdoc\n     * @methodOf iTT.service:imageResize\n     * @name _setCanvasWH\n     * @description\n     * sets the width and height on a given canvas.\n     * @param {Object} canvas HTML5 Canvas Element\n     * @param {Number} width Width to set.\n     * @param {Number} height Height to set.\n     * @returns {Void} returns undefined.\n     */\n    function _setCanvasWH(canvas, width, height) {\n        canvas.width = width;\n        canvas.height = height;\n    }\n    /**\n     * @private\n     * @ngdoc\n     * @methodOf iTT.service:imageResize\n     * @name _resizeImgWithCanvas\n     * @description\n     * Resize an image rendered in an HTML5 canvas element to given dimensions\n     * @param {Object} c HTML5 Canvas Element\n     * @param {Number} w Target width to resize image to.\n     * @param {Number} h Target height to resize image to.\n     * @param {Number} [cW=w] Optional param, Target width of canvas, defaults to image width.\n     * @param {Number} [cH=h] Optional param, Target height of canvas, defaults to image height.\n     * @param {Number} [dx=0] Optional param, Amount to horizontally offset the image inside the canvas element, defaults to 0.\n     * @param {Number} [dy=0] Optional param, Amount to vertically offset the image inside the canvas element, defaults to 0.\n     * @returns {Object} HTML5 canvas element.\n     */\n    function _resizeImgWithCanvas(c, w, h, cW, cH, dx, dy) {\n        if (cW === void 0) { cW = w; }\n        if (cH === void 0) { cH = h; }\n        if (dx === void 0) { dx = 0; }\n        if (dy === void 0) { dy = 0; }\n        //console.log('drawImage inputs: ', 'c', c, 'dx', dx, 'dy', dy, 'w', w, 'h', h);\n        var _resizeCvs = document.createElement('canvas');\n        var _resizeCtx = _getContext(_resizeCvs);\n        _resizeCvs.width = cW;\n        _resizeCvs.height = cH;\n        _resizeCtx.drawImage(c, dx, dy, w, h);\n        return _resizeCvs;\n    }\n    /**\n     * @private\n     * @ngdoc\n     * @methodOf iTT.service:imageResize\n     * @name _getContext\n     * @description\n     * Method to get the Context from an HTML5 canvas element and set anti-aliasing properties\n     * @param {Object} canvas HTML5 Canvas Element\n     * @returns {Object} HTML5 Canvas Context object.\n     */\n    function _getContext(canvas) {\n        var context = canvas.getContext('2d');\n        context.imageSmoothingEnabled = true;\n        context.mozImageSmoothingEnabled = true;\n        context.oImageSmoothingEnabled = true;\n        context.webkitImageSmoothingEnabled = true;\n        return context;\n    }\n    /**\n     * @private\n     * @ngdoc\n     * @methodOf iTT.service:imageResize\n     * @name _dataURLToBlob\n     * @description\n     * Converts data url to Blob object which can be used as data for a File object\n     * Taken from https://github.com/ebidel/filer.js/blob/master/src/filer.js#L137\n     * @param {String} dataURL base64 encoded string containing image\n     * @returns {Object} Blob Object\n     */\n    function _dataURLToBlob(dataURL) {\n        var BASE64_MARKER = ';base64,';\n        if (dataURL.indexOf(BASE64_MARKER) == -1) {\n            var parts_1 = dataURL.split(',');\n            var contentType_1 = parts_1[0].split(':')[1];\n            var raw_1 = decodeURIComponent(parts_1[1]);\n            return new Blob([raw_1], { type: contentType_1 });\n        }\n        var parts = dataURL.split(BASE64_MARKER); //jshint ignore:line\n        var contentType = parts[0].split(':')[1]; //jshint ignore:line\n        var raw = window.atob(parts[1]); //jshint ignore:line\n        var rawLength = raw.length;\n        var uInt8Array = new Uint8Array(rawLength);\n        for (var i = 0; i < rawLength; ++i) {\n            uInt8Array[i] = raw.charCodeAt(i);\n        }\n        return new Blob([uInt8Array], { type: contentType });\n    }\n    /**\n     * @private\n     * @ngdoc method\n     * @methodOf iTT.service:imageResize\n     * @name _calculateNewDimensions\n     * @description\n     * Calculates the dimensions of a rectangle (for an image) while maintaining the original aspect ratio.\n     * @param {Number} srcWidth Input width of rectangle.\n     * @param {Number} srcHeight Input height of rectangle.\n     * @param {Number} maxWidth Target width of rectangle.\n     * @param {Number} maxHeight Target height of rectangle.\n     * @returns {Object} Object with width and height properties as integers.\n     */\n    function _calculateNewDimensions(srcWidth, srcHeight, maxWidth, maxHeight) {\n        var _ratio = Math.min(maxWidth / srcWidth, maxHeight / srcHeight);\n        return { width: Math.floor(srcWidth * _ratio), height: Math.floor(srcHeight * _ratio) };\n    }\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/mockSvc.ts\n// for quick debugging of templates.\n// TODO: figure out how to get grunt to omit this from the build\nmockSvc_mockSvc.$inject = ['modelSvc'];\nfunction mockSvc_mockSvc(modelSvc) {\n    var svc = {};\n    svc.keepJsLintHappy = function () {\n        var noop = modelSvc.episodes.noop;\n        noop = undefined;\n    };\n    svc.mockEpisode = function (epId) {\n        // FOR DEV TESTING\n        modelSvc.cache(\"episode\", {\n            \"_id\": epId,\n            \"created_at\": \"2014-04-10T02:02:15Z\",\n            \"description\": {\n                en: \"The Business Case for Sustainability\"\n            },\n            \"master_asset_id\": \"masterasset\",\n            \"title\": {\n                en: \"Test Episode\"\n            },\n            \"languages\": [{\n                    code: 'en',\n                    default: true\n                }],\n            \"status\": \"Published\",\n            \"templateUrl\": \"templates/episode/gwsb.html\",\n            \"styles\": [\n                \"\", \"\", \"\"\n            ]\n        });\n        modelSvc.cache(\"asset\", {\n            \"_id\": \"masterasset\",\n            \"_type\": \"Asset::Video\",\n            \"alternate_urls\": [\n                \"https://www.youtube.com/watch?v=dTAAsCNK7RA&list=RDHCffYp01sXKH8\",\n                \"https://s3.amazonaws.com/itt.uploads/development/Test%20Customer/SLIC/The%20Business%20Case/Sustainability%20Pays%20sXs/9aPKP5AJNJdH-UEQ2EB9jg.m3u8\",\n                \"https://s3.amazonaws.com/itt.uploads/development/Test%20Customer/SLIC/The%20Business%20Case/Sustainability%20Pays%20sXs/9aPKP5AJNJdH-UEQ2EB9jg_416x234.webm\",\n                \"https://s3.amazonaws.com/itt.uploads/development/Test%20Customer/SLIC/The%20Business%20Case/Sustainability%20Pays%20sXs/9aPKP5AJNJdH-UEQ2EB9jg_960x540.webm\",\n                \"https://s3.amazonaws.com/itt.uploads/development/Test%20Customer/SLIC/The%20Business%20Case/Sustainability%20Pays%20sXs/9aPKP5AJNJdH-UEQ2EB9jg_416x234.mp4\",\n                \"https://s3.amazonaws.com/itt.uploads/development/Test%20Customer/SLIC/The%20Business%20Case/Sustainability%20Pays%20sXs/9aPKP5AJNJdH-UEQ2EB9jg_960x540.mp4\"\n            ],\n            \"attachment\": \"Sustainability_Pays_for_Demo_1.mp4\",\n            \"base_path\": \"development/Test Customer/SLIC/The Business Case/Sustainability Pays sXs\",\n            \"content_type\": \"video/mp4\",\n            \"duration\": \"443.199313\",\n            \"extension\": \"mp4\",\n            \"file_size\": 338886327,\n            \"filename\": \"Sustainability_Pays_for_Demo_1.mp4\",\n            \"frame_rate\": \"10000000/417083\",\n            \"frame_rate_d\": 417083,\n            \"frame_rate_n\": 10000000,\n            \"height\": 720,\n            \"name\": \"Sustainability Pays for Demo 1\",\n            \"original_filename\": \"Sustainability_Pays_for_Demo_1.mp4\",\n            \"start_time\": \"0.000000\",\n            \"status\": \"complete\",\n            \"url\": \"https://s3.amazonaws.com/itt.uploads/development/Test%20Customer/SLIC/The%20Business%20Case/Sustainability%20Pays%20sXs/Sustainability_Pays_for_Demo_1.mp4\",\n            \"width\": 1280\n        });\n        var sceneStub = {\n            \"_id\": \"-\",\n            \"_type\": \"Scene\",\n            \"description\": {\n                en: \"Scene <b>description</b> Description\"\n            },\n            \"keywords\": [],\n            \"start_time\": 0,\n            \"end_time\": 200,\n            \"type\": \"Scene\",\n            \"episode_id\": epId,\n            \"cur_episode_id\": epId,\n            //\"templateUrl\": \"templates/scene/centered.html\",\n            \"layouts\": [\"\", \"\"],\n            \"styles\": [\"transitionSlideL\"]\n        };\n        var scenetemplateurls = [\n            \"templates/scene/cornerH.html\",\n            \"templates/scene/cornerV.html\",\n            \"templates/scene/centered.html\",\n            \"templates/scene/1col.html\"\n        ];\n        for (var i = 0; i < 10; i++) {\n            var scene = angular.copy(sceneStub);\n            scene._id = \"scene-\" + i;\n            scene.title = (i / 2 === Math.floor(i / 2)) ? {\n                en: \"Scene \" + (i + 1) + \" Title\"\n            } : {\n                en: \"\"\n            };\n            scene.start_time = (i * 20);\n            scene.end_time = (i * 20 + 20);\n            scene.templateUrl = scenetemplateurls[i % scenetemplateurls.length];\n            modelSvc.cache(\"event\", scene);\n        }\n        var annotationStub = {\n            \"_id\": \"\",\n            \"_type\": \"Annotation\",\n            \"annotation\": {\n                en: \"Transcript text: <b>html</b> included!\"\n            },\n            \"annotation_image_id\": \"asset3\",\n            \"annotator\": {\n                en: \"Speaker Name\"\n            },\n            \"cosmetic\": false,\n            \"episode_id\": epId,\n            \"cur_episode_id\": epId,\n            \"required\": false,\n            \"stop\": false,\n            \"type\": \"Annotation\",\n            \"templateUrl\": \"templates/item/transcript-withthumbnail.html\",\n            \"styles\": [\"colorInvert\"]\n        };\n        var testLayouts = [\n            \"sidebarL\",\n            \"sidebarR\", \"inline\"\n        ];\n        var annotationTemplates = [\n            \"templates/item/text-h1.html\",\n            \"templates/item/pullquote.html\",\n            \"templates/item/text-h2.html\"\n        ];\n        for (i = 0; i < 30; i++) {\n            var transcript = angular.copy(annotationStub);\n            transcript._id = \"transcript-\" + i;\n            transcript.annotation = {\n                en: \"Transcript block number \" + (i + 1)\n            };\n            transcript.start_time = (i * 5);\n            transcript.end_time = (i * 5 + 5);\n            transcript.layouts = [testLayouts[i % testLayouts.length]];\n            //\t\t\t\tmodelSvc.cache(\"event\", transcript);\n        }\n        for (i = 0; i < 10; i++) {\n            var annotation = angular.copy(annotationStub);\n            annotation._id = \"annotation-\" + i;\n            annotation.start_time = i * 6;\n            annotation.end_time = i * 6 + 3;\n            annotation.templateUrl = annotationTemplates[i % annotationTemplates.length];\n            modelSvc.cache(\"event\", annotation);\n        }\n        for (i = 0; i < 10; i++) {\n            var longtext = angular.copy(annotationStub);\n            longtext._id = \"longtext-\" + i;\n            longtext.start_time = i * 7;\n            longtext.end_time = i * 7 + 7;\n            longtext.styles = [\"timestampNone\"];\n            longtext.annotation = {\n                en: \"A way a long a last a loved along the riverrun, past Eve and Adam's, from swerve of shore to bend of bay, brings us by a commodius vicus of recirculation back to Howth Castle and Environs. Sir Tristram, <i>violer d'amores</i>, fr'over the short sea, had passencore rearrived from North Armorica on this side the scraggy isthmus of Europe Minor to wielderfight his penisolate war\"\n            };\n            longtext.templateUrl = \"templates/item/text-transmedia.html\";\n            modelSvc.cache(\"event\", longtext);\n        }\n        modelSvc.cache(\"asset\", {\n            \"_id\": \"asset1\",\n            \"_type\": \"Asset::Image\",\n            \"url\": \"https://s3.amazonaws.com/itt.uploads/development/Test%20Customer/SLIC/The%20Business%20Case/Sustainability%20Pays/Sustainability_Scorecard_1.jpg\",\n            \"extension\": \"jpg\",\n            \"name\": \"Sustainability Scorecard 1\",\n        });\n        modelSvc.cache(\"asset\", {\n            \"_id\": \"asset2\",\n            \"_type\": \"Asset::Image\",\n            \"url\": \"http://placehold.it/350x350\",\n            \"extension\": \"jpg\",\n            \"name\": \"350x350 placeholder\",\n        });\n        modelSvc.cache(\"asset\", {\n            \"_id\": \"asset3\",\n            \"_type\": \"Asset::Image\",\n            \"url\": \"http://placehold.it/64x64\",\n            \"extension\": \"jpg\",\n            \"name\": \"64x64 placeholder\",\n        });\n        modelSvc.cache(\"asset\", {\n            \"_id\": \"asset4\",\n            \"_type\": \"Asset::Image\",\n            \"url\": \"http://placehold.it/900x900\",\n            \"extension\": \"jpg\",\n            \"name\": \"900x900 placeholder\",\n        });\n        var linkStub = {\n            \"_id\": \"\",\n            \"_type\": \"Link\",\n            \"link_image_id\": \"asset1\",\n            \"url\": \"https://luminarydigitalmedia.com\",\n            \"title\": {\n                en: \"Link Title\"\n            },\n            \"description\": {\n                en: \"Link Description <i>lorem</i> ipsum dolor frog a frog oh lord it's amet lorem ipsum buddy lorem ipsum dolor frog a frog oh lord it's amet lorem ipsum buddy lorem ipsum dolor frog a frog oh lord it's amet lorem ipsum buddy\"\n            },\n            \"cosmetic\": false,\n            \"stop\": false,\n            \"type\": \"Link\",\n            \"episode_id\": epId,\n            \"cur_episode_id\": epId,\n            \"layouts\": [\"inline\"],\n            \"styles\": [\"timestampNone\"],\n            \"isContent\": true,\n        };\n        for (i = 0; i < 30; i++) {\n            var link = angular.copy(linkStub);\n            link._id = \"link-\" + i;\n            link.required = (Math.random() > 0.5);\n            link.start_time = i * 3;\n            link.end_time = i * 3 + 3;\n            link.layouts = [testLayouts[i % testLayouts.length]];\n            // if (Math.random() > 0.1) {\n            // \tlink.title = {en: \"NO EMBED link\"};\n            // \tlink.templateUrl = \"templates/transmedia-link-noembed.html\";\n            // } else if (Math.random() < 0.1) {\n            // \tlink.title = {en: \"FRAMEICIDE link\"};\n            // \tlink.templateUrl = \"templates/transmedia-link-frameicide.html\";\n            // }\n            modelSvc.cache(\"event\", link);\n        }\n        var questionFormativeStub = {\n            \"_id\": \"\",\n            \"_type\": \"Plugin\",\n            \"producerItemType\": \"question\",\n            \"episode_id\": epId,\n            \"cur_episode_id\": epId,\n            \"templateUrl\": \"templates/item/question-mc.html\",\n            \"style_id\": [],\n            \"layout_id\": [],\n            \"title\": {},\n            \"data\": {\n                \"_id\": \"\",\n                \"_pluginType\": \"question\",\n                \"_version\": 2,\n                \"_plugin\": {\n                    \"questiontext\": \"Some question text?\",\n                    \"questiontype\": \"mc-formative\",\n                    \"distractors\": [{\n                            \"text\": \"a\",\n                            \"index\": 1,\n                        }, {\n                            \"text\": \"b\",\n                            \"index\": 2\n                        }, {\n                            \"text\": \"c\",\n                            \"correct\": true,\n                            \"index\": 3,\n                        }, {\n                            \"text\": \"\",\n                            \"index\": 4\n                        }],\n                    \"correctfeedback\": \"Great!\",\n                    \"incorrectfeedback\": \"Doh!\",\n                    \"_type\": \"question\"\n                }\n            }\n        };\n        for (i = 0; i < 10; i++) {\n            var question = angular.copy(questionFormativeStub);\n            question._id = \"question-\" + i;\n            question.required = (Math.random() > 0.5);\n            question.start_time = i * 5;\n            question.end_time = i * 5 + 5;\n            question.layouts = [testLayouts[i % testLayouts.length]];\n            modelSvc.cache(\"event\", question);\n        }\n        var questionPollStub = {\n            \"_id\": \"\",\n            \"_type\": \"Plugin\",\n            \"type\": \"Plugin\",\n            \"producerItemType\": \"question\",\n            \"episode_id\": epId,\n            \"cur_episode_id\": epId,\n            \"templateUrl\": \"templates/item/question-mc.html\",\n            \"style_id\": [],\n            \"layout_id\": [],\n            \"data\": {\n                \"_id\": \"\",\n                \"_pluginType\": \"question\",\n                \"_version\": 2,\n                \"_plugin\": {\n                    \"questiontext\": \"Some question text?\",\n                    \"questiontype\": \"mc-poll\",\n                    \"distractors\": [{\n                            \"text\": \"a\",\n                            \"index\": 1,\n                        }, {\n                            \"text\": \"b\",\n                            \"index\": 2\n                        }, {\n                            \"text\": \"c\",\n                            \"index\": 3,\n                        }, {\n                            \"text\": \"\",\n                            \"index\": 4\n                        }],\n                    \"_type\": \"question\"\n                }\n            }\n        };\n        for (i = 0; i < 10; i++) {\n            var questionTemp = angular.copy(questionPollStub);\n            questionTemp._id = \"question-\" + i;\n            questionTemp.required = (Math.random() > 0.5);\n            questionTemp.start_time = i * 6;\n            questionTemp.end_time = i * 6 + 6;\n            questionTemp.layouts = [testLayouts[i % testLayouts.length]];\n            modelSvc.cache(\"event\", questionTemp);\n        }\n        var uploadStub = {\n            \"_type\": \"Upload\",\n            \"description\": {\n                en: \"Description of an upload item\"\n            },\n            \"required\": false,\n            \"cosmetic\": true,\n            \"stop\": false,\n            \"type\": \"Upload\",\n            \"episode_id\": epId,\n            \"cur_episode_id\": epId,\n            \"templateUrl\": \"templates/item/image-caption.html\",\n            \"styles\": [\n                \"transitionFade\", \"tl\"\n            ],\n            \"layouts\": [\n                \"inline\"\n            ]\n        };\n        for (i = 0; i < 30; i++) {\n            var upload = angular.copy(uploadStub);\n            upload._id = \"upload-\" + i;\n            upload.asset_id = \"asset2\"; // + (i % 3 + 2);\n            upload.title = {\n                en: \"Upload number \" + (i % 3 + 1)\n            };\n            upload.start_time = i * 4;\n            upload.end_time = i * 4 + 4;\n            upload.layouts = [testLayouts[i % testLayouts.length]];\n            modelSvc.cache(\"event\", upload);\n        }\n        var layouts = [\"mainFg\", \"altFg\", \"videoOverlay\"];\n        for (i = 0; i < 8; i++) {\n            var filltest = angular.copy(uploadStub);\n            filltest.layouts = [layouts[i % layouts.length]];\n            filltest._id = \"filltest-\" + i;\n            filltest.asset_id = \"asset2\";\n            filltest.start_time = i * 2;\n            filltest.end_time = i * 2 + 2;\n            filltest.templateUrl = \"templates/item/image-fill.html\";\n            filltest.styles.push(\"cover\");\n            modelSvc.cache(\"event\", filltest);\n        }\n        modelSvc.resolveEpisodeEvents(epId);\n        modelSvc.resolveEpisodeAssets(epId);\n    };\n    return svc;\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/modelSvc/modelSvc.ts\n/* Parses API data into player-acceptable format,\n and derives secondary data where necessary for performance/convenience/fun */\n\nmodelSvc_modelSvc.$inject = ['$filter', '$location', 'ittUtils', 'config', 'appState', 'playbackService', 'urlService'];\nfunction modelSvc_modelSvc($filter, $location, ittUtils, config, appState, playbackService, urlService) {\n    // const DEFAULT_EPISODE_TEMPLATE_URL = 'templates/episode/episode.html';\n    var svc = Object.create(null);\n    svc.episodes = {};\n    svc.assets = {};\n    svc.events = {}; // NOTE svc.events contains scenes and items -- anything that happens during the episode timeline\n    svc.containers = {};\n    svc.narratives = {};\n    svc.customers = {};\n    // receives cacheTypes of episode, event, asset, and container.\n    // splits event into scenes and items.  Not sure yet whether we care about containers, discarding them for now.\n    // TODO? normalize items before cacheing: (annotation_image_id and link_image_id -> asset_id, etc)\n    //^^ NP-1310\n    // TODO discard unused fields before cacheing\n    // use angular.extend if an object already exists, so we don't lose existing bindings\n    svc.mainVideoNewWindowUrl = mainVideoNewWindowUrl;\n    function mainVideoNewWindowUrl(accessToken, entityId, timelineId, startAt, playerType) {\n        if (playerType === void 0) { playerType = 'episode'; }\n        var baseNewWindowEndpoint = config.apiDataBaseUrl + '/v1/new_window';\n        // if second id is present, first ID must be from a narrative\n        if (entityId && timelineId) {\n            return baseNewWindowEndpoint +\n                (\"?narrative=\" + entityId + \"&timeline=\" + timelineId + \"&access_token=\" + accessToken + \"&t=\" + (startAt || 0));\n        }\n        else {\n            return baseNewWindowEndpoint + (\"?\" + playerType + \"=\" + entityId + \"&access_token=\" + accessToken + \"&t=\" + (startAt || 0));\n        }\n    }\n    svc.getNarrativeByPathOrId = function (pathOrId) {\n        var isMongoId = /^[0-9a-fA-F]{24}$/.test(pathOrId);\n        if (isMongoId) {\n            return svc.narratives[pathOrId];\n        }\n        //else loop and find the matching path slug passed in.\n        var n;\n        for (n in svc.narratives) {\n            if (svc.narratives.hasOwnProperty(n)) {\n                if (pathOrId === svc.narratives[n].path_slug.en) {\n                    return svc.narratives[n];\n                }\n            }\n        }\n    };\n    //add subdomain to each narrative then cache\n    //add narratives to customer object then cache customer.\n    svc.assocNarrativesWithCustomer = assocNarrativesWithCustomer;\n    function assocNarrativesWithCustomer(customer, narratives) {\n        narratives.forEach(function (narrative) {\n            svc.cache('narrative', narrative);\n        });\n        customer.narratives = cachedNarrativesByCustomer(customer);\n        svc.cache('customer', customer);\n        // //remove any old customer references if narrative was changed to a different customer\n        // Object.keys(svc.customers)\n        //   .filter(function(key) {\n        //   return customer._id !== key;\n        // })\n        //   .forEach(function(customerId) {\n        //     var cust = svc.customers[customerId];\n        //     var custNarratives = cust.narratives;\n        //     var found;\n        //     if (ittUtils.existy(custNarratives) && custNarratives.length > 0 && narratives.length === 1) {\n        //       var narrative = svc.narratives[narratives[0]._id];\n        //       found = custNarratives.indexOf(narrative);\n        //       if (found !== -1) {\n        //         cust.narratives.splice(found, 1);\n        //         svc.cache('customer', cust);\n        //       }\n        //     }\n        //   });\n        return customer;\n    }\n    svc.cachedNarrativesByCustomer = cachedNarrativesByCustomer;\n    function cachedNarrativesByCustomer(customer) {\n        return Object.keys(svc.narratives).reduce(function (narratives, key) {\n            if (svc.narratives[key].customer_id === customer._id) {\n                narratives.push(svc.narratives[key]);\n            }\n            return narratives;\n        }, []);\n    }\n    svc.getCustomersAsArray = getCustomersAsArray;\n    function getCustomersAsArray() {\n        return Object.keys(svc.customers).map(function (c) {\n            return svc.customers[c];\n        });\n    }\n    svc.getNarrativesAsArray = getNarrativesAsArray;\n    function getNarrativesAsArray() {\n        return Object.keys(svc.narratives).map(function (n) {\n            return svc.narratives[n];\n        });\n    }\n    svc.cache = function (cacheType, item) {\n        if (cacheType === 'narrative') {\n            // NOTE no deriveNarrative used here, not needed so far\n            var instance = createInstance('Narrative', item);\n            if (instance.timelines && instance.timelines.length > 0) {\n                instance.timelines = instance.timelines.map(function (tl) { return createInstance('Timeline', tl); });\n            }\n            console.log(\"cache nar?\", instance);\n            if (svc.narratives[item._id]) {\n                angular.extend(svc.narratives[item._id], instance);\n            }\n            else {\n                svc.narratives[item._id] = angular.copy(instance);\n            }\n        }\n        if (cacheType === 'customer') {\n            var instance = createInstance('Customer', item);\n            // NOTE no deriveCustomer used here, not needed so far\n            if (svc.customers[item._id]) {\n                angular.extend(svc.customers[item._id], instance);\n            }\n            else {\n                svc.customers[item._id] = angular.copy(instance);\n            }\n        }\n        if (cacheType === 'episode') {\n            var instance = createInstance('Episode', item);\n            if (svc.episodes[item._id]) {\n                angular.extend(svc.episodes[item._id], svc.deriveEpisode(angular.copy(instance)));\n            }\n            else {\n                svc.episodes[item._id] = svc.deriveEpisode(angular.copy(instance));\n            }\n        }\n        else if (cacheType === 'event') {\n            var instance = createInstance(item._type, item);\n            // TEMP fix for events without titles:\n            if (!item.title) {\n                item.title = {};\n            }\n            if (svc.events[item._id]) {\n                angular.extend(svc.events[item._id], svc.deriveEvent(angular.copy(instance)));\n            }\n            else {\n                svc.events[item._id] = svc.deriveEvent(angular.copy(instance));\n            }\n        }\n        else if (cacheType === 'asset') {\n            var instance = createInstance('Asset', item);\n            if (svc.assets[item._id]) {\n                angular.extend(svc.assets[item._id], svc.deriveAsset(angular.copy(instance)));\n            }\n            else {\n                svc.assets[item._id] = svc.deriveAsset(angular.copy(instance));\n            }\n        }\n        else if (cacheType === 'container') {\n            var instance = createInstance('Container', item);\n            if (svc.containers[item._id]) {\n                angular.extend(svc.containers[item._id], svc.deriveContainer(angular.copy(instance)));\n            }\n            else {\n                svc.containers[item._id] = svc.deriveContainer(angular.copy(instance));\n            }\n        }\n    };\n    // svc.deriveFoo() are for efficiency precalculations.\n    // Input API data, output API data plus clientside-only convenience variables.\n    // Should call this after making any changes to the underlying data.\n    svc.deriveEpisode = function (episode) {\n        // console.log(\"deriveEpisode:\", episode);\n        angular.forEach(episode.languages, function (lang) {\n            if (lang.default) {\n                // console.log(\"FOUND DEFAULT LANGUAGE\", lang.code, appState.lang);\n                episode.defaultLanguage = lang.code;\n            }\n        });\n        if (episode.defaultLanguage === false) {\n            episode.defaultLanguage = 'en'; // last resort\n        }\n        svc.setLanguageStrings();\n        // For now, automatically add customer-specific styles to episode if there aren't other selections.\n        // (TODO Producer should do this automatically; this is for legacy episodes):\n        if (!episode.styles) {\n            episode.styles = [];\n        }\n        if (episode.title && svc.events['internal:landingscreen:' + episode._id]) {\n            svc.events['internal:landingscreen:' + episode._id].title = episode.title;\n            svc.events['internal:landingscreen:' + episode._id] = setLang(svc.events['internal:landingscreen:' + episode._id]);\n        }\n        if (episode.template) {\n            var doResizeIframe = episode.template.displayName === 'Career Playbook'\n                || episode.template.displayName === 'Narrasys Professional';\n            if (episode.template && doResizeIframe) {\n                appState.resizeIframeReviewMode = true;\n            }\n        }\n        episode = setLang(episode);\n        return episode;\n    };\n    svc.deriveAsset = function (asset) {\n        var _asset = Object.assign({}, asset);\n        if (_asset._type === 'Asset::Video') {\n            _asset = urlService.resolveVideo(_asset);\n        }\n        if (_asset.url) {\n            // escape URLs for css background-image https://stackoverflow.com/q/25613552\n            _asset.cssBgUrl = _asset.url.replace(/\\\"/g, '\\\\\"');\n        }\n        _asset = setLang(_asset);\n        return _asset;\n    };\n    // TODO there are some hacky dependencies on existing templateUrls which really ought to become\n    // separate data fields in their own right:\n    //      isTranscript (for Annotations)\n    //      allowEmbed, noExternalLink, and targetTop (for Links)\n    /* TODO also we should merge the Link and Upload types, split those templates by file type instead of source,\n     and make all these data fields consistent:\n  \n     Upload/link\n     title: Link text\n     (category)\n     required\n     description: Description\n     displayTime: Timestamp\n     allowEmbed: is/isn't frameable\n     targetTop: link should point to window.top (for end-of-episode links back to LTI host)\n     url: primary URL\n     url_type: file type\n     (?) secondary image URL (icon, thumbnail, etc)\n  \n     Annotation\n     Speaker\n     text\n     secondary image URL (speaker icon)\n     */\n    svc.deriveContainer = function (container) {\n        // console.log(\"deriving container\", container);\n        container.haveNotLoadedChildData = false; // not sure yet if this is necessary\n        // first sort the children:\n        if (container.children && container.children.length > 0) {\n            // When we populate sort_order, we can remove this:\n            container.children = container.children.sort(function (a, b) {\n                return (a.name.en > b.name.en) ? 1 : -1; // WARN always sorted by english\n            });\n            // This is the real one (for now sort_order always is zero, so this sort will have no effect):\n            container.children = container.children.sort(function (a, b) {\n                return a.sort_order - b.sort_order;\n            });\n            var childRefs = [];\n            angular.forEach(container.children, function (child) {\n                var instance = createInstance('Container', child);\n                if (svc.containers[child._id]) {\n                    childRefs.push(svc.containers[child._id]);\n                }\n                else {\n                    instance.haveNotLoadedChildData = true; // not sure yet if this is necessary\n                    svc.containers[child._id] = angular.copy(setLang(instance));\n                }\n            });\n            container.loadedChildData = true;\n        }\n        else {\n            container.children = [];\n        }\n        return setLang(container);\n    };\n    var isTranscript = function (item) {\n        if (typeof (item) !== 'undefined') {\n            if (item._type === 'Annotation' && item.templateUrl.match(/transcript/)) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n    };\n    svc.deriveEvent = function (event) {\n        event = setLang(event);\n        if (event._type !== 'Scene') {\n            event.searchableText = (event.display_annotation || event.display_description) + ' ' + (event.display_title || event.display_annotator);\n            if (!event.cosmetic) {\n                event.cosmetic = false; // search needs this to be explicit\n            }\n            if (event.sxs) {\n                event.cosmetic = false;\n            }\n            if (!event.templateUrl) {\n                event.templateUrl = '';\n            }\n            if (event.avatar_id) {\n                if (!svc.assets[event.avatar_id]) {\n                    svc.assets[event.avatar_id] = {};\n                }\n                event.avatar = svc.assets[event.avatar_id];\n            }\n            if (svc.episodes[event.cur_episode_id] && svc.episodes[event.cur_episode_id].template.displayName === 'University of Southern California') {\n                // HACKS AHOY\n                // USC made a bunch of change requests post-release; this was the most expedient way\n                // to deal with them. Sorry!\n                // I don't know why this situation occurs, but it does:\n                if (event.templateUrl === '') {\n                    event.templateUrl = 'templates/item/usc-badges.html';\n                }\n                if (event._type === 'Link') {\n                    if (event.templateUrl === 'templates/transmedia-link-default.html') {\n                        // they don't want any embedded links (shrug)\n                        event.templateUrl = 'templates/transmedia-link-noembed.html';\n                    }\n                    if (event.display_title.match(/ACTIVITY/)) {\n                        // Unnecessary explanatory text\n                        event.display_description = event.display_description + '<div class=\"uscWindowFgOnly\">Remember! You need to complete this activity to earn a Friends of USC Scholars badge. (When you’re finished - Come back to this page and click <b>Continue</b>).<br><br>If you’d rather <b>not</b> do the activity, clicking Continue will take you back to the micro-lesson and you can decide where you want to go from there.</div>';\n                    }\n                    if (event.display_title.match(/Haven't Registered/)) {\n                        // hide this event for non-guest users\n                        event.styles = event.styles ? event.styles : [];\n                        event.styles.push('uscHackOnlyGuests'); // will be used in discover mode (so we don't have to explicitly include it in the scene templates)\n                        event.uscReviewModeHack = 'uscHackOnlyGuests'; // ...except the review mode template, because item styles don't show up there\n                    }\n                    if (event.display_title.match(/Connect with/)) {\n                        // hide this event unless episode badge is achieved\n                        event.styles = event.styles ? event.styles : [];\n                        event.styles.push('uscHackOnlyBadge'); // will be used in discover mode (so we don't have to explicitly include it in the scene templates)\n                        event.uscReviewModeHack = 'uscHackOnlyBadge'; // ...except the review mode template, because item styles don't show up there\n                    }\n                }\n                // END of USC hacks\n            }\n            //items\n            // clear derived flags before re-setting them (in case we're editing an existing item):\n            event.isContent = false;\n            event.isTranscript = false;\n            // event.noEmbed = event.noEmbed === undefined ? false : event.noEmbed;\n            event.mixedContent = false;\n            event.targetTop = false;\n            event.isVideoUrl = false;\n            // determine whether the item is in a regular content pane.\n            // items only have one layout (scenes may have more than one...)\n            if (event.layouts) {\n                event.layoutCss = event.layouts[0];\n                if (event.layouts[0] === 'inline' || event.layouts[0].match(/sidebar/) || event.layouts[0].match(/burst/)) {\n                    event.isContent = true;\n                }\n            }\n            else {\n                // no layout, therefore inline content\n                event.isContent = true;\n            }\n            // Old templates which (TODO) should have been database fields instead:\n            if (isTranscript(event)) {\n                event.isTranscript = true;\n            }\n            var isHttps = $location.protocol() === 'https';\n            if (event._type === 'Link' && event.url && event.url.match(/^http:\\/\\//) && isHttps) {\n                event.mixedContent = true;\n                event.showInlineDetail = false;\n            }\n            if (event._type === 'Link') {\n                if (urlService.isVideoUrl(event.url)) {\n                    event.isVideoUrl = true;\n                }\n            }\n            if (event._type === 'Link' && event.url && /mailto/.test(event.url)) {\n                // event.noEmbed = true;\n                event.target = '_blank';\n            }\n            if (event.templateUrl.match(/frameicide/)) {\n                event.targetTop = true;\n            }\n        }\n        // Finally one more super-fragile HACK for producer:\n        if (!event.producerItemType) {\n            if (event._type === 'Scene') {\n                event.producerItemType = 'scene';\n            }\n            else if (event._type === 'Annotation') {\n                if (event.templateUrl.match(/transcript/)) {\n                    event.producerItemType = 'transcript';\n                }\n                else {\n                    event.producerItemType = 'annotation';\n                }\n            }\n            else if (event._type === 'Upload') {\n                if (event.templateUrl.match(/file/)) {\n                    event.producerItemType = 'file';\n                }\n                else {\n                    event.producerItemType = 'image';\n                }\n            }\n            else if (event._type === 'Link') {\n                if (event.templateUrl.match(/video/)) {\n                    event.producerItemType = 'video';\n                }\n                else {\n                    event.producerItemType = 'link';\n                }\n            }\n            else if (event._type === 'Plugin') {\n                if (event.templateUrl.match(/question/)) {\n                    event.producerItemType = 'question';\n                }\n            }\n            else if (event._type === 'Chapter') {\n                event.producerItemType = 'chapter';\n            }\n            if (!event.producerItemType) {\n                console.warn('Couldn\\'t determine a producerItemType for ', event.templateUrl);\n            }\n        }\n        //it is helpful for UI purposes to know what type of annotation an event is\n        //the IF statement above only runs if producerItemType has not be set.\n        //when creating a new event, generateEmptyItem (in EditCtrl) will set producerItemType\n        //this code handles the case AFTER producerItemType has been set, and the event is\n        //an annotation, and the user switched the annotation type.\n        switch (event.producerItemType) {\n            case 'chapter':\n                event.isContent = false;\n                break;\n            case 'annotation':\n                //set to false off the bat, then flip to true for each case\n                event.isPq = event.isHeader = event.isLongText = event.isDef = false;\n                if (/pullquote/.test(event.templateUrl)) {\n                    event.isPq = true;\n                }\n                if (/text-h1|text-h2/.test(event.templateUrl)) {\n                    event.isHeader = true;\n                }\n                if (/text-transmedia/.test(event.templateUrl)) {\n                    event.isLongText = true;\n                }\n                if (/text-definition/) {\n                    event.isDef = true;\n                }\n                break;\n        }\n        event.displayStartTime = $filter('asTime')(event.start_time);\n        return event;\n    };\n    var setLang = function (obj) {\n        // TODO: keywords, customers/oauth2_message\n        // TODO use episode default language instead of 'en'\n        var langToSet = (appState.lang) ? appState.lang : 'en';\n        angular.forEach(['title', 'annotator', 'annotation', 'description', 'name'], function (field) {\n            if (obj[field]) {\n                if (typeof (obj[field]) === 'string') {\n                    // TODO can delete this after all data has been migrated to object form\n                    obj['display_' + field] = obj[field];\n                }\n                else {\n                    if (obj[field][langToSet]) {\n                        obj['display_' + field] = obj[field][langToSet];\n                    }\n                    else {\n                        obj['display_' + field] = obj[field].en; // TODO use episode default language instead of 'en'\n                    }\n                }\n            }\n        });\n        return obj;\n    };\n    svc.setLanguageStrings = function () {\n        angular.forEach(svc.events, function (evt) {\n            evt = setLang(evt);\n        });\n        angular.forEach(svc.episodes, function (ep) {\n            ep = setLang(ep);\n        });\n        angular.forEach(svc.containers, function (container) {\n            container = setLang(container);\n        });\n        // todo:  containers\n    };\n    //for items with the same time, ensure hierarchy of items\n    //in the following order:\n    // 1. Annotations:\n    //  \t- H1 > H2 > isTranscript\n    // 3. Links\n    // 4. Uploads\n    //\t\t- Document > Image\n    //5. all other annotations\n    function _sortItems(items) {\n        return items.sort(function (a, b) {\n            if (a.start_time === b.start_time) {\n                if (a.producerItemType === 'chapter') {\n                    return -1;\n                }\n                else if (b.producerItemType === 'chapter') {\n                    return 1;\n                }\n                else if (a.chapter_marker === true) {\n                    return -1;\n                }\n                else if (b.chapter_marker === true) {\n                    return 1;\n                }\n                else if (a.templateUrl === 'templates/item/text-h1.html') {\n                    return -1;\n                }\n                else if (b.templateUrl === 'templates/item/text-h1.html') {\n                    return 1;\n                }\n                else if (a.templateUrl === 'templates/item/text-h2.html') {\n                    return -1;\n                }\n                else if (b.templateUrl === 'templates/item/text-h2.html') {\n                    return 1;\n                }\n                else if (a.isTranscript) {\n                    return -1;\n                }\n                else if (b.isTranscript) {\n                    return 1;\n                }\n                else if (a._type === 'Link') {\n                    return -1;\n                }\n                else if (b._type === 'Link') {\n                    return 1;\n                }\n                else if (a._type === 'Upload') {\n                    if (a.producerItemType === 'file' || b._type === 'Annotation') {\n                        return -1;\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (b._type === 'Upload') {\n                    return 1;\n                }\n                else {\n                    return -1;\n                }\n            }\n            else {\n                return a.start_time - b.start_time;\n            }\n        });\n    }\n    /*  Any changes to any scene or item data must call svc.resolveEpisodeEvents afterwards. It sets:\n     - episode.scenes\n     - episode.items\n     - scene.items\n     - item.scene_id\n     - episode.annotators (for use in producer)\n  \n     NOTE: this currently calls cascadeStyles on episodes and events as a side effect.\n     deriveEvent() and deriveEpisode() would be a theoretically more consistent place for that, but\n     cascadeStyles depends on the episode structure we're building here, so it feels dangerous to separate them.\n  \n     // HACK magic numbers galore:\n     endingscene cuts the duration of the last scene by 0.1 seconds\n     startingscreen extends from below zero to 0.01s\n  \n     */\n    svc.resolveEpisodeEvents = function (epId) {\n        // console.log(\"resolveEpisodeEvents\");\n        //Build up child arrays: episode->scene->item\n        var scenes = [];\n        var items = [];\n        var chapters = [];\n        var episode = svc.episodes[epId];\n        angular.forEach(svc.events, function (event) {\n            if (event.cur_episode_id !== epId) {\n                return;\n            }\n            if (event._type === 'Scene') {\n                scenes.push(event);\n            }\n            else if (event._type === 'Chapter') {\n                chapters.push(event);\n                items.push(event);\n            }\n            else {\n                items.push(event);\n            }\n        });\n        // collect a list of all the speakers/annotators in the episode.\n        // Try to merge partially-translated annotator names into the more fully-translated versions.\n        // This is imperfect -- a few will slip through if there is a missing translation in the default language -- but good enough for now\n        // TODO replace all of this, have the API keep track of each annotator as a real, separate entity\n        var annotators = {};\n        angular.forEach(items, function (event) {\n            if (event._type === 'Annotation' && event.chapter_marker === true) {\n                chapters.push(event);\n            }\n            if (event._type === 'Annotation' && event.annotator) {\n                // This is kind of a mess\n                // Use the default language as the key; merge any other languages into that key\n                var defaultLanguage = episode.defaultLanguage || 'en';\n                var key = event.annotator[defaultLanguage];\n                if (key === undefined) {\n                    // this annotator doesn't have a translation in the default language, so use its first language instead\n                    key = event.annotator[Object.keys(event.annotator)\n                        .sort()[0]];\n                }\n                if (annotators[key]) {\n                    // merge other translations of the same name into this one\n                    annotators[key].name = angular.extend(annotators[key].name, event.annotator);\n                    if (!annotators[key].annotation_image_id) {\n                        annotators[key].annotation_image_id = event.annotation_image_id;\n                    }\n                }\n                else {\n                    annotators[key] = {\n                        'name': event.annotator,\n                        'annotation_image_id': event.annotation_image_id\n                    };\n                }\n                // construct a description containing all languages, starting with the default\n                var langs = Object.keys(annotators[key].name)\n                    .sort();\n                var longKey = annotators[key].name[defaultLanguage] || '(untranslated)';\n                for (var i = 0; i < langs.length; i++) {\n                    if (langs[i] !== defaultLanguage) {\n                        longKey = longKey + ' / ' + annotators[key].name[langs[i]];\n                    }\n                }\n                annotators[key].key = longKey;\n            }\n        });\n        episode.annotators = annotators;\n        episode.chapters = chapters;\n        // WARN Chrome doesn't stable sort!   Don't depend on simultaneous events staying in the same order\n        // attach array of scenes to the episode.\n        // Note these are references to objects in svc.events[]; to change item data, do it in svc.events[] instead of here.\n        var duration = 0;\n        if (episode.masterAsset) {\n            duration = episode.masterAsset.duration;\n            angular.forEach(episode.scenes, function (scene) {\n                if (scene.start_time > duration) {\n                    scene.start_time = duration - 0.2; // last resort HACK to catch bad scene data\n                }\n            });\n        }\n        episode.scenes = scenes.sort(function (a, b) {\n            if (a._id.indexOf('internal:start') > -1 || b._id.indexOf('internal:end') > -1) {\n                return -1;\n            }\n            if (b._id.indexOf('internal:start') > -1 || a._id.indexOf('internal:end') > -1) {\n                return 1;\n            }\n            return a.start_time - b.start_time;\n        });\n        // and a redundant array of child items to the episode for convenience (they're just references, so it's not like we're wasting a lot of space)\n        episode.chapters = chapters.sort(function (a, b) {\n            return a.start_time - b.start_time;\n        });\n        // Fix bad event timing data.  (see also svc.deriveEvent())\n        angular.forEach(items, function (event) {\n            // We have some events whose start time is beyond the episode duration; they were winding up attached to the endingscene (and therefore invisible)\n            // HACK just shove those into the end of the last (real) scene with a short duration\n            if (duration > 0) {\n                if (event.start_time > duration - 0.11) {\n                    event.start_time = duration - 0.2;\n                    event.end_time = duration - 0.1;\n                }\n            }\n            // HACK keep events from being attached to landing screen if there is one\n            if (event.start_time < 0.01) {\n                event.start_time = 0.01;\n                if (event.end_time < 0.01) {\n                    event.end_time = 0.01;\n                }\n            }\n            // Some events have been stored with end times before their start times.\n            if (event.start_time > event.end_time) {\n                event.end_time = event.start_time;\n            }\n        });\n        episode.items = _sortItems(items);\n        // console.log('after sort \\n', items);\n        // ensure scenes are contiguous. Including the ending scene as end_times are relied on in producer in any editable scene.\n        // Note that this means we explicitly ignore scenes' declared end_time; instead we force it to the next scene's start (or the video end)\n        for (var i = 1, len = episode.scenes.length; i < len; i++) {\n            if (i === len - 1) {\n                if (duration !== 0) {\n                    episode.scenes[i].end_time = duration;\n                }\n            }\n            else {\n                episode.scenes[i].end_time = episode.scenes[i + 1].start_time;\n            }\n        }\n        var itemsIndex = 0;\n        // assign items to scenes (give them a scene_id and attach references to the scene's items[]:\n        //angular.forEach(scenes, function (scene) {\n        for (var y = 0, scenesLength = scenes.length; y < scenesLength; y++) {\n            var scene = scenes[y];\n            var sceneItems = [];\n            var previousTranscript = {};\n            for (var x = itemsIndex, itemsLength = items.length; x < itemsLength; x++) {\n                var event = items[x];\n                //angular.forEach(items, function (event) {\n                /* possible cases:\n                 start and end are within the scene: put it in this scene\n                 start is within this scene, end is after this scene:\n                 if item start is close to the scene end, change item start to next scene start time. The next loop will assign it to that scene\n                 if item start is not close to the scene end, change item end to scene end, assign it to this scene.\n                 start is before this scene, end is within this scene: will have already been fixed by a previous loop\n                 start is after this scene: let the next loop take care of it\n                 */\n                if (event.start_time >= scene.start_time && event.start_time < scene.end_time) {\n                    if (isTranscript(event)) {\n                        // console.log('transcript event', event);\n                        //the current event is a transcript and we have a transcript (in this scene) before it that has incorrectly set its end_time to the scene end_time.\n                        if (previousTranscript.end_time === scene.end_time) {\n                            // console.log('adjusting according to previousTranscript');\n                            //end_time may have been empty before the last itter of loop\n                            previousTranscript.end_time = event.start_time;\n                        }\n                        previousTranscript = event;\n                    }\n                    if (event.end_time <= scene.end_time) {\n                        // entirely within scene\n                        svc.events[event._id].scene_id = scene._id;\n                        sceneItems.push(event);\n                    }\n                    else {\n                        // end time is in next scene.  Check if start time is close to scene end, if so bump to next scene, otherwise truncate the item to fit in this one\n                        if (scene.end_time - 0.25 < event.start_time) {\n                            if (y !== scenesLength - 1) {\n                                // bump to next scene\n                                event.start_time = scene.end_time;\n                            }\n                            else {\n                                //in last scene\n                                event.end_time = scene.end_time;\n                                event.scene_id = scene._id;\n                                sceneItems.push(event);\n                            }\n                        }\n                        else {\n                            // truncate and add to this one\n                            event.end_time = scene.end_time;\n                            event.scene_id = scene._id;\n                            sceneItems.push(event);\n                        }\n                    }\n                }\n                // This optimization was dropping some events:\n                // if (event.start_time > scene.end_time) {\n                // \titemsIndex = x; //set the current index to i, no need to loop through things we've already seen\n                // \tbreak; // no need to continue checking events after this point as no events will be added to this scene after this point\n                // }\n            }\n            // attach array of items to the scene event:\n            // Note these items are references to objects in svc.events[]; to change item data, do it in svc.events[] instead of here.\n            svc.events[scene._id].items = _sortItems(sceneItems);\n        }\n        // Now that we have the structure, calculate event styles (for scenes and items:)\n        episode.styleCss = cascadeStyles(episode);\n        // the professional css class only should be applied on the ittEpisode template div\n        // episode.styleCss is used elsewhere and with the professional class it causes issues in some cases\n        episode.templateCss = episode.styleCss;\n        if (episode instanceof IEpisode && episode.template.pro_episode_template) {\n            episode.templateCss = 'professional ' + episode.templateCss;\n        }\n        if (episode.template && episode.template.displayName === 'Wiley') {\n            episode.templateCss += ' wiley-endscreentext ';\n        }\n        angular.forEach(svc.events, function (event) {\n            if (event.cur_episode_id !== epId) {\n                return;\n            }\n            event.styleCss = cascadeStyles(event);\n            var isImgPlain = event.templateUrl === 'templates/item/image-plain.html';\n            var isInlineImgWText = event.templateUrl === 'templates/item/image-inline-withtext.html';\n            var isImgCap = event.templateUrl === 'templates/item/image-caption-sliding.html';\n            var isImgThumb = event.templateUrl === 'templates/item/image-thumbnail.html';\n            var isBgImage = event.templateUrl === 'templates/item/image-fill.html';\n            var isLongText = event.templateUrl === 'templates/item/text-transmedia.html';\n            var isDef = event.templateUrl === 'templates/item/text-definition.html';\n            var isH1 = event.templateUrl === 'templates/item/text-h1.html';\n            var isH2 = event.templateUrl === 'templates/item/text-h2.html';\n            var isPq = event.templateUrl === 'templates/item/pullquote-noattrib.html' || event.templateUrl === 'templates/item/pullquote.html';\n            var potentialHighlight = ['highlightSolid', 'highlightBorder', 'highlightSide', 'highlightBloom', 'highlightTilt', 'highlightNone'];\n            var potentialTransitions = ['transitionFade', 'transitionPop', 'transitionNone', 'transitionSlideL', 'transitionSlideR'];\n            var currentScene;\n            if (event._type !== 'Scene') {\n                currentScene = svc.scene(event.scene_id);\n                if (episode.styles.indexOf('timestampNone') === -1 && episode.styles.indexOf('timestampInline') === -1 &&\n                    (!ittUtils.existy(currentScene) || !ittUtils.existy(currentScene.styles) || (currentScene.styles.indexOf('timestampNone') === -1 && currentScene.styles.indexOf('timestampInline') === -1))) {\n                    if (isImgPlain || isLongText || isDef) {\n                        if (!ittUtils.existy(event.styles) || (event.styles.indexOf('timestampInline') === -1 && event.styles.indexOf('timestampNone') === -1)) {\n                            event.styleCss += ' timestampNone';\n                        }\n                    }\n                }\n                if (isH1 || isH2 || isPq) {\n                    event.styleCss += ' timestampNone';\n                }\n                if ((!ittUtils.existy(event.layouts) || event.layouts.indexOf('showCurrent') === -1) &&\n                    ittUtils.intersection(episode.styles, potentialHighlight).length === 0 &&\n                    (!ittUtils.existy(currentScene) || !ittUtils.existy(currentScene.styles) || ittUtils.intersection(currentScene.styles, potentialHighlight).length === 0) &&\n                    (!ittUtils.existy(event.styles) || ittUtils.intersection(event.styles, potentialHighlight).length === 0)) {\n                    event.styleCss += ' highlightSolid';\n                }\n                if (ittUtils.intersection(episode.styles, potentialTransitions).length === 0 &&\n                    (!ittUtils.existy(currentScene) || !ittUtils.existy(currentScene.styles) || ittUtils.intersection(currentScene.styles, potentialTransitions).length === 0) &&\n                    (!ittUtils.existy(event.styles) || ittUtils.intersection(event.styles, potentialTransitions).length === 0)) {\n                    if (isImgPlain || isInlineImgWText || isImgCap || isImgThumb || isPq || isBgImage) {\n                        if (!ittUtils.existy(event.layouts) || event.layouts.indexOf('videoOverlay') !== -1) {\n                            event.styleCss += ' transitionFade';\n                        }\n                        else {\n                            event.styleCss += ' transitionPop';\n                        }\n                    }\n                    else {\n                        event.styleCss += ' transitionSlideL';\n                    }\n                }\n            }\n            if (event.layouts) {\n                event.styleCss = event.styleCss + ' ' + event.layouts.join(' ');\n            }\n            event.styleCss = event.styleCss.replace(/timestampInline/, '');\n        });\n        return episode;\n    };\n    svc.resolveEpisodeContainers = function (epId) {\n        // Constructs the episode's parents[] array, up to its navigation depth plus (skipping the episode container itself)\n        // Also sets the episode's nextEpisodeContainer and prevEpisodeContainer\n        // all parent containers should have been loaded by the time this is called, so we don't need to worry about asynch at each step\n        // console.log(\"resolveEpisodeContainers\", epId);\n        var episode = svc.episodes[epId];\n        episode.parents = [];\n        delete episode.previousEpisodeContainer;\n        delete episode.nextEpisodeContainer;\n        // if (episode.navigation_depth > 0) {\n        // \tsetParents(Number(episode.navigation_depth) + 1, epId, episode.container_id);\n        // } else {\n        episode.navigation_depth = 0;\n        // }\n    };\n    /*\n     var setParents = function (depth, epId, containerId) {\n  \n  \n     // console.log(\"setParents\", depth, epId, containerId);\n     var episode = svc.episodes[epId];\n  \n     // THis will build up the parents array backwards, starting at the end\n     if (depth <= episode.navigation_depth) { // skip the episode container\n     episode.parents[depth - 1] = svc.containers[containerId];\n     }\n  \n     if (depth === episode.navigation_depth) {\n     // as long as we're at the sibling level, get the next and previous episodes\n     // (But only within the session: this won't let us find e.g. the previous episode from S4E1; that's TODO)\n     for (var i = 0; i < svc.containers[containerId].children.length; i++) {\n     var c = svc.containers[containerId].children[i];\n     if (c.episodes[0] === epId) {\n     if (i > 0) {\n     // find the previous 'Published' episode\n     for (var j = i - 1; j > -1; j--) {\n     if (svc.containers[svc.containers[containerId].children[j]._id].status === 'Published') {\n     episode.previousEpisodeContainer = svc.containers[svc.containers[containerId].children[j]._id];\n     break;\n     }\n     }\n     }\n     if (i < svc.containers[containerId].children.length - 1) {\n     for (var k = i + 1; k < svc.containers[containerId].children.length; k++) {\n     if (svc.containers[svc.containers[containerId].children[k]._id].status === 'Published') {\n     episode.nextEpisodeContainer = svc.containers[svc.containers[containerId].children[k]._id];\n     break;\n     }\n     }\n     }\n     }\n     }\n     }\n  \n     // iterate\n     if (depth > 1) {\n     setParents(depth - 1, epId, svc.containers[containerId].parent_id);\n     }\n  \n     };\n     */\n    svc.episode = function (epId) {\n        if (!svc.episodes[epId]) {\n            // console.warn('called modelSvc.episode for a nonexistent ID', epId);\n        }\n        return svc.episodes[epId];\n    };\n    // returns all scenes and items for a given episode\n    svc.episodeEvents = function (epId) {\n        // console.log(\"modelSvc.episodeEvents\");\n        var ret = [];\n        angular.forEach(svc.events, function (event) {\n            if (event.cur_episode_id !== epId) {\n                return;\n            }\n            ret.push(event);\n        });\n        return ret;\n    };\n    svc.isOnExistingSceneStart = isOnExistingSceneStart;\n    function isOnExistingSceneStart(t) {\n        return getEpisodeScenes().some(function (scene) {\n            return scene.start_time === ittUtils.parseTime(t);\n        });\n    }\n    svc.getEpisodeScenes = getEpisodeScenes;\n    function getEpisodeScenes() {\n        return Object.keys(svc.events).reduce(function (scenes, key) {\n            if (svc.events[key]._type === 'Scene' && svc.events[key].episode_id === appState.episodeId) {\n                scenes.push(svc.events[key]);\n            }\n            return scenes;\n        }, []);\n    }\n    // returns whichever scene is current for the given time.\n    svc.sceneAtEpisodeTime = function (epId, t) {\n        t = t || playbackService.getMetaProp('time');\n        var scenes = svc.episodes[epId].scenes;\n        for (var i = 0; i < scenes.length; i++) {\n            if (scenes[i].start_time <= t && scenes[i].end_time > t) {\n                return scenes[i];\n            }\n        }\n    };\n    svc.scene = function (sceneId) {\n        // console.log(\"modelsvc.scene: \", sceneId);\n        if (!svc.events[sceneId]) {\n            // console.warn('called modelSvc.scene for a nonexistent ID', sceneId);\n        }\n        return svc.events[sceneId];\n    };\n    // Squish an episode, scene or item's episode styles, scene styles, and styles into a single styleCss string.\n    // Styles with these prefixes are the only ones that get passed down to children, and only if there isn't\n    // one with the same prefix on the child.\n    // typography, color, highlight, timestamp, transition\n    var cascadeStyles = function (thing) {\n        var styleCategories = {\n            'typography': false,\n            'color': false,\n            'highlight': false,\n            'timestamp': false,\n            'transition': false\n        };\n        var cssArr = [];\n        // start with the thing's own styles\n        angular.forEach(thing.styles, function (style) {\n            cssArr.push(style); // keep all styles; not just the ones in a styleCategory\n            angular.forEach(styleCategories, function (categoryValue, categoryName) {\n                if (style.indexOf(categoryName) === 0) {\n                    styleCategories[categoryName] = style;\n                }\n            });\n        });\n        // add each sceneStyle, only if it is in a styleCategory the thing isn't already using\n        if (thing.scene_id) {\n            var sceneStyles = svc.events[thing.scene_id].styles;\n            angular.forEach(sceneStyles, function (style) {\n                angular.forEach(styleCategories, function (categoryValue, categoryName) {\n                    if (!styleCategories[categoryName] && style.indexOf(categoryName) === 0) {\n                        cssArr.push(style);\n                        styleCategories[categoryName] = style;\n                    }\n                });\n            });\n        }\n        // if (thing instanceof IEpisode) {\n        //   // TODO: add episode namespace until db work is implemented\n        //   cssArr.push(thing.template_data.cssClass);\n        // }\n        // add each episodeStyle, only if it is in a styleCategory the thing isn't already using\n        if (thing.cur_episode_id) {\n            var episodeStyles = svc.episodes[thing.cur_episode_id].styles;\n            angular.forEach(episodeStyles, function (style) {\n                angular.forEach(styleCategories, function (categoryValue, categoryName) {\n                    if (!styleCategories[categoryName] && style.indexOf(categoryName) === 0) {\n                        cssArr.push(style);\n                    }\n                });\n            });\n        }\n        // TEMPORARY: force bg items to transitionFade\n        if ((thing._type !== 'Scene') && !thing.isContent && thing.layouts && thing.layouts[0].match(/Bg/)) {\n            for (var i = 0; i < cssArr.length; i++) {\n                if (cssArr[i].match(/transition/) && cssArr[i] !== 'transitionNone') {\n                    cssArr[i] = 'transitionFade';\n                }\n            }\n        }\n        return cssArr.join(' ');\n    };\n    svc.assocEventWithAsset = assocEventWithAsset;\n    function assocEventWithAsset(eventId, assetId) {\n        if (svc.events[eventId] && svc.assets[assetId]) {\n            svc.events[eventId].asset = svc.assets[assetId];\n        }\n    }\n    svc.resolveEpisodeAssets = function (episodeId) {\n        // console.log(\"resolveEpisodeAssets\");\n        // attaches assets to svc.events\n        angular.forEach(svc.events, function (item) {\n            if (item.cur_episode_id !== episodeId) {\n                return;\n            }\n            var assetId = item.asset_id || item.link_image_id || item.annotation_image_id;\n            if (!assetId) {\n                return;\n            }\n            if (svc.assets[assetId]) {\n                svc.events[item._id].asset = svc.assets[assetId];\n            }\n        });\n        // Do episode's master asset and poster, too.  If they're not here, do nothing; this will get called again after assets load\n        if (svc.episodes[episodeId]) {\n            var master_asset_id = svc.episodes[episodeId].master_asset_id;\n            if (master_asset_id) {\n                if (svc.assets[master_asset_id]) {\n                    svc.episodes[episodeId].masterAsset = svc.assets[master_asset_id];\n                }\n            }\n            var poster_frame_id = svc.episodes[episodeId].poster_frame_id;\n            if (poster_frame_id) {\n                if (svc.assets[poster_frame_id]) {\n                    svc.episodes[episodeId].poster = svc.assets[poster_frame_id];\n                }\n            }\n        }\n    };\n    // TODO: Future episodes should have this as an available scene template instead\n    svc.addLandingScreen = function (episodeId) {\n        // console.log(\"add landing screen\", episodeId);\n        // create a new scene event for this episod\n        svc.events['internal:landingscreen:' + episodeId] = createInstance('Scene', {\n            '_id': 'internal:landingscreen:' + episodeId,\n            '_type': 'Scene',\n            '_internal': true,\n            'templateUrl': 'templates/scene/landingscreen.html',\n            'cur_episode_id': episodeId,\n            'episode_id': episodeId,\n            'start_time': -0.01,\n            // enforce its firstness; a start time of zero might sort after the first scene which also starts at zero\n            'end_time': 0.01\n        });\n    };\n    // Don't call this until the master asset exists and episode events have loaded!\n    svc.addEndingScreen = function (episodeId) {\n        // console.log(\"addEndingScreen\", svc.episodes[episodeId].scenes);\n        var episode = svc.episodes[episodeId];\n        if (!episode || !episode.scenes) {\n            // console.warn('addEndingScreen called on an episode without scenes');\n            return;\n        }\n        if (!episode.masterAsset) {\n            console.warn('No master asset in episode...');\n            return;\n        }\n        //may not be sorted... so sort them\n        episode.scenes = episode.scenes.sort(function (a, b) {\n            return a.start_time - b.start_time;\n        });\n        var lastScene = episode.scenes[episode.scenes.length - 1];\n        if (lastScene._id.match(/internal:endingscreen/)) {\n            // console.error('Attempted to add an ending screen twice');\n            return;\n        }\n        var duration = parseFloat(episode.masterAsset.duration); // HACK\n        //coerce end of last scene (and its items) to match video duration:\n        lastScene.end_time = duration - 0.1;\n        angular.forEach(lastScene.items, function (item) {\n            if (item.end_time > duration - 0.1) {\n                item.end_time = duration - 0.1;\n            }\n        });\n        // create a new scene event for this episode\n        svc.events['internal:endingscreen:' + episodeId] = createInstance('Scene', {\n            '_id': 'internal:endingscreen:' + episodeId,\n            '_type': 'Scene',\n            '_internal': true,\n            'templateUrl': 'templates/scene/endingscreen.html',\n            'cur_episode_id': episodeId,\n            'start_time': duration - 0.1,\n            'end_time': duration\n        });\n        svc.events['internal:endingscreen:' + episodeId] = setLang(svc.events['internal:endingscreen:' + episodeId]);\n        svc.resolveEpisodeEvents(episodeId);\n    };\n    // TODO get rid of this; really wasteful to be checking this constantly, it's only useful\n    //  right after a master asset upload  (put it in ittVideo pollInterval() instead)\n    svc.isTranscoded = function (video) {\n        if (video.mediaSrcArr.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    if (config.debugInBrowser) {\n        console.log('Event cache:', svc.events);\n        console.log('Asset cache:', svc.assets);\n        console.log('Container cache:', svc.containers);\n        console.log('Episode cache:', svc.episodes);\n        console.log('Narrative cache:', svc.narratives);\n        console.log('Customer cache:', svc.customers);\n    }\n    return svc;\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/playbackService/playbackService.ts\n/**\n * Created by githop on 10/24/16.\n */\n/**\n * @ngdoc service\n * @name iTT.service:playbackService\n * @description\n * playbackService exports an interface for the timelineSvc and consumes the interfaces exported from\n * the playerManagers. The exported methods of the playbackService are called by timelineSvc or ittVideo directive.\n *\n * Videos in the app (either the main video or embeds) are kept track of using the db record _id. See the _players\n * object in the playerManagers for an example.\n *\n * Most of the exported playback methods (seek, play, pause...etc) accept an optional playerId param. If\n * left blank the playerId will be set to the id of the episode.masterAsset, aka the main video. This case is used\n * in mostly the timlineSvc, (as it syncs the main video with our episode events) and to query state of video\n * playback in the UI.\n * ```\n *  //no input parameter, will command main video.\n *  //sending a command\n *  playbackService.playVideo()\n *  //querying playback state\n *  playbackService.getMetaprop('duration');\n * ```\n * @requires $interval\n * @requires iTT.service:youTubePlayerManager\n * @requires iTT.service:html5PlayerManager\n * @requires iTT.service:ittUtils\n * @requires iTT.service:urlService\n * @requires PLAYERSTATES_WORD\n * @requires PLAYERSTATES\n */\nplaybackService_playbackService.$inject = [\n    '$interval',\n    'youTubePlayerManager',\n    'html5PlayerManager',\n    'kalturaPlayerManager',\n    'wistiaPlayerManager',\n    'ittUtils',\n    'urlService',\n    'PLAYERSTATES_WORD',\n    'PLAYERSTATES'\n];\nfunction playbackService_playbackService($interval, youTubePlayerManager, html5PlayerManager, kalturaPlayerManager, wistiaPlayerManager, ittUtils, urlService, PLAYERSTATES_WORD, PLAYERSTATES) {\n    /* tslint:disable:prefer-const object-literal-shorthand */\n    var _playerInterfaces = {};\n    var _mainPlayerId;\n    var _stateChangeCallbacks = [];\n    var _playerManagers = [\n        html5PlayerManager, youTubePlayerManager, kalturaPlayerManager, wistiaPlayerManager\n    ];\n    var _timelineState = '';\n    var _mainPlayerBufferingPoll;\n    var _playbackServiceHasBeenReset;\n    var _existy = ittUtils.existy;\n    angular.forEach(_playerManagers, function (playerManager) {\n        playerManager.registerStateChangeListener(_stateChangeCB);\n    });\n    return {\n        seedPlayer: seedPlayer,\n        createInstance: createInstance,\n        play: play,\n        pause: pause,\n        seek: seek,\n        getCurrentTime: getCurrentTime,\n        getPlayerState: getPlayerState,\n        toggleMute: toggleMute,\n        setVolume: setVolume,\n        getPlayerDiv: getPlayerDiv,\n        setSpeed: setSpeed,\n        registerStateChangeListener: registerStateChangeListener,\n        unregisterStateChangeListener: unregisterStateChangeListener,\n        getMetaProp: getMetaProp,\n        setMetaProp: setMetaProp,\n        getTimelineState: getTimelineState,\n        setTimelineState: setTimelineState,\n        freezeMetaProps: freezeMetaProps,\n        unFreezeMetaProps: unFreezeMetaProps,\n        // getMetaObj: getMetaObj,\n        pauseOtherPlayers: pauseOtherPlayers,\n        handle$Destroy: handle$Destroy,\n        resetPlaybackService: resetPlaybackService,\n        stop: stop,\n        allowPlayback: allowPlayback,\n        togglePlayback: togglePlayback,\n        renamePid: renamePid,\n        handleTimelineEnd: handleTimelineEnd\n    };\n    /*\n     PUBLIC METHODS\n     */\n    /**\n     * @ngdoc method\n     * @name #handleTimelineEnd\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Used to allow flexibility between player managers when it comes to reaching the end of the timeline.\n     * @param {String} pid the pid of the player\n     * @returns {Void} returns void.\n     */\n    function handleTimelineEnd(pid) {\n        pid = _setPid(pid);\n        if (_existy(_playerInterfaces[pid])) {\n            _playerInterfaces[pid].handleTimelineEnd(pid);\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #seedPlayer\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Called from ittVideo during initialization. Used to store and setup particular data relevant to creating\n     * an instance of playerManager.\n     * @param {String} id Main Video Asset ID or Event ID, for embeds\n     * @param {Boolean} mainPlayer Determines type of player, embed or main\n     * @param {Array} mediaSrcArr array of youtube URLs\n     * @returns {Void} returns void.\n     */\n    function seedPlayer(mediaSrcArr, id, mainPlayer) {\n        if (mainPlayer === true) {\n            if (_existy(_playerInterfaces[id])) {\n                //bail if we have already set the main player.\n                return;\n            }\n        }\n        var parsedMedia = urlService.parseMediaSrcArr(mediaSrcArr);\n        var pm = _getPlayerManagerFromMediaSrc(parsedMedia);\n        _playerInterfaces[id] = pm;\n        _playbackServiceHasBeenReset = false;\n        if (mainPlayer) {\n            _mainPlayerId = id;\n            if (pm.type !== 'wistia') {\n                _pollBufferedPercent();\n            }\n        }\n        pm.seedPlayerManager(id, mainPlayer, parsedMedia[0].mediaSrcArr);\n    }\n    /**\n     * @ngdoc method\n     * @name #createInstance\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Invokes the 'create' method on the playerManager with the input id, stores the entry in the\n     * _playerInterfaces map.\n     * @param {String} [playerId=mainPlayerId] Optional input param.\n     */\n    function createInstance(playerId) {\n        _playerInterfaces[playerId].create(playerId);\n    }\n    //called from timlineSvc -> playbackService -> playerManager\n    /**\n     * @ngdoc method\n     * @name #play\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Invokes the 'play' method on the playerManager with the passed input id.\n     * @param {String} [playerId=mainPlayerId] Optional input param.\n     */\n    function play(playerId) {\n        angular.forEach(_playerManagers, function (pm) {\n            pm.pauseOtherPlayers(_setPid(playerId));\n        });\n        if (getMetaProp('ready', _setPid(playerId)) === true) {\n            _playerInterfaces[_setPid(playerId)].play(_setPid(playerId));\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #pause\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Invokes the 'pause' method on the playerManager with the passed input id.\n     * @param {String} [playerId=mainPlayerId] Optional input param.\n     */\n    function pause(playerId) {\n        if (getMetaProp('ready', _setPid(playerId)) === true) {\n            _playerInterfaces[_setPid(playerId)].pause(_setPid(playerId));\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #seek\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Invokes the 'seek' method on the playerManager with the passed input id.\n     * @param {Number} t time to seek playback to.\n     * @param {String} [playerId=mainPlayerId] Optional input param.\n     */\n    function seek(t, playerId) {\n        if (getMetaProp('ready', _setPid(playerId)) === true) {\n            _playerInterfaces[_setPid(playerId)].seekTo(_setPid(playerId), parseFloat(t));\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #allowPlayback\n     * @methodOf iTT.service:playbackService\n     * @description\n     * static method used check playback state prior to toggling between play or pause\n     * @param {String} state state to check against.\n     */\n    function allowPlayback(state) {\n        return (state === 'paused' ||\n            state === 'unstarted' ||\n            state === 'video cued' ||\n            state === 'ended' ||\n            state === 'player ready');\n    }\n    /**\n     * @ngdoc method\n     * @name #togglePlayback\n     * @methodOf iTT.service:playbackService\n     * @description\n     * static method which is bound to play/pause buttons / video mask.\n     * @param {String} pid id of the player to drive\n     * @param {Function} restartFn function to call when restarting.\n     */\n    function togglePlayback(pid, restartFn, analyticsFn) {\n        pid = _setPid(pid);\n        var state = getPlayerState(pid);\n        var time = getMetaProp('time', pid);\n        var duration = getMetaProp('duration', pid);\n        if (time >= duration && pid === _mainPlayerId) {\n            return restartFn();\n        }\n        if (allowPlayback(state) === true) {\n            play(pid);\n        }\n        else {\n            pause(pid);\n            analyticsFn('pause');\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #pauseOtherPlayers\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Invokes the 'pauseOtherPlayers' method on all playerManagers with the passed input id.\n     * @param {String} [playerId=mainPlayerId] Optional input param.\n     */\n    function pauseOtherPlayers(playerId) {\n        angular.forEach(_playerManagers, function (pm) {\n            pm.pauseOtherPlayers(_setPid(playerId));\n        });\n        //on emebds, be sure to set the playerState to paused if the $destroy event pre-empts pause from being\n        //set naturally\n        angular.forEach(_playerInterfaces, function (pi, pid) {\n            if (pid !== playerId && pid !== _mainPlayerId) {\n                pi.setMetaProp(pid, 'playerState', '2');\n            }\n        });\n    }\n    /**\n     * @ngdoc method\n     * @name #registerStateChangeListener\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Wires up a stateChangeListener to which events can be emitted from and responded to.\n     * @param {Function} cb the function to invoke when on a state change.\n     */\n    function registerStateChangeListener(cb) {\n        var len = _stateChangeCallbacks.length;\n        //do not register the same listener twice\n        while (len--) {\n            if (cb.toString() === _stateChangeCallbacks[len].toString()) {\n                return;\n            }\n        }\n        _stateChangeCallbacks.push(cb);\n    }\n    /**\n     * @ngdoc method\n     * @name #unregisterStateChangeListener\n     * @methodOf iTT.service:playbackService\n     * @description\n     * removes a stateChangeListener function from the array of listeners.\n     * @param {Function} cb the function to remove.\n     */\n    function unregisterStateChangeListener(cb) {\n        _stateChangeCallbacks = _stateChangeCallbacks.filter(function (fn) {\n            return fn.toString() !== cb.toString();\n        });\n    }\n    /**\n     * @ngdoc method\n     * @name #getCurrentTime\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Invokes the 'getCurrentTime' method on all playerManagers with the passed input id.\n     * @param {String} [playerId=mainPlayerId] Optional input param.\n     */\n    function getCurrentTime(playerId) {\n        if (_existy(_playerInterfaces[_setPid(playerId)])) {\n            return _playerInterfaces[_setPid(playerId)].getCurrentTime(_setPid(playerId));\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #getPlayerDiv\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Invokes the 'getPlayerDiv' method on all playerManagers with the passed input id.\n     * @param {String} [playerId=mainPlayerId] Optional input param.\n     */\n    function getPlayerDiv(playerId) {\n        return _playerInterfaces[_setPid(playerId)].getPlayerDiv(_setPid(playerId));\n    }\n    /**\n     * @ngdoc method\n     * @name #getPlayerState\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Invokes the 'getPlayerState' method on all playerManagers with the passed input id.\n     * @param {String} [playerId=mainPlayerId] Optional input param.\n     */\n    function getPlayerState(playerId) {\n        return _playerInterfaces[_setPid(playerId)].getPlayerState(_setPid(playerId));\n    }\n    /**\n     * @ngdoc method\n     * @name #setSpeed\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Invokes the 'setSpeed' method on all playerManagers with the passed input id.\n     * @param {Number} playbackRate rate to set playback speed to.\n     * @param {String} [playerId=mainPlayerId] Optional input param.\n     */\n    function setSpeed(playbackRate, playerId) {\n        return _playerInterfaces[_setPid(playerId)].setSpeed(_setPid(playerId), playbackRate);\n    }\n    /**\n     * @ngdoc method\n     * @name #toggleMute\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Invokes the 'toggleMute' method on all playerManagers with the passed input id.\n     * @param {String} [playerId=mainPlayerId] Optional input param.\n     */\n    function toggleMute(playerId) {\n        return _playerInterfaces[_setPid(playerId)].toggleMute(_setPid(playerId));\n    }\n    /**\n     * @ngdoc method\n     * @name #setVolume\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Invokes the 'setVolume' method on all playerManagers with the passed input id.\n     * @param {Number} vol the volume level to set.\n     * @param {String} [playerId=mainPlayerId] Optional input param.\n     */\n    function setVolume(vol, playerId) {\n        _playerInterfaces[_setPid(playerId)].setVolume(_setPid(playerId), vol);\n    }\n    /**\n     * @ngdoc method\n     * @name #getMetaProp\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Used to query a property of a playerManager meta Object, such as 'duration'.\n     * @param {String} prop the name of the property to query.\n     * @param {String} [id=mainPlayerId] Optional id.\n     * @returns {String|Number|Boolean|Void} returns the value of the prop specified\n     */\n    function getMetaProp(prop, id) {\n        var pid = _setPid(id);\n        if (_existy(_playerInterfaces[pid])) {\n            return _playerInterfaces[pid].getMetaProp(pid, prop);\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #setMetaProp\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Used to set a property on a playerManager instance's meta Object.\n     * @param {String} prop the name of the property to query.\n     * @param {String|Number|Boolean} val The value to set.\n     * @param {String} [id=mainPlayerId] Optional id.\n     * @returns {Void} no return value but does have side-effects.\n     */\n    function setMetaProp(prop, val, id) {\n        var pid = _setPid(id);\n        if (_existy(_playerInterfaces[pid])) {\n            _playerInterfaces[pid].setMetaProp(pid, prop, val);\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #getTimelineState\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Used to query the state of the timeline.\n     * @returns {String} the state of the timeline.\n     */\n    function getTimelineState() {\n        return _timelineState;\n    }\n    /**\n     * @ngdoc method\n     * @name #setTimelineState\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Used set the state of the timeline.\n     * @param {String} state the timelineState to set\n     * @returns {Void} no return val but has side-effects.\n     */\n    function setTimelineState(state) {\n        _timelineState = state;\n    }\n    /**\n     * @ngdoc method\n     * @name #freezeMetaProps\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Invokes the 'freezeMetaProps' method on all playerManagers with the passed input id.\n     * @param {String} [playerId=mainPlayerId] Optional input param.\n     */\n    function freezeMetaProps(playerId) {\n        _playerInterfaces[_setPid(playerId)].freezeMetaProps(_setPid(playerId));\n    }\n    /**\n     * @ngdoc method\n     * @name #unFreezeMetaProps\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Invokes the 'unFreezeMetaProps' method on all playerManagers with the passed input id.\n     * @param {String} [playerId=mainPlayerId] Optional input param.\n     */\n    function unFreezeMetaProps(playerId) {\n        _playerInterfaces[_setPid(playerId)].unFreezeMetaProps(_setPid(playerId));\n    }\n    // function getMetaObj(playerId) {\n    //   if (_existy(_playerInterfaces[_setPid(playerId)])) {\n    //     return _playerInterfaces[_setPid(playerId)].getMetaObj(_setPid(playerId));\n    //   }\n    // }\n    /**\n     * @ngdoc method\n     * @name #resetPlaybackService\n     * @methodOf iTT.service:playbackService\n     * @description\n     * used when the playbackService needs to be reset back to mostly default state. This is eventually called when\n     * the main video fires its $destory event\n     */\n    function resetPlaybackService() {\n        _playbackServiceHasBeenReset = true;\n        _playerInterfaces = {};\n        angular.forEach(_playerManagers, function (pm) {\n            pm.resetPlayerManager();\n        });\n        _mainPlayerId = '';\n        _timelineState = '';\n        $interval.cancel(_mainPlayerBufferingPoll);\n    }\n    /**\n     * @ngdoc method\n     * @name #handle$Destroy\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Handles clean up for either main player of embeds. called from ittVideo's $destroy event.\n     * @param {String} playerId unique id of the player to command\n     */\n    function handle$Destroy(playerId) {\n        if (playerId !== _mainPlayerId) {\n            if (_playbackServiceHasBeenReset === false) {\n                _handleEmbedDestroy(playerId);\n            }\n        }\n        else {\n            //will call resetPlaybackService from timelineSvc\n            _emitStateChange('reset');\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #stop\n     * @methodOf iTT.service:playbackService\n     * @description\n     * for calling stop for youtube videos\n     * @param {String} playerId unique id of the player to command\n     */\n    function stop(playerId) {\n        _playerInterfaces[_setPid(playerId)].stop(_setPid(playerId));\n    }\n    /**\n     * @ngdoc method\n     * @name renamePid\n     * @methodOf iTT.service:playbackService\n     * @param {String} oldName the name to find and replace\n     * @param {String} newName the target name\n     * @returns {Void} no return value\n     */\n    function renamePid(oldName, newName) {\n        //rename player manager\n        if (_existy(_playerInterfaces[oldName])) {\n            _playerInterfaces[oldName].renamePid(oldName, newName);\n        }\n        //check if main player is being renamed.\n        if (oldName === _mainPlayerId) {\n            _mainPlayerId = newName;\n        }\n        //rename _playerInterface that calls player managers\n        ittUtils.renameKey(oldName, newName, _playerInterfaces);\n    }\n    /*\n     PRIVATE METHODS\n     */\n    /**\n     * @ngdoc method\n     * @name getBufferedPercent\n     * @methodOf iTT.service:playbackService\n     * @description\n     * for drawing the amount of video that has buffered in the timeline.\n     * @param {String} playerId unique id of the player to command\n     * @private\n     */\n    function _getBufferedPercent(pid) {\n        pid = _setPid(pid);\n        return _playerInterfaces[pid].getBufferedPercent(pid);\n    }\n    /**\n     * @ngdoc method\n     * @name _handleEmbedDestroy\n     * @methodOf iTT.service:playbackService\n     * @description\n     * _handleEmbedDestroy\n     * @param {String} [playerId=mainPlayerId] Optional input param.\n     * @private\n     */\n    function _handleEmbedDestroy(playerId) {\n        setMetaProp('startAtTime', getCurrentTime(playerId), playerId);\n        setMetaProp('hasResumedFromStartAt', false, playerId);\n        setMetaProp('ready', false, playerId);\n        freezeMetaProps(playerId);\n    }\n    /**\n     * @ngdoc method\n     * @name _setPid\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Helper method used to set the playerId to either the input ID or the mainPlayerId if left blank.\n     * @param {String} pid the ID of the player to use.\n     * @returns {String} Either the input ID or the _mainPlayerId\n     * @private\n     */\n    function _setPid(pid) {\n        if (_existy(pid)) {\n            return pid;\n        }\n        return _mainPlayerId;\n    }\n    /**\n     * @ngdoc method\n     * @name _emitStateChange\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Helper method used to to emit stateChanges upstream to the timelineSvc (or anywhere else that has registered\n     * a listener)\n     * @param {String} state State to emit.\n     * @private\n     */\n    function _emitStateChange(state) {\n        angular.forEach(_stateChangeCallbacks, function (cb) {\n            cb(state);\n        });\n    }\n    /**\n     * @ngdoc method\n     * @name _onPlayerReady\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Method that handles the 'onReady' event fired from a playerManager when the player is ready to accept\n     * commands. Will seek playback to 'startAt' time which is set from either a query string parameter (for the\n     * main video) or is saved on the ittVideo $destory event, for embeds. If the video was playing prior to being\n     * destroyed, it will resume playback.\n     * @param {String} pid playerId of player emitting 'onReady' event.\n     * @private\n     */\n    function _onPlayerReady(pid) {\n        var lastState = PLAYERSTATES[getMetaProp('playerState', pid)];\n        var startAt = getMetaProp('startAtTime', pid);\n        var hasResumed = getMetaProp('hasResumedFromStartAt', pid);\n        var isBeingReset = getMetaProp('resetInProgress', pid);\n        setMetaProp('ready', true, pid);\n        if (pid === _mainPlayerId && isBeingReset === false) {\n            setMetaProp('playerState', '5', pid);\n            _emitStateChange('video cued');\n        }\n        if (startAt === 0 && getMetaProp('autoplay', pid) === true) {\n            play(pid);\n            setMetaProp('autoplay', false, pid);\n        }\n        if (startAt > 0) {\n            if (hasResumed === false) {\n                seek(startAt, pid);\n                if (isBeingReset === true) {\n                    play(pid);\n                    setMetaProp('resetInProgress', false, pid);\n                    return;\n                }\n                if (getMetaProp('autoplay', pid) === true) {\n                    play(pid);\n                    setMetaProp('autoplay', false, pid);\n                }\n                if (pid !== _mainPlayerId) {\n                    setMetaProp('hasResumedFromStartAt', true, pid);\n                    if (lastState === 'playing') {\n                        play(pid);\n                    }\n                }\n            }\n        }\n    }\n    //respond to events emitted from playerManager\n    //playerManager -> playbackSvc -> timelineSvc (if main)\n    /**\n     * @ngdoc method\n     * @name _stateChangeCB\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Switch statement that handles events emitted from playerManagers and will emit the event up to the\n     * timelineSvc if the event came from the mainVideo.\n     * @param {Object} stateChangeEvent Object with state and emitterId properties.\n     * @returns {Void} returns void but has side-effects.\n     * @private\n     */\n    function _stateChangeCB(stateChangeEvent) {\n        var state = stateChangeEvent.state;\n        var emitterId = stateChangeEvent.emitterId;\n        // console.log('pbs#stateChangeCB', state);\n        switch (state) {\n            case 'unstarted':\n                break;\n            case 'ended':\n                break;\n            case 'playing':\n                if (getMetaProp('hasBeenPlayed', emitterId) === false) {\n                    setMetaProp('hasBeenPlayed', true, emitterId);\n                }\n                break;\n            case 'paused':\n                break;\n            case 'buffering':\n                break;\n            case 'video cued':\n                break;\n            case 'player ready':\n                _onPlayerReady(emitterId);\n                break;\n        }\n        if (state !== 'player ready') {\n            setMetaProp('playerState', PLAYERSTATES_WORD[state], emitterId);\n        }\n        if (emitterId === _mainPlayerId) {\n            _emitStateChange(state);\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name _stateChangeCB\n     * @methodOf iTT.service:playbackService\n     * @description\n     * queries the bufferedPercent meta object prop on a 200ms interval\n     * @returns {Number} returns the percent of buffering for the main video\n     * @private\n     */\n    function _pollBufferedPercent() {\n        _mainPlayerBufferingPoll = $interval(function () {\n            setMetaProp('bufferedPercent', _getBufferedPercent(_mainPlayerId), _mainPlayerId);\n        }, 200);\n    }\n    /**\n     * @ngdoc method\n     * @name _getPlayerManagerFromMediaSrc\n     * @methodOf iTT.service:playbackService\n     * @description\n     * Loops over the input mediaSrcArr to derive the playerManager that can handle the input parsedMediaSrcArr\n     * @returns {Object} returns the playerManager that can handle the input media\n     * @private\n     */\n    function _getPlayerManagerFromMediaSrc(parsedMediaSrc) {\n        var len = _playerManagers.length, pm = null;\n        while (len--) {\n            if (parsedMediaSrc.length > 0 && _playerManagers[len].type === parsedMediaSrc[0].type) {\n                pm = _playerManagers[len];\n                break;\n            }\n        }\n        return pm;\n    }\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/questionAnswersSvc.ts\n\nquestionAnswersSvc_questionAnswersSvc.$inject = ['$q', 'analyticsSvc', 'appState'];\nfunction questionAnswersSvc_questionAnswersSvc($q, analyticsSvc, appState) {\n    var svc = {};\n    svc.saveAnswer = function (name, eventID, data) {\n        return analyticsSvc.forceCaptureEventActivityWithPromise(name, eventID, data);\n    };\n    svc.getAnswers = function (eventId) {\n        var defer = $q.defer();\n        analyticsSvc.readEventActivity(eventId)\n            .then(function (activityData) {\n            var answers = activityData.filter(function (activity) {\n                return ((activity.name === \"question-answered\" || activity.name === \"question-answered-updated\") &&\n                    activity.episode_id === appState.episodeId);\n            });\n            defer.resolve(answers);\n        });\n        return defer.promise;\n    };\n    svc.getUserAnswer = function (eventId, userId) {\n        var defer = $q.defer();\n        svc.getAnswers(eventId)\n            .then(function (data) {\n            if (data) {\n                var userAnswer = data.filter(function (item) {\n                    return item.user_id === userId;\n                });\n                if (userAnswer.length > 0) {\n                    defer.resolve(userAnswer[0]);\n                }\n                else {\n                    defer.reject();\n                }\n            }\n            else {\n                return defer.reject();\n            }\n        });\n        return defer.promise;\n    };\n    svc.calculateCounts = function (events) {\n        var grouped;\n        angular.forEach(events, function (event) {\n            grouped[event.data.index]++;\n        });\n        return grouped;\n    };\n    svc.incrementAnswerCount = function (answerCounts, answerIndex) {\n        answerCounts[answerIndex] = (answerCounts[answerIndex] || 0) + 1;\n    };\n    /* This never gets used (flot calculates percentages for us) and was I think incorrect anyway (the chart was displaying the percentage as the answer count)\n     svc.calculatePercentages = function (grouped) {\n     console.log(\"CalcPercentages\", grouped);\n     var totalAnswers = 0;\n     for (var answerIndex in grouped) {\n     if (grouped.hasOwnProperty(answerIndex)) {\n     totalAnswers += grouped[answerIndex];\n     }\n     }\n     var chartData = [];\n     var x = 0;\n     for (answerIndex in grouped) {\n     if (grouped.hasOwnProperty(answerIndex)) {\n     chartData.push({\n     data: ((grouped[answerIndex] / totalAnswers) * 100),\n     //\t\t\t\t\t\tdata: [\n     //\t\t\t\t\t\t\t[x, ((grouped[answertext] / totalAnswers) * 100)]\n     //\t\t\t\t\t\t],\n     label: answerIndex\n     });\n  \n     }\n     x++;\n     }\n     console.log(\"returning \", chartData);\n     return chartData;\n     };\n     */\n    return svc;\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/recursionHelper.ts\nrecursionHelper.$inject = ['$compile'];\nfunction recursionHelper($compile) {\n    return {\n        // snarfed this from a SO answer.  Allows a directive to include itself without endless loops\n        compile: function (element, link) {\n            // Normalize the link parameter\n            if (angular.isFunction(link)) {\n                link = {\n                    post: link\n                };\n            }\n            // Break the recursion loop by removing the contents\n            var contents = element.contents().remove();\n            var compiledContents;\n            return {\n                pre: (link && link.pre) ? link.pre : null,\n                /**\n                 * Compiles and re-adds the contents\n                 */\n                post: function (scope, element) {\n                    // Compile the contents\n                    if (!compiledContents) {\n                        compiledContents = $compile(contents);\n                    }\n                    // Re-add the compiled contents to the element\n                    compiledContents(scope, function (clone) {\n                        element.append(clone);\n                    });\n                    // Call the post-linking function, if any\n                    if (link && link.post) {\n                        link.post.apply(null, arguments);\n                    }\n                }\n            };\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/selectService.ts\nselectService_selectService.$inject = ['authSvc', 'modelSvc', 'dataSvc', 'ittUtils'];\nfunction selectService_selectService(authSvc, modelSvc, dataSvc, ittUtils) {\n    var _userHasRole = authSvc.userHasRole;\n    var _existy = ittUtils.existy;\n    var _langOpts = [\n        { value: 'en', name: 'English', isDisabled: false },\n        { value: 'es', name: 'Spanish', isDisabled: false },\n        { value: 'zh', name: 'Chinese', isDisabled: false },\n        { value: 'pt', name: 'Portuguese', isDisabled: false },\n        { value: 'fr', name: 'French', isDisabled: false },\n        { value: 'de', name: 'German', isDisabled: false },\n        { value: 'it', name: 'Italian', isDisabled: false }\n    ];\n    //select opts map\n    var _select = {\n        video: [],\n        display: [],\n        imagePosition: [],\n        imagePin: [],\n        questionType: [],\n        language: _langOpts\n    };\n    //use visibility map with getVisibility() and component directives\n    var _visibility = {\n        templateSelect: true,\n        imageUpload: false,\n        display: false,\n        videoPosition: false,\n        bgImagePosition: false,\n        titleField: true,\n        speakerField: true\n    };\n    //moved into a map because we will need to use this\n    //when we are handing updates on background images.\n    var _scenes = {\n        centered: 'templates/scene/centered.html',\n        centeredPro: 'templates/scene/centeredPro.html',\n        '1col': 'templates/scene/1col.html',\n        mirroredTwoCol: 'templates/scene/mirrored-twocol.html',\n        cornerV: 'templates/scene/cornerV.html',\n        centerVV: 'templates/scene/centerVV.html',\n        centerVVMondrian: 'templates/scene/centerVV-Mondrian.html',\n        cornerH: 'templates/scene/cornerH.html',\n        pip: 'templates/scene/pip.html' //Split 6\n    };\n    var _bgImageTitles = {\n        windowBg: 'Full window background',\n        videoOverlay: 'Video overlay (16:9)',\n        textBg: 'Text pane background',\n        textFg: 'Text pane foreground',\n        transmediaBg: 'Transmedia pane background',\n        transmediaFg: 'Transmedia pane foreground'\n    };\n    var _D1 = {\n        a: { value: 'showCurrent', name: 'show only current transmedia items' },\n        b: { value: '', name: 'Show all transmedia items, highlight current ones' }\n    };\n    var _D2 = {\n        a: { value: 'showCurrent', name: 'Show only current text items' },\n        b: { value: '', name: 'Show all text items, highlight current ones' }\n    };\n    var _D3 = {\n        a: { value: 'showCurrent', name: 'Show only current items' },\n        b: { value: '', name: 'Show all items, highlight current ones' }\n    };\n    var _imageFieldVisibility = _partialVis('imageUpload');\n    var _displaySelectVisibility = _partialVis('display');\n    var _videoPositionSelectVisibility = _partialVis('videoPosition');\n    var _titleFieldVisibility = _partialVis('titleField');\n    var _speakerFieldVisibility = _partialVis('speakerField');\n    var _templateSelectVisibility = _partialVis('templateSelect');\n    var _bgImagePositionSelectVisibility = _partialVis('bgImagePosition');\n    return {\n        showTab: showTab,\n        onSelectChange: onSelectChange,\n        getTemplates: getTemplates,\n        getVisibility: getVisibility,\n        getSelectOpts: getSelectOpts,\n        setupItemForm: setupItemForm,\n        getSceneName: getSceneName\n    };\n    function _setVisibility(prop, bool) {\n        _visibility[prop] = bool;\n    }\n    function _partialVis(prop) {\n        return function (bool) {\n            return _setVisibility(prop, bool);\n        };\n    }\n    function _setAvailableImageOptsForLayout(sceneType, item, itemForm) {\n        //if we are set to the default layout,\n        //overwrite it back to an empty array\n        var isInline = item.layouts[0] === 'inline';\n        //TS-1147 - hide video position for videoOverlay\n        //TS-1139 - all layouts, if vidOverlay, forced to fill/stretch.\n        if (item.layouts.indexOf('videoOverlay') !== -1) {\n            _bgImagePositionSelectVisibility(false);\n            itemForm.position = 'fill';\n        }\n        // altPane = transmedia pane, mainPane = text pane.\n        switch (sceneType) {\n            case 'centeredPro':\n                _displaySelectVisibility(true);\n                _videoPositionSelectVisibility(true);\n                _select.display = [\n                    { value: 'windowBg', name: _bgImageTitles.windowBg, isDisabled: false },\n                    { value: 'videoOverlay', name: _bgImageTitles.videoOverlay, isDisabled: false },\n                    { value: 'mainBg', name: _bgImageTitles.textBg, isDisabled: true },\n                    { value: 'mainFg', name: _bgImageTitles.textFg, isDisabled: true },\n                    { value: 'altBg', name: _bgImageTitles.transmediaBg, isDisabled: true },\n                    { value: 'altFg', name: _bgImageTitles.transmediaFg, isDisabled: true }\n                ];\n                if (isInline) {\n                    item.layouts = ['windowBg'];\n                }\n                item.layouts = item.layouts || ['windowBg'];\n                itemForm.position = itemForm.position || 'fill'; //P1-A\n                break;\n            case '1col':\n            case 'centered':\n                var isAdmin = _userHasRole('admin');\n                _displaySelectVisibility(true);\n                _select.display = [\n                    { value: 'windowBg', name: _bgImageTitles.windowBg, isDisabled: false },\n                    { value: 'videoOverlay', name: _bgImageTitles.videoOverlay, isDisabled: false },\n                    { value: 'mainBg', name: _bgImageTitles.textBg, isDisabled: !isAdmin },\n                    { value: 'mainFg', name: _bgImageTitles.textFg, isDisabled: !isAdmin },\n                    { value: 'altBg', name: _bgImageTitles.transmediaBg, isDisabled: true },\n                    { value: 'altFg', name: _bgImageTitles.transmediaFg, isDisabled: true },\n                ];\n                if (isInline) {\n                    item.layouts = ['windowBg'];\n                }\n                itemForm.position = itemForm.position || 'fill'; //P1-A\n                item.layouts = item.layouts || ['windowBg'];\n                break;\n            case 'mirroredTwoCol':\n                _displaySelectVisibility(true);\n                _select.display = [\n                    { value: 'windowBg', name: _bgImageTitles.windowBg, isDisabled: false },\n                    { value: 'videoOverlay', name: _bgImageTitles.videoOverlay, isDisabled: false },\n                    { value: 'mainBg', name: _bgImageTitles.textBg, isDisabled: false },\n                    { value: 'mainFg', name: _bgImageTitles.textFg, isDisabled: false },\n                    { value: 'altBg', name: _bgImageTitles.transmediaBg, isDisabled: false },\n                    { value: 'altFg', name: _bgImageTitles.transmediaFg, isDisabled: false }\n                ];\n                if (isInline) {\n                    item.layouts = ['mainBg'];\n                }\n                itemForm.position = itemForm.position || 'fill'; //P1-A\n                item.layouts = item.layouts || ['mainBg'];\n                break;\n            case 'cornerV':\n            case 'centerVV':\n            case 'cornerH':\n                _displaySelectVisibility(true);\n                _select.display = [\n                    { value: 'windowBg', name: _bgImageTitles.windowBg, isDisabled: false },\n                    { value: 'videoOverlay', name: _bgImageTitles.videoOverlay, isDisabled: false },\n                    { value: 'mainBg', name: _bgImageTitles.textBg, isDisabled: false },\n                    { value: 'mainFg', name: _bgImageTitles.textFg, isDisabled: false },\n                    { value: 'altBg', name: _bgImageTitles.transmediaBg, isDisabled: false },\n                    { value: 'altFg', name: _bgImageTitles.transmediaFg, isDisabled: false }\n                ];\n                if (isInline) {\n                    item.layouts = ['altBg'];\n                }\n                itemForm.position = itemForm.position || 'fill'; //P1-A\n                item.layouts = item.layouts || ['altBg'];\n                break;\n            case 'pip':\n                _displaySelectVisibility(true);\n                _select.display = [\n                    { value: 'windowBg', name: _bgImageTitles.windowBg, isDisabled: true },\n                    { value: 'videoOverlay', name: _bgImageTitles.videoOverlay, isDisabled: false },\n                    { value: 'mainBg', name: _bgImageTitles.textBg, isDisabled: true },\n                    { value: 'mainFg', name: _bgImageTitles.textFg, isDisabled: true },\n                    { value: 'altBg', name: _bgImageTitles.transmediaBg, isDisabled: false },\n                    { value: 'altFg', name: _bgImageTitles.transmediaFg, isDisabled: false }\n                ];\n                if (isInline) {\n                    item.layouts = ['altBg'];\n                }\n                itemForm.position = itemForm.position || 'fill';\n                item.layouts = item.layouts || ['altBg'];\n                break;\n            case 'centerVVMondrian':\n                _select.display = [\n                    { value: 'windowBg', name: _bgImageTitles.windowBg, isDisabled: true },\n                    { value: 'videoOverlay', name: _bgImageTitles.videoOverlay, isDisabled: false },\n                    { value: 'mainBg', name: _bgImageTitles.textBg, isDisabled: false },\n                    { value: 'mainFg', name: _bgImageTitles.textFg, isDisabled: false },\n                    { value: 'altBg', name: _bgImageTitles.transmediaBg, isDisabled: true },\n                    { value: 'altFg', name: _bgImageTitles.transmediaFg, isDisabled: true }\n                ];\n                if (isInline) {\n                    item.layouts = ['mainBg'];\n                }\n                item.layouts = item.layouts || ['mainBg'];\n                itemForm.position = itemForm.position || 'fill';\n                break;\n        }\n        if (itemForm.position) {\n            item.styles = [itemForm.position];\n        }\n    }\n    //not the display name, but the key of the scene map as string.\n    function getSceneName(scene) {\n        return Object.keys(_scenes).filter(function (key) {\n            return _scenes[key] === scene.templateUrl;\n        })[0];\n    }\n    function getSelectOpts(type) {\n        return _select[type];\n    }\n    function getVisibility(prop) {\n        return _visibility[prop];\n    }\n    /*\n     This logic used to live in ittItemEditor and ittEpisodeEditor and is now consolidated here.\n     These loops seem to be responsible for setting up itemForm from the styles array.\n     itemForm seems to be where we hold style specific data that pertains to events (aka items).\n     itemForm seems to be used mostly in the customize tab and sets color, timestamp, hightlight and transition options.\n     itemForm is also responsible for setting the 'pin' and 'position' props on a background image event.\n     All of the above is parsed from the itemForm (if its set), and read into the item.styles array.\n     When it comes time to persist, the styles array is used in dataSvc#prepItemForStorage,\n     which reads the strings in the styles array and returns the corresponding ID for the entity in the DB.\n  \n     We do the inverse of this inside of watchStyleEdits below, which watches the itemForm, and builds up the styles array from\n     the itemForm props. It also formats background URLs.\n     */\n    function setupItemForm(stylesArr, type) {\n        //global for episode and item\n        var _itemFormStub = {\n            \"transition\": \"\",\n            \"highlight\": \"\",\n            \"color\": \"\",\n            \"typography\": \"\",\n            \"timestamp\": \"\",\n        };\n        var _itemSpecificOpts = {\n            \"position\": \"\",\n        };\n        //add additional props for items\n        if (type === 'item') {\n            _itemFormStub = angular.extend(_itemSpecificOpts, _itemFormStub);\n        }\n        //return stub object if no array is passed.\n        if (!_existy(stylesArr)) {\n            return _itemFormStub;\n        }\n        // do this in both cases, i.e. for item and episode\n        for (var styleType in _itemFormStub) {\n            for (var i = 0; i < stylesArr.length; i++) {\n                if (stylesArr[i].substr(0, styleType.length) === styleType) {\n                    _itemFormStub[styleType] = stylesArr[i].substr(styleType.length); // Remainder of stylesArr[i]\n                }\n            }\n        }\n        //next loop only necessary for items, so early return\n        if (type === 'episode') {\n            return _itemFormStub;\n        }\n        //need more stuff to do for items\n        // position and pin don't have a prefix because I was dumb when I planned this\n        for (var j = 0; j < stylesArr.length; j++) {\n            if (stylesArr[j] === 'contain' || stylesArr[j] === 'cover' ||\n                stylesArr[j] === 'center' || stylesArr[j] === 'fill' ||\n                stylesArr[j] === 'tl' || stylesArr[j] === 'tr' ||\n                stylesArr[j] === 'bl' || stylesArr[j] === 'br') {\n                _itemFormStub.position = stylesArr[j];\n            }\n        }\n        return _itemFormStub;\n    }\n    function getTemplates(type, customerIds) {\n        switch (type) {\n            case 'episode':\n                var _sortAlpha = function (a, b) {\n                    if (a.name.toLowerCase() < b.name.toLowerCase()) {\n                        return -1;\n                    }\n                    else if (a.name.toLowerCase() > b.name.toLowerCase()) {\n                        return 1;\n                    }\n                    else {\n                        return 0;\n                    }\n                };\n                _titleFieldVisibility(true); // NP-1159\n                return dataSvc.getEpisodeTemplatesByCustomerIds(customerIds).sort(_sortAlpha);\n            case 'scene':\n                _displaySelectVisibility(false);\n                _videoPositionSelectVisibility(false);\n                _templateSelectVisibility(true);\n                _bgImagePositionSelectVisibility(false);\n                var scenes = [\n                    { url: _scenes.centered, name: 'Center 1 (+ V\\u2022TS\\u2022ANT\\u2022TM)' },\n                    { url: _scenes.centeredPro, name: 'Center 2 (+ V\\u2022ANT)' },\n                    { url: _scenes['1col'], name: 'Center 3 (V\\u2022TS\\u2022ANT\\u2022TM)' },\n                    { url: _scenes.cornerV, name: 'Split 1 (V\\u2022TS\\u2022ANT | TM)' },\n                    { url: _scenes.mirroredTwoCol, name: 'Split 2 (V\\u2022TM | TS\\u2022ANT)' },\n                    { url: _scenes.centerVV, name: 'Split 3 (V\\u2022ANT | TM)' },\n                    { url: _scenes.centerVVMondrian, name: 'Split 4 (V\\u2022ANT | TM Invert)' },\n                    { url: _scenes.cornerH, name: 'Split 5 (V\\u2022TS\\u2022ANT / TM)' },\n                    { url: _scenes.pip, name: 'Split 6 (TM / V\\u2022TS\\u2022ANT)' }\n                ];\n                return scenes;\n            case 'transcript':\n                _speakerFieldVisibility(true);\n                _templateSelectVisibility(true);\n                _bgImagePositionSelectVisibility(false);\n                return [\n                    { url: 'templates/item/transcript.html', name: 'Transcript' }\n                ];\n            case 'annotation':\n                _speakerFieldVisibility(false);\n                _titleFieldVisibility(false);\n                _templateSelectVisibility(true);\n                _bgImagePositionSelectVisibility(false);\n                return [\n                    { url: 'templates/item/text-h1.html', name: 'Header 1' },\n                    { url: 'templates/item/text-h2.html', name: 'Header 2' },\n                    { url: 'templates/item/pullquote.html', name: 'Pullquote' },\n                    // {url: 'templates/item/pullquote-noattrib.html', name: 'Pullquote with attribution'},\n                    { url: 'templates/item/text-transmedia.html', name: 'Long text (as transmedia)' },\n                    { url: 'templates/item/text-definition.html', name: 'Definition (as transmedia)' }\n                ];\n            case 'link':\n                _displaySelectVisibility(true);\n                _videoPositionSelectVisibility(false);\n                _imageFieldVisibility(true);\n                _titleFieldVisibility(true);\n                _templateSelectVisibility(true);\n                _bgImagePositionSelectVisibility(false);\n                var linkTemplates = [\n                    { url: 'templates/item/link.html', name: 'Link' },\n                    { url: 'templates/item/link-withimage-notitle.html', name: 'Link - hide title' },\n                    { url: 'templates/item/link-modal-thumb.html', name: 'Link modal' },\n                    { url: 'templates/item/link-embed.html', name: 'Embedded link' }\n                ];\n                if (_userHasRole('admin')) {\n                    linkTemplates.splice(3, 0, {\n                        url: 'templates/item/link-descriptionfirst.html',\n                        name: 'Link w/ description first'\n                    });\n                }\n                return linkTemplates;\n            case 'image':\n                _imageFieldVisibility(true);\n                _displaySelectVisibility(false);\n                _videoPositionSelectVisibility(false);\n                _titleFieldVisibility(true);\n                _templateSelectVisibility(true);\n                _bgImagePositionSelectVisibility(false);\n                var imgTemplates = [\n                    { url: 'templates/item/image-plain.html', name: 'Plain Image' },\n                    { url: 'templates/item/image-inline-withtext.html', name: 'Inline Image with text' },\n                    { url: 'templates/item/image-caption-sliding.html', name: 'Image with sliding caption' },\n                    { url: 'templates/item/image-thumbnail.html', name: 'Image thumbnail' },\n                    { url: 'templates/item/image-fill.html', name: 'Background or video overlay' }\n                ];\n                return imgTemplates;\n            case 'file':\n                _titleFieldVisibility(true);\n                _templateSelectVisibility(false);\n                _bgImagePositionSelectVisibility(false);\n                return [\n                    { url: 'templates/item/file.html', name: 'Uploaded File' },\n                ];\n            case 'question':\n                _displaySelectVisibility(true);\n                _imageFieldVisibility(true);\n                _titleFieldVisibility(true);\n                _templateSelectVisibility(true);\n                _bgImagePositionSelectVisibility(false);\n                return [\n                    { url: 'templates/item/question-mc.html', name: 'Question' }\n                ];\n            case 'chapter':\n                //chapters have no template, but need to do side-effects\n                _titleFieldVisibility(true);\n                break;\n        }\n    }\n    function onSelectChange(item, itemForm) {\n        _displaySelectVisibility(false);\n        switch (item.producerItemType) {\n            case 'scene':\n                var isInline = item.layouts[0] === 'inline';\n                switch (item.templateUrl) {\n                    case 'templates/scene/centered.html': //centered\n                    case 'templates/scene/centeredPro.html'://Centered Pro, Hide Transcript & Transmedia\n                        _videoPositionSelectVisibility(false);\n                        _displaySelectVisibility(false);\n                        item.layouts[0] = ''; //P1 Video Centered\n                        item.layouts[1] = _D1.a.value; //showCurrent;\n                        break;\n                    case 'templates/scene/centerVV.html': //Vertical Pro, Hide Transcript\n                    case 'templates/scene/centerVV-Mondrian.html'://Vertical Pro Mondrian, Hide Transcript\n                        _displaySelectVisibility(false);\n                        _videoPositionSelectVisibility(true);\n                        _select.video = [\n                            { value: 'videoLeft', name: 'Video on Left' },\n                            { value: 'videoRight', name: 'Video on Right' }\n                        ];\n                        item.layouts[1] = _D1.a.value;\n                        if (isInline || item.layouts[0] === '') {\n                            item.layouts[0] = 'videoLeft'; //P2 video left\n                        }\n                        break;\n                    case 'templates/scene/cornerV.html': //Corner video, vertical\n                    case 'templates/scene/cornerH.html': //Corner video, horizontal\n                    case 'templates/scene/pip.html'://picture in picture\n                        _displaySelectVisibility(true);\n                        _videoPositionSelectVisibility(true);\n                        _select.video = [\n                            { value: 'videoLeft', name: 'Video on Left' },\n                            { value: 'videoRight', name: 'Video on Right' }\n                        ];\n                        _select.display = [\n                            { value: _D1.a.value, name: _D1.a.name },\n                            { value: _D1.b.value, name: _D1.b.name }\n                        ];\n                        if (isInline || item.layouts[0] === '') {\n                            console.log('we are getting here');\n                            item.layouts[0] = 'videoLeft'; //P2 video left\n                            item.layouts[1] = _D1.a.value;\n                        }\n                        break;\n                    case 'templates/scene/mirrored-twocol.html':// Two Columns (v2 mirrored vert)\n                        _displaySelectVisibility(true);\n                        _videoPositionSelectVisibility(true);\n                        _select.video = [\n                            { value: 'videoLeft', name: 'Video on Left' },\n                            { value: 'videoRight', name: 'Video on Right' }\n                        ];\n                        _select.display = [\n                            { value: _D2.a.value, name: _D2.a.name },\n                            { value: _D2.b.value, name: _D2.b.name }\n                        ];\n                        if (isInline || item.layouts[0] === '') {\n                            item.layouts[0] = 'videoLeft'; //P2 video left\n                            item.layouts[1] = _D2.b.value; //show all + highlight current\n                        }\n                        break;\n                    case 'templates/scene/1col.html'://One Column\n                        _displaySelectVisibility(true);\n                        _videoPositionSelectVisibility(false);\n                        _select.display = [\n                            { value: _D3.a.value, name: _D3.a.name },\n                            { value: _D3.b.value, name: _D3.b.name }\n                        ];\n                        item.layouts[0] = ''; //P1 Video Centered\n                        if (isInline) {\n                            item.layouts[1] = _D3.b.value;\n                        }\n                        break;\n                }\n                break;\n            case 'link':\n                _displaySelectVisibility(true);\n                _imageFieldVisibility(true);\n                _templateSelectVisibility(true);\n                if (item.stop === true) {\n                    item.layouts[0] = 'windowFg';\n                    //prevent link-modal template from opening on top of stop-item modal\n                    if (item.templateUrl === 'templates/item/link-modal-thumb.html') {\n                        item.templateUrl = 'templates/item/link-embed.html';\n                        // angular.forEach(item.templateOpts, function(opt) {\n                        // \tconsole.log('opt!!', opt);\n                        // });\n                    }\n                }\n                else {\n                    item.layouts[0] = 'inline';\n                }\n                switch (item.templateUrl) {\n                    case 'templates/item/link.html':\n                    case 'templates/item/link-withimage-notitle.html':\n                    case 'templates/item/link-modal-thumb.html':\n                        _imageFieldVisibility(true);\n                        break;\n                    case 'templates/item/link-descriptionfirst.html':\n                    case 'templates/item/link-embed.html':\n                        _imageFieldVisibility(false);\n                        break;\n                }\n                break;\n            case 'transcript':\n                _displaySelectVisibility(false);\n                item.layouts[0] = 'inline';\n                break;\n            case 'annotation':\n                item.layouts[0] = 'inline';\n                switch (item.templateUrl) {\n                    case 'templates/item/text-h1.html':\n                    case 'templates/item/text-h2.html':\n                        _speakerFieldVisibility(false);\n                        _titleFieldVisibility(false);\n                        break;\n                    case 'templates/item/pullquote-noattrib.html':\n                    case 'templates/item/pullquote.html':\n                        _speakerFieldVisibility(true);\n                        _titleFieldVisibility(false);\n                        break;\n                    case 'templates/item/text-transmedia.html':\n                    case 'templates/item/text-definition.html':\n                        _speakerFieldVisibility(false);\n                        _titleFieldVisibility(true);\n                        break;\n                }\n                if (item.stop === true) {\n                    item.layouts[0] = 'windowFg';\n                }\n                break;\n            case 'question':\n                _select.questionType = [\n                    { value: 'mc-poll', name: 'Poll' },\n                    { value: 'mc-formative', name: 'Formative' }\n                ];\n                item.layouts[0] = 'windowFg';\n                item.stop = true;\n                break;\n            case 'image':\n                //will set to true in image fill\n                _displaySelectVisibility(false);\n                var _currentSceneName = getSceneName(modelSvc.scene(item.scene_id));\n                switch (item.templateUrl) {\n                    case 'templates/item/image-plain.html':\n                    case 'templates/item/image-inline-withtext.html':\n                    case 'templates/item/image-caption-sliding.html':\n                    case 'templates/item/image-thumbnail.html':\n                        //set back to blank when not a BG image.\n                        itemForm.pin = itemForm.position = '';\n                        item.layouts[0] = 'inline';\n                        break;\n                    case 'templates/item/image-fill.html':\n                        item.cosmetic = true;\n                        _displaySelectVisibility(true);\n                        _bgImagePositionSelectVisibility(true);\n                        _select.imagePosition = [\n                            { value: 'fill', name: 'Fill and stretch' },\n                            { value: 'contain', name: 'Contain' },\n                            { value: 'cover', name: 'Cover and crop' },\n                            { value: 'tl', name: 'Top Left' },\n                            { value: 'tr', name: 'Top Right' },\n                            { value: 'bl', name: 'Bottom Left' },\n                            { value: 'br', name: 'Bottom Right' },\n                        ];\n                        _setAvailableImageOptsForLayout(_currentSceneName, item, itemForm);\n                }\n                if (item.stop === true) {\n                    item.layouts[0] = 'windowFg';\n                }\n                break;\n            case 'file':\n                item.showInlineDetail = false;\n                switch (item.templateUrl) {\n                    case 'templates/item/link.html':\n                        item.showInlineDetail = true;\n                        break;\n                    case 'templates/item/file.html':\n                    case 'templates/item/link-descriptionfirst.html':\n                    case 'templates/item/link-modal-thumb.html':\n                        break;\n                }\n                if (item.stop === true) {\n                    item.layouts[0] = 'windowFg';\n                }\n                break;\n        }\n    }\n    function showTab(itemType, tabTitle) {\n        switch (itemType) {\n            case 'scene':\n                switch (tabTitle) {\n                    case 'Item':\n                        return false;\n                    case 'Style':\n                        return true;\n                    case 'Customize':\n                        return _userHasRole('admin');\n                }\n                break;\n            case 'transcript':\n                switch (tabTitle) {\n                    case 'Item':\n                        return true;\n                    case 'Style':\n                        return false;\n                    case 'Customize':\n                        return _userHasRole('admin');\n                }\n                break;\n            case 'annotation':\n                switch (tabTitle) {\n                    case 'Item':\n                        return true;\n                    case 'Style':\n                        return false;\n                    case 'Customize':\n                        return _userHasRole('admin');\n                }\n                break;\n            case 'link':\n                switch (tabTitle) {\n                    case 'Item':\n                        return true;\n                    case 'Style':\n                        return false;\n                    case 'Customize':\n                        return _userHasRole('admin');\n                }\n                break;\n            case 'image':\n                switch (tabTitle) {\n                    case 'Item':\n                        return true;\n                    case 'Style':\n                        return false;\n                    case 'Customize':\n                        return _userHasRole('admin');\n                }\n                break;\n            case 'file':\n                switch (tabTitle) {\n                    case 'Item':\n                        return true;\n                    case 'Style':\n                        return false;\n                    case 'Customize':\n                        return _userHasRole('admin');\n                }\n                break;\n            case 'question':\n                switch (tabTitle) {\n                    case 'Item':\n                        return true;\n                    case 'Style':\n                        return false;\n                    case 'Customize':\n                        return _userHasRole('admin');\n                }\n                break;\n            case 'chapter':\n                switch (tabTitle) {\n                    case 'Item':\n                        return true;\n                    case 'Style':\n                        return false;\n                    case 'Customize':\n                        return false;\n                }\n        }\n    }\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/timelineSvc/timelineSvc.ts\n/* tslint:disable */\ntimelineSvc_timelineSvc.$inject = ['$window', '$timeout', '$interval', '$filter', 'config', 'modelSvc', 'appState', 'analyticsSvc', 'playbackService', 'ittUtils'];\nfunction timelineSvc_timelineSvc($window, $timeout, $interval, $filter, config, modelSvc, appState, analyticsSvc, playbackService, ittUtils) {\n    /* tslint:enable */\n    /* tslint:disable:prefer-const */\n    var svc = Object.create(null);\n    svc.timelineEvents = [];\n    // each entry consists of {t:n, id:eventID|timeline, action:enter|exit|pause|play}. Keep sorted by t.\n    svc.markedEvents = [];\n    // time, title of marked events (scenes, currently)\n    if (!svc.enforceSingletonPauseListener) {\n        $window.addEventListener('message', function (e) {\n            if (e.data === 'pauseEpisodePlayback') {\n                svc.pause();\n            }\n        }, false);\n    }\n    svc.enforceSingletonPauseListener = true; // this is probably unnecessary paranoia\n    var clock;\n    var eventTimeout;\n    var timeMultiplier;\n    var parseTime = ittUtils.parseTime;\n    //player states\n    // '-1': 'unstarted',\n    // '0': 'ended',\n    // '1': 'playing',\n    // '2': 'paused',\n    // '3': 'buffering',\n    // '5': 'video cued'\n    // '5': player ready\n    function _onPlayerStateChange(state) {\n        // console.info('state from player', state, 'timelineState', playbackService.getTimelineState());\n        if (playbackService.getTimelineState() === 'ended' && (state === 'unstarted' || state === 'video cued')) {\n            return;\n        }\n        playbackService.setTimelineState(state);\n        switch (state) {\n            case 'reset':\n                _resetClocks();\n                playbackService.resetPlaybackService();\n                break;\n            case 'unstarted':\n                break;\n            case 'ended':\n                // console.log('timelineSvc#ended event!');\n                playbackService.setMetaProp('time', playbackService.getMetaProp('duration'));\n                var episode = modelSvc.episodes[appState.episodeId];\n                var endingScreen = episode.scenes[episode.scenes.length - 1];\n                episode.setCurrentScene(endingScreen);\n                break;\n            case 'playing':\n                var currentTime = playbackService.getCurrentTime();\n                var ourTime = playbackService.getMetaProp('time');\n                var isBeingReset = playbackService.getMetaProp('resetInProgress');\n                if (Math.abs(ourTime - currentTime) > 0.75 && isBeingReset === false) {\n                    playbackService.setMetaProp('time', currentTime);\n                    stepEvent(true);\n                }\n                startTimelineClock();\n                startEventClock();\n                appState.videoControlsActive = true;\n                appState.show.navPanel = false;\n                // For episodes embedded within episodes:\n                if ($window.parent !== $window) {\n                    $window.parent.postMessage('pauseEpisodePlayback', '*'); // negligible risk in using a global here\n                }\n                analyticsSvc.captureEpisodeActivity('play');\n                break;\n            case 'paused':\n                _resetClocks();\n                break;\n            case 'buffering':\n                _resetClocks();\n                break;\n            case 'video cued':\n                var startAt = playbackService.getMetaProp('startAtTime');\n                var hasResumed = playbackService.getMetaProp('hasResumedFromStartAt');\n                if (startAt > 0 && hasResumed === false) {\n                    // console.log('about to call startAtSpecificTime');\n                    svc.startAtSpecificTime(startAt);\n                }\n                break;\n            case 'player ready':\n                svc.updateEventStates();\n                break;\n        }\n    }\n    function _resetClocks() {\n        $interval.cancel(clock);\n        appState.videoControlsActive = true;\n        stopEventClock();\n        clock = undefined;\n        lastTick = undefined;\n    }\n    function _doEndingSequence() {\n        _resetClocks();\n        playbackService.handleTimelineEnd();\n        analyticsSvc.captureEpisodeActivity('pause');\n    }\n    svc.setSpeed = function (speed) {\n        // console.log(\"timelineSvc.setSpeed\", speed);\n        timeMultiplier = speed;\n        //here, and only here, make this public. (an earlier version of this tweaked the private timeMultiplier\n        // variable if the video and timeline fell out of synch.  Fancy.  Too fancy.  Didn't work. Stopped doing it.)\n        playbackService.setMetaProp('timeMultiplier', timeMultiplier);\n        playbackService.setSpeed(timeMultiplier);\n        stepEvent();\n    };\n    svc.restartEpisode = restartEpisode;\n    function restartEpisode() {\n        console.log('restarting!');\n        svc.seek(0.01);\n        svc.play();\n    }\n    svc.play = function () {\n        // console.log(\"timelineSvc.play\");\n        // On first play, we need to check if we need to show help menu instead; if so, don't play the video:\n        // (WARN this is a bit of a sloppy mixture of concerns.)\n        var duration = playbackService.getMetaProp('duration');\n        if (!duration || duration < 0.1) {\n            console.error('This episode has no duration');\n            return;\n        }\n        playbackService.play();\n    };\n    svc.pause = function (nocapture) {\n        _resetClocks();\n        playbackService.pause();\n        if (!nocapture) {\n            analyticsSvc.captureEpisodeActivity('pause');\n        }\n    };\n    svc.startAtSpecificTime = function (t) {\n        // Youtube on touchscreens can't auto-seek to the correct time,\n        // we have to wait for the user to init youtube manually.\n        if (appState.isTouchDevice && playbackService.getMetaProp('hasBeenPlayed') === false &&\n            playbackService.getMetaProp('videoType') === 'youtube') {\n            //TODO in future it might be possible to trick YT into starting at the correct time even\n            return;\n        }\n        t = parseTime(t);\n        if (t < 0) {\n            t = 0;\n        }\n        if (t > playbackService.getMetaProp('duration')) {\n            playbackService.setMetaProp('duration', t);\n        }\n        playbackService.setMetaProp('time', t);\n        playbackService.setMetaProp('hasResumedFromStartAt', true);\n        svc.updateEventStates();\n        analyticsSvc.captureEpisodeActivity('seek', {\n            method: 'URLParameter'\n        });\n    };\n    svc.seek = function (t, method, eventID) {\n        if (playbackService.getMetaProp('ready') !== true) {\n            return;\n        }\n        playbackService.pauseOtherPlayers();\n        var duration = playbackService.getMetaProp('duration');\n        var timelineState = playbackService.getTimelineState();\n        if (timelineState === 'ended') {\n            //to avoid restarting the video after the video has ended when the user initiates a seek\n            playbackService.setTimelineState('paused');\n        }\n        if (duration === 0) {\n            // if duration = 0, we're trying to seek to a time from a url param before the events\n            // have loaded.  Just poll until events load, that's good enough for now.\n            // TODO throw error and stop looping if this goes on too long\n            $timeout(function () {\n                // console.log(\"waiting for video to be ready\");\n                svc.seek(t);\n            }, 300);\n            return;\n        }\n        var captureData = { method: '', seekStart: playbackService.getMetaProp('time') };\n        t = parseTime(t);\n        if (t < 0) {\n            t = 0;\n        }\n        if (t > duration) {\n            playbackService.setMetaProp('duration', t);\n        }\n        stopEventClock();\n        playbackService.setMetaProp('time', t);\n        // youtube depends on an accurate appState.timelineState here,\n        // so don't modify that by calling svc.stall() before the seek:\n        playbackService.seek(t);\n        svc.updateEventStates();\n        //capture analytics\n        if (ittUtils.existy(method)) {\n            captureData.method = method;\n            if (ittUtils.existy(eventID)) {\n                captureData.event_id = eventID;\n            }\n            analyticsSvc.captureEpisodeActivity('seek', captureData);\n        }\n    };\n    svc.nextScene = nextScene;\n    function nextScene() {\n        var found = false;\n        var currentTime = playbackService.getMetaProp('time');\n        var currentDuration = playbackService.getMetaProp('duration');\n        var len = svc.markedEvents.length;\n        var i = 0;\n        for (; i < len; i++) {\n            if (svc.markedEvents[i].start_time > currentTime) {\n                console.log('Seeking to ', svc.markedEvents[i].start_time);\n                //scope.enableAutoscroll(); // TODO in playerController\n                handleScene(i, 'nextScene');\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            svc.pause();\n            svc.seek(currentDuration - 0.01, 'nextScene');\n            //scope.enableAutoscroll(); // in playerController\n        }\n    }\n    svc.handleScene = handleScene;\n    function handleScene(index, action) {\n        var s = svc.markedEvents[index];\n        var t = s.start_time;\n        if (t === 0.01 && action !== 'prevScene') {\n            // to allow seekPauseListener to pause if using nextScene arrow on unstarted episode\n            t += 0.1;\n        }\n        svc.seek(t, action);\n        if (s.stop === true) {\n            svc.pause();\n        }\n    }\n    svc.prevScene = prevScene;\n    function prevScene() {\n        var now = playbackService.getMetaProp('time');\n        var timelineState = playbackService.getTimelineState();\n        if (timelineState === 'playing') {\n            now = now - 3; // leave a bit of fudge when skipping backwards in a video that's currently playing\n        }\n        var len = svc.markedEvents.length - 1;\n        var i = len;\n        for (; i >= 0; i--) {\n            if (svc.markedEvents[i].start_time < now) {\n                svc.seek(svc.markedEvents[i].start_time, 'prevScene');\n                if (i === len) {\n                    --i;\n                }\n                handleScene(i, 'prevScene');\n                break;\n            }\n        }\n    }\n    // - - - - - - - - - - - - - - - - - - - - - - - - - -\n    // WHY IS THIS AUDIO CHOCOLATE IN MY TIMELINE PEANUT BUTTER?\n    // to make it easier to maintain state for these across multiple videos, when there are multiple videos.\n    // Also because there isn't an obviously better place for it.  If this is dumb, TODO: be less dumb\n    svc.toggleMute = function () {\n        playbackService.toggleMute();\n    };\n    svc.setVolume = function (vol) {\n        playbackService.setVolume(vol);\n    };\n    // - - - - - - - - - - - - - - - - - - - - - - - - - -\n    // Event clock\n    /*\n     If timeline is playing,\n     TODO\n     1. find out how long since last checked, compare videotime delta to timeline delta, adjust timeline if necessary)\n     2. check for timeline events since the last time stepEvent ran, handle them in order\n     3. if any were stop events,\n     rewind the timeline and the video to that time (and stop handling events)\n     otherwise\n     set a timeout for a bit after the next event in the queue, up to some maximum amount of time, to run again\n     (the 'up to some maximum' bit is for 1., so the timeline and video time don't fall out of synch)\n     */\n    var eventClockData;\n    var resetEventClock = function () {\n        // console.log('RESET EVENT CLOCK');\n        eventClockData = {\n            lastTimelineTime: 0,\n            lastVideoTime: 0,\n            running: false\n        };\n    };\n    resetEventClock();\n    var startEventClock = function () {\n        // console.log('START EVENT CLOCK');\n        if (eventClockData.running) {\n            return;\n        }\n        eventClockData.running = true;\n        eventClockData.lastTimelineTime = playbackService.getMetaProp('time');\n        eventClockData.lastVideoTime = playbackService.getMetaProp('time');\n        // TODO this should be relative to episode, not timeline ^\n        stepEvent();\n    };\n    var stopEventClock = function () {\n        // console.log('STOP EVENT CLOCK', playbackService.getCurrentTime());\n        // playbackService.setMetaProp('time', playbackService.getCurrentTime() || 0);\n        $timeout.cancel(eventTimeout);\n        resetEventClock();\n    };\n    var stepEvent = function (ignoreStopEvents) {\n        $timeout.cancel(eventTimeout);\n        var vidTime = playbackService.getCurrentTime();\n        var ourTime = playbackService.getMetaProp('time');\n        // TODO check video time delta, adjust ourTime as needed (most likely case is that video stalled\n        // and timeline has run ahead, so we'll be backtracking the timeline to match the video before we handle the events.\n        // find timeline events since last time stepEvent ran, handle them in order until one is a stop or a seek\n        for (var i = 0; i < svc.timelineEvents.length; i++) {\n            var evt = svc.timelineEvents[i];\n            if (evt.t >= eventClockData.lastTimelineTime) {\n                if (evt.t > ourTime) {\n                    break; // NOTE! next event should be this one; let i fall through as is\n                }\n                // Don't let stop events stop us before we even start.\n                // (if the stop event and lastTimelineTime match, that stop event is what stopped us in the first place)\n                if (evt.action === 'pause' && (ignoreStopEvents || evt.t === eventClockData.lastTimelineTime)) {\n                    // console.log(\"Skipping pause event\");\n                }\n                else {\n                    handleEvent(evt);\n                    if (evt.action === 'pause') {\n                        // TODO: check for multiple simultaneous pause actions, skip to the last one\n                        i++;\n                        break; //NOTE! next event should be the one AFTER the stop event, so let i++ fall through\n                    }\n                }\n            }\n        }\n        var nextEvent = svc.timelineEvents[i]; // i falls through from the break statements above\n        var lastEvent = svc.timelineEvents[svc.timelineEvents.length - 1];\n        if (!ittUtils.existy(nextEvent) && ittUtils.existy(lastEvent) && /internal:endingscreen/.test(lastEvent.id)) {\n            _doEndingSequence();\n        }\n        eventClockData.lastVideoTime = vidTime;\n        eventClockData.lastTimelineTime = ourTime;\n        if (nextEvent && playbackService.getTimelineState() === 'playing') {\n            // need to check timelineState in case there were stop events above\n            // Find out how long until the next event, and aim for just a bit after it.\n            var timeToNextEvent = (svc.timelineEvents[i].t - ourTime) * 1000 / timeMultiplier;\n            // console.log(\"next event in \", timeToNextEvent);\n            eventTimeout = $timeout(stepEvent, timeToNextEvent + 10);\n        }\n    };\n    // \"event\" here refers to a timelineEvents event, not the modelSvc.event:\n    var handleEvent = function (event) {\n        if (event.id === 'timeline') {\n            //console.log(\"TIMELINE EVENT\");\n            if (event.action === 'pause') {\n                playbackService.setMetaProp('time', event.t);\n                console.log('handle stop event');\n                svc.pause(); // TODO handle pause with duration too\n            }\n            else {\n                svc.play();\n            }\n        }\n        else {\n            if (event.action === 'enter') {\n                modelSvc.events[event.id].state = 'isCurrent';\n                modelSvc.events[event.id].isCurrent = true;\n            }\n            else if (event.action === 'exit') {\n                modelSvc.events[event.id].state = 'isPast';\n                modelSvc.events[event.id].isCurrent = false;\n            }\n            else if (event.action === 'preload') {\n                preloadImageAsset(modelSvc.events[event.id]);\n            }\n            else {\n                console.warn('Unknown event action: ', event, event.action);\n            }\n        }\n    };\n    // This is ONLY used to update appState.time in \"real\" time.  Events are handled by stepEvent.\n    var lastTick;\n    var startTimelineClock = function () {\n        // console.log('START TIMELINE CLOCK');\n        lastTick = undefined;\n        $interval.cancel(clock); // safety belt, in case we're out of synch\n        clock = $interval(_tick, 20);\n    };\n    var _tick = function () {\n        var thisTick = new Date();\n        var delta = (Number.isNaN(thisTick - lastTick)) ? 0 : (thisTick - lastTick);\n        //in the event that the timelineClock is running but the eventClock is not, start the eventClock.\n        if (!eventClockData.running) {\n            startEventClock();\n        }\n        var newTime = parseFloat(playbackService.getMetaProp('time')) + (delta / 1000 * timeMultiplier);\n        // check for out of bounds:\n        if (newTime < 0) {\n            newTime = 0;\n            svc.pause();\n        }\n        var currentDuration = playbackService.getMetaProp('duration');\n        if (newTime > currentDuration) {\n            newTime = currentDuration;\n            // svc.pause();\n            // _resetClocks();\n        }\n        playbackService.setMetaProp('time', newTime);\n        lastTick = thisTick;\n    };\n    svc.init = function (episodeId) {\n        // console.log('timelineSvc#init', episodeId);\n        svc.timelineEvents = [];\n        svc.markedEvents = [];\n        svc.displayMarkedEvents = [];\n        timeMultiplier = 1;\n        var episode = modelSvc.episode(episodeId);\n        playbackService.seedPlayer(episode.masterAsset.mediaSrcArr, episode.masterAsset._id, true);\n        playbackService.setTimelineState('unstarted');\n        playbackService.setMetaProp('duration', 0);\n        svc.injectEvents(modelSvc.episodeEvents(episodeId), 0);\n        playbackService.registerStateChangeListener(_onPlayerStateChange);\n        $interval.cancel(clock);\n        stopEventClock();\n    };\n    svc.injectEvents = function (events, injectionTime) {\n        // console.log(\"timelineSvc.injectEvents: has \", svc.timelineEvents.length, \" adding \", events.length);\n        // events should be an array of items in modelSvc.events\n        // for now this only supports adding events starting at injectionTime=0,\n        // which does not shift existing events later in time.\n        // in future will be able to inject episode events at injectionTime=whatever, shifting any later events\n        // to their new time (based on the total duration of the injected group)\n        // (which we'll need to get probably by passing in episode.duration along with the events?)\n        if (events.length === 0) {\n            return;\n        }\n        if (!injectionTime) {\n            injectionTime = 0;\n        }\n        angular.forEach(events, function (event) {\n            event.start_time = Number(event.start_time);\n            event.end_time = Number(event.end_time);\n            // add scenes to markedEvents[]:\n            if (event._type === 'Scene') {\n                if (appState.product === 'producer') {\n                    // producer gets all scenes, even 'hidden' ones (which are now not 'hidden' but they indicate\n                    //change in layout).\n                    addMarkedEvent(event);\n                }\n                if (/internal:(landing|ending)screen/.test(event._id)) {\n                    addMarkedEvent(event);\n                }\n            }\n            if (event._type === 'Chapter' || event.chapter_marker === true) {\n                addMarkedEvent(event);\n            }\n            if (event.start_time === 0 && !event._id.match('internal')) {\n                event.start_time = 0.01;\n                modelSvc.events[event._id].start_time = 0.01;\n            }\n            // add start and end to timelineEvents array\n            if (event.stop) {\n                addMarkedEvent(event); // give all stop items a timeline marker\n                svc.timelineEvents.push({\n                    t: event.start_time + injectionTime,\n                    id: 'timeline',\n                    eventId: event._id,\n                    action: 'pause'\n                });\n                svc.timelineEvents.push({\n                    t: event.start_time + injectionTime,\n                    id: event._id,\n                    action: 'enter'\n                });\n                // For now, ignore end_time on stop events; they always end immediately after user hits play again.\n                // In future we may allow durations on stop events so the\n                // video will start automatically after that elapses.\n                svc.timelineEvents.push({\n                    t: (event.start_time + injectionTime + 0.01),\n                    id: event._id,\n                    action: 'exit'\n                });\n            }\n            else {\n                // not a stop event.\n                svc.timelineEvents.push({\n                    t: event.start_time + injectionTime,\n                    id: event._id,\n                    action: 'enter'\n                });\n                if (event.end_time || event.end_time === 0) {\n                    if (/internal:endingscreen/.test(event._id)) {\n                        // console.log('do not add exit event for ending screen.');\n                        return;\n                    }\n                    svc.timelineEvents.push({\n                        t: event.end_time + injectionTime,\n                        id: event._id,\n                        action: 'exit'\n                    });\n                }\n                else {\n                    // TODO: handle missing end times.\n                    // For transcript items, create an end time matching the start of the next transcript or the end of the scene\n                    // or the duration (whichever comes first)\n                    // For other items, create an end time matching the next scene start or the duration, whichever comes first\n                    // For scenes, create an end time matching the start of the next scene or the duration, whichever comes first.\n                    // That's complex logic, may be better handled in a second pass.... or, duh,  during authoring\n                    console.warn('Missing end_time on event ', event);\n                }\n            }\n            // allow preload of event assets:\n            if (event.asset_id || event.annotation_image_id || event.link_image_id) {\n                svc.timelineEvents.push({\n                    t: (event.start_time < 3) ? 0 : event.start_time - 3,\n                    id: event._id,\n                    action: 'preload'\n                });\n            }\n        });\n        svc.sortTimeline();\n        var groupedEvents = groupByStartTime(svc.markedEvents);\n        svc.displayMarkedEvents = prepGroupedEvents(groupedEvents);\n    };\n    function groupByStartTime(array) {\n        return array.reduce(function (map, event) {\n            if (map.hasOwnProperty(event.start_time)) {\n                map[event.start_time].push(event);\n            }\n            else {\n                map[event.start_time] = [event];\n            }\n            return map;\n        }, {});\n    }\n    function prepGroupedEvents(map) {\n        var displayArr = [];\n        angular.forEach(map, function (val, key) {\n            var obj = {\n                events: val,\n                stop: false,\n                multiStop: false,\n                start_time: key,\n                //null over '' because empty strings are truthy in JS :(\n                toolTipText: null,\n                layoutChange: false\n            };\n            var foundStop = false, chapters = [], foundScene = false, foundInternalScene = false;\n            angular.forEach(val, function (event) {\n                if (/internal:endingscreen|internal:landingscreen/.test(event._id)) {\n                    foundInternalScene = true;\n                }\n                if (event.stop) {\n                    foundStop = true;\n                }\n                if (event.type === 'Scene') {\n                    foundScene = true;\n                }\n                if (event.type === 'Chapter' || event.chapter_marker === true) {\n                    chapters.push(event);\n                }\n            });\n            if (chapters.length === 0 && !foundScene && foundStop) {\n                obj.toolTipText = 'Stop item';\n            }\n            if (foundStop) {\n                obj.stop = true;\n            }\n            if (obj.events.length > 1 && foundStop) {\n                obj.multiStop = true;\n            }\n            if (foundScene && chapters.length === 0) {\n                obj.layoutChange = true;\n                obj.toolTipText = '(Layout Change)';\n            }\n            if (chapters.length > 0) {\n                angular.forEach(chapters, function (chap, $index) {\n                    if ($index === 0) {\n                        obj.toolTipText = chap.display_annotation || chap.display_title;\n                    }\n                    else {\n                        obj.toolTipText += ' / ' + (chap.display_annotation || chap.display_title);\n                    }\n                });\n                if (foundScene) {\n                    obj.toolTipText += ' (Layout Change)';\n                }\n                if (obj.multiStop) {\n                    obj.toolTipText += ' / (Stop item)';\n                }\n            }\n            if (!foundInternalScene) {\n                displayArr.push(obj);\n            }\n        });\n        return displayArr;\n    }\n    var addMarkedEvent = function (newEvent) {\n        // scan through existing markedEvents; if the new event is already there, replace it; otherwise add it\n        var wasFound = false;\n        for (var i = 0; i < svc.markedEvents.length; i++) {\n            if (svc.markedEvents[i]._id === newEvent._id) {\n                // replace existing event\n                svc.markedEvents[i] = angular.copy(newEvent);\n                wasFound = true;\n            }\n        }\n        // wasn't found, so add it:\n        if (!wasFound) {\n            svc.markedEvents.push(newEvent);\n        }\n        // console.log(svc.markedEvents);\n    };\n    svc.removeEvent = function (removeId) {\n        // delete anything corresponding to this id from the timeline:\n        // console.log(\"timelineSvc.removeEvent\");\n        svc.timelineEvents = $filter('filter')(svc.timelineEvents, function (timelineEvent) {\n            //Remove the timeline event if it's _id or eventId  equal the removeId\n            if (timelineEvent.id === removeId || timelineEvent.eventId === removeId) {\n                return false;\n            }\n            return true;\n        });\n        // and from the markedEvents, with its inexplicably inconsistent ID naming:\n        svc.markedEvents = $filter('filter')(svc.markedEvents, {\n            _id: '!' + removeId\n        });\n        //TS-1154 - remove the event from the displayMarkedEvents\n        var groupedEvents = groupByStartTime(svc.markedEvents);\n        svc.displayMarkedEvents = prepGroupedEvents(groupedEvents);\n        svc.updateEventStates();\n    };\n    svc.updateEventTimes = function (event) {\n        // remove old references, as in removeEvent, then re-add it with new times\n        // (not calling removeEvent here since it would do a redundant updateEventStates)\n        svc.timelineEvents = $filter('filter')(svc.timelineEvents, function (timelineEvent) {\n            //Remove the timeline event if it's _id or eventId  equal the removeId\n            if (timelineEvent.id === event._id || timelineEvent.eventId === event._id) {\n                return false;\n            }\n            return true;\n        });\n        svc.injectEvents([event], 0);\n    };\n    svc.updateSceneTimes = function (episodeId) {\n        // HACK(ish): since editing a scene's timing has side effects on other scenes,\n        // need to updateEventTimes for each scene in the episode when one changes\n        angular.forEach(modelSvc.episodes[episodeId].scenes, function (scene) {\n            svc.updateEventTimes(scene);\n        });\n    };\n    svc.sortTimeline = function () {\n        // keep events sorted by time.\n        // Simultaneous events should be sorted as exit, then enter, then stop.\n        // (sort order of 'preload' events doesn't matter.)\n        svc.timelineEvents = svc.timelineEvents.sort(function (a, b) {\n            if (a.t === b.t) {\n                if (a.action === b.action) {\n                    return 0;\n                }\n                // This is overly verbose, but I keep running into differences in\n                // how Safari and FF sort when I try to simplify it:\n                if (a.action === 'enter') {\n                    if (b.action === 'pause') {\n                        return -1;\n                    }\n                    if (b.action === 'exit') {\n                        return 1;\n                    }\n                }\n                if (a.action === 'exit') {\n                    return -1;\n                }\n                if (a.action === 'pause') {\n                    return 1;\n                }\n                return 0;\n            }\n            else {\n                return a.t - b.t;\n            }\n        });\n        svc.markedEvents = svc.markedEvents.sort(function (a, b) {\n            return a.start_time - b.start_time;\n        });\n        // for (var i = 0; i < svc.timelineEvents.length; i++) {\n        // \tconsole.log(svc.timelineEvents[i].t, svc.timelineEvents[i].action);\n        // }\n        // Find the latest end_time in the timeline, set that as the duration.\n        // TODO this will need to change when we support multiple episodes in one timeline\n        if (svc.timelineEvents.length > 0) {\n            playbackService.setMetaProp('duration', svc.timelineEvents[svc.timelineEvents.length - 1].t);\n        }\n        svc.updateEventStates();\n    };\n    svc.updateEventStates = function () {\n        // Sets past/present/future state of every event in the timeline.\n        // TODO performance check (though this isn't done often, only on seek and inject.)\n        // DO NOT check event start and end times directly; they're relative to the episode, not the timeline!\n        // instead preset everything to the future, then scan the timeline events up to now\n        // and set state based on enter/exit events per the timeline\n        var now = playbackService.getMetaProp('time');\n        // put everything in the future state:\n        angular.forEach(svc.timelineEvents, function (tE) {\n            if (tE.id !== 'timeline') {\n                var event = modelSvc.events[tE.id];\n                if (event) {\n                    // TODO keep that from happening but for now just ignore it if it doesn't exist\n                    event.setFuture();\n                }\n            }\n        });\n        // 2nd pass, step through all events before now:\n        angular.forEach(svc.timelineEvents, function (tE) {\n            if (tE.t <= now) {\n                var event = modelSvc.events[tE.id];\n                if (event) {\n                    if (tE.action === 'enter') {\n                        event.setCurrent();\n                    }\n                    else if (tE.action === 'exit') {\n                        event.setPast();\n                    }\n                }\n            }\n        });\n        // console.count('updateEventState called');\n        // console.trace('updateEventStates');\n        // console.log('tlEvents', modelSvc.episodes[appState.episodeId].scenes);\n    };\n    var alreadyPreloadedImages = {};\n    var preloadImageAsset = function (event) {\n        if (event.asset && event.asset._type === 'Asset::Image') {\n            if (!alreadyPreloadedImages[event.asset.url]) {\n                // console.log(\"Preloading \", event.asset.url);\n                alreadyPreloadedImages[event.asset.url] = new Image();\n                alreadyPreloadedImages[event.asset.url].src = event.asset.url;\n            }\n        }\n    };\n    if (config.debugInBrowser) {\n        console.log('timelineSvc: ', svc);\n    }\n    return svc;\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/urlService.ts\n/**\n * Created by githop on 11/3/16.\n */\nurlService_urlService.$inject = ['youtubeUrlService', 'html5UrlService', 'kalturaUrlService', 'wistiaUrlService', 'config'];\nfunction urlService_urlService(youtubeUrlService, html5UrlService, kalturaUrlService, wistiaUrlService, config) {\n    var _urlSubServices = {\n        youtube: youtubeUrlService,\n        html5: html5UrlService,\n        kaltura: kalturaUrlService,\n        wistia: wistiaUrlService\n    };\n    return {\n        parseMediaSrcArr: parseMediaSrcArr,\n        checkUrl: checkUrl,\n        getOutgoingUrl: getOutgoingUrl,\n        parseInput: parseInput,\n        isVideoUrl: isVideoUrl,\n        resolveVideo: resolveVideo\n    };\n    function parseInput(input) {\n        var type = checkUrl(input).type;\n        if (type.length > 0) {\n            return _urlSubServices[type].parseInput(input);\n        }\n    }\n    /**\n     *\n     * @param mediaSrcArr\n     * @return parsedMediaSrcArr Array<{type: string, mediaSrcArr: Array<String>}>\n     */\n    function parseMediaSrcArr(mediaSrcArr) {\n        return Object.keys(_urlSubServices).reduce(function (parsedMediaSrcArr, urlSrv) {\n            var parsedMediaSrcObj = _urlSubServices[urlSrv].parseMediaSrc(mediaSrcArr);\n            if (parsedMediaSrcObj.mediaSrcArr.length > 0) {\n                parsedMediaSrcArr.push(parsedMediaSrcObj);\n            }\n            return parsedMediaSrcArr;\n        }, []);\n    }\n    function isVideoUrl(url) {\n        return checkUrl(url).type.length > 0;\n    }\n    function checkUrl(url) {\n        return Object.keys(_urlSubServices).reduce(function (map, urlSrv) {\n            if (_urlSubServices[urlSrv].canPlay(url)) {\n                map.type = urlSrv;\n                map.mimeType = _urlSubServices[urlSrv].getMimeType(url);\n            }\n            return map;\n        }, { type: '', mimeType: '' });\n    }\n    function getOutgoingUrl(url, startAt) {\n        var type = checkUrl(url).type;\n        if (type.length > 0) {\n            return _urlSubServices[type].getOutgoingUrl(url, startAt);\n        }\n    }\n    function resolveVideo(videoAsset) {\n        var videoObject = {\n            youtube: [],\n            mp4: [],\n            webm: [],\n            m3u8: [],\n            kaltura: [],\n            wistia: []\n        };\n        var extensionMatch = /\\.(\\w+)$/;\n        if (videoAsset.alternate_urls) {\n            // Sort them out by file extension first:\n            for (var i = 0; i < videoAsset.alternate_urls.length; i++) {\n                if (videoAsset.alternate_urls[i].match(/youtube/)) {\n                    if (youtubeUrlService.embeddableYoutubeUrl(videoAsset.alternate_urls[i])) {\n                        videoObject.youtube.push(youtubeUrlService.embeddableYoutubeUrl(videoAsset.alternate_urls[i]));\n                    }\n                }\n                else {\n                    videoObject[videoAsset.alternate_urls[i].match(extensionMatch)[1]].push(videoAsset.alternate_urls[i]);\n                }\n            }\n            //remove after migration\n            if (videoAsset.you_tube_url && youtubeUrlService.embeddableYoutubeUrl(videoAsset.you_tube_url)) {\n                videoObject.youtube.push(youtubeUrlService.embeddableYoutubeUrl(videoAsset.you_tube_url));\n            }\n            //end remove after migration\n            // now by size:\n            // most video files come from the API with their width and height in the URL as blahblah123x456.foo:\n            var videoPixelSize = /(\\d+)x(\\d+)\\.\\w+$/; // [1]=w, [2]=h\n            angular.forEach(Object.keys(videoObject), function (key) {\n                videoObject[key] = videoObject[key].sort(function (a, b) {\n                    // There shouldn't ever be cases where we're comparing two non-null filenames, neither of which have a\n                    // WxH portion, but fill in zero just in case so we can at least continue rather than erroring out\n                    var aTest = a.match(videoPixelSize) || [0, 0];\n                    var bTest = b.match(videoPixelSize) || [0, 0];\n                    return aTest[1] - bTest[1]; // compare on width\n                });\n            });\n        }\n        // Old-school episodes, or linked youtube assets\n        // Use the you_tube_url,  if it's not present in alternate_urls:\n        if (videoObject.youtube.length === 0) {\n            if (videoAsset.url) {\n                if (youtubeUrlService.embeddableYoutubeUrl(videoAsset.url)) {\n                    videoObject.youtube = [youtubeUrlService.embeddableYoutubeUrl(videoAsset.url)];\n                }\n            }\n            //remove after migration\n            if (videoAsset.you_tube_url) {\n                if (youtubeUrlService.embeddableYoutubeUrl(videoAsset.you_tube_url)) {\n                    videoObject.youtube = [youtubeUrlService.embeddableYoutubeUrl(videoAsset.you_tube_url)];\n                }\n            }\n            //end remove after migration\n        }\n        // Same for other types (we used to put the .mp4 in videoAsset.url and just swapped out the extension for other types, which was silly, which is why we stopped doing it, but some old episodes never got updated)\n        if (!videoAsset.alternate_urls) {\n            angular.forEach([\"mp4\", \"webm\", \"m3u8\"], function (ext) {\n                if (videoObject[ext].length === 0 && !(videoAsset.url.match(/youtube/))) {\n                    videoObject[ext].push(videoAsset.url.replace(\"mp4\", ext));\n                }\n            });\n        }\n        if (config.youtube.disabled) {\n            delete videoObject.youtube;\n        }\n        // Only Safari supports m3u8 at the moment\n        var isSafari = /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor);\n        if (!isSafari) {\n            delete videoObject.m3u8;\n        }\n        // Chrome won't allow the same video to play in two windows, which interferes with our 'escape the iframe' button.\n        // Therefore we trick Chrome into thinking it is not the same video:\n        var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n        if (isChrome) {\n            var tDelimit;\n            var tParam = \"t=\" + new Date().getTime();\n            angular.forEach([\"mp4\", \"webm\"], function (ext) {\n                if (videoObject[ext].length > 0) {\n                    for (var i = 0; i < videoObject[ext].length; i++) {\n                        tDelimit = videoObject[ext][i].match(/\\?/) ? \"&\" : \"?\";\n                        videoObject[ext][i] = videoObject[ext][i] + tDelimit + tParam;\n                    }\n                }\n            });\n        }\n        if (kalturaUrlService.canPlay(videoAsset.url)) {\n            videoObject.kaltura.push(videoAsset.url);\n        }\n        if (wistiaUrlService.canPlay(videoAsset.url)) {\n            videoObject.wistia.push(videoAsset.url);\n        }\n        videoAsset.urls = videoObject;\n        videoAsset.mediaSrcArr = _resolveMediaSrcArray(videoObject);\n        return videoAsset;\n    }\n    function _resolveMediaSrcArray(videoObject) {\n        return Object.keys(videoObject).reduce(function (mediaSrcArr, mediaSrc) {\n            mediaSrcArr = mediaSrcArr.concat(videoObject[mediaSrc]);\n            return mediaSrcArr;\n        }, []);\n    }\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/basePlayerManager/index.ts\n/**\n * Created by githop on 6/28/17.\n */\nvar commonMetaProps = {\n    mainPlayer: false,\n    playerState: '-1',\n    div: '',\n    ready: false,\n    startAtTime: 0,\n    hasResumedFromStartAt: false,\n    duration: 0,\n    time: 0,\n    hasBeenPlayed: false,\n    bufferedPercent: 0,\n    timeMultiplier: 1,\n    resetInProgress: false,\n    autoplay: false,\n    volume: 100,\n    muted: false\n};\n\n// CONCATENATED MODULE: ./app/scripts/services/basePlayerManager/playerManagerCommons.ts\n/**\n * Created by githop on 1/16/17.\n */\n\nplayerManagerCommons.$inject = ['ittUtils'];\nfunction playerManagerCommons(ittUtils) {\n    var _existy = ittUtils.existy;\n    return function (locals) {\n        var _players = locals.players;\n        var _stateChangeCallbacks = [];\n        var _type = locals.type;\n        var pm = {\n            commonMetaProps: commonMetaProps,\n            getPlayer: getPlayer,\n            setPlayer: setPlayer,\n            getMetaProp: getMetaProp,\n            setInstance: setInstance,\n            setMetaProp: setMetaProp,\n            createMetaObj: createMetaObj,\n            getMetaObj: getMetaObj,\n            getPlayerDiv: getPlayerDiv,\n            getInstance: getInstance,\n            registerStateChangeListener: registerStateChangeListener,\n            unregisterStateChangeListener: unregisterStateChangeListener,\n            getStateChangeListeners: getStateChangeListeners,\n            pauseOtherPlayers: pauseOtherPlayers,\n            resetPlayerManager: resetPlayerManager,\n            renamePid: renamePid,\n            handleTimelineEnd: handleTimelineEnd\n        };\n        return pm;\n        function getStateChangeListeners() {\n            return _stateChangeCallbacks;\n        }\n        function getPlayer(pid) {\n            if (_existy(_players[pid])) {\n                return _players[pid];\n            }\n        }\n        function setInstance(pid, instance) {\n            var playerObj = getPlayer(pid);\n            playerObj.instance = instance;\n        }\n        function setPlayer(pid, val) {\n            _players[pid] = val;\n        }\n        function getMetaProp(pid, prop) {\n            if (_existy(_players[pid]) && _existy(_players[pid].meta)) {\n                return _players[pid].meta[prop];\n            }\n        }\n        function setMetaProp(validKeys) {\n            return function (pid, prop, val) {\n                if (validKeys.indexOf(prop) === -1) {\n                    throw new Error(prop + ' is not a valid prop for' + _type + ' meta info');\n                }\n                if (_existy(_players[pid] && _players[pid].meta)) {\n                    try {\n                        _players[pid].meta[prop] = val;\n                    }\n                    catch (e) {\n                        console.log('catch read only error:', e, 'prop', prop, 'val', val);\n                    }\n                }\n            };\n        }\n        /**\n         * @ngdoc method\n         * @name #getMetaObj\n         * @methodOf iTT.service:playerManagerCommons\n         * @description\n         * returns the entire metaObj, currently used only for debugging.\n         * @param {String} pid the pid of the player\n         * @returns {Object} The requested objects Meta Props.\n         */\n        function getMetaObj(pid) {\n            if (_existy(_players[pid]) && _existy(_players[pid].meta)) {\n                return _players[pid].meta;\n            }\n        }\n        /**\n         * @private\n         * @ngdoc method\n         * @name _createMetaObj\n         * @methodOf iTT.service:playerManagerCommons\n         * @param {Object} base base object to copy from.\n         * @param {Object} props array of objects (properties) to set on the copy of the meta object.\n         * @returns {Object} returns copy of new meta object\n         */\n        function createMetaObj(props, base) {\n            var newMetaObj = angular.copy(base);\n            newMetaObj.meta = angular.extend(newMetaObj.meta, props);\n            return newMetaObj;\n        }\n        /**\n         * @ngdoc method\n         * @name #getPlayerDiv\n         * @methodOf iTT.service:playerManagerCommons\n         * @description\n         * returns an HTML string with the ID from the input param\n         * @param {String} id the ID of the player\n         * @return {String} the HTML string to be used by ittVideo\n         */\n        function getPlayerDiv(id) {\n            return getMetaProp(id, 'div');\n        }\n        function pauseOtherPlayers(pauseFn, getPlayerState) {\n            return function (pid) {\n                Object.keys(_players).forEach(function (playerId) {\n                    if (playerId !== pid) {\n                        var otherPlayerState = getPlayerState(playerId);\n                        if (_existy(otherPlayerState)) {\n                            if (otherPlayerState === 'playing') {\n                                pauseFn(playerId);\n                            }\n                        }\n                    }\n                });\n            };\n        }\n        /**\n         * @ngdoc method\n         * @name getInstance\n         * @methodOf iTT.service:playerManagerCommons\n         * @param {String} pid Unique ID\n         * @returns {Object} returns HTML5 video element\n         * @private\n         */\n        function getInstance(predicate) {\n            return function (pid) {\n                if (predicate(pid) === true) {\n                    return getPlayer(pid).instance;\n                }\n            };\n        }\n        /**\n         * @ngdoc method\n         * @name #registerStateChangeListener\n         * @methodOf iTT.service:playerManagerCommons\n         * @param {Function} cb callback to fire\n         * @returns {Void} returns void\n         */\n        function registerStateChangeListener(cb) {\n            var len = _stateChangeCallbacks.length;\n            while (len--) {\n                if (cb.toString() === _stateChangeCallbacks[len].toString()) {\n                    return;\n                }\n            }\n            _stateChangeCallbacks.push(cb);\n        }\n        /**\n         * @ngdoc method\n         * @name #unregisterStateChangeListener\n         * @methodOf iTT.service:playerManagerCommons\n         * @param {Function} cb callback to unregister\n         * @returns {Void} returns void.\n         */\n        function unregisterStateChangeListener(cb) {\n            _stateChangeCallbacks = _stateChangeCallbacks.filter(function (fn) {\n                return fn.toString() !== cb.toString();\n            });\n        }\n        /**\n         * @ngdoc method\n         * @name #resetPlayerManager\n         * @methodOf iTT.service:playerManagerCommons\n         * @description\n         * Will destroy all instances of YT on the _players map and reset it to an empty object.\n         * @returns {Void} No return value.\n         */\n        function resetPlayerManager(destroyFn) {\n            return function () {\n                angular.forEach(_getPlayers(), function (pm, id) {\n                    _destroyInstance(id, true, destroyFn);\n                });\n                _players = {};\n            };\n        }\n        function renamePid(oldName, newName) {\n            ittUtils.renameKey(oldName, newName, _players);\n        }\n        function handleTimelineEnd(fn) {\n            return function (pid) {\n                return fn(pid);\n            };\n        }\n        /**\n         * @ngdoc method\n         * @name #destroyInstance\n         * @methodOf iTT.service:playerManagerCommons\n         * @description\n         * Used to destroy YT instances and clear them from the _players object\n         * @param {String} pid The ID of the YT instance\n         * @param {Boolean} [doRemove=false] optional param to optionally reset the instance in the _players map.\n         * @returns {Void} No return value.\n         * @private\n         */\n        function _destroyInstance(pid, doRemove, sideEffects) {\n            if (!_existy(doRemove)) {\n                doRemove = false;\n            }\n            sideEffects(pid);\n            if (doRemove === true) {\n                setPlayer(pid, {});\n            }\n        }\n        function _getPlayers() {\n            return _players;\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/html5/html5PlayerManager.svc.ts\n/**\n * Created by githop on 1/18/16.\n */\n/**\n * @ngdoc service\n * @name iTT.service:html5PlayerManager\n * @description\n * Implements the PlayerManager interface, wraps HTML5 videos\n * @property {String} type the type of playerManager\n * @requires $interval\n * @requires PLAYERSTATES\n * @requires ittUtils\n */\n// var readyStates = {\n// \t0: 'HAVE_NOTHING',\n// \t1: 'HAVE_METADATA',\n// \t2: 'HAVE_CURRENT_DATA',\n// \t3: 'HAVE_FUTURE_DATA',\n// \t4: 'HAVE_ENOUGH_DATA'\n// }\nhtml5PlayerManager.$inject = ['$interval', 'PLAYERSTATES', 'ittUtils', 'appState', 'playerManagerCommons'];\nfunction html5PlayerManager($interval, PLAYERSTATES, ittUtils, appState, playerManagerCommons) {\n    var _players = {};\n    var _mainPlayerId;\n    // var _checkInterval = 50.0;\n    var _ignoreNextEventIfPause = false;\n    var _type = 'html5';\n    var _existy = ittUtils.existy;\n    var base = playerManagerCommons({ players: _players, type: _type });\n    var commonMetaProps = base.commonMetaProps;\n    var _html5MetaProps = {\n        videoObj: {},\n        videoType: _type\n    };\n    var _html5MetaObj = {\n        instance: null,\n        meta: {}\n    };\n    angular.extend(_html5MetaObj.meta, _html5MetaProps, commonMetaProps);\n    var _validMetaKeys = Object.keys(_html5MetaObj.meta);\n    var predicate = function (pid) {\n        return (_existy(getPlayer(pid)) && _existy(getPlayer(pid).instance));\n    };\n    function html5Ending(pid) {\n        stop(pid);\n        var instance = getInstance(pid);\n        onEnded.call(instance);\n    }\n    var getPlayer = base.getPlayer;\n    var setPlayer = base.setPlayer;\n    var getPlayerDiv = base.getPlayerDiv;\n    var getInstance = base.getInstance(predicate);\n    var createMetaObj = base.createMetaObj;\n    var getMetaObj = base.getMetaObj;\n    var getMetaProp = base.getMetaProp;\n    var setMetaProp = base.setMetaProp(_validMetaKeys);\n    var registerStateChangeListener = base.registerStateChangeListener;\n    var unregisterStateChangeListener = base.unregisterStateChangeListener;\n    var pauseOtherPlayers = base.pauseOtherPlayers(pause, getPlayerState);\n    var resetPlayerManager = base.resetPlayerManager(_removeEventListeners);\n    var renamePid = base.renamePid;\n    var handleTimelineEnd = base.handleTimelineEnd(html5Ending);\n    var _getStateChangeListeners = base.getStateChangeListeners;\n    return {\n        type: _type,\n        getMetaProp: getMetaProp,\n        setMetaProp: setMetaProp,\n        getMetaObj: getMetaObj,\n        getPlayerDiv: getPlayerDiv,\n        pauseOtherPlayers: pauseOtherPlayers,\n        registerStateChangeListener: registerStateChangeListener,\n        unregisterStateChangeListener: unregisterStateChangeListener,\n        resetPlayerManager: resetPlayerManager,\n        renamePid: renamePid,\n        seedPlayerManager: seedPlayerManager,\n        create: create,\n        getPlayerState: getPlayerState,\n        play: play,\n        pause: pause,\n        seekTo: seek,\n        getCurrentTime: getCurrentTime,\n        getBufferedPercent: getBufferedPercent,\n        toggleMute: toggleMute,\n        setVolume: setVolume,\n        setSpeed: setSpeed,\n        freezeMetaProps: freezeMetaProps,\n        unFreezeMetaProps: unFreezeMetaProps,\n        stop: stop,\n        handleTimelineEnd: handleTimelineEnd\n    };\n    //public methods\n    /**\n     * @ngdoc method\n     * @name #create\n     * @methodOf iTT.service:html5PlayerManager\n     * @param {string} divID unique ID of video tag\n     * @returns {Void} no return value\n     */\n    function create(divID) {\n        if (Object.isFrozen(getPlayer(divID).meta)) {\n            unFreezeMetaProps(divID);\n        }\n        var plr = document.getElementById(divID);\n        _attachEventListeners(plr);\n        plr.onStateChange = _onStateChange;\n        plr.controls = true;\n        if (_mainPlayerId === divID) {\n            _mainPlayerId = divID;\n            plr.controls = false;\n        }\n        plr.load();\n        // _players[divID].instance = plr;\n        getPlayer(divID).instance = plr;\n        // console.log('check', getPlayer(divID));\n        // temp to test out video source change.\n        // $timeout(function() {\n        // \tconsole.info('BEGIN QUALITY CHANGE!');\n        // \t_changeVideoQuality(divID, 1);\n        // \t_players[divID].meta.playerState = 2;\n        // \t_emitStateChange(plr);\n        // }, 8 * 1000);\n        // var checkBuffering = _checkBuffering(plr);\n        // var interval = $interval(checkBuffering, _checkInterval);\n    }\n    /**\n     * @ngdoc method\n     * @name #freezeMetaProps\n     * @methodOf iTT.service:html5PlayerManager\n     * @description Freezes the player's meta data object\n     * @param {String} pid the pid of the player to freeze.\n     * @returns {Void} returns void\n     */\n    function freezeMetaProps(pid) {\n        Object.freeze(getMetaObj(pid));\n    }\n    /**\n     * @ngdoc method\n     * @name #unFreezeMetaProps\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * Unfreeze metaObj by copying (shallow) all of the props into a new object.\n     * @param {String} pid the pid of the player to unfreeze\n     * @returns {Void} returns void.\n     */\n    function unFreezeMetaProps(pid) {\n        var newMeta, prop, frozenMeta;\n        frozenMeta = getMetaObj(pid);\n        newMeta = {};\n        for (prop in frozenMeta) {\n            if (frozenMeta.hasOwnProperty(prop)) {\n                newMeta[prop] = frozenMeta[prop];\n            }\n        }\n        //If this is a Safari browser, there will be a pause event that gets emitted after this unfreeze happens.\n        //This would cause the state to be recorded as paused and would therefore break the automatic resumption of the html5 video.\n        //Therefore, we will suppress that pause event.\n        if (/Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor)) {\n            _ignoreNextEventIfPause = true;\n        }\n        getPlayer(pid).meta = newMeta;\n    }\n    /**\n     * @ngdoc method\n     * @name #seedPlayerManager\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * Used to set the PID / divID for a html5 video element, is called prior to create()\n     * @param {String} id Main Video Asset ID or Event ID (for embeds)\n     * @param {Boolean} mainPlayer Determines type of player, embed or main\n     * @param {Array} mediaSrcArr array of youtube URLs\n     * @returns {Void} returns void.\n     */\n    function seedPlayerManager(id, mainPlayer, mediaSrcArr) {\n        //bail if we were frozen prior to attempting to re-init player.\n        if (_existy(getPlayer(id)) && getMetaProp(id, 'startAtTime') > 0) {\n            return;\n        }\n        if (mainPlayer) {\n            _players = {};\n            _mainPlayerId = id;\n        }\n        var plrInfo = _initPlayerDiv(id, mediaSrcArr);\n        //store relevant info the particular player in the 'meta' obj.\n        var newProps = {\n            mainPlayer: mainPlayer,\n            videoObj: plrInfo.videoObj,\n            div: plrInfo.videoElm\n        };\n        setPlayer(id, createMetaObj(newProps, _html5MetaObj));\n    }\n    /*\n     HTML5 media event handlers\n     */\n    function onSeeked(ev) {\n        var state = getPlayerState(this.id);\n        if (state === 'playing' || state === 'buffering' && appState.isIEOrEdge === true) {\n            //manually fire onPlaying for IE/Edge only as to avoid duplicate onplaying events.\n            onPlaying.call(this);\n        }\n        var _a = ev.target, currentTime = _a.currentTime, duration = _a.duration;\n        var padding = 0.5;\n        if (Math.floor(duration - currentTime) <= padding) {\n            onEnded.call(this);\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name onEnded\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * HTML5 media event handler bound to HTML5 video element,\n     * used to handle appropriate side effects and pipe events up stream\n     * @private\n     * @returns {Void} Returns void but will emit a 'ended' event as side-effect\n     */\n    function onEnded() {\n        var instance = getInstance(this.id);\n        setMetaProp(this.id, 'playerState', 0);\n        _emitStateChange(instance);\n    }\n    /**\n     * @ngdoc method\n     * @name onCanPlay\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * Used to determine when the video can be played for the first time\n     * @private\n     * @returns {Void} Returns void but will emit a 'player ready' evetn as side-effect.\n     */\n    function onCanPlay() {\n        var instance = getInstance(this.id);\n        if (getMetaProp(this.id, 'ready') === false) {\n            _emitStateChange(instance, 6);\n            setMetaProp(this.id, 'duration', instance.duration);\n        }\n    }\n    /**\n     * @ngdoc method\n     * @private\n     * @name onPlaying\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * Event handler that responds to a 'playing' HTML5 media event.\n     * @returns {Void} returns void but will emit a 'playing' event.\n     */\n    function onPlaying() {\n        var instance = getInstance(this.id);\n        setMetaProp(this.id, 'playerState', 1);\n        _emitStateChange(instance);\n    }\n    /**\n     * @ngdoc method\n     * @private\n     * @name onPause\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * Event handler for 'pause' event.\n     * @returns {Void} returns void but will emit a 'paused' event\n     */\n    function onPause() {\n        var instance = getInstance(this.id);\n        //Bail out if we are ignoring the next pause event\n        if (_ignoreNextEventIfPause === true) {\n            _ignoreNextEventIfPause = false;\n            return;\n        }\n        setMetaProp(this.id, 'playerState', 2);\n        _emitStateChange(instance);\n    }\n    /**\n     * @ngdoc method\n     * @name onBuffering\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * Event handler for 'buffering' event, note that HTML5 media api does not have a 'buffering' event, this is\n     * bound to the 'onWaiting' event.\n     * @returns {Void} returns void but will emit a 'buffering' event.\n     */\n    function onBuffering() {\n        var instance = getInstance(this.id);\n        setMetaProp(this.id, 'playerState', 3);\n        _emitStateChange(instance);\n    }\n    /*\n     Playback exported methods\n     */\n    /**\n     * @ngdoc method\n     * @name #play\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * Will play the video.\n     * @param {String} pid the PID of the video to play\n     * @returns {Void} returns void.\n     */\n    function play(pid) {\n        var instance = getInstance(pid);\n        var timestamp = getMetaProp(pid, 'time');\n        var playerRendered = getMetaProp(pid, 'ready');\n        var waitUntilReady = $interval(function () {\n            var delay;\n            //make sure the player is in a state to accept commands\n            if (_existy(instance) && instance.readyState === 4 && playerRendered === true) {\n                delay = getMetaProp(pid, 'time');\n                //check for a drift then seek to original time to fix.\n                //only for main player, otherwise embed players will attempt\n                //to resume playback according to the timeline time.\n                if (pid === _mainPlayerId && timestamp <= delay) {\n                    instance.currentTime = timestamp;\n                }\n                instance.play();\n                $interval.cancel(waitUntilReady);\n            }\n        }, 10);\n    }\n    /**\n     * @ngdoc method\n     * @name #pause\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * used to pause the player\n     * @param {String} pid the pid of the player\n     * @returns {Void} returns void.\n     */\n    function pause(pid) {\n        var instance = getInstance(pid);\n        instance.pause();\n    }\n    function stop(pid) {\n        setMetaProp(pid, 'time', getMetaProp(pid, 'duration'));\n        console.log('stopped!');\n        pause(pid);\n    }\n    /**\n     * @ngdoc method\n     * @name #getCurrentTime\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * reports the current time of video playback.\n     * @param {String} pid the pid of the player\n     * @returns {Number} the time of playback.\n     */\n    function getCurrentTime(pid) {\n        var instance = getInstance(pid);\n        if (instance !== undefined) {\n            return instance.currentTime;\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #getPlayerState\n     * @methodOf iTT.service:html5PlayerManager\n     * @description returns the current state of the player\n     * @param {String} pid the player to query for state\n     * @returns {String} the player state\n     */\n    function getPlayerState(pid) {\n        // var instance = _getInstance(pid);\n        var player = getPlayer(pid);\n        if (_existy(player)) {\n            return PLAYERSTATES[player.meta.playerState];\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #seek\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * will seek the video to the input time\n     * @param {String} pid the player to seek\n     * @param {Number} t the time to seek to.\n     * @returns {Void} returns void.\n     */\n    function seek(pid, t) {\n        var instance = getInstance(pid);\n        instance.currentTime = t;\n    }\n    /**\n     * @ngdoc method\n     * @name #setSpeed\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * used to speed up / slow down the rate of video playback.\n     * @param {String} pid the pid of the player\n     * @param {Number} playbackRate the rate of playback to set\n     * @returns {Void} returns void.\n     */\n    function setSpeed(pid, playbackRate) {\n        var instance = getInstance(pid);\n        instance.playbackRate = playbackRate;\n    }\n    /**\n     * @ngdoc method\n     * @name #toggleMute\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * toggles the mute on / off\n     * @param {String} pid the pid of the player\n     * @returns {Void} returns void.\n     */\n    function toggleMute(pid) {\n        var instance = getInstance(pid);\n        instance.muted = !instance.muted;\n        setMetaProp(pid, 'muted', instance.muted);\n    }\n    /**\n     * @ngdoc method\n     * @name #setVolume\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * used to set the volume.\n     * @param {String} pid the pid of the player\n     * @param {Number} vol the value to set the volume to\n     * @returns {Void} returns void.\n     */\n    function setVolume(pid, vol) {\n        var instance = getInstance(pid);\n        instance.volume = (vol / 100);\n        setMetaProp(pid, 'volume', vol);\n    }\n    /**\n     * @ngdoc method\n     * @name #getBufferedPercent\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * Used to determine the percent of buffered video\n     * @param {String} pid The ID of the YT instance\n     * @returns {Number} Numerical value representing\n     * percent of video that is currently buffered\n     */\n    function getBufferedPercent(pid) {\n        var instance = getInstance(pid);\n        if (instance && getMetaProp(pid, 'playerState') !== -1) {\n            if (instance.buffered.length > 0) {\n                var bufLen = instance.buffered.length;\n                var bufStart = instance.buffered.start(bufLen - 1);\n                var bufEnd = instance.buffered.end(bufLen - 1);\n                if (bufEnd < 0) {\n                    bufEnd = bufEnd - bufStart;\n                    bufStart = 0;\n                }\n                return bufEnd / getMetaProp(pid, 'duration') * 100;\n            }\n        }\n    }\n    /*\n     private methods\n     */\n    /**\n     * @private\n     * @ngdoc method\n     * @name _initPlayerDiv\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * Used to create a HTML video tag with the src tags mapped to the URLs in the input array.\n     * @param {String} id the unique id\n     * @param {Array} mediaSrcArr array of URLs that could contain .mp4, .webm or .m3u8 files\n     * @returns {Object} Object with videoObj and videoElm properties\n     */\n    function _initPlayerDiv(id, mediaSrcArr) {\n        var videoObj = _getHtml5VideoObject(mediaSrcArr);\n        var videoElm = _drawPlayerDiv(id, videoObj, 0);\n        return { videoObj: videoObj, videoElm: videoElm };\n    }\n    /**\n     * @ngdoc method\n     * @name _drawPlayerDiv\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * Helper method that abstracts the functionality of creating a HTML5 video tag\n     * @param {String} id unique id\n     * @param {Object} videoObj Object with array of source URLs by file type\n     * @param {Number} quality index to select the proper source out of the availble sources\n     * @returns {string} returns HTML5 video element\n     * @private\n     */\n    function _drawPlayerDiv(id, videoObj, quality) {\n        var videoElement = document.createElement('video');\n        videoElement.id = id;\n        Object.keys(videoObj).forEach(function (fileType) {\n            var classAttr, srcAttr, typeAttr, srcElement;\n            classAttr = fileType;\n            if (classAttr === 'mp4') {\n                classAttr = 'mpeg4';\n            }\n            srcAttr = videoObj[fileType][quality];\n            if (!_existy(srcAttr)) {\n                return;\n            }\n            if (fileType === 'm3u8') {\n                typeAttr = 'application/x-mpegURL';\n            }\n            else {\n                typeAttr = 'video/' + fileType;\n            }\n            srcElement = document.createElement('source');\n            srcElement.setAttribute('type', typeAttr);\n            srcElement.setAttribute('src', srcAttr);\n            srcElement.setAttribute('class', classAttr);\n            videoElement.appendChild(srcElement);\n        });\n        var fallback = document.createElement('p');\n        fallback.innerText = 'Oh no! Your browser does not support the HTML5 Video element.';\n        videoElement.appendChild(fallback);\n        return videoElement.outerHTML;\n    }\n    /**\n     * @ngdoc method\n     * @name _formatPlayerStateChangeEvent\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * Helper method for creating an object that conforms to our message API between\n     * the timelineSvc, playbackService, and individual playerManagers\n     * @param {Number} event Interger that corresponds to a playerStateChange\n     * @param {String} pid Unique ID of player\n     * @returns {Object} Object with emitterID String and state String props\n     * @private\n     */\n    function _formatPlayerStateChangeEvent(event, pid) {\n        return {\n            emitterId: pid,\n            state: PLAYERSTATES[event]\n        };\n    }\n    /**\n     * @ngdoc method\n     * @name _emitStateChange\n     * @methodOf iTT.service:html5PlayerManager\n     * @param {Object} instance HTML5 Video element\n     * @param {Boolean} [forceState] optional Boolean if you want to send a message without setting the playerState\n     * on the meta object.\n     * @private\n     */\n    function _emitStateChange(instance, forceState) {\n        var player = getPlayer(instance.id);\n        var state;\n        //for emitting a state but not setting it on the player.\n        if (forceState) {\n            state = forceState;\n        }\n        else {\n            state = player.meta.playerState;\n        }\n        instance.onStateChange(_formatPlayerStateChangeEvent(state, instance.id));\n    }\n    /**\n     * @ngdoc method\n     * @name _onStateChange\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * Method bound to each instance of _player[id] to invoke the stateChangeCallback for any listeners\n     * @param {Object} event the message to send\n     * @private\n     */\n    function _onStateChange(event) {\n        angular.forEach(_getStateChangeListeners(), function (cb) {\n            cb(event);\n        });\n    }\n    /**\n     * @ngdoc method\n     * @name _getHtml5VideoObject\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * reduces an array of URLs into an Object used in other helper methods ultimately to format a\n     * string of HTML with the provided input URLS as source tags.\n     * @param {Array} mediaSrcArr array of URLS\n     * @returns {Object} Object with mp4, webm, and m3u8 props, array of strings\n     * @private\n     */\n    function _getHtml5VideoObject(mediaSrcArr) {\n        var extensionMatch = /(mp4|m3u8|webm)/;\n        return mediaSrcArr.reduce(function (videoObject, mediaSrc) {\n            var fileTypeKey = mediaSrc.match(extensionMatch)[1];\n            videoObject[fileTypeKey].push(mediaSrc);\n            return videoObject;\n        }, { mp4: [], webm: [], m3u8: [] });\n    }\n    /**\n     * @ngdoc method\n     * @name _attachEventListeners\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * helper method to abstract attaching of event listeners to the necessary events and wiring up the relevant\n     * function\n     * @param {Object} videoElement HTML5 video element\n     * @private\n     */\n    function _attachEventListeners(videoElement) {\n        var evMap = {\n            'pause': onPause,\n            'playing': onPlaying,\n            'waiting': onBuffering,\n            'seeked': onSeeked,\n            'canplay': onCanPlay,\n            'ended': onEnded\n        };\n        Object.keys(evMap).forEach(function (evtName) {\n            (function (evtName) {\n                videoElement.addEventListener(evtName, evMap[evtName]);\n            })(evtName);\n        });\n    }\n    /**\n     * @ngdoc method\n     * @name _attachEventListeners\n     * @methodOf iTT.service:html5PlayerManager\n     * @description\n     * helper method to remove attached event listeners.\n     * function\n     * @param {String} pid id of element to remove listeners from.\n     * @private\n     */\n    function _removeEventListeners(pid) {\n        var videoElement;\n        var instance = getInstance(pid);\n        if (_existy(instance)) {\n            videoElement = instance;\n            videoElement.removeEventListener('pause', onPause);\n            videoElement.removeEventListener('playing', onPlaying);\n            videoElement.removeEventListener('waiting', onBuffering);\n            videoElement.removeEventListener('seeked', onSeeked);\n            videoElement.removeEventListener('canplay', onCanPlay);\n            videoElement.removeEventListener('ended', onEnded);\n        }\n    }\n    // function _changeVideoQuality(id, quality) {\n    // \tvar player = getPlayer(id);\n    // \tvar videoObj = player.meta.videoObj;\n    // \tvar videoChildren = player.instance.childNodes;\n    //\n    // \tangular.forEach(videoChildren, function(elm) {\n    // \t\tvar fileType = '';\n    // \t\tif (elm.nodeName === 'SOURCE') {\n    // \t\t\tfileType = elm.className;\n    // \t\t\telm.setAttribute('src', videoObj[fileType][quality]);\n    // \t\t}\n    // \t});\n    //\n    // \tvar wasPlaying = player.meta.playerState === 1;\n    //\n    // \t//load new element into DOM.\n    // \tplayer.instance.load();\n    // \tif (wasPlaying) {\n    // \t\tplay(id);\n    // \t}\n    // }\n    //seems not to work very well.\n    // function _checkBuffering(player) {\n    // \treturn function() {\n    // \t\tplayer.meta.currentPlayPos = player.currentTime;\n    // \t\tvar offset = 1 / _checkInterval;\n    //\n    // \t\tif (player.meta.playerState !== 3 &&\n    // \t\t\tplayer.meta.currentPlayPos < (player.meta.lastPlayPos + offset) &&\n    // \t\t\t!player.paused) {\n    // \t\t\tplayer.meta.playerState = 3;\n    // \t\t\t_emitStateChange(player);\n    // \t\t}\n    // \t\t// if (player.meta.playerState === 3 &&\n    // \t\t// \tplayer.meta.currentPlayPos > (player.meta.lastPlayPos + offset) &&\n    // \t\t// \t!player.paused) {\n    // \t\t// }\n    // \t\tplayer.meta.lastPlayPos = player.meta.currentPlayPos;\n    // \t}\n    // }\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/html5/html5UrlService.ts\n/**\n * Created by githop on 11/4/16.\n */\nhtml5UrlService.$inject = ['ittUtils'];\nfunction html5UrlService(ittUtils) {\n    var _type = 'html5';\n    var _existy = ittUtils.existy;\n    return {\n        type: _type,\n        getMimeType: getMimeType,\n        parseMediaSrc: parseMediaSrc,\n        canPlay: isHTML5VideoUrl,\n        parseInput: parseInput,\n        getOutgoingUrl: getOutgoingUrl\n    };\n    function getMimeType(url) {\n        return 'video/' + url.match(/(mp4|m3u8|webm)/)[0];\n    }\n    function getOutgoingUrl(url, startAt) {\n        if (_existy(startAt) && startAt > 0) {\n            url += '#t=' + startAt;\n        }\n        return url;\n    }\n    /**\n     *\n     * @param mediaSrc\n     * @return mediaObj{type: String, mediaSrcArr: Array<String>}\n     */\n    function parseMediaSrc(mediaSrc) {\n        return mediaSrc.reduce(function (parsedMediaObj, mediaSrc) {\n            if (isHTML5VideoUrl(mediaSrc)) {\n                parsedMediaObj.mediaSrcArr.push(mediaSrc);\n            }\n            return parsedMediaObj;\n        }, { type: _type, mediaSrcArr: [] });\n    }\n    function isHTML5VideoUrl(url) {\n        return /(.mp4|.m3u8|.webm)/.test(url);\n    }\n    function parseInput(url) {\n        if (isHTML5VideoUrl(url)) {\n            return url;\n        }\n    }\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/kaltura/kalturaPlayerManager.ts\n/**\n * Created by githop on 1/13/17.\n */\n/**\n * @ngdoc service\n * @name iTT.service:kalturaPlayerManager\n * @description\n * Implements the PlayerManager interface, wraps kaltura videos\n * @property {String} type the type of playerManager\n * @requires playerManagerCommons\n * @requires kalturaScriptLoader\n * @requires kalturaUrlService\n * @requires PLAYERSTATES\n * @requires ittUtils\n */\nkalturaPlayerManager.$inject = ['ittUtils', 'PLAYERSTATES', 'playerManagerCommons', 'kalturaScriptLoader', 'kalturaUrlService'];\nfunction kalturaPlayerManager(ittUtils, PLAYERSTATES, playerManagerCommons, kalturaScriptLoader, kalturaUrlService) {\n    var _players = {};\n    var _mainPlayerId;\n    var _type = 'kaltura';\n    var _existy = ittUtils.existy;\n    var base = playerManagerCommons({ players: _players, type: _type });\n    var commonMetaProps = base.commonMetaProps;\n    var _kalturaMetaProps = {\n        ktObj: {},\n        videoType: _type,\n        bufferTimeout: null,\n        seekTimeout: null,\n        lastVol: 100\n    };\n    var _kalturaMetaObj = {\n        instance: null,\n        meta: {}\n    };\n    angular.extend(_kalturaMetaObj.meta, _kalturaMetaProps, commonMetaProps);\n    var _validMetaKeys = Object.keys(_kalturaMetaObj.meta);\n    var predicate = function (pid) {\n        return (_existy(getPlayer(pid)) && getMetaProp(pid, 'ready') === true);\n    };\n    var kalturaEndingFn = function (pid) {\n        //add logic if necessary\n    };\n    var getPlayer = base.getPlayer;\n    var setPlayer = base.setPlayer;\n    var getPlayerDiv = base.getPlayerDiv;\n    var getInstance = base.getInstance(predicate);\n    var createMetaObj = base.createMetaObj;\n    var getMetaObj = base.getMetaObj;\n    var getMetaProp = base.getMetaProp;\n    var setMetaProp = base.setMetaProp(_validMetaKeys);\n    var registerStateChangeListener = base.registerStateChangeListener;\n    var unregisterStateChangeListener = base.unregisterStateChangeListener;\n    var pauseOtherPlayers = base.pauseOtherPlayers(pause, getPlayerState);\n    var resetPlayerManager = base.resetPlayerManager(_removeEventListeners);\n    var renamePid = base.renamePid;\n    var handleTimelineEnd = base.handleTimelineEnd(kalturaEndingFn);\n    var ittTimeout = ittUtils.ngTimeout;\n    var cancelIttTimeout = ittUtils.cancelNgTimeout;\n    var _getStateChangeListeners = base.getStateChangeListeners;\n    return {\n        type: _type,\n        getMetaProp: getMetaProp,\n        setMetaProp: setMetaProp,\n        getMetaObj: getMetaObj,\n        getPlayerDiv: getPlayerDiv,\n        pauseOtherPlayers: pauseOtherPlayers,\n        registerStateChangeListener: registerStateChangeListener,\n        unregisterStateChangeListener: unregisterStateChangeListener,\n        resetPlayerManager: resetPlayerManager,\n        renamePid: renamePid,\n        seedPlayerManager: seedPlayerManager,\n        create: create,\n        getPlayerState: getPlayerState,\n        play: play,\n        pause: pause,\n        seekTo: seekTo,\n        getCurrentTime: getCurrentTime,\n        getBufferedPercent: getBufferedPercent,\n        toggleMute: toggleMute,\n        setVolume: setVolume,\n        setSpeed: setSpeed,\n        freezeMetaProps: angular.noop,\n        unFreezeMetaProps: angular.noop,\n        stop: stop,\n        handleTimelineEnd: handleTimelineEnd\n    };\n    function create(playerId) {\n        var ktObj = getMetaProp(playerId, 'ktObj');\n        var partnerId = ktObj.partnerId, entryId = ktObj.entryId, uiConfId = ktObj.uiconfId;\n        _createKWidget(playerId, partnerId, entryId, uiConfId, readyCallback)\n            .then(handleSuccess);\n        function handleSuccess() {\n            // noop\n        }\n        function readyCallback(playerId) {\n            var kdp = document.getElementById(playerId);\n            getPlayer(playerId).instance = kdp;\n            _attachEventListeners(kdp, playerId);\n        }\n    }\n    function seedPlayerManager(id, mainPlayer, mediaSrcArr) {\n        if (_existy(getPlayer(id)) && getMetaProp(id, 'startAtTime') > 0) {\n            return;\n        }\n        if (mainPlayer) {\n            _players = {};\n            _mainPlayerId = id;\n        }\n        var ktObj = kalturaUrlService.getKalturaObject(mediaSrcArr[0]);\n        var newProps = {\n            mainPlayer: mainPlayer,\n            div: _getPlayerDiv(id),\n            ktObj: ktObj\n        };\n        setPlayer(id, createMetaObj(newProps, _kalturaMetaObj));\n    }\n    /*\n     Event Bound functions\n     */\n    function onMediaReady(pid) {\n        _emitStateChange(pid, 6);\n        setMetaProp(pid, 'duration', _kdpEval(pid, 'duration'));\n    }\n    function onPlaying(pid) {\n        setMetaProp(pid, 'playerState', 1);\n        if (getMetaProp(pid, 'ready') === true) {\n            _emitStateChange(pid);\n        }\n    }\n    function onPaused(pid) {\n        setMetaProp(pid, 'playerState', 2);\n        _emitStateChange(pid);\n    }\n    function onBufferEnd(ev) {\n        var currentState = PLAYERSTATES[getMetaProp(this.id, 'playerState')];\n        var isBuffering = getMetaProp(this.id, 'bufferTimeout');\n        if (_existy(isBuffering)) {\n            cancelIttTimeout(isBuffering);\n        }\n        if (currentState === 'buffering') {\n            play(this.id);\n        }\n    }\n    function onBufferStart() {\n        var pid = this.id;\n        var isBuffering = ittTimeout(function () {\n            console.log('stuck in buffer land', getMetaProp(pid, 'time'));\n            _reset(pid);\n        }, 15 * 1000);\n        setMetaProp(this.id, 'bufferTimeout', isBuffering);\n        setMetaProp(this.id, 'playerState', 3);\n        _emitStateChange(this.id);\n    }\n    function onPlayerPlayEnd(pid) {\n        console.log('playerState ended', getMetaProp(pid, 'playerState'));\n        setMetaProp(pid, 'playerState', 0);\n        _emitStateChange(pid);\n    }\n    function onMediaError(e) {\n        console.warn('PLAYER ERROR', e);\n    }\n    function onUpdatedPlaybackRate(e) {\n        console.log('new rate', e);\n    }\n    function onPlayerUpdatePlayhead(ev) {\n        setMetaProp(this.id, 'time', ev);\n    }\n    /*\n     Public Methods\n     */\n    function play(pid) {\n        _sendKdpNotice(pid, 'doPlay');\n    }\n    function pause(pid) {\n        _sendKdpNotice(pid, 'doPause');\n    }\n    function seekTo(pid, t) {\n        if (t > 60 && t % 10 === 0) {\n            t -= 0.5;\n        }\n        _sendKdpNotice(pid, 'doSeek', t);\n    }\n    function stop(pid) {\n        _sendKdpNotice(pid, 'doStop');\n    }\n    function getPlayerState(pid) {\n        return PLAYERSTATES[getMetaProp(pid, 'playerState')];\n    }\n    function getCurrentTime(pid) {\n        return _kdpEval(pid, 'video.player.currentTime') || 0;\n    }\n    function getBufferedPercent(pid) {\n        if (getMetaProp(pid, 'ready') === true) {\n            return _kdpEval(pid, 'video.buffer.percent') * 100;\n        }\n    }\n    function toggleMute(pid) {\n        var isMuted = getMetaProp(pid, 'muted');\n        if (isMuted === false) {\n            setMetaProp(pid, 'lastVol', getMetaProp(pid, 'volume'));\n            setVolume(pid, 0);\n        }\n        else {\n            setVolume(pid, getMetaProp(pid, 'lastVol'));\n        }\n        setMetaProp(pid, 'muted', !isMuted);\n    }\n    function setSpeed(pid, playbackRate) {\n        console.log('setting speed to', playbackRate);\n        _sendKdpNotice(pid, 'playbackRateChangeSpeed', playbackRate);\n    }\n    function setVolume(pid, v) {\n        _sendKdpNotice(pid, 'changeVolume', v / 100);\n        setMetaProp(pid, 'volume', v);\n    }\n    /*\n     Private methods\n     */\n    function _reset(pid, t) {\n        var currentTime = t || getMetaProp(pid, 'time');\n        //changeMedia will emit a 'onMediaReady' event after the media has been successfully changed\n        //when handling the 'onMediaReady' event, the playbackService will seek to the startAtTime\n        console.log('about to reset to t=', currentTime);\n        setMetaProp(pid, 'startAtTime', currentTime);\n        setMetaProp(pid, 'hasResumedFromStartAt', false);\n        setMetaProp(pid, 'resetInProgress', true);\n        var entryId = getMetaProp(pid, 'ktObj').entryId;\n        _sendKdpNotice(pid, 'changeMedia', { 'entryId': entryId });\n        setMetaProp(pid, 'ready', false);\n    }\n    function _sendKdpNotice(pid, notice, val) {\n        var kdp = getInstance(pid);\n        try {\n            if (_existy(val)) {\n                kdp.sendNotification(notice, val);\n            }\n            else {\n                kdp.sendNotification(notice);\n            }\n        }\n        catch (e) {\n            console.log('error sending', notice);\n        }\n    }\n    function _createKWidget(divId, partnerID, entryID, uiConfId, onReadyCB) {\n        var embedObj = {\n            'targetId': divId,\n            'wid': '_' + partnerID,\n            'uiconf_id': uiConfId,\n            'readyCallback': onReadyCB,\n            'entry_id': entryID,\n            'flashvars': {\n                'playbackRateSelector.plugin': true,\n                'controlBarContainer.plugin': false,\n                'largePlayBtn.plugin': false,\n                'loadingSpinner.plugin': true,\n                'closedCaptions.displayCaptions': false\n            }\n        };\n        var embedControls = {\n            'EmbedPlayer.NativeControls': true,\n            'EmbedPlayer.DisableHTML5FlashFallback': true\n        };\n        if (divId !== _mainPlayerId) {\n            angular.extend(embedObj.flashvars, embedControls);\n        }\n        return kalturaScriptLoader.load(partnerID, uiConfId).then(function () {\n            KWidget.embed(embedObj);\n        });\n    }\n    function _getPlayerDiv(id) {\n        return '<div id=\"' + id + '\"></div>';\n    }\n    function _attachEventListeners(kdp, pid) {\n        var kMap = {\n            'playerPlayed': onPlaying,\n            'playerPaused': onPaused,\n            'bufferStartEvent': onBufferStart,\n            'bufferEndEvent': onBufferEnd,\n            'playerPlayEnd': onPlayerPlayEnd,\n            'mediaError': onMediaError,\n            'mediaReady': onMediaReady,\n            'updatedPlaybackRate': onUpdatedPlaybackRate,\n            'playerUpdatePlayhead': onPlayerUpdatePlayhead\n        };\n        Object.keys(kMap).forEach(function (evtName) {\n            (function (evtName) {\n                kdp.kBind(evtName + '.' + pid, kMap[evtName]);\n            })(evtName);\n        });\n    }\n    function _removeEventListeners(pid) {\n        var kdp = getInstance(pid);\n        kdp.kUnbind('.' + pid);\n    }\n    function _emitStateChange(pid, forceState) {\n        var state;\n        if (forceState) {\n            state = forceState;\n        }\n        else {\n            state = getMetaProp(pid, 'playerState');\n        }\n        _getStateChangeListeners().forEach(function (cb) {\n            cb(_formatPlayerStateChangeEvent(state, pid));\n        });\n    }\n    function _kdpEval(pid, prop) {\n        var instance = getInstance(pid);\n        if (_existy(instance)) {\n            return instance.evaluate('{' + prop + '}');\n        }\n    }\n    function _formatPlayerStateChangeEvent(state, pid) {\n        return {\n            emitterId: pid,\n            state: PLAYERSTATES[state]\n        };\n    }\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/kaltura/kalturaScriptLoader.ts\n/**\n * Created by githop on 1/13/17.\n */\n/*\n Kaltura script loading strategy:\n - check for KWidget in global scope\n -- if KWidget is not present, load script tag with partnerID and uIConfId, store loaded script in _scriptsMap\n -- if KWidget is present, check _scriptsMap to see if we have already created a script for this partnerID + uiConfId,\n if we haven't, load script and store result in _scriptsMap\n */\nkalturaScriptLoader.$inject = ['$q', 'ittUtils'];\nfunction kalturaScriptLoader($q, ittUtils) {\n    var _scriptsMap = {};\n    var _existy = ittUtils.existy;\n    return {\n        load: load\n    };\n    /**\n     *\n     * @param partnerId\n     * @param uiConfId\n     * @returns {*}\n     */\n    function load(partnerId, uiConfId) {\n        return $q(function (resolve) {\n            var scriptKey = uiConfId + partnerId;\n            if (!_existy(_scriptsMap[scriptKey])) {\n                _scriptsMap[scriptKey] = 'ready';\n            }\n            if (typeof (KWidget) == 'undefined') {\n                _loadScript(partnerId, uiConfId, _scriptsMap, resolve);\n            }\n            else if (_scriptsMap[scriptKey] === 'ready') {\n                _loadScript(partnerId, uiConfId, _scriptsMap, resolve);\n            }\n            else {\n                resolve();\n            }\n        });\n    }\n    function _loadScript(partnerId, uiConfId, history, onDone) {\n        var tagSrc = _getScriptTagSrc(partnerId, uiConfId);\n        var tag = _appendScript(tagSrc, partnerId);\n        tag.onload = onDone;\n        history[uiConfId + partnerId] = tag;\n    }\n    function _getScriptTagSrc(partnerId, uiConfId) {\n        return 'https://cdnapisec.kaltura.com/p/' + partnerId + '/sp/' + partnerId + '00/embedIframeJs/uiconf_id/' + uiConfId + '/partner_id/' + partnerId;\n    }\n    function _appendScript(src, partnerId) {\n        var tag = document.createElement('script');\n        tag.src = src;\n        tag.id = partnerId;\n        var firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        return tag;\n    }\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/kaltura/kalturaUrlService.ts\n/**\n * Created by githop on 1/13/17.\n */\nkalturaUrlService.$inject = [];\nfunction kalturaUrlService() {\n    var _type = 'kaltura';\n    var _mimeType = 'video/x-' + _type;\n    return {\n        type: _type,\n        getMimeType: getMimeType,\n        canPlay: isKalturaUrl,\n        parseMediaSrc: parseMediaSrc,\n        getKalturaObject: getKalturaObject,\n        buildAutoEmbedURLFromKalturaObject: buildAutoEmbedURLFromKalturaObject,\n        parseInput: parseInput,\n        getOutgoingUrl: function () {\n        }\n    };\n    function getMimeType() {\n        return _mimeType;\n    }\n    function parseInput(input) {\n        return buildAutoEmbedURLFromKalturaObject(getKalturaObject(input), 1024, 768);\n    }\n    /**\n     * @name parseMediaSrc\n     * @methodOf iTT.service:kalturaUrlService\n     * @param {Array} mediaSrc array of media sources, could be a URL or embed code.\n     * @returns {Object} Object with type<String> and mediaSrcArr<Array> properties.\n     */\n    function parseMediaSrc(mediaSrc) {\n        return mediaSrc.reduce(function (parsedMediaObj, mediaSrc) {\n            if (isKalturaUrl(mediaSrc)) {\n                parsedMediaObj.mediaSrcArr.push(mediaSrc);\n            }\n            return parsedMediaObj;\n        }, { type: _type, mediaSrcArr: [] });\n    }\n    function isKalturaUrl(url) {\n        var keys = ['partnerId', 'uiconfId', 'entryId', 'uniqueObjId'];\n        var test = getKalturaObject(url);\n        return keys.every(function (k) {\n            return (test.hasOwnProperty(k) && test[k] != null); //jshint ignore:line\n        });\n    }\n    function getKalturaObject(input) {\n        var params = {};\n        var myArray = [];\n        var urlParams;\n        if (input == null) {\n            return {\n                partnerId: null,\n                uiconfId: null,\n                entryId: null,\n                uniqueObjId: null\n            };\n        }\n        if (input.substring(0, 7) === \"<script\") {\n            myArray = /^.*?src\\=.https?\\:\\/\\/(?:www|cdnapi|cdnapisec)\\.kaltura\\.com\\/p\\/(.*?)\\/sp\\/(.*?)00.*?\\/embedIframeJs\\/uiconf_id\\/(.*?)\\/partner_id\\/(.*?)\\?(.*?)\\\".*/g.exec(input);\n            if (myArray != null) {\n                params[\"partnerId\"] = myArray[1];\n                params[\"uiconfId\"] = myArray[3];\n                urlParams = parseUrlParams(myArray[5]);\n                params[\"entryId\"] = urlParams.entry_id;\n                params[\"uniqueObjId\"] = urlParams.playerId;\n            }\n            else {\n                params = getKalturaObjectFromDynamicEmbedCode(input);\n            }\n        }\n        else if (input.substring(0, 4) === \"<div\") {\n            params = getKalturaObjectFromDynamicEmbedCode(input);\n        }\n        else if (input.substring(0, 7) === \"<iframe\") {\n            myArray = /^.*?src\\=.https?\\:\\/\\/(?:www|cdnapi|cdnapisec)\\.kaltura\\.com\\/p\\/(.*?)\\/sp\\/(.*?)00.*?\\/embedIframeJs\\/uiconf_id\\/(.*?)\\/partner_id\\/(.*?)\\?(.*?)\\\".*/g.exec(input);\n            if (myArray != null) {\n                params[\"partnerId\"] = myArray[1];\n                params[\"uiconfId\"] = myArray[3];\n                urlParams = parseUrlParams(myArray[5]);\n                params[\"uniqueObjId\"] = urlParams.playerId;\n                params[\"entryId\"] = urlParams.entry_id;\n            }\n        }\n        else if (input.substring(0, 7) === \"<object\") {\n            myArray = /^.*\\n*?.*?id\\=.(.*?)\\\"(.*?\\n*)*?data\\=.*?https?\\:\\/\\/(?:www|cdnapi|cdnapisec)\\.kaltura\\.com\\/kwidget\\/wid\\/_(.*?)\\/uiconf_id\\/(.*?)\\/entry_id\\/(.*?)\\\".*/g.exec(input);\n            if (myArray != null) {\n                params[\"uniqueObjId\"] = myArray[1];\n                params[\"partnerId\"] = myArray[3];\n                params[\"uiconfId\"] = myArray[4];\n                params[\"entryId\"] = myArray[5];\n            }\n        }\n        else if (input.substring(0, 4) === \"http\") {\n            myArray = /^https?\\:\\/\\/(?:www|cdnapi|cdnapisec)\\.kaltura\\.com\\/p\\/(.*?)\\/sp\\/(.*?)00.*?\\/embedIframeJs\\/uiconf_id\\/(.*?)\\/partner_id\\/(.*?)\\?(.*)/g.exec(decodeURIComponent(input));\n            if (myArray != null) {\n                params[\"partnerId\"] = myArray[1];\n                params[\"uiconfId\"] = myArray[3];\n                urlParams = parseUrlParams(myArray[5]);\n                params[\"entryId\"] = urlParams.entry_id;\n                params[\"uniqueObjId\"] = urlParams.playerId;\n            }\n        }\n        else {\n            // console.log(\"Detected an invalid embed code\");\n        }\n        return params;\n    }\n    function buildAutoEmbedURLFromKalturaObject(kalturaObject, width, height) {\n        return \"https://cdnapisec.kaltura.com/p/\" + kalturaObject[\"partnerId\"] + \"/sp/\" + kalturaObject[\"partnerId\"] + \"00/embedIframeJs/uiconf_id/\" + kalturaObject[\"uiconfId\"] + \"/partner_id/\" + kalturaObject[\"partnerId\"] + \"?entry_id=\" + kalturaObject[\"entryId\"] + \"&playerId=\" + kalturaObject[\"uniqueObjId\"] + \"&autoembed=true&width=\" + width + \"&height=\" + height;\n    }\n    function parseUrlParams(urlParamsString) {\n        //Remove any trailing ampersand if there is one\n        if (urlParamsString.charAt(urlParamsString.length - 1) == '&') {\n            urlParamsString = urlParamsString.substr(0, urlParamsString.length - 1);\n        }\n        return JSON.parse('{\"' + urlParamsString.replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}');\n    }\n    function getKalturaObjectFromDynamicEmbedCode(embedCode) {\n        var params = {};\n        var myArray = /^(?:.|\\n|\\r)*?kWidget\\..*?mbed\\(({(?:.|\\n|\\r)*})\\).*?/g.exec(embedCode);\n        if (myArray != null) {\n            var kWidgetParams = JSON.parse(myArray[1]);\n            params[\"uniqueObjId\"] = kWidgetParams.targetId;\n            params[\"partnerId\"] = kWidgetParams.wid.substring(1);\n            params[\"uiconfId\"] = kWidgetParams.uiconf_id;\n            params[\"entryId\"] = kWidgetParams.entry_id;\n        }\n        return params;\n    }\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/youtube/YouTubePlayerManager.svc.ts\n/**\n * Created by githop on 12/3/15.\n */\n/**\n * @ngdoc service\n * @name iTT.service:youTubePlayerManager\n * @description\n * A service for working with youtube iframes\n * {@link https://github.com/InTheTelling/client/blob/master/app/scripts/services/YouTubePlayerManager.svc.js source}\n * @requires $location\n * @requires YoutubePlayerApi\n * @requires errorSvc\n * @requires PLAYERSTATES\n * @requires youtubeUrlService\n */\nyouTubePlayerManager.$inject = ['$location', 'ittUtils', 'YTScriptLoader', 'errorSvc', 'PLAYERSTATES', 'youtubeUrlService', 'playerManagerCommons'];\nfunction youTubePlayerManager($location, ittUtils, YTScriptLoader, errorSvc, PLAYERSTATES, youtubeUrlService, playerManagerCommons) {\n    var _youTubePlayerManager;\n    var _players = {};\n    var _mainPlayerId;\n    var _type = 'youtube';\n    var base = playerManagerCommons({ players: _players, type: _type });\n    var commonMetaProps = base.commonMetaProps;\n    var _youtubeMetaProps = {\n        ytId: '',\n        videoType: _type,\n        bufferInterval: null\n    };\n    var _youtubeMetaObj = {\n        instance: null,\n        meta: {}\n    };\n    angular.extend(_youtubeMetaObj.meta, _youtubeMetaProps, commonMetaProps);\n    var _validMetaKeys = Object.keys(_youtubeMetaObj.meta);\n    var predicate = function (pid) {\n        return (_existy(getPlayer(pid)) && getMetaProp(pid, 'ready') === true);\n    };\n    var destroyFn = function (pid) {\n        var p = getInstance(pid);\n        _tryCommand(p, 'destroy');\n    };\n    var youtubeEnding = function (pid) {\n        setMetaProp(pid, 'time', getMetaProp(pid, 'duration'));\n        ittUtils.ngTimeout(function () {\n            if (playerState(pid) !== 'ended') {\n                console.log('on ended state', playerState(pid));\n                stop(pid);\n            }\n        }, 500);\n    };\n    var getPlayer = base.getPlayer;\n    var setPlayer = base.setPlayer;\n    var getInstance = base.getInstance(predicate);\n    var createMetaObj = base.createMetaObj;\n    var getMetaObj = base.getMetaObj;\n    var getMetaProp = base.getMetaProp;\n    var setMetaProp = base.setMetaProp(_validMetaKeys);\n    var registerStateChangeListener = base.registerStateChangeListener;\n    var unregisterStateChangeListener = base.unregisterStateChangeListener;\n    var pauseOtherPlayers = base.pauseOtherPlayers(pause, playerState);\n    var getPlayerDiv = base.getPlayerDiv;\n    var resetPlayerManager = base.resetPlayerManager(destroyFn);\n    var renamePid = base.renamePid;\n    var handleTimelineEnd = base.handleTimelineEnd(youtubeEnding);\n    var waitForBuffering = ittUtils.ngTimeout;\n    var cancelBuffering = ittUtils.cancelNgTimeout;\n    var _getStateChangeListeners = base.getStateChangeListeners;\n    _youTubePlayerManager = {\n        type: _type,\n        getMetaProp: getMetaProp,\n        setMetaProp: setMetaProp,\n        getMetaObj: getMetaObj,\n        getPlayerDiv: getPlayerDiv,\n        pauseOtherPlayers: pauseOtherPlayers,\n        registerStateChangeListener: registerStateChangeListener,\n        unregisterStateChangeListener: unregisterStateChangeListener,\n        resetPlayerManager: resetPlayerManager,\n        renamePid: renamePid,\n        seedPlayerManager: seedPlayerManager,\n        create: create,\n        play: play,\n        pause: pause,\n        seekTo: seekTo,\n        getCurrentTime: getCurrentTime,\n        getPlayerState: playerState,\n        getBufferedPercent: getVideoLoadedFraction,\n        toggleMute: toggleMute,\n        setVolume: setVolume,\n        setSpeed: setSpeed,\n        setPlaybackQuality: setPlaybackQuality,\n        freezeMetaProps: angular.noop,\n        unFreezeMetaProps: angular.noop,\n        stop: stop,\n        handleTimelineEnd: handleTimelineEnd\n    };\n    //public methods\n    /**\n     * @ngdoc method\n     * @name #seedPlayerManager\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Used to set the PID / divID for a YT instance, is called prior to create()\n     * @param {String} id Main Video Asset ID or Event ID, for embeds\n     * @param {Boolean} mainPlayer Determines type of player, embed or main\n     * @param {Array} mediaSrcArr array of youtube URLs\n     * @returns {Vofid} returns void.\n     */\n    function seedPlayerManager(id, mainPlayer, mediaSrcArr) {\n        //bail if we already have set the instance in the _players map.\n        if (_existy(getPlayer(id)) && getMetaProp(id, 'startAtTime') > 0) {\n            return;\n        }\n        if (mainPlayer) {\n            // setPlayer(id, {});\n            _players = {};\n            _mainPlayerId = id;\n        }\n        var newProps = {\n            mainPlayer: mainPlayer,\n            div: _getPlayerDiv(id),\n            ytId: youtubeUrlService.extractYoutubeId(mediaSrcArr[0])\n        };\n        setPlayer(id, createMetaObj(newProps, _youtubeMetaObj));\n    }\n    /**\n     * @ngdoc method\n     * @name #create\n     * @methodOf iTT.service:youTubePlayerManager\n     * @param {String} playerId unique ID of player.\n     * @description\n     * Used to create an instance of the YT object which is necessary to\n     * interface with the youtube Iframe API\n     * @returns {void} has no return value\n     */\n    function create(playerId) {\n        var ytId = getMetaProp(playerId, 'ytId');\n        _createInstance(playerId, ytId, onPlayerStateChange, onPlayerQualityChange, onReady, onError)\n            .then(handleSuccess)\n            .catch(tryAgain);\n        function handleSuccess(ytInstance) {\n            getPlayer(playerId).instance = ytInstance;\n            setMetaProp(playerId, 'ytId', ytId);\n        }\n        function tryAgain() {\n            return _createInstance(playerId, ytId, onPlayerStateChange, onPlayerQualityChange, onReady, onError)\n                .then(handleSuccess)\n                .catch(handleFail);\n        }\n        function handleFail(e) {\n            var errorMsg = 'Network timeout initializing video player. Please try again.';\n            errorSvc.error({ data: errorMsg }, e);\n        }\n        //available 'states'\n        //YT.PlayerState.ENDED\n        //YT.PlayerState.PLAYING\n        //YT.PlayerState.PAUSED\n        //YT.PlayerState.BUFFERING\n        //YT.PlayerState.CUED\n        /**\n         * @private\n         * @ngdoc method\n         * @name onPlayerStateChange\n         * @methodOf iTT.service:youTubePlayerManager\n         * @description\n         * Event handler responsible responsible for handling events emitted from a youtube player instance\n         * Responsible for interaction between our app and youtube iframes. Toggles playback\n         * between main and embedded videos\n         * @param {Object} event an object with target and data properties with metadata regarding the event and\n         * player that emitted it.\n         * @returns {Void} has no return value\n         */\n        function onPlayerStateChange(event) {\n            var pid = _getPidFromInstance(event.target);\n            setMetaProp(pid, 'playerState', event.data);\n            var stateChangeEvent = _formatPlayerStateChangeEvent(event, pid);\n            var isBuffering = getMetaProp(pid, 'bufferInterval');\n            // console.log('YT PlayerState', PLAYERSTATES[event.data]);\n            if (event.data === YT.PlayerState.ENDED) {\n                event.target.stopVideo();\n            }\n            if (event.data === YT.PlayerState.BUFFERING) {\n                isBuffering = waitForBuffering(function () {\n                    if (event.target.getPlayerState() === YT.PlayerState.BUFFERING) {\n                        _reset(pid);\n                    }\n                }, 7 * 1000);\n                setMetaProp(pid, 'bufferInterval', isBuffering);\n            }\n            else {\n                cancelBuffering(isBuffering);\n            }\n            _emitStateChange(stateChangeEvent);\n        }\n        /**\n         * @private\n         * @ngdoc method\n         * @name onReady\n         * @methodOf iTT.service:youTubePlayerManager\n         * @description\n         * Event Handler called when YT instance is ready\n         * @param {Object} event an object with target and data properties with metadata regarding the event and\n         * player that emitted it.\n         * @returns {Void} has no return value\n         */\n        function onReady(event) {\n            var pid = _getPidFromInstance(event.target);\n            var playerReadyEv = _formatPlayerStateChangeEvent({ data: '6' }, pid);\n            setMetaProp(pid, 'duration', event.target.getDuration());\n            console.log('_reset duration!');\n            _emitStateChange(playerReadyEv);\n        }\n        /**\n         * @private\n         * @ngdoc method\n         * @name onPlayerQualityChange\n         * @methodOf iTT.service:youTubePlayerManager\n         * @description\n         * Event Handler called when changing playback quality\n         * @param {Object} event an object with target and data properties with metadata regarding the event and\n         * player that emitted it.\n         * @returns {Void} has no return value\n         */\n        function onPlayerQualityChange(event) {\n            var pid = _getPidFromInstance(event.target);\n            if (event.data === 'medium' && /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor)) {\n                setPlaybackQuality(pid, 'large');\n            }\n            // qualityChangeCB(event);\n        }\n        /**\n         * @private\n         * @ngdoc method\n         * @name onError\n         * @methodOf iTT.service:youTubePlayerManager\n         * @description\n         * Error Handler for youtube iframe API errors\n         * @param {Object} event an object with target and data properties with metadata regarding the event and\n         * player that emitted it.\n         * @returns {Void} has no return value\n         */\n        function onError(event) {\n            var brokePlayerPID = _getPidFromInstance(event.target);\n            if (event.data === 5) {\n                //only _reset for HTML5 player errors\n                console.warn('resetting for chrome!!!');\n                _reset(brokePlayerPID);\n            }\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #setSpeed\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * used to speed up / slow down the rate of video playback.\n     * @param {String} pid pid of player\n     * @param {Number} playbackRate the rate to set playback to.\n     * @returns {Void} returns void.\n     */\n    function setSpeed(pid, playbackRate) {\n        var p = getInstance(pid);\n        // getAvailablePlayBackRates returns an array of numbers, with at least 1 element; i.e. the default playback rate\n        if (_existy(p) && p.getAvailablePlaybackRates().length > 1) {\n            p.setPlaybackRate(playbackRate);\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #getCurrentTime\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Used to get the current time of youtube video.\n     * @param {String} pid The ID of the YT instance\n     * @returns {Number} The current time of video in seconds.\n     */\n    function getCurrentTime(pid) {\n        var p = getInstance(pid);\n        if (_existy(p)) {\n            return _tryCommand(p, 'getCurrentTime');\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #playerState\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Used to get the playerState of a YT instance. Possible states:\n     * -1 = unstarted\n     * 0 = ended,\n     * 1 = playing,\n     * 2 = paused,\n     * 3 = buffering,\n     * 5 = video cued\n     * @param {String} pid The ID of the YT instance\n     * @returns {Number} Int representing current player state.\n     */\n    function playerState(pid) {\n        var p = getInstance(pid);\n        if (_existy(p)) {\n            return PLAYERSTATES[_tryCommand(p, 'getPlayerState')];\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #play\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Used to resume playback\n     * @param {String} pid The ID of the YT instance\n     * @returns {Void} no return value\n     */\n    function play(pid) {\n        var p = getInstance(pid);\n        if (_existy(p)) {\n            _tryCommand(p, 'playVideo');\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #pause\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Used to pause playback\n     * @param {String} pid The ID of the YT instance\n     * @returns {Void} no return value\n     */\n    function pause(pid) {\n        var p = getInstance(pid);\n        // console.log('pause instance?', p);\n        if (_existy(p)) {\n            _tryCommand(p, 'pauseVideo');\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #stop\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Stops video playback and download of video stream\n     * @params pid The id of the player\n     * @returns {Void} no return value\n     */\n    function stop(pid) {\n        var p = getInstance(pid);\n        if (_existy(p)) {\n            _tryCommand(p, 'stopVideo');\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #setPlaybackQuality\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Used to pick a desired video quality\n     * @param {String} pid The ID of the YT instance\n     * @returns {Void} no return value\n     */\n    function setPlaybackQuality(pid, size) {\n        var p = getInstance(pid);\n        if (_existy(p)) {\n            p.setPlaybackQuality(size);\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #getVideoLoadedFraction\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Used to determine the percent of buffered video\n     * @param {String} pid The ID of the YT instance\n     * @returns {Number} Numerical value representing\n     * percent of video that is currently buffered\n     */\n    function getVideoLoadedFraction(pid) {\n        var p = getInstance(pid);\n        if (_existy(p)) {\n            return p.getVideoLoadedFraction() * 100;\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #seekTo\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Used to seek the video to a desired time in seconds. Note: On safari, if seekTo is called with a time where\n     * the video data is already available (i.e. we seek within our buffered range), the onStateChange event will\n     * not fire a 'buffering' event, or a 'playing' event after the seek has completed and the playback resumes.\n     *\n     * Since a seeking will stop our event clock from running, and a 'playing' event will not be fired when the seek\n     * operation is finished, we need to manually restart the event clock, which is done in the timelineSvc _tick\n     * function.\n     * @param {String} pid The ID of the YT instance\n     * @param {Number} t The desired time to seek to\n     * the server if the t (seconds) parameter specifies a time outside of the currently\n     * buffered video data\n     * @returns {Void} no return value\n     */\n    function seekTo(pid, t) {\n        var p = getInstance(pid);\n        var ytId = getMetaProp(pid, 'ytId');\n        var lastState = PLAYERSTATES[getMetaProp(pid, 'playerState')];\n        var currentState = playerState(pid);\n        if (_existy(p)) {\n            if (currentState === 'video cued') {\n                switch (lastState) {\n                    case 'paused':\n                    case 'playing':\n                        /* falls through */\n                        p.cueVideoById(ytId, t);\n                        break;\n                    case 'video cued':\n                        if (pid === _mainPlayerId) {\n                            //if we're in video cued and we are not restarting, e.g. seeking in the paused state\n                            //then we want to immediately pause after playback resumes.\n                            // (to get the correct frame of video visible)\n                            if (t > 0.1 && getMetaProp(pid, 'autoplay') === false) {\n                                //to ignore next play to not generate a false playing analytics\n                                registerStateChangeListener(_seekPauseListener);\n                            }\n                            _tryCommand(p, 'seekTo', t);\n                        }\n                        else {\n                            p.cueVideoById(ytId, t);\n                        }\n                        break;\n                }\n            }\n            else {\n                _tryCommand(p, 'seekTo', t, true);\n            }\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #toggleMute\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * toggles the mute on / off\n     * @param {String} pid the pid of the player\n     * @returns {Void} returns void.\n     */\n    function toggleMute(pid) {\n        var p = getInstance(pid);\n        if (p.isMuted()) {\n            p.unMute();\n            setMetaProp(pid, 'muted', false);\n        }\n        else {\n            p.mute();\n            setMetaProp(pid, 'muted', true);\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name #setVolume\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Setter for volume level\n     * @param {String} pid The ID of the YT instance\n     * @param {Number} v Number between 1 and 100\n     * @returns {Void} No return value.\n     */\n    function setVolume(pid, v) {\n        var p = getInstance(pid);\n        if (_existy(p)) {\n            p.setVolume(v);\n            setMetaProp(pid, 'volume', v);\n        }\n    }\n    //private methods\n    function _seekPauseListener(event) {\n        if (event.state === 'playing') {\n            unregisterStateChangeListener(_seekPauseListener);\n            pause(event.emitterId);\n        }\n    }\n    /**\n     * @ngdoc method\n     * @name _reset\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Used to _reset the player after detecting\n     * onError event.\n     * @params pid The id of the player\n     * @returns {Void} no return value\n     * @private\n     */\n    function _reset(pid) {\n        var instance = getInstance(pid);\n        var isMainPlayer = getMetaProp(pid, 'mainPlayer');\n        if (_existy(instance)) {\n            console.log('debug info', instance.getDebugText());\n            var videoId = instance.getVideoData().video_id;\n            var lastTime = instance.getCurrentTime();\n            if (isMainPlayer === true) {\n                instance.cueVideoById(videoId, lastTime);\n            }\n            else {\n                instance.loadVideoById(videoId, lastTime);\n            }\n        }\n    }\n    /**\n     * @private\n     * @ngdoc method\n     * @methodOf iTT.service:youTubePlayerManager\n     * @name _createInstance\n     * @param {string} divId the unique ID of the element on the DOM\n     * @param {string} videoID the youtube video ID\n     * @param {Function} stateChangeCB callback to register to youtube's 'onStateChange' playerVar\n     * @param {Function} qualityChangeCB callback to register to youtube's 'onQualityChange' playerVar\n     * @param {Function} onReadyCB callback to register to youtube's 'onReady' playerVar\n     * @param {Function} onError callback to register to youtube's 'onError' playerVar\n     * @returns {Object} instance of YT.Player\n     * @private\n     */\n    function _createInstance(divId, videoID, stateChangeCB, qualityChangeCB, onReadyCB, onError) {\n        var _controls = 1;\n        if (divId === _mainPlayerId) {\n            _controls = 0;\n        }\n        var host = $location.host();\n        return YTScriptLoader.load().then(function () {\n            return new YT.Player(divId, {\n                videoId: videoID,\n                //enablejsapi=1&controls=0&modestbranding=1&showinfo=0&rel=0&iv_load_policy=3&wmode=transparent\n                playerVars: {\n                    'controls': _controls,\n                    'fs': _controls,\n                    'enablejsapi': 1,\n                    'modestbranding': 1,\n                    'showinfo': 0,\n                    'rel': 0,\n                    'iv_load_policy': 3,\n                    'origin': host,\n                    'wmode': 'transparent'\n                },\n                events: {\n                    onReady: onReadyCB,\n                    onStateChange: stateChangeCB,\n                    onPlaybackQualityChange: qualityChangeCB,\n                    onError: onError\n                }\n            });\n        });\n    }\n    function _existy(x) {\n        return x != null; // jshint ignore:line\n    }\n    /**\n     * @private\n     * @ngdoc method\n     * @name _getPidFromInstance\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Used to retrieve a PID from a YT Instance\n     * @params {Object} ytInstance\n     * @returns {String} PID of YT Instance\n     */\n    function _getPidFromInstance(ytInstance) {\n        return ytInstance.getIframe().id;\n    }\n    /**\n     * @private\n     * @ngdoc method\n     * @name _formatPlayerStateChange\n     * @methodOf iTT.service:youTubePlayerManager\n     * @param {Object} event youtube's state change event object. has target and data props.\n     * @param {string} pid the PID of the player\n     * @returns {Object} Object with emiiterId and state props\n     * @private\n     */\n    function _formatPlayerStateChangeEvent(event, pid) {\n        return {\n            emitterId: pid,\n            state: PLAYERSTATES[event.data]\n        };\n    }\n    /**\n     * @private\n     * @ngdoc method\n     * @name _emitStateChange\n     * @methodOf iTT.service:youTubePlayerManager\n     * @param {Function} playerStateChange callback to fire\n     *@returns {Void} returns void 0.\n     */\n    function _emitStateChange(playerStateChange) {\n        _getStateChangeListeners().forEach(function (cb) {\n            cb(playerStateChange);\n        });\n    }\n    /**\n     * @private\n     * @ngdoc method\n     * @name _getPlayerDiv\n     * @methodOf iTT.service:youTubePlayerManager\n     * @param {string } id of the player\n     * @returns {string} HTML div with ID of player\n     */\n    function _getPlayerDiv(id) {\n        return '<div id=\"' + id + '\"></div>';\n    }\n    /**\n     * @private\n     * @ngdoc method\n     * @name _tryCommand\n     * @methodOf iTT.service:youTubePlayerManager\n     * @param {Object} instance of YT.Player\n     * @param {String} command string representation of method to invoke\n     * @param {String | Number} val the val to set\n     * @returns {Void |String | Number} returns void, or the getter value.\n     */\n    function _tryCommand(instance, command, val, bool) {\n        var returnVal;\n        try {\n            if (_existy(val) && _existy(bool)) {\n                instance[command](val, bool);\n            }\n            else if (_existy(val)) {\n                instance[command](val);\n            }\n            else {\n                //some getters return a value, i.e. getPlayerState\n                // console.log('hmm', instance, command);\n                returnVal = instance[command]();\n            }\n        }\n        catch (err) {\n            console.warn('error trying', command, 'with', instance[command], 'full error:', err);\n        }\n        if (_existy(returnVal)) {\n            return returnVal;\n        }\n    }\n    return _youTubePlayerManager;\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/youtube/youtubeScriptLoader.ts\n/**\n * Created by githop on 12/1/15.\n */\n/**\n * @ngdoc service\n * @name iTT.service:YTScriptLoader\n * @description\n * A service for downloading youtube player scripts\n * @requires $q\n * @requires $timeout\n */\nYTScriptLoader.$inject = ['$q', '$timeout'];\nfunction YTScriptLoader($q, $timeout) {\n    //allow 2 seconds download time per each try\n    //4 seconds total, as on first error, we retry\n    //see YoutubePlayerManager#create\n    var TIMEOUT = 2 * 1000;\n    return {\n        load: load\n    };\n    /**\n     * @ngdoc method\n     * @name #load\n     * @methodOf iTT.service:YTScriptLoader\n     * @description\n     * for injecting the youtube.com/iframe_api script which in turn async downloads\n     * www-widgetapi script\n     * @returns {Promise} returns Promise<Void>\n     */\n    function load() {\n        var doReject;\n        return $q(function (resolve, reject) {\n            doReject = $timeout(reject, TIMEOUT);\n            //check for YT global\n            if (typeof (YT) == 'undefined' || typeof (YT.Player) == 'undefined') {\n                var url = '//www.youtube.com/iframe_api';\n                var tag = document.createElement('script');\n                tag.src = url;\n                tag.id = 'yt-iframe-api';\n                var firstScriptTag = document.getElementsByTagName('script')[0];\n                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n            }\n            else {\n                //we have already fired onYoutubeIframeAPIReady\n                $timeout.cancel(doReject);\n                resolve();\n            }\n            window.onYouTubeIframeAPIReady = function () {\n                //youtube.com/iframe_api script will invoke\n                //this function after it downloads www-widgetapi script.\n                $timeout.cancel(doReject);\n                resolve();\n            };\n        });\n    }\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/youtube/youtubeUrlService.ts\nyoutubeUrlService.$inject = ['ittUtils'];\nfunction youtubeUrlService(ittUtils) {\n    var _existy = ittUtils.existy;\n    var _type = 'youtube';\n    var _mimeType = 'video/x-' + _type;\n    return {\n        type: _type,\n        getMimeType: getMimeType,\n        extractYoutubeId: extractYoutubeId,\n        isYoutubeUrl: isYoutubeUrl,\n        canPlay: isYoutubeUrl,\n        parseMediaSrc: parseMediaSrc,\n        embedParams: embedParams,\n        createEmbedLinkFromYoutubeId: createEmbedLinkFromYoutubeId,\n        embeddableYoutubeUrl: embeddableYoutubeUrl,\n        parseInput: embeddableYoutubeUrl,\n        getOutgoingUrl: getOutgoingUrl\n    };\n    function getMimeType() {\n        return _mimeType;\n    }\n    function getOutgoingUrl(url, startAt) {\n        url = embeddableYoutubeUrl(url, false);\n        if (_existy(startAt) && startAt > 0) {\n            url += '&start=' + startAt;\n        }\n        return url;\n    }\n    function extractYoutubeId(origUrl) {\n        if (!origUrl) {\n            return false;\n        }\n        origUrl = origUrl.replace(/%3F/, '?');\n        origUrl = origUrl.replace(/%26/, '&');\n        var getYoutubeID = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/i;\n        var ytMatch = origUrl.match(getYoutubeID);\n        return (ytMatch && ytMatch[1]) ? ytMatch[1] : false;\n    }\n    function isYoutubeUrl(origUrl) {\n        if (!origUrl) {\n            return false;\n        }\n        origUrl = origUrl.replace(/%3F/, '?');\n        origUrl = origUrl.replace(/%26/, '&');\n        var getYoutubeID = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/i;\n        return getYoutubeID.test(origUrl);\n    }\n    /**\n     *\n     * @param mediaSrcArr\n     * @return mediaSrcObj {type: string, mediaSrcArr: Array<String>}\n     */\n    function parseMediaSrc(mediaSrcArr) {\n        return mediaSrcArr.reduce(function (parsedMediaSrcObj, mediaSrc) {\n            if (isYoutubeUrl(mediaSrc)) {\n                parsedMediaSrcObj.mediaSrcArr.push(mediaSrc);\n            }\n            return parsedMediaSrcObj;\n        }, { type: 'youtube', mediaSrcArr: [] });\n    }\n    function embedParams(outgoing) {\n        // kept separate from createEmbedLinkFromYoutubeId for convenience in unit tests.\n        // TODO move these into videoController, as playerVar params, instead of embedding them in the url.  (Will need to init youtube as a div instead of as an iframe)\n        // WARN dont remove the wmode param, it works around an IE z-index bug\n        if (outgoing === false) {\n            //supported params available at https://developers.google.com/youtube/player_parameters\n            return \"?controls=1&autoplay=1&modestbranding=1&showinfo=1&rel=0&iv_load_policy=3&wmode=transparent\";\n        }\n        return \"?enablejsapi=1&controls=0&modestbranding=1&showinfo=0&rel=0&iv_load_policy=3&wmode=transparent\";\n    }\n    ;\n    function createEmbedLinkFromYoutubeId(ytid, suppressParams) {\n        if (!ytid) {\n            return false;\n        }\n        return \"//www.youtube.com/embed/\" + ytid + (suppressParams ? \"\" : embedParams(suppressParams));\n    }\n    ;\n    function embeddableYoutubeUrl(origUrl, suppressParams) {\n        if (!origUrl) {\n            return false;\n        }\n        var ytid = extractYoutubeId(origUrl);\n        return createEmbedLinkFromYoutubeId(ytid, suppressParams);\n    }\n    ;\n    // var parseRidiculousDurationFormat = function (input) {\n    // \tvar duration = 0;\n    // \tif (input.match(/(\\d*)D/)) {\n    // \t\tduration = duration + parseInt((input.match(/(\\d*)D/)[1] * 86400), 10);\n    // \t}\n    // \tif (input.match(/(\\d*)H/)) {\n    // \t\tduration = duration + parseInt((input.match(/(\\d*)H/)[1] * 3600), 10);\n    // \t}\n    // \tif (input.match(/(\\d*)M/)) {\n    // \t\tduration = duration + parseInt((input.match(/(\\d*)M/)[1] * 60), 10);\n    // \t}\n    // \tif (input.match(/(\\d*)S/)) {\n    // \t\tduration = duration + parseInt((input.match(/(\\d*)S/)[1]), 10);\n    // \t}\n    // \treturn duration;\n    // };\n    //\n    // var getVideoMetaData = function (id) {\n    // \tvar url = \"https://www.googleapis.com/youtube/v3/videos?id=\" + id + \"&part=contentDetails,snippet&key=\" + config.youtube.apikey;\n    // \tvar defer = $q.defer();\n    //\n    // \tvar timeoutPromise = $timeout(function () {\n    // \t\tdefer.reject(\"Youtube API request timed out\");\n    // \t}, config.youtube.timeout);\n    //\n    // \t$http({\n    // \t\tmethod: 'GET',\n    // \t\turl: url,\n    // \t\ttransformRequest: function (data, headersGetter) {\n    // \t\t\tvar headers = headersGetter();\n    // \t\t\tdelete headers.Authorization; // youtube no likey\n    // \t\t\treturn headers;\n    // \t\t}\n    // \t})\n    // \t\t.success(function (respData) {\n    // \t\t\t$timeout.cancel(timeoutPromise);\n    // \t\t\tdefer.resolve(respData);\n    // \t\t})\n    // \t\t.error(function () {\n    // \t\t\tdefer.reject();\n    // \t\t});\n    // \treturn defer.promise;\n    // };\n    // svc.getVideoData = function (id) {\n    // \tvar defer = $q.defer();\n    // \tgetVideoMetaData(id)\n    // \t\t.then(\n    // \t\t\tfunction (respData) {\n    // \t\t\t\tif (respData.items[0]) {\n    // \t\t\t\t\t//shelter ourselves from youtube api changes, by adapting their return to an internal format\n    // \t\t\t\t\tvar videoMetadata = {\n    // \t\t\t\t\t\tid: id,\n    // \t\t\t\t\t\t//thumbnail: \"//img.youtube.com/vi/\"+id+\"/default.jpg\",   (might be useful someday)\n    // \t\t\t\t\t\ttitle: respData.items[0].snippet.title,\n    // \t\t\t\t\t\tdescription: respData.items[0].snippet.description,\n    // \t\t\t\t\t\tduration: parseRidiculousDurationFormat(respData.items[0].contentDetails.duration)\n    // \t\t\t\t\t};\n    // \t\t\t\t\tdefer.resolve(videoMetadata);\n    // \t\t\t\t} else {\n    // \t\t\t\t\tconsole.log(\"Bad response data from youtube getVideoData\", respData);\n    // \t\t\t\t\tdefer.reject(\"Bad response data from youtube getVideoData\");\n    // \t\t\t\t}\n    // \t\t\t},\n    // \t\t\tfunction (reason) {\n    // \t\t\t\tconsole.log(\"Youtube getVideoData failed:\" + reason);\n    // \t\t\t\tdefer.reject(reason);\n    // \t\t\t}\n    // \t\t);\n    // \treturn defer.promise;\n    // };\n}\n\n// CONCATENATED MODULE: ./app/scripts/services/wistia/wistiaScriptLoader.ts\nvar WistiaScriptLoader = /** @class */ (function () {\n    function WistiaScriptLoader($q) {\n        this.$q = $q;\n        this.WISTIA_HREF = 'https://fast.wistia.com/assets/external/E-v1.js';\n    }\n    WistiaScriptLoader.prototype.load = function (assetId) {\n        var _this = this;\n        return this.$q(function (resolve) {\n            if (typeof Wistia === 'undefined') {\n                _this._appendScript(assetId, resolve);\n            }\n            else {\n                resolve();\n            }\n        });\n    };\n    WistiaScriptLoader.prototype._appendScript = function (id, resolve) {\n        var tag = document.createElement('script');\n        tag.setAttribute('src', this.WISTIA_HREF);\n        tag.setAttribute('type', 'text/javascript');\n        tag.setAttribute('async', '');\n        tag.id = id;\n        var firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentElement.insertBefore(tag, firstScriptTag);\n        tag.onload = resolve;\n    };\n    WistiaScriptLoader.$inject = ['$q'];\n    return WistiaScriptLoader;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/services/wistia/wistiaUrlService.ts\nvar WistiaUrlService = /** @class */ (function () {\n    function WistiaUrlService() {\n        this.type = 'wistia';\n        this.mimetype = \"video/x-\" + this.type;\n        this.embedUrl = 'http://fast.wistia.net/embed/iframe/';\n    }\n    // private parser = new DOMParser();\n    WistiaUrlService.prototype.getMimeType = function () {\n        return this.mimetype;\n    };\n    WistiaUrlService.prototype.parseMediaSrc = function (mediaSrcArr) {\n        return mediaSrcArr.reduce(function (pmo, mediaSrc) {\n            if (WistiaUrlService.isWistia(mediaSrc)) {\n                pmo.mediaSrcArr.push(mediaSrc);\n            }\n            return pmo;\n        }, { type: this.type, mediaSrcArr: [] });\n    };\n    //TODO: it looks like the embed code itself doesn't contain enough info to map it into a URL\n    // need to know provider_url aka domain\n    WistiaUrlService.prototype.parseInput = function (input) {\n        if (WistiaUrlService.isWistia(input)) {\n            //not an embed code, must already be a URL\n            if (!WistiaUrlService.isEmbed(input)) {\n                return input;\n            }\n        }\n    };\n    WistiaUrlService.prototype.extractId = function (input) {\n        //simple url input for now\n        if (WistiaUrlService.isWistia(input)) {\n            return WistiaUrlService.parseIdfromUrl(input);\n        }\n    };\n    WistiaUrlService.prototype.canPlay = function (input) {\n        return WistiaUrlService.isWistia(input);\n    };\n    WistiaUrlService.prototype.getOutgoingUrl = function (url, startAt) {\n        //use iframe embed url format.\n        var params = \"?autoplay=true&time=\" + startAt;\n        var videoId = WistiaUrlService.parseIdfromUrl(url);\n        var u = \"\" + videoId + params;\n        return this.embedUrl + u;\n    };\n    // private parseIdFromEmbedCode(embedCode: string) {\n    //   const doc = this.parser.parseFromString(embedCode, 'text/html');\n    //   const classes = doc.getElementsByClassName('wistia_embed')[0].className;\n    //   return classes.split('_').pop().split('_').pop();\n    // }\n    //expand eventually to work with embed codes as well as URLs\n    WistiaUrlService.isWistia = function (url) {\n        var re = /https?:\\/\\/(.+)?(wistia\\.com|wi\\.st)\\/.*/;\n        return re.test(url);\n    };\n    WistiaUrlService.isEmbed = function (input) {\n        return /<script/i.test(input);\n    };\n    WistiaUrlService.parseIdfromUrl = function (url) {\n        //id should be last in the path\n        var path = url.split('/');\n        return path[path.length - 1];\n    };\n    return WistiaUrlService;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/services/basePlayerManager/basePlayerManager.ts\n\n\nvar basePlayerManager_BasePlayerManager = /** @class */ (function () {\n    function BasePlayerManager() {\n        this.players = {};\n        this.statechangeCallbacks = [];\n    }\n    BasePlayerManager.createMetaObj = function (newProps) {\n        var metaObj = {\n            instance: null,\n            meta: Object.assign({}, commonMetaProps)\n        };\n        Object.assign(commonMetaProps, newProps);\n        Object.assign(metaObj.meta, commonMetaProps);\n        return metaObj;\n    };\n    BasePlayerManager.prototype.getPlayer = function (pid) {\n        if (existy(this.players[pid])) {\n            return this.players[pid];\n        }\n    };\n    BasePlayerManager.prototype.setInstance = function (pid, instance) {\n        var player = this.getPlayer(pid);\n        if (existy(player)) {\n            player.instance = instance;\n        }\n    };\n    BasePlayerManager.prototype.setPlayer = function (pid, val) {\n        this.players[pid] = val;\n        // console.log('setPlayer', this.players[pid], pid);\n    };\n    BasePlayerManager.prototype.getMetaProp = function (pid, prop) {\n        var player = this.getPlayer(pid);\n        if (existy(player) && existy(player.meta)) {\n            return player.meta[prop];\n        }\n    };\n    BasePlayerManager.prototype.setMetaProp = function (pid, prop, val) {\n        if (existy(this.players[pid]) && this.players[pid].meta) {\n            try {\n                this.players[pid].meta[prop] = val;\n            }\n            catch (e) {\n                console.log('catch read only error:', e, 'prop', prop, 'val', val);\n            }\n        }\n    };\n    BasePlayerManager.prototype.getPlayerDiv = function (pid) {\n        return this.getMetaProp(pid, 'div');\n    };\n    //must be overridden\n    BasePlayerManager.prototype.getPlayerState = function (pid) {\n        return '';\n    };\n    //must be overridden\n    BasePlayerManager.prototype.pause = function (pid) {\n        //noop;\n    };\n    BasePlayerManager.prototype.stop = function (pid) {\n        //noop\n    };\n    BasePlayerManager.prototype.freezeMetaProps = function (pid) { };\n    BasePlayerManager.prototype.unFreezeMetaProps = function (pid) { };\n    BasePlayerManager.prototype.pauseOtherPlayers = function (pid) {\n        var _this = this;\n        Object.keys(this.players).forEach(function (playerId) {\n            if (playerId !== pid) {\n                var otherPlayerState = _this.getPlayerState(playerId);\n                if (existy(otherPlayerState)) {\n                    if (otherPlayerState === 'playing') {\n                        _this.pause(playerId);\n                    }\n                }\n            }\n        });\n    };\n    BasePlayerManager.prototype.registerStateChangeListener = function (cb) {\n        var found = this.statechangeCallbacks.find(function (listener) {\n            return cb.toString() === listener.toString();\n        });\n        if (!found) {\n            this.statechangeCallbacks.push(cb);\n        }\n    };\n    BasePlayerManager.prototype.unregisterStateChangeListener = function (cb) {\n        this.statechangeCallbacks = this.statechangeCallbacks.filter(function (fn) {\n            return fn.toString !== cb.toString();\n        });\n    };\n    BasePlayerManager.prototype.renamePid = function (oldName, newName) {\n        renameKey(oldName, newName, this.players);\n    };\n    BasePlayerManager.prototype.handleTimelineEnd = function (pid) {\n        //noop;\n    };\n    BasePlayerManager.prototype.resetPlayerManager = function () {\n        var _this = this;\n        Object.keys(this.players)\n            .forEach(function (key) {\n            _this.destroyInstance(key, true);\n        });\n        this.players = {};\n    };\n    BasePlayerManager.prototype.destroyInstance = function (pid, doRemove) {\n        if (!existy(doRemove)) {\n            doRemove = false;\n        }\n        this.destroySideEffects(pid);\n        if (doRemove === true) {\n            this.setPlayer(pid, {});\n        }\n    };\n    BasePlayerManager.prototype.destroySideEffects = function (pid) {\n        //noop;\n    };\n    return BasePlayerManager;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/services/playbackService/index.ts\n/**\n * Created by githop on 4/14/17.\n */\nvar PLAYERSTATES = {\n    '-1': 'unstarted',\n    '0': 'ended',\n    '1': 'playing',\n    '2': 'paused',\n    '3': 'buffering',\n    '5': 'video cued',\n    '4': 'quality changed',\n    '6': 'player ready'\n};\nvar PLAYERSTATES_WORD = {\n    'unstarted': '-1',\n    'ended': '0',\n    'playing': '1',\n    'paused': '2',\n    'buffering': '3',\n    'quality changed': '4',\n    'video cued': '5',\n    'player ready': '6'\n};\n\n// CONCATENATED MODULE: ./app/scripts/services/wistia/wistiaPlayerManager.ts\nvar wistiaPlayerManager___extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\nvar WISTIA_PLAYERSTATES = {\n    'playing': 'playing',\n    'paused': 'paused',\n    'beforeplay': 'unstarted',\n    'ended': 'ended'\n};\nvar wistiaMetaProps = {\n    videoType: 'wistia',\n    lastVol: 100,\n    bufferingInterval: null,\n    lastVideoTime: 0\n};\n/*\n  wistia PM with inheritance\n */\nvar wistiaPlayerManager_WistiaPlayerManager = /** @class */ (function (_super) {\n    wistiaPlayerManager___extends(WistiaPlayerManager, _super);\n    function WistiaPlayerManager($interval, wistiaScriptLoader, wistiaUrlService) {\n        var _this = _super.call(this) || this;\n        _this.$interval = $interval;\n        _this.wistiaScriptLoader = wistiaScriptLoader;\n        _this.wistiaUrlService = wistiaUrlService;\n        _this.type = 'wistia';\n        _this._bufferCheckIntervalLength = 100;\n        return _this;\n    }\n    WistiaPlayerManager.setPlayerDiv = function (pid, wistiaId) {\n        // use just CSS and no videoFoam to attempt to fix NP-1373\n        // https://wistia.com/doc/embedding#responsive_design_with_inline_embeds\n        return \"\\n<div class=\\\"wistia_responsive_padding\\\" style=\\\"padding:56.25% 0 0 0;position:relative;\\\">\\n  <div class=\\\"wistia_responsive_wrapper\\\" style=\\\"height:100%;left:0;position:absolute;top:0;width:100%;\\\">\\n    <div id=\\\"\" + pid + \"\\\" class=\\\"wistia_embed wistia_async_\" + wistiaId + \"\\\" style=\\\"height:100%;width:100%\\\">&nbsp;</div>\\n  </div>\\n</div>\\n\";\n    };\n    WistiaPlayerManager.formatStateChangeEvent = function (state, emitterId) {\n        return {\n            emitterId: emitterId,\n            state: PLAYERSTATES[state]\n        };\n    };\n    WistiaPlayerManager.prototype.seedPlayerManager = function (id, mainPlayer, mediaSrcArr) {\n        if (existy(this.getPlayer(id)) && this.getMetaProp(id, 'startAtTime') > 0) {\n            return;\n        }\n        if (mainPlayer) {\n            this.players = {};\n            this.mainPlayerId = id;\n        }\n        var wistiaId = this.wistiaUrlService.extractId(mediaSrcArr[0]);\n        var newProps = __assign({ mainPlayer: mainPlayer, div: WistiaPlayerManager.setPlayerDiv(id, wistiaId), wistiaId: wistiaId }, wistiaMetaProps);\n        this.setPlayer(id, WistiaPlayerManager.createMetaObj(newProps));\n    };\n    WistiaPlayerManager.prototype.create = function (pid) {\n        var _this = this;\n        this.createWpInstance(pid)\n            .then(function (_) {\n            var threshold = 1.0;\n            var seekThreshold = 2.0;\n            // amount of seconds to allow the wistia time and the timeline to differ before emitting a buffering event.\n            var interval = _this.$interval(function () {\n                var lastReportedTime = _this.getMetaProp(pid, 'lastVideoTime');\n                var timelineTime = _this.getMetaProp(pid, 'time');\n                var diff = timelineTime - lastReportedTime;\n                // only buffer if we are off by values between 1 and 2 to avoid accidentally triggering a buffering state\n                // when this interval fires in between seek starting and completing.\n                if (diff >= threshold && diff <= seekThreshold) {\n                    _this.setMetaProp(pid, 'playerState', 3);\n                    _this.setMetaProp(pid, 'time', lastReportedTime);\n                    _this.emitStateChange(pid);\n                }\n            }, _this._bufferCheckIntervalLength);\n            _this.setMetaProp(pid, 'bufferingInterval', interval);\n        });\n    };\n    WistiaPlayerManager.prototype.getPlayerState = function (pid) {\n        var instance = this.getInstance(pid);\n        if (instance) {\n            return WISTIA_PLAYERSTATES[instance.state()];\n        }\n    };\n    WistiaPlayerManager.prototype.getBufferedPercent = function (pid) {\n        /*\n         it doesn't appear that wistia has ways to get\n         info on buffered ranges, need to do more research.\n         */\n        return 0;\n    };\n    WistiaPlayerManager.prototype.getCurrentTime = function (pid) {\n        return this.invokeMethod(pid, 'time');\n    };\n    WistiaPlayerManager.prototype.play = function (pid) {\n        this.invokeMethod(pid, 'play');\n    };\n    WistiaPlayerManager.prototype.pause = function (pid) {\n        this.invokeMethod(pid, 'pause');\n    };\n    WistiaPlayerManager.prototype.seekTo = function (pid, t) {\n        this.invokeMethod(pid, 'time', t);\n    };\n    WistiaPlayerManager.prototype.setSpeed = function (pid, rate) {\n        //noop\n        this.invokeMethod(pid, 'playbackRate', rate);\n    };\n    WistiaPlayerManager.prototype.toggleMute = function (pid) {\n        var isMuted = this.getMetaProp(pid, 'muted');\n        if (isMuted === false) {\n            this.setMetaProp(pid, 'lastVol', this.getMetaProp(pid, 'volume'));\n            this.setVolume(pid, 0);\n        }\n        else {\n            this.setVolume(pid, this.getMetaProp(pid, 'lastVol'));\n        }\n        this.setMetaProp(pid, 'muted', !isMuted);\n    };\n    WistiaPlayerManager.prototype.setVolume = function (pid, v) {\n        this.invokeMethod(pid, 'volume', v / 100);\n        this.setMetaProp(pid, 'volume', v);\n    };\n    WistiaPlayerManager.prototype.destroySideEffects = function (pid) {\n        //noop;\n        this.$interval.cancel(this.getMetaProp(pid, 'bufferingInterval'));\n    };\n    WistiaPlayerManager.prototype.invokeMethod = function (pid, method, val) {\n        var instance = this.getInstance(pid);\n        if (existy(instance)) {\n            try {\n                if (existy(val)) {\n                    return instance[method](val);\n                }\n                else {\n                    return instance[method]();\n                }\n            }\n            catch (e) {\n                console.log('error trying', method, 'with', instance[method], 'error:', e);\n            }\n        }\n    };\n    WistiaPlayerManager.prototype.getInstance = function (pid) {\n        if (existy(this.getPlayer(pid)) && this.getMetaProp(pid, 'ready') === true) {\n            return this.getPlayer(pid).instance;\n        }\n    };\n    WistiaPlayerManager.prototype.createWpInstance = function (pid) {\n        var _this = this;\n        var isEmbed = this.mainPlayerId !== pid;\n        var wistiaEmbedOptions = {\n            playbar: isEmbed,\n            videoFoam: false,\n            fullscreenButton: isEmbed,\n            controlsVisibleOnLoad: isEmbed,\n            playbackRateControl: isEmbed,\n            playButton: isEmbed,\n            settingsControl: isEmbed,\n            qualityControl: isEmbed,\n            smallPlayButton: isEmbed,\n            volumeControl: isEmbed\n        };\n        return this.wistiaScriptLoader.load(pid)\n            .then(function (_) {\n            window.wistiaInitQueue = window.wistiaInitQueue || [];\n            window.wistiaInitQueue.push({\n                id: pid,\n                options: wistiaEmbedOptions,\n                onReady: function (video) { return _this.onReady(pid, video); }\n            });\n        });\n    };\n    WistiaPlayerManager.prototype.onReady = function (pid, wistiaInstance) {\n        this.setInstance(pid, wistiaInstance);\n        this.attachEventListeners(wistiaInstance, pid);\n        this.emitStateChange(pid, 6);\n        this.setMetaProp(pid, 'duration', wistiaInstance.duration());\n    };\n    WistiaPlayerManager.prototype.attachEventListeners = function (instance, pid) {\n        var _this = this;\n        //arrow fn so 'this' is preserved\n        //in the final closure\n        var bindPid = function (playerId) {\n            return function (fn) {\n                var ev = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    ev[_i - 1] = arguments[_i];\n                }\n                return fn.call.apply(fn, [_this, playerId].concat(ev));\n            };\n        };\n        var boundPid = bindPid(pid);\n        var wistiaEvents = {\n            'play': function (e) { return boundPid(_this.onPlay); },\n            'pause': function (e) { return boundPid(_this.onPause); },\n            'seek': function (currentTime, lastTime) { return boundPid(_this.onSeek, currentTime, lastTime); },\n            'timechange': function (e) { return boundPid(_this.onTimechange, e); }\n        };\n        Object.entries(wistiaEvents).forEach(function (_a) {\n            var key = _a[0], val = _a[1];\n            instance.bind(key, val);\n        });\n    };\n    WistiaPlayerManager.prototype.onTimechange = function (pid, timechange) {\n        // check for drift and correct if necessary\n        var curTime = this.getMetaProp(pid, 'time');\n        this.setMetaProp(pid, 'lastVideoTime', timechange);\n        if (curTime > timechange) {\n            this.setMetaProp(pid, 'time', timechange);\n        }\n    };\n    WistiaPlayerManager.prototype.onSeek = function (pid, currentTime, lastTime) {\n        var duration = this.getMetaProp(pid, 'duration');\n        var padding = 0.3;\n        this.setMetaProp(pid, 'time', currentTime);\n        this.setMetaProp(pid, 'lastVideoTime', currentTime);\n        // handle nextScene near end of episode\n        if (Math.floor(duration - currentTime) < padding) {\n            this.setMetaProp(pid, 'playerState', 0);\n            this.emitStateChange(pid);\n            return;\n        }\n    };\n    WistiaPlayerManager.prototype.onPlay = function (pid) {\n        this.setMetaProp(pid, 'playerState', 1);\n        this.emitStateChange(pid);\n        if (pid !== this.mainPlayerId && this.getPlayerState(pid) !== 'unstarted') {\n            this.pauseOtherPlayers(pid);\n        }\n    };\n    WistiaPlayerManager.prototype.onPause = function (pid) {\n        this.setMetaProp(pid, 'playerState', 2);\n        this.emitStateChange(pid);\n    };\n    WistiaPlayerManager.prototype.emitStateChange = function (pid, forceState) {\n        var state;\n        if (existy(forceState)) {\n            state = forceState;\n        }\n        else {\n            state = this.getMetaProp(pid, 'playerState');\n        }\n        this.statechangeCallbacks.forEach(function (cb) {\n            cb(WistiaPlayerManager.formatStateChangeEvent(state, pid));\n        });\n    };\n    WistiaPlayerManager.$inject = ['$interval', 'wistiaScriptLoader', 'wistiaUrlService'];\n    return WistiaPlayerManager;\n}(basePlayerManager_BasePlayerManager));\n\n\n// CONCATENATED MODULE: ./app/scripts/services/wistia/index.ts\n/**\n * Created by githop on 4/12/17.\n */\n\n\n\n\n\n// CONCATENATED MODULE: ./app/scripts/services/uploadsService.ts\n/**\n * Created by githop on 6/6/17.\n */\n//so the upload progess state is not coupled to a component.\nvar UploadsService = /** @class */ (function () {\n    function UploadsService($q, awsSvc) {\n        this.$q = $q;\n        this.awsSvc = awsSvc;\n        // uploadsDisplay: IUploadData[];\n        this.uploadsDisplay = {\n            social_image_square: null,\n            social_image_wide: null\n        };\n        this.uploadQueue = [];\n    }\n    UploadsService.prototype.uploadTaggedFiles = function (fileLists, containerId) {\n        var _this = this;\n        return this.$q(function (resolve, reject) {\n            for (var _i = 0, fileLists_1 = fileLists; _i < fileLists_1.length; _i++) {\n                var _a = fileLists_1[_i], file = _a.file, tag = _a.tag;\n                _this.uploadsDisplay[tag] = {\n                    'bytesSent': 0,\n                    'bytesTotal': 1,\n                    'percent': 0,\n                    'name': file[0].name\n                };\n                _this.uploadQueue.push(_this.uploadToAws(containerId, file, tag));\n            }\n            return _this.$q.all(_this.uploadQueue)\n                .then(function (data) { return resolve(data); })\n                .catch(function (e) { return reject(e); });\n        });\n    };\n    UploadsService.prototype.resetUploads = function () {\n        this.uploadsDisplay = {\n            social_image_square: null,\n            social_image_wide: null\n        };\n        this.uploadQueue = [];\n    };\n    UploadsService.prototype.uploadToAws = function (containerId, fileList, tagType) {\n        var _this = this;\n        return this.awsSvc.uploadContainerFiles(containerId, fileList, tagType)[0]\n            .then(function (asset) { return asset; })\n            .catch(function (e) { return console.error('upload error', e); })\n            .finally(null, function (progress) {\n            _this.uploadsDisplay[tagType].bytesSent = progress.bytesSent;\n            _this.uploadsDisplay[tagType].bytesTotal = progress.bytesTotal;\n            _this.uploadsDisplay[tagType].percent = Math.ceil(progress.bytesSent / progress.bytesTotal * 100);\n        });\n    };\n    UploadsService.$inject = ['$q', 'awsSvc'];\n    return UploadsService;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/services/validation.svc.ts\nvar ValidationService = /** @class */ (function () {\n    function ValidationService($http, $location, $q, authSvc, config, ittUtils, urlService) {\n        this.$http = $http;\n        this.$location = $location;\n        this.$q = $q;\n        this.authSvc = authSvc;\n        this.config = config;\n        this.ittUtils = ittUtils;\n        this.urlService = urlService;\n    }\n    ValidationService.parseCSP = function (csp) {\n        if (csp != null) {\n            return csp.split(';').reduce(function (result, directive) {\n                var directiveSet = directive.trim().split(/\\s+/g);\n                var key = directiveSet.shift();\n                if (key) {\n                    result[key] = directiveSet;\n                }\n                return result;\n            }, {});\n        }\n    };\n    ValidationService.prototype.checkXFrameOpts = function (url) {\n        var _this = this;\n        var encodedUrl = encodeURIComponent(url);\n        //HTTP methods could one day be implemented in a parent class.\n        return this.SANE_GET('/x_frame_options_proxy?url=' + encodedUrl)\n            .then(function (resp) { return _this.handleSuccess(resp); })\n            .then(function (result) { return _this.canEmbed(result, url); })\n            .catch(function (e) { return ValidationService.handleErrors(e); });\n    };\n    ValidationService.prototype.urlIsEmbeddable = function (url, cspOrXFrameHeader) {\n        var xFrameCanEmbed = this.xFrameHeaderCanEmbed(url, cspOrXFrameHeader.x_frame_options);\n        var cspCanEmbed = this.cspCanEmbed(url, cspOrXFrameHeader.content_security_policy);\n        return xFrameCanEmbed && cspCanEmbed;\n    };\n    ValidationService.prototype.mixedContent = function (viewVal, displayObj) {\n        if (this.mixedContentUrl(viewVal)) {\n            //mixed content detected!\n            displayObj.validatedFields['mixedContent'] = { message: 'Mixed Content Detected', showInfo: true };\n            return true;\n        }\n        else {\n            displayObj.validatedFields['mixedContent'] = { message: '', showInfo: false };\n            return false;\n        }\n    };\n    ValidationService.prototype.mixedContentUrl = function (url) {\n        return this.ittUtils.existy(url) && /^http:\\/\\//.test(url);\n    };\n    ValidationService.prototype.validateUrl = function (viewVal, displayObj) {\n        var isValidVideoUrl = this.urlService.isVideoUrl(viewVal)\n            || this.ittUtils.isValidURL(viewVal)\n            || ValidationService.emailOrPlaceholder(viewVal);\n        if (viewVal === '' && !ValidationService.emailOrPlaceholder(viewVal)) {\n            displayObj.validatedFields['url'] = { showInfo: true, message: 'Url cannot be blank' };\n            return false;\n        }\n        else if (isValidVideoUrl) {\n            displayObj.validatedFields['url'] = { showInfo: false };\n            return true;\n        }\n        else {\n            displayObj.validatedFields['url'] = { showInfo: true, message: viewVal + ' is not a valid URL' };\n            return false;\n        }\n    };\n    ValidationService.prototype.inspectHeadersAsync = function (viewVal, displayObj, cachedResults, context) {\n        var _this = this;\n        if (cachedResults != null) {\n            return this.$q(function (resolve) {\n                var xFrameOptsObj = {\n                    canEmbed: _this.urlIsEmbeddable(viewVal, cachedResults),\n                    location: cachedResults.location,\n                    urlStatus: {\n                        content_security_policy: cachedResults.content_security_policy,\n                        x_frame_options: cachedResults.x_frame_options,\n                        response_code: cachedResults.response_code,\n                        err: cachedResults.err\n                    }\n                };\n                var obj = _this.handleXframeOptsObj(viewVal, xFrameOptsObj, displayObj);\n                return resolve(obj);\n            });\n        }\n        //bail out if empty or link to youtube/kaltura/html5 video, mixed content, email or placeholder val\n        if (viewVal === '' || this.urlService.isVideoUrl(viewVal) || ValidationService.emailOrPlaceholder(viewVal)) {\n            return this.$q(function (resolve) {\n                displayObj.validatedFields['iframeHeaders'] = { showInfo: false };\n                var stubXFOR = {\n                    canEmbed: true,\n                    location: null,\n                    urlStatus: {\n                        content_security_policy: null, x_frame_options: null, response_code: null, err: null\n                    }\n                };\n                if (_this.urlService.checkUrl(viewVal).type === 'kaltura') {\n                    stubXFOR.location = _this.urlService.parseInput(viewVal);\n                }\n                return resolve(stubXFOR);\n            });\n        }\n        return this.checkXFrameOpts(viewVal)\n            .then(function (xFOResult) { return _this.handleXframeOptsObj(viewVal, xFOResult, displayObj); });\n    };\n    ValidationService.emailOrPlaceholder = function (val) {\n        return /mailto:/.test(val) || val === 'https://';\n    };\n    ValidationService.handleErrors = function (error) {\n        console.warn('xFrameOpts error:', error);\n        return { canEmbed: false };\n    };\n    ValidationService.prototype.cspCanEmbed = function (url, csp) {\n        //frame-ancestors: null -> true\n        //frame-ancestors: 'self' - url contains host domain -> true\n        //frame-ancestors: sources-list contains host domain -> true\n        //frame-ancestors: 'none' -> false\n        if (csp == null) {\n            return true;\n        }\n        var cspObj = ValidationService.parseCSP(csp);\n        var ancestorSourceList = cspObj['frame-ancestors'];\n        if (ancestorSourceList == null || ancestorSourceList.length === 0) {\n            return true;\n        }\n        else {\n            var currentHost = this.$location.host();\n            //handle 'self', 'none' or a frame-ancestor list with only 1 member.\n            if (ancestorSourceList.length === 1) {\n                var onlyAncestor = ancestorSourceList[0];\n                //if CSP is self and the URL is our own, or the only frame-ancestor comes from our own\n                if ((onlyAncestor === '\\'self\\'' && url.includes(currentHost)) || onlyAncestor.includes(currentHost)) {\n                    return true;\n                }\n                if (onlyAncestor === '\\'none\\'') {\n                    return false;\n                }\n            }\n            //loop over list of sources\n            for (var _i = 0, ancestorSourceList_1 = ancestorSourceList; _i < ancestorSourceList_1.length; _i++) {\n                var source = ancestorSourceList_1[_i];\n                if (source.includes(currentHost)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    };\n    ValidationService.prototype.xFrameHeaderCanEmbed = function (url, header) {\n        var canEmbed = false;\n        if (header == null || header === 'null') {\n            return true;\n        }\n        switch (true) {\n            case /SAMEORIGIN/i.test(header):\n                var currentOrigin_1 = this.$location.host();\n                var parseInputUrl = document.createElement('a');\n                parseInputUrl.href = url;\n                //check our origin\n                if (currentOrigin_1 === parseInputUrl.hostname) {\n                    canEmbed = true;\n                }\n                break;\n            case /ALLOW-FROM/i.test(header):\n                //check if we're on the list\n                //split on comma to get CSV array of strings; e.g: [\"ALLOW-FROM: <url>\", \" ALLOW-FROM: <url>\", ...]\n                var xFrameArr = header.split(',');\n                currentOrigin_1 = this.$location.host();\n                angular.forEach(xFrameArr, function (i) {\n                    var url = i.trim().split(' ')[1];\n                    var aElm = document.createElement('a');\n                    aElm.href = url;\n                    if (currentOrigin_1 === aElm.hostname) {\n                        canEmbed = true;\n                    }\n                });\n                break;\n            case /DENY/i.test(header):\n                //do nothing\n                break;\n        }\n        return canEmbed;\n    };\n    ValidationService.prototype.handleXframeOptsObj = function (viewVal, XFOResult, // tslint:disable-line\n        displayObj) {\n        var tipText = '';\n        if (this.ittUtils.existy(XFOResult.location)) {\n            tipText = viewVal + ' redirected to ' + XFOResult.location;\n            displayObj.validatedFields['301'] = {\n                showInfo: true,\n                message: tipText,\n                doInfo: true\n            };\n        }\n        if (this.ittUtils.existy(XFOResult.urlStatus.response_code) && XFOResult.urlStatus.response_code === 422) {\n            tipText = viewVal + ' cannot be found';\n            displayObj.validatedFields['404'] = { showInfo: true, message: tipText };\n            return this.$q.reject('404');\n        }\n        if (XFOResult.urlStatus.err != null && XFOResult.urlStatus.response_code !== 999) {\n            displayObj.validatedFields['iframeHeaders'] = {\n                showInfo: true,\n                message: viewVal + ' cannot be embedded: ' + XFOResult.urlStatus.err\n            };\n        }\n        else if (!XFOResult.canEmbed && !this.mixedContentUrl(viewVal)) {\n            tipText = 'Embedded link template is disabled because ' + viewVal + ' does not allow iframing';\n            //we got redirected to resource that can't be embedded.\n            //merge the errors into one.\n            if (XFOResult.location) {\n                tipText += '. ' + displayObj.validatedFields['301'].message;\n                displayObj.validatedFields['301'] = {};\n            }\n            displayObj.validatedFields['iframeHeaders'] = { showInfo: true, message: tipText, doInfo: true };\n        }\n        else {\n            displayObj.validatedFields['iframeHeaders'] = { showInfo: false };\n        }\n        return XFOResult;\n    };\n    ValidationService.prototype.handleSuccess = function (result) {\n        //result could have response_code, location, or x_frame_options fields.\n        //not null, so normalize string\n        if (this.ittUtils.existy(result.x_frame_options)) {\n            result.x_frame_options = result.x_frame_options.toUpperCase();\n        }\n        // console.log('x-frame-opts: ', result);\n        return result;\n    };\n    ValidationService.prototype.canEmbed = function (result, url) {\n        var urlStatus = {\n            content_security_policy: result.content_security_policy,\n            x_frame_options: result.x_frame_options,\n            err: result.err,\n            response_code: result.response_code\n        };\n        var xFrameOptsObj = Object.create(null);\n        var location = result.location;\n        if (result.response_code === 999) {\n            xFrameOptsObj.canEmbed = false;\n        }\n        else {\n            xFrameOptsObj.canEmbed = this.urlIsEmbeddable(url, result);\n        }\n        Object.assign(xFrameOptsObj, { location: location }, { urlStatus: urlStatus });\n        return xFrameOptsObj;\n    };\n    ValidationService.prototype.SANE_GET = function (path) {\n        var _this = this;\n        return this.authSvc.authenticate()\n            .then(function () {\n            return _this.$http.get(_this.config.apiDataBaseUrl + path)\n                .then(function (resp) {\n                return resp.data;\n            });\n        });\n    };\n    ValidationService.$inject = ['$http', '$location', '$q', 'authSvc', 'config', 'ittUtils', 'urlService'];\n    return ValidationService;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/services/analyticsSvc/analyticsSvc.ts\n/*\n There are two separate types of user activity to capture, which go to separate API endpoints.\n Some types must contain additional info in a \"data\" object:\n\n episode activity:\n episodeLoad\t\t\t\t\ttriggered immediately when episode is loaded\n episodeUnload        triggered immediately when episode is navigated away from.\n episodeEnd\t\t\t\t\ttriggered when user reaches end of episode\n play\t\t\t\t\t\t\t\ttriggered when user hits play\n pause\t\t\t\t\t\t\t\ttriggered when user hits pause\n seek\t\t\t\t\t\t\t\ttriggered whenever user changes the playhead position.\n seekFrom:\ttimestamp of origin\n method:\t\t\"scrubTimeline\", \"sceneMenu\", \"nextScene\", \"prevScene\", \"clickedOnEvent\".\n eventID:\tinclude if method was \"clickedOnEvent\"\n modeChange\t\t\t\t\ttriggered when episode is loaded (since default isn't always the same), and on user changes of mode\n mode: \"watch\",\"discover\",\"review\"\n playbackRateChange\ttriggered when user changes the playback speed\n playbackRate: 1\n stall\t\t\t\t\t\t\t\ttriggered when video playback stalls unintentionally\n lowBandwidth\t\t\t\ttriggered when we switch to a lower-bandwidth video stream due to too many stall events\n search (TODO)\t\t\t\t(search is incremental, so will have to think about how/when to capture this)\n\n event activity: captures interaction with specific transmedia items (\"events\").\n Different types of event can define their own interactions, but the core ones will be\n viewed\t\t\t\t\t\t\tplayer reached the event's start_time by any method\n interacted\t\t\t\t\tuser clicked a transmedia link, for example\n completed\t\t\t\t\t\tup to the transmedia item to define what constitutes \"completion\"\n question-answered\t\tfor quiz questions.  Data field should be {answer: 'answer text', correct: t/f}\n */\nvar AnalyticsSvc = /** @class */ (function () {\n    function AnalyticsSvc($q, $http, $routeParams, $interval, config, appState, playbackService) {\n        this.$q = $q;\n        this.$http = $http;\n        this.$routeParams = $routeParams;\n        this.$interval = $interval;\n        this.config = config;\n        this.appState = appState;\n        this.playbackService = playbackService;\n        this.activityQueue = [];\n        this.pollLength = 10 * 1000;\n    }\n    AnalyticsSvc.prototype.startPolling = function () {\n        var _this = this;\n        this.pollInterval = this.$interval(function () { return _this.flushActivityQueue(); }, this.pollLength);\n    };\n    AnalyticsSvc.prototype.stopPolling = function () {\n        // send any pending metrics\n        this.flushActivityQueue();\n        this.$interval.cancel(this.pollInterval);\n    };\n    AnalyticsSvc.prototype.captureEpisodeActivity = function (name, data) {\n        if ((this.appState.user && this.appState.user._id) && (!this.appState.user.track_episode_metrics)) {\n            return;\n        }\n        var userActivity = {\n            'name': name,\n            'walltime': new Date(),\n            //if metaProps time hasn't been set,\n            'timestamp': this.playbackService.getMetaProp('time') || 0 // TODO this is timeline time, we want episode time!\n        };\n        if (data) {\n            userActivity.data = data;\n        }\n        this.activityQueue.push(userActivity);\n    };\n    AnalyticsSvc.prototype.captureEventActivity = function (name, eventID, data, force) {\n        if (!force) {\n            if (this.config.disableAnalytics || (this.appState.user._id && !this.appState.user.track_event_actions)) {\n                return;\n            }\n        }\n        if (data === undefined) {\n            console.warn('captureEventActivity called with no data for event ', eventID);\n        }\n        // console.log(data);\n        this.activityQueue.push({\n            'name': name,\n            'event_id': eventID,\n            'walltime': new Date(),\n            'data': data\n        });\n    };\n    AnalyticsSvc.prototype.readEpisodeActivity = function (epId) {\n        return this.$http.get(this.config.apiDataBaseURl + \"/v2/episodes/\" + epId + \"/episode_user_metrics\")\n            .then(function (respData) { return respData; })\n            .catch(function (err) { return console.log('error'); });\n    };\n    AnalyticsSvc.prototype.readEventActivity = function (eventId, activityType) {\n        return this.$http.get(this.config.apiDataBaseUrl + \"/v2/events/\" + eventId + \"/event_user_actions\")\n            .then(function (resp) { return resp.data; })\n            .then(function (respData) {\n            if (activityType) {\n                for (var i = 0; i < respData.length; i++) {\n                    var activity = respData[i];\n                    if (activity.name === activityType) {\n                        return true;\n                    }\n                }\n            }\n            else {\n                return respData;\n            }\n        });\n    };\n    AnalyticsSvc.prototype.forceCaptureEventActivityWithPromise = function (name, eventId, data) {\n        this.captureEventActivity(name, eventId, data, true);\n        return this.flushActivityQueue();\n    };\n    AnalyticsSvc.prototype.flushActivityQueue = function () {\n        var _this = this;\n        return this.$q(function (resolve) {\n            if (_this.activityQueue.length === 0) {\n                return resolve('');\n            }\n            if (!_this.appState.episodeId) {\n                resolve();\n            }\n            var actions = angular.copy(_this.activityQueue);\n            _this.activityQueue = [];\n            var now = new Date();\n            var episodeUserMetrics = [];\n            var eventUserActions = [];\n            angular.forEach(actions, function (action) {\n                action.age = (+now - +action.walltime) / 1000;\n                delete action.walltime;\n                if (action.event_id) {\n                    eventUserActions.push(action);\n                }\n                else {\n                    episodeUserMetrics.push(action);\n                }\n            });\n            episodeUserMetrics = _this.dejitter(episodeUserMetrics);\n            var posts = [];\n            if (eventUserActions.length > 0) {\n                var euaPath = _this.config.apiDataBaseUrl + '/v2/episodes/' + _this.appState.episodeId + '/event_user_actions';\n                posts.push(_this.$http.post(euaPath, {\n                    'event_user_actions': eventUserActions\n                }));\n            }\n            if (episodeUserMetrics.length > 0) {\n                posts.push(_this.$http.post(_this.config.apiDataBaseUrl + '/v2/episodes/' + _this.appState.episodeId + '/episode_user_metrics', {\n                    'episode_user_metrics': episodeUserMetrics\n                }));\n            }\n            console.log('flushing queue!', eventUserActions, episodeUserMetrics);\n            return _this.$q.all(posts);\n        });\n    };\n    AnalyticsSvc.prototype.dejitter = function (events) {\n        // Consolidate repeated seek events into one single seek event before sending to API.\n        // TODO prevent this happening in the first place :)\n        if (events.length === 0) {\n            return [];\n        }\n        var ret = [];\n        for (var i = 0; i < events.length - 1; i++) {\n            // if this event and the next one are both seek events, and this event's timestamp matches\n            // the next event's seekStart, skip this event and set the next event's seekStart to this one's.\n            // otherwise just put it into the queue.\n            var a = events[i];\n            var b = events[i + 1];\n            if (a.name === 'seek' && b.name === 'seek' &&\n                (a.timestamp === b.data.seekStart)) {\n                b.data.seekStart = a.data.seekStart;\n            }\n            else {\n                ret.push(events[i]);\n            }\n        }\n        ret.push(events[events.length - 1]);\n        return ret;\n    };\n    AnalyticsSvc.Name = 'analyticsSvc'; // tslint:disable-line\n    AnalyticsSvc.$inject = ['$q', '$http', '$routeParams', '$interval', 'config', 'appState', 'playbackService'];\n    return AnalyticsSvc;\n}());\n\n/* tslint:disable */\n// analyticsSvc.$inject = ['$q', '$http', '$routeParams', '$interval', 'config', 'appState', 'playbackService'];\n// function analyticsSvc($q, $http, $routeParams, $interval, config, appState, playbackService) {\n//   // console.log('analyticsSvc factory');\n//   var svc = Object.create(null);\n//\n//   svc.activityQueue = []; // contains events not yet sent to the server.\n//\n//   var flusher = $interval(function () {\n//     svc.flushActivityQueue();\n//   }, 10000);\n//\n//   // don't try to capture when running from local data or if it's disabled in config:\n//   if ($routeParams.local || config.disableAnalytics) {\n//     // console.log(\"No analytics for local data; cancelling activity queue\");\n//     $interval.cancel(flusher);\n//   }\n//\n//   // for episode-related activity\n//   svc.captureEpisodeActivity = function (name, data) {\n//\n//     if (config.disableAnalytics) {\n//       return;\n//     }\n//\n//     if ((appState.user && appState.user._id) && (!appState.user.track_episode_metrics)) {\n//       return;\n//     }\n//\n//     const userActivity = {\n//       'name': name,\n//       'walltime': new Date(),\n//       //if metaProps time hasn't been set,\n//       'timestamp': playbackService.getMetaProp('time') || 0 // TODO this is timeline time, we want episode time!\n//     };\n//     if (data) {\n//       userActivity.data = data;\n//     }\n//\n//     svc.activityQueue.push(userActivity);\n//   };\n//\n//   // for transmedia-related activity\n//   svc.captureEventActivity = function (name, eventID, data, force?) {\n//     if (!force) {\n//       if (config.disableAnalytics || (appState.user._id && !appState.user.track_event_actions)) {\n//         return;\n//       }\n//     }\n//     if (data === undefined) {\n//       console.warn('captureEventActivity called with no data for event ', eventID);\n//     }\n//     // console.log(data);\n//     svc.activityQueue.push({\n//       'name': name,\n//       'event_id': eventID,\n//       'walltime': new Date(),\n//       'data': data\n//     });\n//   };\n//\n//   svc.forceCaptureEventActivityWithPromise = function (name, eventID, data) {\n//     //we know this is syncronous\n//     svc.captureEventActivity(name, eventID, data, true);\n//     return svc.flushActivityQueue(); //this is async, and returns a promise.\n//   };\n//   svc.captureEventActivityWithPromise = function (name, eventID, data) {\n//     //we know this is syncronous\n//     svc.captureEventActivity(name, eventID, data);\n//     return svc.flushActivityQueue(); //this is async, and returns a promise.\n//   };\n//\n//   // read from API:\n//   svc.readEpisodeActivity = function (epId) {\n//     // console.log(\"analyticsSvc readEpisodeActivity\");\n//     var defer = $q.defer();\n//     $http({\n//       method: 'GET',\n//       url: config.apiDataBaseUrl + '/v2/episodes/' + epId + '/episode_user_metrics'\n//     })\n//       .success(function (respData) {\n//         // console.log(\"read episode activity SUCCESS\", respData, respStatus, respHeaders);\n//         defer.resolve(respData);\n//       })\n//       .error(function () {\n//         // console.log(\"read episode activity ERROR\", respData, respStatus, respHeaders);\n//         defer.reject();\n//       });\n//     return defer.promise;\n//   };\n//\n//   // if activityType is omitted, returns all user data for that event id\n//   // if it's included, returns true if the user has at least once triggered that activityType, false if not\n//   svc.readEventActivity = function (eventId, activityType) {\n//     // console.log(\"analyticsSvc.readEventActivity\", \"eventId\", \"activityType\");\n//     var defer = $q.defer();\n//     $http({\n//       method: 'GET',\n//       url: config.apiDataBaseUrl + '/v2/events/' + eventId + '/event_user_actions'\n//     })\n//       .success(function (respData) {\n//         // console.log(\"read event activity SUCCESS\", respData, respStatus, respHeaders);\n//         if (activityType) {\n//           var matchedType = false;\n//           for (var i = 0; i < respData.length; i++) {\n//             var activity = respData[i];\n//             if (activity.name === activityType) {\n//               matchedType = true;\n//             }\n//           }\n//           defer.resolve(matchedType);\n//         } else {\n//           // no activityType specified so return everything:\n//           defer.resolve(respData);\n//         }\n//       })\n//       .error(function () {\n//         // console.log(\"read event activity ERROR\", respData, respStatus, respHeaders);\n//         defer.reject();\n//       });\n//     return defer.promise;\n//   };\n//\n//   svc.flushActivityQueue = function () {\n//     var defer = $q.defer();\n//     if (svc.activityQueue.length === 0) {\n//       defer.resolve('');\n//     }\n//     if (!appState.episodeId) {\n//       defer.resolve(); // iOS with ?t= param is trying to post metrics before it has an episode ID. TODO figure out wtf is causing that...\n//     }\n//\n//     var actions = angular.copy(svc.activityQueue);\n//     svc.activityQueue = [];\n//\n//     var now = new Date();\n//     var episodeUserMetrics = [];\n//     var eventUserActions = [];\n//\n//     angular.forEach(actions, function (action) {\n//       action.age = (now - action.walltime) / 1000;\n//       delete action.walltime;\n//       if (action.event_id) {\n//         eventUserActions.push(action);\n//       } else {\n//         episodeUserMetrics.push(action);\n//       }\n//     });\n//     episodeUserMetrics = svc.dejitter(episodeUserMetrics);\n//\n//     var posts = [];\n//     if (eventUserActions.length > 0) {\n//       posts.push($http.post(config.apiDataBaseUrl + '/v2/episodes/' + appState.episodeId + '/event_user_actions', {\n//         'event_user_actions': eventUserActions\n//       }));\n//     }\n//     if (episodeUserMetrics.length > 0) {\n//       posts.push($http.post(config.apiDataBaseUrl + '/v2/episodes/' + appState.episodeId + '/episode_user_metrics', {\n//         'episode_user_metrics': episodeUserMetrics\n//       }));\n//     }\n//     $q.all(posts).then(function () {\n//       defer.resolve();\n//     });\n//\n//     return defer.promise;\n//   };\n//\n//   svc.dejitter = function (events) {\n//     // Consolidate repeated seek events into one single seek event before sending to API.\n//     // TODO prevent this happening in the first place :)\n//     if (events.length === 0) {\n//       return [];\n//     }\n//     var ret = [];\n//     for (var i = 0; i < events.length - 1; i++) {\n//       // if this event and the next one are both seek events, and this event's timestamp matches\n//       // the next event's seekStart, skip this event and set the next event's seekStart to this one's.\n//       // otherwise just put it into the queue.\n//       var a = events[i];\n//       var b = events[i + 1];\n//       if (a.name === 'seek' && b.name === 'seek' &&\n//         (a.timestamp === b.data.seekStart)) {\n//         b.data.seekStart = a.data.seekStart;\n//       } else {\n//         ret.push(events[i]);\n//       }\n//     }\n//     ret.push(events[events.length - 1]);\n//     return ret;\n//   };\n//\n//   return svc;\n// }\n\n// CONCATENATED MODULE: ./app/scripts/services/services.module.ts\n/**\n * Created by githop on 3/30/17.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar servicesModule = angular.module('itt.services', [])\n    .service('appState', AppState)\n    .factory('authSvc', authSvc_authSvc)\n    .factory('awsSvc', awsSvc)\n    .factory('config', config_config)\n    .factory('dataSvc', dataSvc_dataSvc)\n    .factory('errorSvc', errorSvc_errorSvc)\n    .factory('imageResize', imageResize)\n    .factory('ittUtils', ittUtils_ittUtils)\n    .factory('mockSvc', mockSvc_mockSvc)\n    .factory('modelSvc', modelSvc_modelSvc)\n    .factory('playbackService', playbackService_playbackService)\n    .factory('questionAnswersSvc', questionAnswersSvc_questionAnswersSvc)\n    .factory('recursionHelper', recursionHelper)\n    .factory('selectService', selectService_selectService)\n    .factory('timelineSvc', timelineSvc_timelineSvc)\n    .factory('urlService', urlService_urlService)\n    .factory('playerManagerCommons', playerManagerCommons)\n    .factory('html5PlayerManager', html5PlayerManager)\n    .factory('html5UrlService', html5UrlService)\n    .factory('kalturaPlayerManager', kalturaPlayerManager)\n    .factory('kalturaScriptLoader', kalturaScriptLoader)\n    .factory('kalturaUrlService', kalturaUrlService)\n    .factory('youTubePlayerManager', youTubePlayerManager)\n    .factory('YTScriptLoader', YTScriptLoader)\n    .factory('youtubeUrlService', youtubeUrlService)\n    .service('wistiaUrlService', WistiaUrlService)\n    .service('wistiaPlayerManager', wistiaPlayerManager_WistiaPlayerManager)\n    .service('wistiaScriptLoader', WistiaScriptLoader)\n    .service('analyticsSvc', AnalyticsSvc)\n    .service('validationSvc', ValidationService)\n    .service('uploadsService', UploadsService);\n/* harmony default export */ var services_module = (servicesModule);\n\n// CONCATENATED MODULE: ./app/scripts/directives/autofocus.ts\n// attach to any directive to make its first input/textarea autofocus\nautofocus.$inject = ['$timeout'];\nfunction autofocus($timeout) {\n    return {\n        link: function (scope, element) {\n            $timeout(function () {\n                if (element[0].tagName === 'TEXTAREA' || element[0].tagName === 'INPUT') {\n                    element[0].focus();\n                }\n                else {\n                    element.find('input,textarea')[0].focus();\n                }\n            });\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittAnnotationField.ts\n/**\n *\n * Created by githop on 6/30/16.\n */\nfunction ittAnnotationField() {\n    return {\n        restrict: 'EA',\n        scope: {\n            data: '=',\n            ittItemForm: '='\n        },\n        template: [\n            '<div class=\"field\">',\n            '\t<div class=\"label\">Annotation Text [{{$ctrl.appState.lang}}]',\n            '\t\t<itt-validation-tip ng-if=\"$ctrl.ittItemForm[$ctrl.textAreaName].$invalid\" text=\"Annotation Text is a required field\"></itt-validation-tip>',\n            '\t</div>',\n            '\t<div class=\"input\" sxs-input-i18n=\"$ctrl.data.annotation\" do-validate=\"true\" x-inputtype=\"\\'textarea\\'\" on-emit-name=\"$ctrl.onName($taName)\" autofocus></div>',\n            '</div>'\n        ].join('\\n'),\n        controller: ['appState', function (appState) {\n                var ctrl = this;\n                ctrl.onName = onName;\n                ctrl.appState = appState;\n                ctrl.textAreaName = '';\n                function onName(v) {\n                    ctrl.textAreaName = v;\n                }\n            }],\n        controllerAs: '$ctrl',\n        bindToController: true\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittUploadTranscriptsField.ts\n\n/**\n * Created by githop on 1/31/17.\n */\nvar TEMPLATE = \"\\n<div class=\\\"field\\\">\\n  <div class=\\\"label\\\">Batch Upload Transcripts\\n  </div>\\n  <div class=\\\"input\\\">\\n    <div ng-if=\\\"!$ctrl.showUploader\\\">\\n      <span><button ng-click=\\\"$ctrl.showUploader = true\\\">Batch Upload Transcripts</button></span>\\n    </div>\\n\\n\\n    <itt-asset-uploader\\n      ng-if=\\\"$ctrl.showUploader\\\"\\n      episode-id=\\\"{{$ctrl.episodeId}}\\\"\\n      mime-types=\\\"{{$ctrl.mimes}}\\\"\\n      on-filedrop=\\\"$ctrl.handleTranscriptFiles(data)\\\"\\n      file-receive=\\\"$ctrl.transcripts\\\"\\n      callback=\\\"$ctrl.onUploadComplete()\\\">\\n    </itt-asset-uploader>\\n\\n    <np-modal\\n      wrapper-class=\\\"responsive-modal__wrapper\\\"\\n      modal-class=\\\"responsive-modal__content\\\"\\n      ng-if=\\\"$ctrl.showOptions\\\">\\n      <div class=\\\"smart-sentences__wrapper\\\">\\n        <div><p>\\n          Thank you for using this new feature currently in Beta! Are you sure you want to proceed? Once saved,\\n          transcript entries must be individually edited or deleted. This page will automatically refresh after\\n          transcripts have successfully uploaded.</p>\\n        </div>\\n        <div class=\\\"smart-sentences__input\\\">\\n          <div>\\n            <input class=\\\"smart-sentences__input\\\" id=\\\"groupParam\\\" type=\\\"checkbox\\\" ng-model=\\\"$ctrl.selectedParam\\\"\\n                   ng-false-value=\\\"'none'\\\"\\n                   ng-true-value=\\\"'group_into_sentences'\\\"/>\\n          </div>\\n          <div>\\n            <label class=\\\"smart-sentences__input\\\"\\n                   for=\\\"groupParam\\\">Group transcript segments into complete sentences (recommended for closed caption\\n              transcripts)</label>\\n          </div>\\n        </div>\\n        <div>\\n          <button ng-click=\\\"$ctrl.commenseUpload()\\\">upload transcripts</button>\\n          <button ng-click=\\\"$ctrl.cancelUpload()\\\">cancel</button>\\n        </div>\\n      </div>\\n\\n    </np-modal>\\n  </div>\\n</div>\";\nvar TRANSCRIPT_UPLOAD = 'TRANSCRIPT_UPLOAD';\nvar ittUploadTranscriptsField_UploadTranscriptsController = /** @class */ (function () {\n    function UploadTranscriptsController(MIMES, modelSvc, dataSvc, timelineSvc) {\n        this.MIMES = MIMES;\n        this.modelSvc = modelSvc;\n        this.dataSvc = dataSvc;\n        this.timelineSvc = timelineSvc;\n        this.showOptions = false;\n        this.showUploader = false;\n        this.selectedParam = 'none';\n        this.maxDuration = null;\n        this.transcripts = {};\n        this._maxDurParam = 'max_subtitle_duration';\n    }\n    UploadTranscriptsController.prototype.$onInit = function () {\n        this.mimes = this.MIMES.transcripts;\n    };\n    UploadTranscriptsController.prototype.cancelUpload = function () {\n        this.files = null;\n        this.showUploader = false;\n        this.showOptions = false;\n    };\n    UploadTranscriptsController.prototype.handleTranscriptFiles = function (data) {\n        this.showOptions = true;\n        this.files = data;\n    };\n    UploadTranscriptsController.prototype.commenseUpload = function () {\n        var params = this.formatParams();\n        var files = this.files;\n        var promises = this._handleTranscripts(this.episodeId, files[0], params);\n        this.transcripts = {\n            payload: {\n                promises: promises,\n                files: files,\n                type: TRANSCRIPT_UPLOAD\n            }\n        };\n    };\n    UploadTranscriptsController.prototype.onUploadComplete = function () {\n        //to reset the component;\n        this.cancelUpload();\n        window.location.reload();\n    };\n    UploadTranscriptsController.prototype.formatParams = function () {\n        var optionalParams = {};\n        if (this.selectedParam !== 'none') {\n            optionalParams[this.selectedParam] = true;\n        }\n        if (existy(this.maxDuration)) {\n            optionalParams[this._maxDurParam] = this.maxDuration;\n        }\n        return optionalParams;\n    };\n    UploadTranscriptsController.prototype._handleTranscripts = function (episodeId, postData, params) {\n        var fd = new FormData();\n        fd.append('subtitles', postData);\n        return this.dataSvc.batchUploadTranscripts(episodeId, fd, params);\n    };\n    UploadTranscriptsController.$inject = ['MIMES', 'modelSvc', 'dataSvc', 'timelineSvc'];\n    return UploadTranscriptsController;\n}());\nvar UploadTranscripts = /** @class */ (function () {\n    function UploadTranscripts() {\n        this.bindings = {\n            episodeId: '@'\n        };\n        this.template = TEMPLATE;\n        this.controller = ittUploadTranscriptsField_UploadTranscriptsController;\n    }\n    UploadTranscripts.Name = 'ittUploadTranscripts'; // tslint:disable-line\n    return UploadTranscripts;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittAssetUploader.ts\n\nvar ittAssetUploader_AssetUploaderController = /** @class */ (function () {\n    function AssetUploaderController($timeout, $element, awsSvc, appState, modelSvc, dataSvc) {\n        this.$timeout = $timeout;\n        this.$element = $element;\n        this.awsSvc = awsSvc;\n        this.appState = appState;\n        this.modelSvc = modelSvc;\n        this.dataSvc = dataSvc;\n        this.multiple = false;\n        //props\n        this.uploadsinprogress = 0;\n        this.paused = false;\n        this.uploadStatus = [];\n        this.uploads = [];\n    }\n    AssetUploaderController.prototype.$onInit = function () {\n        if (this.instructions === undefined) {\n            this.manPage = 'We support uploads of most common file formats, including .doc, .docx, .jpeg, .jpg, .pdf, .png, .ppt, .pptx, .rtf, .txt, and .zip. ';\n        }\n        else {\n            this.manPage = this.instructions;\n        }\n        if (this.mimeTypes == null) {\n            //allow basically doc, image, or video.\n            this.mimeTypesArr = ['application/*', 'image/*', 'video/*', 'text/*', 'audio/*', 'model/*'];\n        }\n        else {\n            this.mimeTypesArr = this.mimeTypes.split(',');\n        }\n        if (this.errorText === undefined) {\n            this.errorText = 'Whoops! You may want to try that again!';\n        }\n        //normalize passed in params\n        this.mimeTypesArr = this.mimeTypesArr.map(function (m) { return m.trim(); });\n    };\n    AssetUploaderController.prototype.$postLink = function () {\n        var _this = this;\n        this.$timeout(function () {\n            _this.droptarget = _this.$element.find('.uploadDropTarget');\n            _this.fileinput = _this.$element.find('.uploadFileInput');\n            _this.uploadsinprogress = 0;\n            _this.droptarget[0].addEventListener('drop', function (ev) { return _this.handleDrop(ev); });\n            _this.droptarget[0].addEventListener('dragover', function (ev) { return _this.handleDragOver(ev); });\n            _this.droptarget[0].addEventListener('dragenter', function (ev) { return _this.handleDragEnter(ev); });\n            _this.droptarget[0].addEventListener('dragleave', function (ev) { return _this.handleDragLeave(ev); });\n        });\n    };\n    AssetUploaderController.prototype.$onChanges = function (changesObj) {\n        if (changesObj.fileReceive) {\n            var currentValue = changesObj.fileReceive.currentValue;\n            var payload = currentValue.payload;\n            if (payload != null) {\n                switch (payload.type) {\n                    case TRANSCRIPT_UPLOAD:\n                        var promises = payload.promises, files = payload.files;\n                        this.commenseUploads(files, promises);\n                        break;\n                }\n            }\n        }\n    };\n    //pause and resume and cancel are currently broken on story prior to refactoring into component...\n    AssetUploaderController.prototype.pauseUpload = function () {\n        this.awsSvc.pauseUpload();\n        this.paused = true;\n    };\n    ;\n    AssetUploaderController.prototype.resumeUpload = function () {\n        this.awsSvc.resumeUpload();\n        this.paused = false;\n    };\n    ;\n    AssetUploaderController.prototype.cancelUpload = function () {\n        this.awsSvc.cancelUpload();\n    };\n    ;\n    AssetUploaderController.prototype.handleUploads = function (files) {\n        if (this.multiple) {\n            if (files.length > 1 || this.uploads.length > 0) {\n                this.errormessage = 'You may only upload one file at a time here.';\n                return false;\n            }\n        }\n        if (!this.checkMimeType(files)) {\n            this.errormessage = this.errorText;\n            return;\n        }\n        //if optional onFiledrop attr is used,\n        //emit FileList to parent component and bail\n        if (this.onFiledrop) {\n            this.onFiledrop({ data: files });\n            return;\n        }\n        this.commenseUploads(files);\n    };\n    AssetUploaderController.prototype.commenseUploads = function (files, data) {\n        var _a = this.setupUploadDisplay(files, data), oldstack = _a.oldstack, newstack = _a.newstack;\n        this.processUploads(oldstack, newstack, files);\n    };\n    AssetUploaderController.prototype.setupUploadDisplay = function (files, data) {\n        var oldstack = this.uploads.length;\n        var newstack = this.uploads.length + files.length;\n        this.uploadsinprogress = this.uploadsinprogress + files.length;\n        this.uploadStatus.push({\n            'bytesSent': 0,\n            'bytesTotal': 1,\n            'percent': 0,\n            'name': files[0].name\n        });\n        if (this.containerId) {\n            this.uploads = this.uploads.concat(this.awsSvc.uploadContainerFiles(this.containerId, files));\n        }\n        else if (this.episodeId) {\n            this.uploads = this.uploads.concat(data);\n        }\n        else {\n            this.uploads = this.uploads.concat(this.awsSvc.uploadUserFiles(this.appState.user._id, files));\n        }\n        return { oldstack: oldstack, newstack: newstack };\n    };\n    AssetUploaderController.prototype.checkMimeType = function (files) {\n        var _this = this;\n        var acceptMimeTypes = false;\n        //because fileList object is not iterable, convert it to an array for .forEach to work\n        Array.from(files).forEach(function (file) {\n            var fileType = file.type;\n            if (_this.episodeId) {\n                var ext = file.name.match(/(vtt|srt)/);\n                if (ext && ext.length) {\n                    fileType = 'text/' + ext[0];\n                }\n            }\n            _this.mimeTypesArr.forEach(function (m) {\n                var paramStrEndsWithStar = AssetUploaderController.strEndsWith(m, '*');\n                if (paramStrEndsWithStar) {\n                    var mimeTypeUntilWildcard = m.slice(0, -1);\n                    var applicationTypesMatch = AssetUploaderController.strStartsWith(fileType, mimeTypeUntilWildcard);\n                    if (applicationTypesMatch) {\n                        acceptMimeTypes = true;\n                    }\n                }\n                else {\n                    if (fileType === m) {\n                        acceptMimeTypes = true;\n                    }\n                }\n                _this.errorText = fileType + ' uploads are not allowed here.';\n            });\n        });\n        return acceptMimeTypes;\n    };\n    AssetUploaderController.prototype.processUploads = function (oldstack, newstack, files) {\n        var _this = this;\n        for (var i = oldstack; i < newstack; i++) {\n            (function (i) {\n                _this.uploadStatus[i] = {\n                    'bytesSent': 0,\n                    'bytesTotal': 1,\n                    'percent': 0,\n                    'name': files[i - oldstack].name\n                };\n                _this.uploads[i]\n                    .then(function (data) {\n                    if (_this.episodeId && _this.callback) {\n                        _this.callback({ data: data });\n                        _this.uploadStatus[i].done = true;\n                        _this.oneDone();\n                        return;\n                    }\n                    _this.modelSvc.cache('asset', data.file);\n                    if (_this.callback) {\n                        _this.callback({ data: data.file._id });\n                    }\n                    _this.uploadStatus[i].done = true;\n                    _this.oneDone();\n                })\n                    .catch(function (error) {\n                    _this.uploadStatus[i].error = error;\n                })\n                    .finally(null, function (update) {\n                    _this.uploadStatus[i].bytesSent = update.bytesSent;\n                    _this.uploadStatus[i].bytesTotal = update.bytesTotal;\n                    _this.uploadStatus[i].percent = Math.ceil(update.bytesSent / update.bytesTotal * 100);\n                });\n            })(i);\n        }\n    };\n    AssetUploaderController.prototype.oneDone = function () {\n        this.uploadsinprogress = this.uploadsinprogress - 1;\n        if (this.uploadsinprogress === 0) {\n            this.fileinput.value = '';\n            this.paused = false;\n        }\n    };\n    ;\n    AssetUploaderController.prototype.handleDrop = function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.handleDragLeave(e);\n        this.handleUploads(e.dataTransfer.files);\n    };\n    ;\n    AssetUploaderController.prototype.handleDragOver = function (e) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n        this.handleDragEnter(e);\n        return false;\n    };\n    ;\n    AssetUploaderController.prototype.handleDragEnter = function (e) {\n        this.droptarget.addClass('droppable');\n    };\n    ;\n    AssetUploaderController.prototype.handleDragLeave = function (e) {\n        this.droptarget.removeClass('droppable');\n    };\n    ;\n    AssetUploaderController.strStartsWith = function (str, prefix) {\n        return str.indexOf(prefix) === 0;\n    };\n    AssetUploaderController.strEndsWith = function (str, match) {\n        return str.substring(str.length - match.length, str.length) === match;\n    };\n    AssetUploaderController.$inject = ['$timeout', '$element', 'awsSvc', 'appState', 'modelSvc', 'dataSvc'];\n    return AssetUploaderController;\n}());\nvar AssetUploader = /** @class */ (function () {\n    function AssetUploader() {\n        this.bindings = {\n            containerId: '@?',\n            episodeId: '@?',\n            callback: '&?',\n            onFiledrop: '&?',\n            fileReceive: '<?',\n            mimeTypes: '@?',\n            instructions: '@?',\n            errorText: '@?',\n            multiple: '<?'\n        };\n        this.templateUrl = 'templates/producer/asset-uploader.html';\n        this.controller = ittAssetUploader_AssetUploaderController;\n    }\n    AssetUploader.Name = 'ittAssetUploader';\n    return AssetUploader;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittClipboard.ts\n/**\n * Created by githop on 3/22/17.\n */\nvar ittClipboard_TEMPLATE = \"\\n<np-tooltip tip-text=\\\"{{$ctrl.tipText}}\\\" ng-click=\\\"$ctrl.bubbleEvent($event)\\\">\\n   <a class=\\\"icon__button\\\" ng-class=\\\"$ctrl.light ? 'button__clipboard--light' : 'button__clipboard'\\\"></a>\\n</np-tooltip>\\n\";\nvar ClipboardController = /** @class */ (function () {\n    function ClipboardController($timeout) {\n        this.$timeout = $timeout;\n    }\n    ClipboardController.copyText = function (text) {\n        var textArea = document.createElement('textarea');\n        textArea.value = text;\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.setSelectionRange(0, textArea.value.length);\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n    };\n    ClipboardController.prototype.$onInit = function () {\n        if (this.tipText == null) {\n            this.tipText = 'Click to copy URL';\n        }\n        this._defaultText = this.tipText;\n    };\n    ClipboardController.prototype.bubbleEvent = function ($event) {\n        var _this = this;\n        ClipboardController.copyText(this.sourceText);\n        this.onCopy({ $event: $event });\n        if (this.customNotice == null) {\n            this.tipText = 'Copied';\n            this.$timeout(function () {\n                _this.tipText = _this._defaultText;\n            }, 1500);\n        }\n    };\n    ClipboardController.$inject = ['$timeout'];\n    return ClipboardController;\n}());\nvar Clipboard = /** @class */ (function () {\n    function Clipboard() {\n        this.transclude = true;\n        this.bindings = {\n            sourceText: '@',\n            tipText: '@?',\n            light: '<?',\n            customNotice: '<?',\n            onCopy: '&'\n        };\n        this.template = ittClipboard_TEMPLATE;\n        this.controller = ClipboardController;\n    }\n    Clipboard.Name = 'npClipboard'; // tslint:disable-line\n    return Clipboard;\n}());\n\n// ittClipboard.$inject = ['ittUtils'];\n//\n// export default function ittClipboard(ittUtils) {\n//   return {\n//     restrict: 'EA',\n//     transclude: true,\n//     template: `\n//     <np-tooltip tip-text=\"{{$ctrl.tipText}}\" ng-click=\"$ctrl.bubbleEvent($event)\">\n//        <a class=\"icon__button\" ng-class=\"$ctrl.light ? 'button__clipboard--light' : 'button__clipboard'\"></a>\n//       </np-tooltip>\n//     `,\n//     scope: {\n//       sourceText: '@',\n//       tipText: '@?',\n//       onCopy: '&',\n//       light: '<?',\n//       customNotice: '<?'\n//     },\n//     controller: [function () {\n//       var ctrl = this;\n//       var _ngTimeout = ittUtils.ngTimeout;\n//       var _defaultText = ctrl.tipText || 'Click to copy URL';\n//       angular.extend(ctrl, {\n//         tipText: _defaultText,\n//         bubbleEvent: bubbleEvent\n//       });\n//\n//       function bubbleEvent($event) {\n//         copyText(ctrl.sourceText);\n//         ctrl.onCopy({$event: $event});\n//         if (ctrl.customNotice == null) {\n//           ctrl.tipText = 'Copied!';\n//           _ngTimeout(function () {\n//             ctrl.tipText = _defaultText;\n//           }, 1500);\n//         }\n//       }\n//\n//       function copyText(text) {\n//         var textArea = document.createElement('textarea');\n//         textArea.value = text;\n//         document.body.appendChild(textArea);\n//         textArea.focus();\n//         textArea.setSelectionRange(0, textArea.value.length);\n//         document.execCommand('copy');\n//         document.body.removeChild(textArea);\n//       }\n//\n//     }],\n//     controllerAs: '$ctrl',\n//     bindToController: true\n//   };\n// }\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittColorSelect.ts\n/**\n * Created by githop on 6/30/16.\n */\nfunction ittColorSelect() {\n    return {\n        restrict: 'EA',\n        template: [\n            '<div class=\"field\">',\n            '\t<div class=\"label\">Color</div>',\n            '\t<div class=\"input\">',\n            '\t\t<select size=\"1\" ng-model=\"itemForm.color\">',\n            '\t\t\t<option value=\"\">(Default)</option>',\n            '\t\t\t<option value=\"Invert\">Invert</option>',\n            '\t\t\t<option value=\"Sepia\">Sepia</option>',\n            '\t\t\t<option value=\"Solarized\">Solarized</option>',\n            '\t\t\t<option value=\"Vivid\">Vivid</option>',\n            '\t\t</select>',\n            '\t</div>',\n            '</div>'\n        ].join(' ')\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittContainer.ts\n/* For admin screen episode list */\n\n\nvar ittContainer_ContainerController = /** @class */ (function () {\n    function ContainerController($timeout, $location, appState, modelSvc, dataSvc, authSvc, episodeEdit) {\n        this.$timeout = $timeout;\n        this.$location = $location;\n        this.appState = appState;\n        this.modelSvc = modelSvc;\n        this.dataSvc = dataSvc;\n        this.authSvc = authSvc;\n        this.episodeEdit = episodeEdit;\n        this.containerTypes = ['customer', 'project', 'module', 'episode'];\n    }\n    Object.defineProperty(ContainerController.prototype, \"isAdmin\", {\n        get: function () {\n            return this.authSvc.userHasRole('admin');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContainerController.prototype, \"canAccess\", {\n        get: function () {\n            return this.isAdmin || this.authSvc.userHasRole('customer admin');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContainerController.prototype, \"containerType\", {\n        get: function () {\n            if (this.depth > 0) {\n                return capitalize(this.containerTypes[this.depth]);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ContainerController.prototype.$onInit = function () {\n        this.customers = this.modelSvc.getCustomersAsArray();\n    };\n    ContainerController.prototype.toggleNarrativeModal = function () {\n        this.showNarrativeModal = !this.showNarrativeModal;\n    };\n    ContainerController.prototype.postNewNarrative = function (_a) {\n        var _this = this;\n        var narrative = _a.narrative, containerId = _a.containerId;\n        this.resolvingNarrative = true;\n        this.dataSvc.generateNewNarrative(containerId, narrative).then(function (narrativeResp) {\n            _this.modelSvc.cache('narrative', narrativeResp);\n            _this.$location.path('/story/' + narrativeResp._id);\n            _this.resolvingNarrative = false;\n        });\n    };\n    ContainerController.prototype.getLinkStatusReport = function (customerId) {\n        this.dataSvc.getCustomerLinkStatusReportSpreadsheet(customerId);\n    };\n    ContainerController.prototype.selectText = function (event) {\n        event.target.select(); // convenience for selecting the episode url\n    };\n    ContainerController.prototype.onToggleChildren = function (bool) {\n        var container = this.container;\n        this.onContainerClick({ $container: { container: container, bool: bool } });\n    };\n    ContainerController.prototype.renameContainer = function () {\n        var _this = this;\n        var newContainer = createInstance('Container', pick(this.container, ['_id', 'customer_id', 'episodes', 'keywords', 'parent_id', 'sort_order']));\n        newContainer.name = {\n            en: this.container.newContainerName\n        };\n        this.dataSvc.updateContainer(newContainer).then(function () {\n            _this.container.editingContainer = false;\n        });\n    };\n    ContainerController.prototype.addContainer = function (container) {\n        var _this = this;\n        var newContainer = {\n            'customer_id': this.container.customer_id,\n            'parent_id': this.container._id,\n            'name': {\n                en: angular.copy(this.container.newContainerTitle)\n            }\n        };\n        this.dataSvc.createContainer(newContainer).then(function (newContainer) {\n            console.log('Created container:', newContainer);\n            if (_this.depth === 2) {\n                return _this.episodeEdit.addEpisodeToContainer(newContainer)\n                    .then(function (container) { return _this.onContainerAdd({ $container: container }); })\n                    .catch(function (e) { return console.log('error adding episode to container'); });\n            }\n            else {\n                _this.onContainerAdd({ $container: container });\n            }\n        });\n        this.container.newContainerTitle = '';\n        this.container.addingContainer = false;\n        //container.showChildren will be undefined at the project level.\n        if (!existy(container.showChildren) || container.showChildren === false) {\n            this.onToggleChildren(false);\n        }\n    };\n    ContainerController.prototype.deleteContainer = function () {\n        this.onContainerRemove({ $container: this.container });\n    };\n    ContainerController.$inject = ['$timeout', '$location', 'appState', 'modelSvc', 'dataSvc', 'authSvc', 'episodeEdit'];\n    return ContainerController;\n}());\nvar Container = /** @class */ (function () {\n    function Container() {\n        this.bindings = {\n            container: '<',\n            containers: '<',\n            depth: '<',\n            onContainerClick: '&',\n            onContainerAdd: '&',\n            onContainerRemove: '&'\n        };\n        this.templateUrl = 'templates/container.html';\n        this.controller = ittContainer_ContainerController;\n    }\n    Container.Name = 'npContainer'; // tslint:disable-line\n    return Container;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittContainerEpisodes.ts\nvar ittContainerEpisodes_TEMPLATE = \"\\n<!-- consider breaking these into separate templates altogether, since they have different purposes -->\\n<!-- used in narrative creation -->\\n<div ng-style=\\\"{'text-indent': 1 * $ctrl.depth + 'em'}\\\">\\n  <div ng-if=\\\"!$ctrl.container.episodes.length\\\"\\n      class=\\\"container\\\"\\n      ng-class=\\\"{isOpen: $ctrl.container.wasClicked, isClosed: !$ctrl.container.wasClicked}\\\"\\n      ng-click=\\\"$ctrl.toggle();$ctrl.loadChildren()\\\"\\n      ng-bind-html=\\\"$ctrl.container.display_name\\\">\\n  </div>\\n  <div ng-if=\\\"$ctrl.container.episodes.length\\\" ng-style=\\\"{'text-indent': $ctrl.depth === 3 ? '4em' : ''}\\\">\\n    <span class=\\\"hoverIndicator\\\">\\n      <a\\n        ng-click=\\\"$ctrl.onNodeClick({node: $ctrl.container.episodes[0]})\\\"\\n        ng-bind-html=\\\"$ctrl.containers[$ctrl.container._id].display_name\\\"></a>({{$ctrl.container.status}})\\n    </span>\\n  </div>\\n</div>\\n<np-container-episodes\\n  ng-if=\\\"$ctrl.container.wasClicked\\\"\\n  ng-repeat=\\\"child in $ctrl.container.children\\\" \\n  container=\\\"$ctrl.containers[child._id]\\\"\\n  for-admin=\\\"true\\\"\\n  depth=\\\"$ctrl.depth + 1\\\"\\n  on-node-click=\\\"$ctrl.onNodeClick({ node: node })\\\">\\n</np-container-episodes>\\n\";\nvar ContainerEpisodesController = /** @class */ (function () {\n    function ContainerEpisodesController(modelSvc, appState, dataSvc) {\n        this.modelSvc = modelSvc;\n        this.appState = appState;\n        this.dataSvc = dataSvc;\n        //\n    }\n    ContainerEpisodesController.prototype.$onInit = function () {\n        this.containers = this.modelSvc.containers;\n        this.crossEpisodePath = this.appState.crossEpisodePath;\n        this.episodeId = this.appState.episodeId;\n    };\n    ContainerEpisodesController.prototype.loadChildren = function () {\n        if (this.containers[this.container._id].haveNotLoadedChildData) {\n            this.dataSvc.getContainer(this.container._id);\n        }\n    };\n    ContainerEpisodesController.prototype.toggle = function () {\n        this.container.wasClicked = !this.container.wasClicked;\n    };\n    ContainerEpisodesController.$inject = ['modelSvc', 'appState', 'dataSvc'];\n    return ContainerEpisodesController;\n}());\nvar ContainerEpisodes = /** @class */ (function () {\n    function ContainerEpisodes() {\n        this.bindings = {\n            container: '<',\n            forAdmin: '<',\n            depth: '<',\n            onNodeClick: '&'\n        };\n        this.template = ittContainerEpisodes_TEMPLATE;\n        this.controller = ContainerEpisodesController;\n    }\n    ContainerEpisodes.Name = 'npContainerEpisodes'; // tslint:disable-line\n    return ContainerEpisodes;\n}());\n\n// ittContainerEpisodes.$inject = ['modelSvc', 'recursionHelper', 'appState', 'dataSvc'];\n//\n// export default function ittContainerEpisodes(modelSvc, recursionHelper, appState, dataSvc) {\n//   return {\n//     restrict: 'A',\n//     replace: false,\n//     scope: {\n//       container: '=ittContainerEpisodes',\n//       forAdmin: '=forAdmin',\n//       onNodeClick: '&',\n//       rootContext: '='\n//     },\n//     templateUrl: \"templates/containerepisodes.html\",\n//     controller: ['$scope', function ($scope) {\n//\n//       $scope.selectEpisode = function (e) {\n//         $scope.onNodeClick({node: e});\n//         console.log('ctrl select epi', e);\n//         // $scope.emit('episodeSelected', e);\n//       };\n//     }],\n//\n//     compile: function (element) {\n//       // Use the compile function from the recursionHelper,\n//       // And return the linking function(s) which it returns\n//       return recursionHelper.compile(element, function (scope) {\n//\n//         scope.containers = modelSvc.containers;\n//         scope.crossEpisodePath = appState.crossEpisodePath;\n//         scope.episodeId = appState.episodeId;\n//\n//         scope.loadChildren = function () {\n//           if (modelSvc.containers[scope.container._id].haveNotLoadedChildData) {\n//             dataSvc.getContainer(scope.container._id);\n//           }\n//         };\n//         scope.toggle = function () {\n//           scope.container.wasClicked = !scope.container.wasClicked;\n//         };\n//         // scope.selectEpisode = function (e) {\n//         // \t// console.log(scope.container.episodes[0]);\n//         // \t// console.log('hmm', scope.onChoice);\n//         // \tscope.$emit('episodeSelected', e);\n//         // };\n//\n//       });\n//     }\n//   };\n//\n// }\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittDescriptionField.ts\n/**\n *\n * Created by githop on 6/30/16.\n */\nfunction ittDescriptionField() {\n    return {\n        restrict: 'EA',\n        scope: {\n            data: '=',\n            modelOpts: '=?'\n        },\n        template: [\n            '<div class=\"field\">',\n            '\t<div class=\"label\">Description [{{descriptionField.lang}}]</div>',\n            '\t<div class=\"input\" ng-model-options=\"descriptionField.modelOpts\" sxs-input-i18n=\"descriptionField.data.description\" x-inputtype=\"\\'textarea\\'\"></div>',\n            '</div>'\n        ].join(' '),\n        controller: ['appState', 'ittUtils', function (appState, ittUtils) {\n                var ctrl = this;\n                ctrl.lang = appState.lang;\n                if (!ittUtils.existy(ctrl.modelOpts)) {\n                    ctrl.modelOpts = { updateOn: 'default' };\n                }\n            }],\n        controllerAs: 'descriptionField',\n        bindToController: true\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittDisplaySelect.ts\n/**\n *\n * Created by githop on 6/30/16.\n */\nfunction ittDisplaySelect() {\n    return {\n        restrict: 'EA',\n        scope: {\n            data: '=',\n            itemForm: '=?',\n        },\n        template: [\n            '<div class=\"field\" ng-if=\"$ctrl.getVisibility(\\'display\\')\">',\n            '\t<div class=\"label\">Display</div>',\n            '\t<div class=\"input\">',\n            '\t\t<select ng-change=\"$ctrl.onItemFormUpdate($ctrl.data, $ctrl.itemForm)\"',\n            '\t\t\tng-model=\"$ctrl.data.layouts[$ctrl.layoutIndex]\"',\n            '\t\t\tng-options=\"{{$ctrl.setNgOpts(\\'display\\')}}\"',\n            '\t\t\titt-options-disabled=\"option.isDisabled for option in $ctrl.getSelectOpts(\\'display\\')\">',\n            '\t\t</select>',\n            '\t</div>',\n            '</div>',\n            '<div class=\"field\" ng-if=\"$ctrl.getVisibility(\\'bgImagePosition\\')\">',\n            '\t<div class=\"label\">Position</div>',\n            '\t\t<div class=\"input\">',\n            '\t\t<select ng-change=\"$ctrl.onItemFormUpdate($ctrl.data, $ctrl.itemForm)\" ng-model=\"$ctrl.itemForm.position\" ng-options=\"{{$ctrl.setNgOpts(\\'imagePosition\\')}}\"></select>',\n            '\t</div>',\n            '</div>'\n        ].join(''),\n        controller: ['$scope', 'selectService', 'ittUtils', function ($scope, selectService, ittUtils) {\n                var ctrl = this;\n                ctrl.getVisibility = selectService.getVisibility;\n                ctrl.getSelectOpts = selectService.getSelectOpts;\n                ctrl.onItemFormUpdate = selectService.onSelectChange;\n                ctrl.setNgOpts = ittUtils.setNgOpts;\n                //layout index should be 0 for images, 1 for scenes\n                ctrl.layoutIndex = (ctrl.data.producerItemType === 'image') ? 0 : 1;\n                $scope.$watch(watchTemplate, handleChange);\n                function watchTemplate() {\n                    return ctrl.data.templateUrl;\n                }\n                function handleChange(nv) {\n                    ctrl.isImageFillTemplate = (nv && nv === 'templates/item/image-fill.html');\n                }\n            }],\n        controllerAs: '$ctrl',\n        bindToController: true\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittDynamicModel.ts\n/**\n * Created by githop on 7/1/16.\n */\nittDynamicModel.$inject = ['$compile', '$parse'];\n//http://stackoverflow.com/a/32096328\nfunction ittDynamicModel($compile, $parse) {\n    return {\n        restrict: 'A',\n        terminal: true,\n        priority: 100000,\n        link: function (scope, elem) {\n            var name = $parse(elem.attr('itt-dynamic-model'))(scope);\n            elem.removeAttr('itt-dynamic-model');\n            elem.attr('ng-model', name);\n            $compile(elem)(scope);\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittEditPencil.ts\n/**\n * Created by githop on 6/16/16.\n */\nvar ittEditPencil_TEMPLATE = \"\\n<div ng-mouseenter=\\\"$ctrl.mouseEvent(true)\\\" ng-mouseleave=\\\"$ctrl.mouseEvent(false)\\\">\\n\\t<span class=\\\"pencil__content\\\" ng-transclude></span>\\n\\t<span style=\\\"text-indent: 0\\\">\\n\\t\\t<span class=\\\"edit-pencil\\\" ng-click=\\\"$ctrl.sendEdit($event)\\\" ng-if=\\\"$ctrl.showPencil || $ctrl.force\\\"></span>\\n\\t</span>\\n</div>\\n\";\nvar EditPencilController = /** @class */ (function () {\n    function EditPencilController() {\n        //\n        this.showPencil = false;\n    }\n    EditPencilController.prototype.sendEdit = function ($event) {\n        this.showPencil = false;\n        this.onEdit({ $event: $event });\n    };\n    EditPencilController.prototype.mouseEvent = function (bool) {\n        if (this.canAccess) {\n            this.showPencil = bool;\n        }\n    };\n    EditPencilController.$inject = [];\n    return EditPencilController;\n}());\nvar EditPencil = /** @class */ (function () {\n    function EditPencil() {\n        this.transclude = true;\n        this.bindings = {\n            canAccess: '<?',\n            force: '<?',\n            onEdit: '&'\n        };\n        this.template = ittEditPencil_TEMPLATE;\n        this.controller = EditPencilController;\n    }\n    EditPencil.Name = 'npEditPencil'; // tslint:disable-line\n    return EditPencil;\n}());\n\n// export default function ittEditPencil() {\n//   return {\n//     restrict: 'EA',\n//     transclude: true,\n//     scope: {\n//       canAccess: '=?',\n//       force: '=?',\n//       onEdit: '&'\n//     },\n//     template: [\n//       '<div>',\n//       '\t<span class=\"pencil__content\" ng-transclude></span>',\n//       '\t<span style=\"text-indent: 0\">',\n//       '\t\t<span class=\"edit-pencil\" ng-click=\"sendEdit($event)\" ng-if=\"showPencil || force\"></span>',\n//       '\t</span>',\n//       '</div>'\n//     ].join(' '),\n//     link: function (scope, elm) {\n//       scope.showPencil = false;\n//\n//       scope.sendEdit = sendEdit;\n//       elm.mouseenter(mouseenter);\n//       elm.mouseleave(mouseleave);\n//\n//       function sendEdit($ev) {\n//         scope.showPencil = false;\n//         scope.onEdit({$event: $ev});\n//       }\n//\n//       function mouseenter() {\n//         if (scope.canAccess === true) {\n//           scope.$apply(function () {\n//             scope.showPencil = true;\n//           });\n//         }\n//       }\n//\n//       function mouseleave() {\n//         if (scope.canAccess === true) {\n//           scope.$apply(function () {\n//             scope.showPencil = false;\n//           });\n//         }\n//       }\n//\n//     }\n//   };\n// }\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittFileField.ts\n/**\n * Created by githop on 6/30/16.\n */\nfunction ittFileField() {\n    return {\n        restrict: 'EA',\n        scope: true,\n        template: [\n            '<div class=\"field\">',\n            '\t<div class=\"label\">File',\n            '\t\t<itt-validation-tip ng-if=\"ittItemForm.itemAsset.$invalid\" text=\"File is required\"></itt-validation-tip>',\n            '\t</div>',\n            '\t<div class=\"input\" ng-include=\"\\'templates/producer/upload-producer.html\\'\"></div>',\n            '</div>'\n        ].join(' ')\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittFilesHandler.ts\n/**\n * Created by githop on 8/5/16.\n */\nfunction ittFilesHandler() {\n    return {\n        scope: {\n            onSelected: '&'\n        },\n        restrict: 'A',\n        link: function (scope, elm) {\n            elm.bind('change', function () {\n                scope.$apply(function () {\n                    console.log('changed?');\n                    scope.onSelected({ files: elm[0].files });\n                });\n            });\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittFlags.ts\n\nvar ittFlags_TEMPLATE = \"\\n<div class=\\\"field\\\">\\n  <div class=\\\"label\\\">Flags</div>\\n  <div class=\\\"input\\\">\\n    <span ng-repeat=\\\"flag in $ctrl._flags\\\">\\n      <span ng-if=\\\"flag !== 'invertColor'\\\">\\n        <label for=\\\"{{$ctrl._ids[flag]}}\\\"></label>\\n        <input id=\\\"{{$ctrl._ids[flag]}}\\\"\\n          type=\\\"checkbox\\\"\\n          itt-dynamic-model=\\\"'$ctrl.data.' + flag\\\"\\n          ng-change=\\\"$ctrl.handleChange()\\\"/>{{$ctrl._displays[flag]}}\\n      </span>\\n      <span ng-if=\\\"flag === 'invertColor'\\\">\\n        <label for=\\\"{{$ctrl._ids[flag]}}\\\"></label>\\n        <input id=\\\"{{$ctrl._ids[flag]}}\\\"\\n          type=\\\"checkbox\\\"\\n          ng-model=\\\"$ctrl.itemForm.color\\\"\\n          ng-true-value=\\\"'Invert'\\\"\\n          ng-false-value=\\\"''\\\"\\n          ng-change=\\\"$ctrl.handleChange()\\\"/>{{$ctrl._displays[flag]}}\\n      </span>\\n    </span>\\n  </div>\\n</div>\\n\";\nvar ittFlags_FlagsController = /** @class */ (function () {\n    function FlagsController($timeout, selectService) {\n        this.$timeout = $timeout;\n        this.selectService = selectService;\n        this._displays = {\n            required: 'Required',\n            stop: 'Stop item',\n            cosmetic: 'Cosmetic',\n            chapter_marker: 'Chapter Event',\n            invertColor: 'Invert Color'\n        };\n        this._ids = {\n            required: 'itemRequired',\n            stop: 'itemStop',\n            cosmetic: 'itemCosmetic',\n            chapter_marker: 'itemChapter',\n            invertColor: 'Invert'\n        };\n        //\n    }\n    FlagsController.prototype.$onInit = function () {\n        this._flags = angular.copy(this.flags);\n    };\n    FlagsController.prototype.$onChanges = function (changesObj) {\n        var _this = this;\n        if (changesObj.templateUrl) {\n            var _a = changesObj.templateUrl, previousValue_1 = _a.previousValue, currentValue_1 = _a.currentValue;\n            this.$timeout(function () { return _this.setFlags(currentValue_1, previousValue_1); });\n        }\n    };\n    FlagsController.prototype.handleChange = function () {\n        if (this.data.hasOwnProperty('stop')) {\n            this.selectService.onSelectChange(this.data, this.itemForm);\n        }\n    };\n    FlagsController.prototype.setFlags = function (newVal, oldVal) {\n        //reset invert color when switching between templates.\n        // only reset if we are the right type and the value changes\n        // e.g. ignore undefined -> string\n        if (newVal !== oldVal && typeof newVal === typeof oldVal) {\n            this.itemForm.color = '';\n        }\n        if (newVal) {\n            if (newVal === 'templates/item/image-fill.html') {\n                this._flags = this._flags.filter(function (f) {\n                    return f !== 'stop';\n                });\n            }\n            else {\n                this._flags = this.flags;\n            }\n            if (!FlagsController._h1OrH2(newVal)) {\n                if (this._isEditingItemForm()) {\n                    this.itemForm.color = '';\n                }\n                this._flags = this._flags.filter(function (f) {\n                    return f !== 'chapter_marker';\n                });\n            }\n            else {\n                this._flags = this.flags;\n                if (this._isEditingItemForm()) {\n                    this.itemForm.color = 'Invert';\n                }\n            }\n        }\n    };\n    FlagsController._h1OrH2 = function (url) {\n        return (url === 'templates/item/text-h1.html' || url === 'templates/item/text-h2.html');\n    };\n    FlagsController.prototype._isEditingItemForm = function () {\n        return existy(this.itemForm) && this.data._id === 'internal:editing';\n    };\n    FlagsController.$inject = ['$timeout', 'selectService'];\n    return FlagsController;\n}());\nvar Flags = /** @class */ (function () {\n    function Flags() {\n        this.bindings = {\n            flags: '=',\n            data: '=',\n            templateUrl: '@',\n            //for the invertColor option\n            itemForm: '=?'\n        };\n        this.template = ittFlags_TEMPLATE;\n        this.controller = ittFlags_FlagsController;\n    }\n    Flags.Name = 'npFlags'; // tslint:disable-line\n    return Flags;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittFlotChart.ts\n// an angular.js wrapper for flot charting library -http://www.flotcharts.org/ but using flot.pie.js\nfunction ittFlotr2Chart() {\n    var uniqueId = 1;\n    return {\n        restrict: 'E',\n        scope: {\n            type: '@',\n            height: '@',\n            width: '@',\n            title: '=title',\n            options: '@',\n            data: '@'\n        },\n        template: '<div class=\"flotContainer\"><div class=\"chartContainer\" id=\"chartContainer\" aria-label=\"{{chartLabel}}\"></div><div class=\"legendContainer\" id=\"legendContainer\"></div></div>',\n        link: function (scope, element, attrs) {\n            var draw = function (el, d, o) {\n                scope.chartLabel = createLabel(d);\n                $.plot(el, d, o);\n                el.show();\n            };\n            var chartContainer = $(\"#chartContainer\");\n            chartContainer.attr(\"id\", \"chartContainer\" + uniqueId);\n            var legendContainer = $(\"#legendContainer\");\n            legendContainer.attr(\"id\", \"legendContainer\" + uniqueId++);\n            var legendFormatterFn = function (label, series) {\n                return Math.round(series.percent) + '% (' + series.data[0][1] + '): ' + label;\n            };\n            var labelFormatterFn = function (label, series) {\n                return '<div style=\"padding: 3px; font-size: 80%\">' + Math.round(series.percent) + '%</div>';\n            };\n            // defaults\n            scope.chartOptions = {\n                series: {\n                    pie: {\n                        show: true,\n                        label: {\n                            show: true,\n                            background: {\n                                opacity: 0.7\n                            },\n                            formatter: labelFormatterFn\n                        }\n                    }\n                },\n                legend: {\n                    show: true,\n                    labelFormatter: legendFormatterFn,\n                    //labelBoxBorderColor: color\n                    noColumns: 1,\n                    position: \"sw\",\n                    margin: 0,\n                    backgroundColor: null,\n                    backgroundOpacity: 1,\n                    sorted: 'descending',\n                    container: legendContainer // or jQuery object/DOM element/jQuery expression\n                },\n                grid: {\n                    hoverable: true\n                },\n                tooltip: true,\n                tooltipOpts: {\n                    content: \"%y.0, %s\",\n                    shifts: {\n                        x: 20,\n                        y: 0\n                    },\n                    defaultTheme: false\n                }\n            };\n            //  TODO merge scope.options into chartOptions\n            // if (scope.options) {\n            // \t var newOptions = JSON.parse(scope.options);\n            // }\n            // watch width for both init and for resize:\n            scope.$watch(function () {\n                return chartContainer.width();\n            }, function (w) {\n                if (w > 0) {\n                    chartContainer.css({\n                        height: w\n                    });\n                    draw(chartContainer, JSON.parse(scope.data), scope.chartOptions);\n                    // Now that we have a height we can safely observe changes in the data:\n                    scope.observeData = attrs.$observe('data', function (value) {\n                        scope.data = JSON.parse(value);\n                        draw(chartContainer, scope.data, scope.chartOptions);\n                    });\n                    scope.$on('$destroy', scope.observeData);\n                    // Options never change (for now) so disabling the watcher\n                    // attrs.$observe('options', function (value) {\n                    // \tscope.options = value;\n                    // \tdraw(chartContainer, scope.data, scope.options);\n                    // });\n                }\n            });\n            var addPercent = function (data) {\n                var total = 0;\n                for (var i = 0; i < data.length; i++) {\n                    total += data[i].data;\n                }\n                for (var y = 0; y < data.length; y++) {\n                    data[y].percent = (data[y].data / total) * 100;\n                }\n                return data;\n            };\n            var createLabel = function (data) {\n                var labelText = \"\";\n                data = addPercent(data);\n                for (var i = 0; i < data.length; i++) {\n                    labelText += Math.round(data[i].percent) + \"% of users totaling \" + data[i].data + \" choose \\'\" + data[i].label + \"\\'. \";\n                }\n                return labelText;\n            };\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/guest-accessible-url/npGuestAccessibleUrl.ts\n\nvar npGuestAccessibleUrl_TEMPLATE = \"\\n<div ng-if=\\\"!$ctrl.clipboardMode\\\">\\n  <div ng-if=\\\"$ctrl.narrative.guest_access_allowed === true\\\">\\n    <label for=\\\"{{$ctrl.display.id[$ctrl.type]}}\\\">Guest Accessible URL:\\n      <itt-validation-tip ng-if=\\\"$ctrl[$ctrl.type].error\\\" text=\\\"{{$ctrl[$ctrl.type].error}}\\\"></itt-validation-tip>\\n      <p class=\\\"--break-word\\\">\\n        <small ng-class=\\\"{ 'error-red': $ctrl[$ctrl.type].error, unselectable: $ctrl[$ctrl.type].error }\\\">\\n          {{$ctrl.formatGuestAccessibleUrl()}}\\n        </small>\\n      </p>\\n    </label>\\n    <input\\n      id=\\\"{{$ctrl.display.id[$ctrl.type]}}\\\"\\n      type=\\\"text\\\"\\n      name=\\\"path\\\"\\n      placeholder=\\\"{{$ctrl.display.placeholder}}\\\"\\n      itt-valid-pathslug\\n      narrative-id=\\\"{{$ctrl.narrative._id}}\\\"\\n      ng-model=\\\"$ctrl[$ctrl.type].path_slug.en\\\">\\n  </div>\\n</div>\\n<np-clipboard\\n  ng-if=\\\"$ctrl.clipboardMode\\\"\\n  source-text=\\\"{{$ctrl.formatUrlToCopy()}}\\\"\\n  on-copy=\\\"$event.stopPropagation()\\\">\\n</np-clipboard>\\n\";\nvar npGuestAccessibleUrl_GuestAccessibleUrlController = /** @class */ (function () {\n    function GuestAccessibleUrlController() {\n        this.protocol = 'https://';\n        this.domain = '.narrasys.com/';\n        //\n    }\n    GuestAccessibleUrlController.prototype.$onInit = function () {\n        this.type = existy(this.timeline) ? 'timeline' : 'narrative';\n        this.display = {\n            id: {\n                timeline: 'tlPath',\n                narrative: 'nPath'\n            },\n            placeholder: 'human-friendly-link-to ' + this.type\n        };\n        var _subDomain = existy(this.subDomain) && this.subDomain ||\n            existy(this.narrative.narrative_subdomain) && this.narrative.narrative_subdomain;\n        this.pathPrefix = this.protocol + _subDomain + this.domain;\n    };\n    GuestAccessibleUrlController.prototype.formatLTIUrl = function () {\n        if (existy(this.narrative)) {\n            if (this.type === 'timeline') {\n                return this.pathPrefix + 'auth/lti?narrative=' + this.narrative._id + '&timeline=' + this.timeline._id;\n            }\n            return this.pathPrefix + 'auth/lti?narrative=' + this.narrative._id;\n        }\n    };\n    GuestAccessibleUrlController.prototype.formatGuestAccessibleUrl = function () {\n        var hasNarrative = existy(this.narrative);\n        var hasNarrativePathslug = hasNarrative\n            && existy(this.narrative.path_slug)\n            && existy(this.narrative.path_slug.en);\n        var hasTimeline = existy(this.timeline);\n        var hasTimelinePathslug = hasTimeline && existy(this.timeline.path_slug) && existy(this.timeline.path_slug.en);\n        if (this.type === 'timeline' && hasTimelinePathslug) {\n            return this.pathPrefix + '#/story/' + this.narrative.path_slug.en + '/' + slugify(this.timeline.path_slug.en);\n        }\n        if (hasNarrativePathslug) {\n            return this.pathPrefix + '#/story/' + slugify(this.narrative.path_slug.en);\n        }\n    };\n    GuestAccessibleUrlController.prototype.formatUrlToCopy = function () {\n        if (existy(this.narrative) && this.narrative.guest_access_allowed === false) {\n            return this.formatLTIUrl();\n        }\n        else {\n            return this.formatGuestAccessibleUrl();\n        }\n    };\n    GuestAccessibleUrlController.$inject = [];\n    return GuestAccessibleUrlController;\n}());\nvar GuestAccessibleUrl = /** @class */ (function () {\n    function GuestAccessibleUrl() {\n        this.bindings = {\n            narrative: '<',\n            timeline: '<?',\n            customer: '<?',\n            clipboardMode: '@?',\n            subDomain: '@?'\n        };\n        this.template = npGuestAccessibleUrl_TEMPLATE;\n        this.controller = npGuestAccessibleUrl_GuestAccessibleUrlController;\n    }\n    GuestAccessibleUrl.Name = 'npGuestAccessibleUrl'; // tslint:disable-line\n    return GuestAccessibleUrl;\n}());\n\n/* tslint:disable */\n// export default function ittGuestAccessibleUrl() {\n//   return {\n//     restrict: 'EA',\n//     template: [\n//       '<div ng-if=\"!$ctrl.clipboardMode\">',\n//       ' <div ng-if=\"$ctrl.narrative.guest_access_allowed === true\">',\n//       '\t    <label for=\"{{$ctrl.display.id[$ctrl.type]}}\">Guest Accessible URL:',\n//       '       <itt-validation-tip ng-if=\"$ctrl[$ctrl.type].error\" text=\"{{$ctrl[$ctrl.type].error}}\"></itt-validation-tip>',\n//       '       <p class=\"--break-word\"><small ng-class=\"{ \\'error-red\\': $ctrl[$ctrl.type].error, unselectable: $ctrl[$ctrl.type].error }\">{{$ctrl.formatGuestAccessibleUrl()}}</small></p>',\n//       '     </label>',\n//       '     <input id=\"{{$ctrl.display.id[$ctrl.type]}}\" type=\"text\" name=\"path\" placeholder=\"{{$ctrl.display.placeholder}}\" itt-valid-pathslug narrative-id=\"{{$ctrl.narrative._id}}\" ng-model=\"$ctrl[$ctrl.type].path_slug.en\">',\n//       ' </div>',\n//       '</div>',\n//       '<a ng-if=\"$ctrl.clipboardMode\" itt-clipboard source-text=\"{{$ctrl.formatUrlToCopy()}}\" on-copy=\"$event.stopPropagation()\"></a>'\n//     ].join(''),\n//     scope: {\n//       narrative: '=',\n//       timeline: '=?',\n//       customer: '=?',\n//       clipboardMode: '@?',\n//       subDomain: '@?'\n//     },\n//     controller: ['ittUtils', function (ittUtils) {\n//       var ctrl = this;\n//       var _existy = ittUtils.existy;\n//       var _slugify = ittUtils.slugify;\n//       var protocol = 'https://';\n//       var domain = '.narrasys.com/';\n//       var pathPrefix;\n//\n//       angular.extend(ctrl, {\n//         type: _existy(ctrl.timeline) ? 'timeline' : 'narrative',\n//         display: null,\n//         formatLTIUrl: formatLTIUrl,\n//         formatGuestAccessibleUrl: formatGuestAccessibleUrl,\n//         formatUrlToCopy: formatUrlToCopy\n//       });\n//\n//       onInit();\n//\n//       function onInit() {\n//         ctrl.display = {\n//           id: {\n//             timeline: 'tlPath',\n//             narrative: 'nPath'\n//           },\n//           placeholder: 'human-friendly-link-to ' + ctrl.type\n//         };\n//         var _subDomain = _existy(ctrl.subDomain) && ctrl.subDomain || _existy(ctrl.narrative.narrative_subdomain) && ctrl.narrative.narrative_subdomain;\n//         pathPrefix = protocol + _subDomain + domain;\n//       }\n//\n//       function formatUrlToCopy() {\n//         if (_existy(ctrl.narrative) && ctrl.narrative.guest_access_allowed === false) {\n//           return formatLTIUrl();\n//         } else {\n//           return formatGuestAccessibleUrl();\n//         }\n//       }\n//\n//       function formatLTIUrl() {\n//         if (_existy(ctrl.narrative)) {\n//           if (ctrl.type === 'timeline') {\n//             return pathPrefix + 'auth/lti?narrative=' + ctrl.narrative._id + '&timeline=' + ctrl.timeline._id;\n//           }\n//           return pathPrefix + 'auth/lti?narrative=' + ctrl.narrative._id;\n//         }\n//       }\n//\n//       function formatGuestAccessibleUrl() {\n//         var hasNarrative = _existy(ctrl.narrative);\n//         var hasNarrativePathslug = hasNarrative && _existy(ctrl.narrative.path_slug) && _existy(ctrl.narrative.path_slug.en);\n//         var hasTimeline = _existy(ctrl.timeline);\n//         var hasTimelinePathslug = hasTimeline && _existy(ctrl.timeline.path_slug) && _existy(ctrl.timeline.path_slug.en);\n//         if (ctrl.type === 'timeline' && hasTimelinePathslug) {\n//           return pathPrefix + '#/story/' + ctrl.narrative.path_slug.en + '/' + _slugify(ctrl.timeline.path_slug.en);\n//         }\n//\n//         if (hasNarrativePathslug) {\n//           return pathPrefix + '#/story/' + _slugify(ctrl.narrative.path_slug.en);\n//         }\n//\n//       }\n//\n//     }],\n//     controllerAs: '$ctrl',\n//     bindToController: true\n//   };\n// }\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittHighlightSelect.ts\n/**\n *\n * Created by githop on 6/30/16.\n */\nfunction ittHighlightSelect() {\n    return {\n        restrict: 'EA',\n        template: [\n            '<div class=\"field\">',\n            '\t<div class=\"label\">Highlight<span ng-if=\"episode\"> Style</spann></div>',\n            '\t<div class=\"input\">',\n            '\t\t<select size=\"1\" ng-model=\"itemForm.highlight\">',\n            '\t\t\t<option ng-if=\"episode\" value=\"\">(Default)</option>',\n            '\t\t\t<option ng-if=\"item._type === \\'Scene\\'\" value=\"\">(Inherit from episode)</option>',\n            '\t\t\t<option ng-if=\"item._type !== \\'Scene\\' && !episode\" value=\"\">(Inherit from layout)</option>',\n            '\t\t\t<option value=\"None\">No highlight</option>',\n            '\t\t\t<option value=\"Solid\">Solid</option>',\n            '\t\t\t<option value=\"Border\">Border</option>',\n            '\t\t\t<option value=\"Side\">Side</option>',\n            '\t\t\t<option value=\"Bloom\">Translucent</option>',\n            '\t\t\t<option value=\"Tilt\">Tilt</option>',\n            '\t\t</select>',\n            '\t</div>',\n            '</div>'\n        ].join(' ')\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittIframe.ts\n/**\n *\n * Created by githop on 12/8/15.\n */\n/**\n * @ngdoc directive\n * @name iTT.directive:ittIframe\n * @restrict 'E'\n * @scope\n * @description\n * Directive used to display iframed content\n * @requires appState\n * @param {String} src The Source URL for the iframe\n * @param {String=} contenttype The mime type of the iframed content\n * @param {Object} item The Item object, aka an Event from the Database\n * @example\n * <pre>\n *     <itt-iframe src=\"<url>\" contenttype=\"text/html\" item=\"<itemObject>\"></itt-iframe>\n * </pre>\n */\nittIframe.$inject = ['appState'];\nfunction ittIframe(appState) {\n    return {\n        restrict: 'E',\n        scope: {\n            src: '@',\n            contenttype: '@',\n            item: '&'\n        },\n        replace: true,\n        templateUrl: 'templates/iframe.html',\n        controller: ['$scope', 'ittUtils', 'appState',\n            function ($scope, ittUtils, appState) {\n                // moved this all back out of the controller to avoid leaking $scope.sandbox across directives\n                var _ctrl = this; //jshint ignore:line\n                var _sandboxAttrs = 'allow-forms allow-same-origin allow-scripts';\n                var _popupsTopWindow = ' allow-top-navigation allow-popups';\n                _ctrl.isLoading = true;\n                _ctrl.isTouchDevice = appState.isTouchDevice;\n                function validateFrameUrl(url) {\n                    if (ittUtils.isValidURL(url)) {\n                        _ctrl.isLoading = false;\n                        return true;\n                    }\n                    else {\n                        _ctrl.isLoading = true;\n                        return false;\n                    }\n                }\n                //set scrolling to no if we're on an ipad\n                //and we're attempting to iframe our own player\n                //this stops the player from expanding the iframe its contained in.\n                if (_ctrl.isTouchDevice && /inthetelling.com\\/#/.test(_ctrl.src)) {\n                    _ctrl.iOSScroll = 'no';\n                }\n                _ctrl.watcher = $scope.$watchGroup([function () {\n                        return _ctrl.src;\n                    }, function () {\n                        return _ctrl.contenttype;\n                    }], function () {\n                    if (!_ctrl.src || !validateFrameUrl(_ctrl.src)) {\n                        return;\n                    }\n                    if (_ctrl.contenttype) {\n                        // Uploads will always have a content type; we can trust it:\n                        _ctrl.sandbox = (_ctrl.contenttype === 'text/html') ? _sandboxAttrs : undefined;\n                    }\n                    else {\n                        // no content type for links, so we have to fall back on string matching.\n                        // Ideally we'd only apply the sandbox to html files, but that's hard to match, so for now we'll\n                        // default to sandbox unless proven otherwise.\n                        _ctrl.sandbox = _sandboxAttrs;\n                        // Remove it for PDFs (for now; probably we'll be growing this list later on)\n                        if (_ctrl.src.match(/.pdf$/)) {\n                            delete _ctrl.sandbox;\n                        }\n                        //give ourselves more permission\n                        if (_ctrl.src.match(/inthetelling.com\\/#/)) {\n                            _ctrl.sandbox += _popupsTopWindow;\n                        }\n                        //for certain browsers, see: TS-757 and TS-773\n                        if (_ctrl.src.match(/inthetelling.com\\/#/) && _ctrl.src.indexOf('?') === -1) {\n                            _ctrl.src += '?embed=1';\n                        }\n                        // Looks like we have some episodes where production used Links item types to point to asset uploads,\n                        // because upload templates  were broken (see TS-839). Would have been nice if they'd reported that\n                        // so we could fix it, but they didn't, so we'll clean up after them.\n                        // These won't have a file extension to match on, so we'll have to just\n                        // assume that anything in our upload space won't have a framebreaker.\n                        // URLs are either https://s3.amazonaws.com/ITT_Assets or https://s3.amazonaws.com/itt.user.uploads\n                        // TODO check to see if they always used ITT_Assets -- if so we can still protect against end-user uploads\n                        // of framebreaking files by using .match(/amazonaws.com\\/ITT/) instead\n                        if (_ctrl.src.match(/amazonaws.com\\/itt/i)) {\n                            delete _ctrl.sandbox;\n                        }\n                    }\n                });\n                $scope.$on('$destroy', function () {\n                    _ctrl.watcher();\n                });\n            }],\n        controllerAs: '$ctrl',\n        bindToController: true,\n        link: function (scope, elm) {\n            var _btnConst = 95;\n            var _unWatch = angular.noop;\n            var _toolbarH = 75;\n            var _timelineBarH = 145;\n            var _offsetConst = _toolbarH + _timelineBarH;\n            var _modalWrapper = $('.w-modal');\n            var _otherModal = $('.modal');\n            var _frameBottom = $(window).height() - _offsetConst;\n            if (_otherModal.length > 0 && appState.isTouchDevice) {\n                //set dimenions on <iframe>\n                scope.$ctrl.styles = { 'height': _frameBottom + 'px' };\n                //set dimensions on iframeContainer div\n                elm.css('height', _frameBottom);\n                scope.$watch(function () {\n                    return elm.height();\n                }, function (newVal, oldval) {\n                    if (newVal !== oldval) {\n                        scope.$ctrl.styles = { 'height': newVal + 'px' };\n                        elm.css('height', _frameBottom);\n                    }\n                });\n            }\n            //search for the 'w-modal\" class, if we find one,\n            //then we know that we are using windowfg template, which seems to handle modals.\n            if (_modalWrapper.length > 0) {\n                setIframeHeight();\n            }\n            else {\n                resizeIframeReviewMode();\n            }\n            function setIframeHeight() {\n                var y = _modalWrapper.height() - _btnConst;\n                elm.css('height', y);\n                _modalWrapper.css('overflow-y', 'hidden');\n                _unWatch = scope.$watch(function () {\n                    return _modalWrapper.height();\n                }, function (newVal, oldVal) {\n                    if (newVal !== oldVal) {\n                        var newY = newVal - _btnConst;\n                        elm.css('height', newY);\n                    }\n                });\n            }\n            function resizeIframeReviewMode() {\n                //only resize iframe in discover mode for the narrasys pro template, career playbook (at the moment)\n                if (appState.viewMode === 'discover'\n                    && appState.resizeIframeReviewMode\n                    && !appState.isTouchDevice) {\n                    elm.css('height', _frameBottom);\n                }\n            }\n            scope.$on('$destroy', function () {\n                _unWatch();\n            });\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittImageField.ts\n/**\n * Created by githop on 6/30/16.\n */\nfunction ittImageField() {\n    return {\n        restrict: 'EA',\n        template: [\n            '<div class=\"field\" ng-show=\"selectService.getVisibility(\\'imageUpload\\')\">',\n            '\t<div class=\"label\">Image',\n            '\t\t<itt-validation-tip ng-if=\"ittItemForm.itemAsset.$invalid\" text=\"Image is required\"></itt-validation-tip>',\n            '\t</div>',\n            '\t<div class=\"input\" ng-include=\"\\'templates/producer/upload-producer.html\\'\"></div>',\n            '</div>'\n        ].join(' ')\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittItem.ts\nittItem.$inject = ['$http', '$timeout', '$interval', 'config', 'authSvc', 'appState', 'analyticsSvc', 'timelineSvc', 'modelSvc', 'selectService', 'playbackService', 'urlService', 'validationSvc'];\nfunction ittItem($http, $timeout, $interval, config, authSvc, appState, analyticsSvc, timelineSvc, modelSvc, selectService, playbackService, urlService, validationSvc) {\n    return {\n        restrict: 'A',\n        replace: false,\n        scope: {\n            item: '=ittItem'\n        },\n        template: function (el, attrs) {\n            if (attrs.forcetemplate) {\n                return '<div ng-include=\"\\'templates/item/' + attrs.forcetemplate + '.html\\'\"></div>';\n            }\n            else {\n                return '<div ng-include=\"item.templateUrl\"></div>';\n            }\n        },\n        controller: 'ItemController',\n        link: function (scope, element) {\n            //scope.user = appState.user;\n            scope.appState = appState; // to get searchText\n            scope.userHasRole = authSvc.userHasRole;\n            if (scope.item.avatar_id) {\n                scope.item.avatar = modelSvc.assets[scope.item.avatar_id];\n            }\n            if (scope.item._id === 'internal:editing') {\n                element.addClass('noTransitions');\n            }\n            else {\n                if (authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin') || scope.item.user_id === appState.user._id) {\n                    scope.item.editableByThisUser = true;\n                }\n            }\n            scope.handleOutgoingLinkDisplay = handleOutgoingLinkDisplay;\n            function handleOutgoingLinkDisplay() {\n                if (scope.item.url != null && scope.item.url_status != null && scope.item.target != null) {\n                    var _a = scope.item, url = _a.url, target = _a.target, url_status = _a.url_status;\n                    var isMixedContent = validationSvc.mixedContentUrl(url);\n                    var canEmbed = validationSvc.urlIsEmbeddable(url, url_status);\n                    //open in new tab\n                    return (!canEmbed || target === '_blank') || isMixedContent;\n                }\n            }\n            scope.toggleDetailView = function () {\n                // console.log(\"Item toggleDetailView\");\n                if (scope.item.showInlineDetail) {\n                    // if inline detail view is visible, close it. (If a modal is visible, this is inaccessible anyway, so no need to handle that case.)\n                    scope.item.showInlineDetail = false;\n                }\n                else {\n                    timelineSvc.pause();\n                    scope.captureInteraction();\n                    if (element.width() > 450) {\n                        // show detail inline if there's room for it:\n                        scope.item.showInlineDetail = true;\n                    }\n                    else {\n                        // otherwise pop a modal:\n                        appState.itemDetail = { item: scope.item, animate: true };\n                    }\n                }\n            };\n            var KeyCodes = {\n                ENTER: 13,\n                SPACE: 32\n            };\n            scope.toggleDetailOnKeyPress = function ($event) {\n                var e = $event;\n                var passThrough = true;\n                switch (e.keyCode) {\n                    case KeyCodes.ENTER:\n                        scope.toggleDetailView();\n                        passThrough = false;\n                        break;\n                    case KeyCodes.SPACE:\n                        scope.toggleDetailView();\n                        passThrough = false;\n                        break;\n                    default:\n                        passThrough = true;\n                        break;\n                }\n                if (!passThrough) {\n                    $event.stopPropagation();\n                    $event.preventDefault();\n                }\n            };\n            scope.forceModal = function (doAnimate) {\n                if (doAnimate === undefined) {\n                    doAnimate = true;\n                }\n                timelineSvc.pause();\n                appState.itemDetail = { item: scope.item, animate: doAnimate };\n            };\n            scope.outgoingLinkOnKeyPress = function (url, $event) {\n                var e = $event;\n                var passThrough = true;\n                switch (e.keyCode) {\n                    case KeyCodes.ENTER:\n                        scope.outgoingLink(url);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.SPACE:\n                        scope.outgoingLink(url);\n                        passThrough = false;\n                        break;\n                    default:\n                        passThrough = true;\n                        break;\n                }\n                if (!passThrough) {\n                    $event.stopPropagation();\n                    $event.preventDefault();\n                }\n            };\n            scope.outgoingLink = function (url) {\n                timelineSvc.pause();\n                scope.captureInteraction();\n                //check to see if item URL is from a video; i.e. youtube or html5\n                //then do the right thing; i.e. ensure linked to video resumes from\n                //current time.\n                if (urlService.isVideoUrl(url)) {\n                    playbackService.pause(scope.item._id);\n                    var curTime = Math.floor(playbackService.getCurrentTime(scope.item._id)) || 0;\n                    url = urlService.getOutgoingUrl(url, curTime);\n                }\n                if (scope.item.targetTop) {\n                    $timeout(function () {\n                        window.location.href = url;\n                    });\n                }\n                else {\n                    window.open(url);\n                }\n            };\n            scope.editItem = function () {\n                appState.editEvent = scope.item;\n                appState.editEvent.templateOpts = selectService.getTemplates(scope.item.producerItemType);\n                //second arg to onSelectChange is the itemForm, which is created in ittItemEditor and\n                //we do not have access here. Note that itemForm is only really used in background Images.\n                //hack fix is to pass in an empty object, and selectService will add the necessary itemForm\n                //props.\n                var itemForm = selectService.setupItemForm(appState.editEvent.styles, 'item');\n                selectService.onSelectChange(appState.editEvent, itemForm);\n                appState.videoControlsActive = true; // TODO see playerController showControls; this may not be sufficient on touchscreens\n                appState.videoControlsLocked = true;\n            };\n            scope.captureInteraction = function () {\n                analyticsSvc.captureEventActivity(\"clicked\", scope.item._id);\n            };\n            // HACK: need to capture embedded links on item enter, since they're automatically 'clicked'\n            // TODO timelineSvc should be able to inform the item directive directly that enter or exit has happened, $watch is silly\n            if (scope.item.templateUrl === 'templates/item/link-embed.html') {\n                var captureEmbed = scope.$watch(function () {\n                    return playbackService.getMetaProp('time') > scope.item.start_time;\n                }, function (x) {\n                    if (x) {\n                        scope.captureInteraction();\n                        captureEmbed();\n                    }\n                });\n            }\n            // HACK not sure why but modelSvc.resolveEpisodeAssets isn't always doing the job.\n            // (Possibly a race condition?)  Quick fix here to resolve it:\n            if (scope.item.asset_id && !scope.item.asset) {\n                scope.item.asset = modelSvc.assets[scope.item.asset_id];\n            }\n            // TODO make credly badge its own directive instead of including it here\n            if (scope.item.data) {\n                scope.plugin = scope.item.data._plugin;\n                scope.plugin._type = scope.item.data._pluginType;\n                // BEGIN credly badge\n                if (scope.plugin._type === 'credlyBadge') {\n                    // console.log(\"credly\");\n                    // have analytics record that this event has been reached, so it can be used as a trigger for other achievements\n                    analyticsSvc.captureEventActivity(\"viewed\", scope.item._id);\n                    if (appState.user.roles && appState.user.roles.length === 1 && appState.user.roles[0] === \"guest\") {\n                        scope.plugin.eligibleForBadges = false;\n                    }\n                    else {\n                        scope.plugin.eligibleForBadges = true;\n                        if (appState.user.emails) {\n                            scope.plugin.userEmail = appState.user.emails[0];\n                        }\n                        else {\n                            scope.plugin.userEmail = '';\n                        }\n                        scope.plugin.totalAchieved = 0;\n                    }\n                    scope.checkBadgeEligibility = function () {\n                        // console.log('checkBadgeEligibility');\n                        if (!scope.plugin.eligibleForBadges) {\n                            return;\n                        }\n                        angular.forEach(scope.plugin.requirements, function (req) {\n                            if (!req.achieved) {\n                                analyticsSvc.readEventActivity(req.eventId, req.activity)\n                                    .then(function (achieved) {\n                                    req.achieved = achieved;\n                                    scope.countAchievements(); // can't just do totalAchieved++ here: .then() happens asynch to the forEach, so scoping problems\n                                });\n                            }\n                            scope.countAchievements(); // catch the case where all were already marked\n                        });\n                    };\n                    scope.countAchievements = function () {\n                        var count = 0;\n                        angular.forEach(scope.plugin.requirements, function (req) {\n                            if (req.achieved) {\n                                count = count + 1;\n                            }\n                        });\n                        scope.plugin.totalAchieved = count;\n                        if (scope.plugin.totalAchieved === scope.plugin.requirements.length) {\n                            // HACK TODO we need to implement a real way for items to control the visibility of other items or scenes.\n                            // The silly workaround here only works (for some poorly-defined version of 'works') because USC episodes only have one badge\n                            modelSvc.episodes[appState.episodeId].styleCss = modelSvc.episodes[appState.episodeId].styleCss + \" uscHackUserHasBadge\";\n                        }\n                    };\n                    // on link:\n                    scope.checkBadgeEligibility();\n                    // slow poll after that, up to some reasonable time limit\n                    var pollLimit = 0;\n                    scope.badgePoll = $interval(function () {\n                        // console.log('poll', pollLimit);\n                        pollLimit++;\n                        if (scope.item.isCurrent || appState.viewMode === 'review') {\n                            scope.checkBadgeEligibility();\n                        }\n                        if (pollLimit > 60) {\n                            $interval.cancel(scope.badgePoll);\n                        }\n                    }, 10000);\n                    scope.$on('$destroy', function () {\n                        $interval.cancel(scope.badgePoll);\n                    });\n                    scope.badger = function () {\n                        scope.plugin.gettingBadge = true;\n                        $http({\n                            method: 'GET',\n                            url: config.apiDataBaseUrl + '/v1/send_credly_badge?badge_id=' + scope.plugin.credlyBadgeId + '&email=' + scope.plugin.userEmail\n                        })\n                            .success(function (data) {\n                            // TODO check the data to make sure it's not status: \"Badge previously sent.\"\n                            scope.checkBadgeEligibility();\n                            // console.log(\"SUCCESS\", data);\n                            if (data.status === 'Badge previously sent.') {\n                                scope.plugin.alreadyHadBadge = true;\n                            }\n                            scope.plugin.gotBadge = true;\n                        })\n                            .error(function () {\n                            scope.plugin.gettingBadge = false;\n                            scope.plugin.error = true; // TEMP HACK\n                        });\n                    };\n                }\n                // END credly badge\n            }\n            // end plugin\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittItemDetailModal.ts\n/**\n * @ngdoc directive\n * @name iTT.directive:ittItemDetailModal\n * @restrict 'A'\n * @scope\n * @description\n * For opening modals with event objects.\n * Currently resides in player.html and is passed the item data via appState.\n * Modal is invoked via forceModal() $scope method in ittItem.\n * forceModal() accepts a bool as param, and sets the item on the appState.\n * The modal transition is animated based upon the boolean param passed to forceModal()\n * @requires iTT.service:appState\n * @param {Object} item Event object to display in modal\n */\nittItemDetailModal.$inject = ['appState'];\nfunction ittItemDetailModal(appState) {\n    return {\n        restrict: 'A',\n        replace: true,\n        scope: {\n            item: '=ittItemDetailModal'\n        },\n        templateUrl: 'templates/item/modal.html',\n        link: function (scope) {\n            scope.item = scope.item.item;\n            if (!scope.item.animate) {\n                scope.modalStyle = { 'transition': 'none' };\n            }\n            var baseStyle = { 'bottom': '0', 'padding-top': '5%' };\n            var imgStyle = { 'overflow-y': 'auto', 'top': '40%', 'height': '85%', 'z-index': '11' };\n            if (scope.item.isVideoUrl) {\n                scope.modalStyle = angular.extend(scope.modalStyle, { 'padding-top': '5%' });\n            }\n            else if (scope.item.producerItemType === 'image') {\n                scope.modalStyle = angular.extend(scope.modalStyle, imgStyle);\n            }\n            else {\n                scope.modalStyle = angular.extend(scope.modalStyle, baseStyle);\n            }\n            scope.dismiss = function () {\n                appState.itemDetail = false;\n            };\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittItemEditor.ts\n/*jshint sub:true*/\n/*\n TODO: right now we're re-building the episode structure on every keystroke.  That's a tiny bit wasteful of cpu :)  At the very least, debounce input to a more reasonable interval\n\n\n */\n/**\n * @ngDoc directive\n * @name iTT.directive:ittItemEditor\n * @restrict 'A'\n * @scope\n * @description\n * Directive for editing items in the producer / editor interface\n * @requires $rootScope\n * @requires $timeOut\n * @requires errorSvc\n * @requires appState\n * @requires modelSvc\n * @requires timelineSvc\n * @requires awsSvc\n * @requires dataSvc\n * @param {Object} Item object representing an Event object from the DB to be edited.\n */\nittItemEditor.$inject = ['$rootScope', 'errorSvc', 'appState', 'modelSvc', 'timelineSvc', 'selectService'];\nfunction ittItemEditor($rootScope, errorSvc, appState, modelSvc, timelineSvc, selectService) {\n    return {\n        restrict: 'A',\n        replace: true,\n        scope: {\n            item: '=ittItemEditor'\n        },\n        templateUrl: 'templates/producer/item.html',\n        controller: 'EditController',\n        link: function (scope) {\n            timelineSvc.pause();\n            timelineSvc.seek(scope.item.start_time);\n            scope.uploadStatus = [];\n            scope.uneditedItem = angular.copy(scope.item); // in case of cancel\n            scope.uneditedItem['$$hashKey'] = scope.item['$$hashKey']; //Preserve the hashkey, which angular.copy strips out\n            scope.annotators = modelSvc.episodes[appState.episodeId].annotators;\n            scope.episodeContainerId = modelSvc.episodes[appState.episodeId].container_id;\n            scope.languages = modelSvc.episodes[appState.episodeId].languages;\n            scope.itemForm = selectService.setupItemForm(scope.item.styles, 'item');\n            if (!scope.item.layouts) {\n                console.log('set layouts array to inline');\n                scope.item.layouts = [\"inline\"];\n            }\n            if (!scope.item.producerItemType) {\n                errorSvc.error({\n                    data: \"Don't have a producerItemType for item \" + scope.item._id\n                });\n            }\n            // TODO:this breaks when editing sxs items within producer!\n            scope.itemEditor = 'templates/producer/item/' + appState.product + '-' + scope.item.producerItemType + '.html';\n            scope.appState = appState;\n            //watch templateUrl\n            // TODO this still needs more performance improvements...\n            scope.watchEdits = scope.$watch(function () {\n                return scope.item;\n            }, function (newItem, oldItem) {\n                if (!oldItem) {\n                    return;\n                }\n                // console.log('item:', newItem);\n                // console.log('templateUrl: ', newItem.templateUrl, '\\n', 'layouts: ', newItem.layouts);\n                // FOR DEBUGGING\n                /*\n                 angular.forEach(Object.keys(newItem), function (f) {\n                 if (f !== '$$hashKey' && !(angular.equals(newItem[f], oldItem[f]))) {\n                 console.log(\"CHANGED:\", f, newItem[f]);\n                 }\n                 });\n                 */\n                if (newItem.chapter_marker === false) {\n                    timelineSvc.removeEvent(newItem._id);\n                }\n                // Special cases:\n                // if new template is image-fill,\n                // \tset cosmetic to true, itemForm.\n                // if old template was image-fill, set cosmetic to false\n                // TODO this is fragile, based on template name:\n                //seeing if we can put this logic below into select service\n                //for changes to templateUrl, i.e. picking an option from the drop down.\n                // if (newItem.templateUrl !== oldItem.templateUrl) {\n                //\n                // \tif (newItem.templateUrl === 'templates/item/image-fill.html') {\n                // \t\tscope.item.cosmetic = true;\n                // \t\tscope.item.layouts = [\"windowBg\"];\n                // \t\tscope.itemForm.position = \"fill\";\n                // \t}\n                // \tif (oldItem.templateUrl === 'templates/item/image-fill.html') {\n                // \t\tscope.item.cosmetic = false;\n                // \t\tscope.item.layouts = [\"inline\"];\n                // \t\tscope.itemForm.position = \"\";\n                // \t\tscope.itemForm.pin = \"\";\n                // \t}\n                // }\n                //newItem is scope.item\n                newItem = modelSvc.deriveEvent(newItem); // Overkill. Most of the time all we need is setLang...\n                //for producers, if they edit a URL to link-embed template a site that cannot be embedded,\n                //change the template URL to 'link'\n                if (appState.product === 'producer' && newItem.target === '_blank' && (newItem.templateUrl === 'templates/item/link-embed.html' || newItem.templateUrl === 'templates/item/link-modal-thumb.html')) {\n                    newItem.templateUrl = 'templates/item/link.html';\n                }\n                // TODO BUG items moved from one scene to another aren't being included in the new scene until the user hits save,\n                // only in discover mode (review mode has no problem.)   This was also the case when we ran resolveEpisodeEvents on every edit, it's an older bug.\n                // This _should_ be setting it, and it _is_ triggering sceneController precalculateSceneValues...  IT IS A MYSTERY\n                if (newItem.start_time !== oldItem.start_time || newItem.start_time !== oldItem.end_time || newItem.stop === true) {\n                    modelSvc.resolveEpisodeEvents(appState.episodeId);\n                }\n                // console.count('$watch turn');\n                // console.group('itemStyles');\n                // console.count('incoming item layouts');\n                // console.log('Layouts:', newItem.layouts);\n                // console.log('Styles:', newItem.styles);\n                // console.log('styleCss:', newItem.styleCss);\n                // console.log('\\n');\n                // console.log('itemForm.pin', scope.itemForm.pin);\n                // console.log('itemForm.position', scope.itemForm.position);\n                // console.groupEnd('itemStyles');\n            }, true);\n            // Transform changes to form fields for styles into item.styles[]:\n            scope.watchStyleEdits = scope.$watch(function () {\n                return scope.itemForm;\n            }, function () {\n                var styles = [];\n                for (var styleType in scope.itemForm) {\n                    if (scope.itemForm[styleType]) {\n                        if (styleType === 'position') {\n                            styles.push(scope.itemForm[styleType]);\n                        }\n                        else {\n                            styles.push(styleType + scope.itemForm[styleType]);\n                        }\n                    }\n                }\n                scope.item.styles = styles;\n                // Slight hack to simplify css for image-fill (ittItem does this too, but this is easier than triggering a re-render of the whole item)\n            }, true);\n            scope.forcePreview = function () {\n                // this is silly but it works.\n                appState.editEvent.fnord = (appState.editEvent.fnord) ? \"\" : \"fnord\";\n            };\n            var isTranscript = function (item) {\n                if (item._type === 'Annotation' && item.templateUrl.match(/transcript/)) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            };\n            scope.setItemTime = function () {\n                // triggered when user changes start time in the input field\n                // TODO ensure within episode duration. If too close to a scene start, match to scene start. If end time not in same scene, change end time to end of scene / beginning of next transcript\n                if (scope.item._type === 'Scene') {\n                    modelSvc.resolveEpisodeEvents(appState.episodeId); // reparent events to new scene times if necessary\n                    // need to update timeline enter/exit for *all* scenes here, since changing one can modify others ...\n                    timelineSvc.updateSceneTimes(scope.item.episode_id);\n                }\n                else if (scope.item.stop) {\n                    scope.item.end_time = scope.item.start_time;\n                    modelSvc.resolveEpisodeEvents(appState.episodeId); // redundant but necessary\n                    timelineSvc.updateEventTimes(scope.item);\n                }\n                else {\n                    modelSvc.resolveEpisodeEvents(appState.episodeId); // in case the item has changed scenes\n                    // for now, just using end of scene if the currently set end time is invalid.\n                    if (scope.item.end_time <= scope.item.start_time || scope.item.end_time > modelSvc.events[scope.item.scene_id].end_time) {\n                        scope.item.end_time = modelSvc.events[scope.item.scene_id].end_time;\n                    }\n                    timelineSvc.updateEventTimes(scope.item);\n                }\n            };\n            var sortByStartTime = function (a, b) {\n                return a.start_time - b.start_time;\n            };\n            scope.setItemEndTime = function () {\n                if (scope.item.end_time <= scope.item.start_time || scope.item.end_time > modelSvc.events[scope.item.scene_id].end_time) {\n                    scope.item.end_time = modelSvc.events[scope.item.scene_id].end_time;\n                }\n                timelineSvc.updateEventTimes(scope.item);\n            };\n            var getTranscriptItems = function () {\n                var episode = modelSvc.episodes[appState.episodeId];\n                var allItems = angular.copy(episode.items);\n                return allItems.filter(isTranscript);\n            };\n            var getNextStartTime = function (currentScene, currentItem, items) {\n                if (currentItem._type === 'Chapter') {\n                    return false;\n                }\n                //HACK to work around TS-412\n                if (!currentScene) {\n                    console.warn(\"getNextStartTime called with no scene (because it's being called for a scene event?)\", currentItem, items);\n                    return false;\n                }\n                var nextItem;\n                var nextStartTime = currentScene.end_time;\n                items = items.sort(sortByStartTime);\n                for (var i = 0, len = items.length; i < len; i++) {\n                    if (items[i]._id === currentItem._id) {\n                        //the next item start_time if less than scen end time\n                        nextItem = items[i + 1];\n                        break;\n                    }\n                }\n                if (nextItem) {\n                    if (nextItem.start_time < currentScene.end_time) {\n                        nextStartTime = nextItem.start_time;\n                    }\n                }\n                return nextStartTime;\n            };\n            var getCurrentScene = function (item) {\n                if (item._type === 'Scene') {\n                    return item;\n                }\n                else {\n                    return modelSvc.events[scope.item.scene_id];\n                }\n            };\n            scope.switchToAutoOrCustom = function (isSwitchingFromCustom) {\n                if (isSwitchingFromCustom) {\n                    var items = isTranscript(scope.item) ? getTranscriptItems() : [];\n                    scope.item.end_time = getNextStartTime(getCurrentScene(scope.item), scope.item, items);\n                    scope.customEndTime = false;\n                }\n                else {\n                    scope.customEndTime = true;\n                }\n            };\n            scope.isAutoEndTime = function () {\n                var items = isTranscript(scope.item) ? getTranscriptItems() : [];\n                var nextStartTime = getNextStartTime(getCurrentScene(scope.item), scope.item, items);\n                if (scope.item.end_time === nextStartTime) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            };\n            scope.customEndTime = !scope.isAutoEndTime();\n            scope.dismissalWatcher = $rootScope.$on(\"player.dismissAllPanels\", scope.cancelEdit);\n            scope.cancelEdit = function () {\n                // hand off to EditController (with the original to be restored)\n                scope.cancelEventEdit(scope.uneditedItem);\n            };\n            scope.assetUploaded = function (assetId) {\n                scope.item.asset = modelSvc.assets[assetId];\n                // TODO Shouldn't need to be worrying about asset field names here, handle this in modelSvc?\n                if (scope.item._type === 'Link') {\n                    scope.item.link_image_id = assetId;\n                }\n                else if (scope.item._type === 'Annotation') {\n                    scope.item.annotation_image_id = assetId;\n                }\n                else {\n                    scope.item.asset_id = assetId;\n                }\n                scope.showUploadButtons = false;\n                scope.showUploadField = false;\n            };\n            scope.replaceAsset = function () {\n                console.log('replace asset!');\n                scope.showUploadButtons = true;\n                if (scope.item.sxs) {\n                    scope.item.removedAssets = scope.item.removedAssets || [];\n                    // removedAsset will be used by editController on save to delete the old asset (if we're in editor)\n                    if (scope.item._type === 'Link') {\n                        scope.item.removedAssets.push(scope.item.link_image_id);\n                    }\n                    else if (scope.item._type === 'Annotation') {\n                        scope.item.removedAssets.push(scope.item.annotation_image_id);\n                    }\n                    else {\n                        scope.item.removedAssets.push(scope.item.asset_id);\n                    }\n                }\n            };\n            scope.detachAsset = function () {\n                // console.log(\n                // \t'item:', scope.item,\n                // \t'asset:', scope.item.asset,\n                // \t'link_image_id:', scope.item.link_image_id,\n                // \t'asset_id:', scope.item.asset_id,\n                // \t'annotation_image_id:', scope.item.annotation_image_id\n                // );\n                if (scope.item.asset) {\n                    switch (scope.item.producerItemType) {\n                        case 'link':\n                            scope.item.asset = null;\n                            scope.item.link_image_id = null;\n                            scope.item.asset_id = null;\n                            scope.item.annotation_image_id = null;\n                            break;\n                        case 'transcript':\n                            scope.item.asset = null;\n                            scope.item.annotation_image_id = null;\n                            break;\n                        case 'image':\n                        case 'question':\n                        case 'file':\n                            scope.item.asset = null;\n                            scope.item.asset_id = null;\n                            break;\n                    }\n                }\n            };\n            scope.attachChosenAsset = function (asset_id) {\n                // console.log(scope.item);\n                var asset = modelSvc.assets[asset_id];\n                if (scope.item) {\n                    scope.item.asset = asset;\n                    selectService.onSelectChange(scope.item, scope.itemForm);\n                    if (scope.item._type === 'Upload' || scope.item._type === 'Plugin') {\n                        scope.item.asset_id = asset_id;\n                    }\n                    else if (scope.item._type === 'Link') {\n                        scope.item.link_image_id = asset_id;\n                        scope.item.asset_id = asset_id;\n                    }\n                    else if (scope.item._type === 'Annotation') {\n                        console.log('you are actually getting here!!');\n                        scope.item.asset_id = asset_id;\n                        scope.item.annotation_image_id = asset_id;\n                    }\n                    else {\n                        console.error(\"Tried to select asset for unknown item type\", scope.item);\n                    }\n                }\n            };\n            scope.$on('$destroy', function () {\n                scope.watchEdits();\n                scope.dismissalWatcher();\n                scope.watchStyleEdits();\n            });\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittLanguageFlags.ts\n/**\n * Created by githop on 8/23/16.\n */\n//impure, currently depends on inheriting scope for 'langform'\nfunction ittLanguageFlags() {\n    return {\n        restrict: 'EA',\n        template: [\n            '<div class=\"field\">',\n            '\t<div class=\"label\">Languages</div>',\n            '\t<div class=\"input\">',\n            '\t<label>',\n            '\t\t<input type=\"checkbox\" ng-model=\"langForm.en\">English',\n            '\t</label>',\n            '\t<label>',\n            '\t\t<input type=\"checkbox\" ng-model=\"langForm.es\">Spanish',\n            '\t</label>',\n            '\t<label>',\n            '\t\t<input type=\"checkbox\" ng-model=\"langForm.zh\">Chinese',\n            '\t</label>',\n            '\t<label>',\n            '\t\t<input type=\"checkbox\" ng-model=\"langForm.pt\">Portuguese',\n            '\t</label>',\n            '\t<label>',\n            '\t\t<input type=\"checkbox\" ng-model=\"langForm.fr\">French',\n            '\t</label>',\n            '\t<label>',\n            '\t\t<input type=\"checkbox\" ng-model=\"langForm.de\">German',\n            '\t</label>',\n            '\t<label>',\n            '\t\t<input type=\"checkbox\" ng-model=\"langForm.it\">Italian',\n            '\t</label>',\n            '\t</div>',\n            '</div>'\n        ].join('\\n')\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittLanguageSelect.ts\n/**\n * Created by githop on 8/23/16.\n */\nfunction ittLanguageSelect() {\n    return {\n        restrict: 'EA',\n        scope: {\n            data: '=',\n            langForm: '=?'\n        },\n        template: [\n            '<div class=\"field\">',\n            '\t<div class=\"label\">Default Language</div>',\n            '\t<div class=\"input\">',\n            '\t\t<select ng-model=\"$ctrl.data.defaultLanguage\" ng-options=\"{{$ctrl.setNgOpts()}}\" itt-options-disabled=\"option.isDisabled for option in $ctrl.langOpts\"></select>',\n            '\t</div>',\n            '</div>'\n        ].join('\\n'),\n        controller: ['$scope', 'selectService', function ($scope, selectService) {\n                var ctrl = this;\n                ctrl.getSelectOpts = selectService.getSelectOpts;\n                ctrl.setNgOpts = setNgOpts;\n                ctrl.langOpts = selectService.getSelectOpts('language');\n                $scope.$watch(watchLangForm, handleUpdates, true);\n                function setNgOpts() {\n                    return \"option.value as option.name for option in $ctrl.langOpts\";\n                }\n                function watchLangForm() {\n                    return ctrl.langForm;\n                }\n                //read the state of the lang form, set the disabled state\n                //from the state of the language checkbox.\n                function handleUpdates(nv) {\n                    ctrl.langOpts = ctrl.langOpts.map(function (l) {\n                        angular.forEach(nv, function (v, k) {\n                            if (l.value === k) {\n                                l.isDisabled = !v;\n                            }\n                        });\n                        return l;\n                    });\n                }\n            }],\n        controllerAs: '$ctrl',\n        bindToController: true\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittLoading.ts\n/**\n * Created by githop on 12/11/15.\n */\nvar ittLoading_TEMPLATE = \"\\n<div class=\\\"loading\\\">\\n\\t<div class=\\\"spinner\\\">\\n\\t\\t<div class=\\\"rotating pie\\\"></div>\\n\\t\\t<div class=\\\"filler pie\\\"></div>\\n\\t\\t<div class=\\\"mask\\\"></div>\\n\\t</div>\\n\\tLoading\\n</div>\\n\\n\";\nvar Loading = /** @class */ (function () {\n    function Loading() {\n        this.template = ittLoading_TEMPLATE;\n    }\n    Loading.Name = 'npLoading'; // tslint:disable-line\n    return Loading;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittLogin.ts\n/*\n No UI for this directive. This originally showed a login form but that led to a flash-of-content when authenticating via lti\n\n */\nittLogin.$inject = ['$location', '$routeParams', 'config', 'authSvc', 'appState', 'errorSvc'];\nfunction ittLogin($location, $routeParams, config, authSvc, appState, errorSvc) {\n    return {\n        restrict: 'A',\n        replace: false,\n        link: function (scope) {\n            scope.userHasRole = authSvc.userHasRole;\n            scope.appState = appState;\n            scope.loginForm = {\n                auth_key: '',\n                password: ''\n            };\n            scope.apiDataBaseUrl = config.apiDataBaseUrl;\n            authSvc.authenticate().then(function () {\n                errorSvc.init();\n                if ($routeParams.key) {\n                    // (Probably unnecessary here, but testing to see if this fixes the unintended redirect from /#/auth)\n                    $location.search('key', null); // hide the param from the url.  reloadOnSearch must be turned off in $routeProvider!\n                }\n                if ($routeParams.episode) {\n                    var epId = $routeParams.episode;\n                    $location.search('episode', null);\n                    $location.search('nonce', null);\n                    $location.path('/episode/' + epId);\n                }\n                else if ($routeParams.narrative) {\n                    var narrId = $routeParams.narrative;\n                    $location.search('narrative', null);\n                    $location.search('nonce', null);\n                    if ($routeParams.timeline) {\n                        var timelineId = $routeParams.timeline;\n                        $location.search('timeline', null);\n                        $location.path('/story/' + narrId + '/' + timelineId);\n                    }\n                    else {\n                        $location.path('/story/' + narrId);\n                    }\n                }\n                else if (Object.keys($routeParams).length === 0) {\n                    $location.path('/account');\n                }\n            }, function () {\n                console.log(\"Login failed...\");\n            });\n            // for admin logins only, for now. In future maybe oauth-based login will route through here too\n            scope.adminLogin = function () {\n                authSvc.adminLogin(scope.loginForm.auth_key, scope.loginForm.password)\n                    .then(function () {\n                    $location.path('/projects');\n                })\n                    .catch(function (data) {\n                    console.warn(\"FAILED ADMIN LOGIN\", data);\n                    scope.badlogin = true;\n                });\n            };\n            scope.logout = function () {\n                authSvc.logout();\n            };\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/magnet/ittMagnet.ts\n// Sends magnet signal whenever becomes visible.\n// In watch mode (only), also watches the window size and tries to keep the video from overflowing the window height\n\nvar MagnetStore = /** @class */ (function () {\n    function MagnetStore(_bcr) {\n        this._bcr = _bcr;\n    }\n    MagnetStore.of = function (bcr) {\n        return new MagnetStore(bcr);\n    };\n    Object.defineProperty(MagnetStore.prototype, \"bcr\", {\n        get: function () {\n            return this._bcr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MagnetStore;\n}());\n// TODO: remove dependence on jQuery?  (.is(:visible))\nittMagnet.$inject = ['$rootScope', '$timeout', 'appState', 'playbackService'];\nfunction ittMagnet($rootScope, $timeout, appState, playbackService) {\n    return {\n        restrict: 'A',\n        replace: true,\n        scope: true,\n        link: function mangetLinkFn(scope, element) {\n            var $watches = {\n                magnetBoundingClientRect: null,\n                size: null,\n                appState: null\n            };\n            $rootScope.$on(UPDATE_MAGNET, function () { return changeMagnet(); });\n            onInit();\n            function onInit() {\n                window.addEventListener('resize', onResize);\n                if (!appState.isIOS()) {\n                    $watches.magnetBoundingClientRect = scope.$watchCollection(watchBcr, handleNewMagnetBcr, true);\n                }\n                else {\n                    // for iOS, watching the BCR seems to cause cause the video to bounce around when scrolling in longer\n                    // layouts and when scrolling in review mode.\n                    // for iOS devices, rely on onInit() to set BCR on layout changes and watch the view mode instead\n                    // to handle repositioning the video when changing view modes, changing video position in producer etc....\n                    changeMagnet();\n                    $watches.appState = scope.$watchCollection(watchAppState, function (newMode, oldMode) {\n                        if (newMode.videoPosition !== oldMode.videoPosition) {\n                            $timeout(function () { return changeMagnet(); }, 500);\n                            return;\n                        }\n                        if (newMode.viewMode) {\n                            changeMagnet();\n                        }\n                    }, true);\n                }\n                if (element.attr('id') === 'watchModeVideoMagnet') {\n                    $watches.size = scope.$watch(watchSize, handleSize, true);\n                }\n            }\n            function onDestroy() {\n                window.removeEventListener('resize', onResize);\n                Object.keys($watches).forEach(function (fn) {\n                    if ($watches[fn]) {\n                        $watches[fn]();\n                    }\n                });\n            }\n            function onResize() {\n                if (appState.isIOS() && appState.viewMode === 'review') {\n                    // for some reason a resize event is fired when scrolling\n                    // in review mode\n                    return;\n                }\n                changeMagnet();\n                scope.$digest();\n            }\n            function watchBcr() {\n                var _a = element[0].getBoundingClientRect(), top = _a.top, left = _a.left, width = _a.width;\n                var documentOffset = top;\n                if (appState.viewMode !== 'review') {\n                    // for IE compatibility\n                    documentOffset = _adjustBcrOffset(top);\n                }\n                return { left: left, width: width, top: documentOffset };\n            }\n            function watchAppState() {\n                return {\n                    viewMode: appState.viewMode,\n                    videoPosition: appState.editEvent.styleCss\n                };\n            }\n            function _adjustBcrOffset(top) {\n                var yOffset = (window.pageYOffset !== undefined)\n                    ? window.pageYOffset\n                    : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n                return top + yOffset;\n            }\n            function handleNewMagnetBcr(newV) {\n                if (newV) {\n                    changeMagnet(newV);\n                }\n            }\n            function watchSize() {\n                return {\n                    w: angular.element(window).width(),\n                    h: angular.element(window).height(),\n                    v: element.is(':visible')\n                };\n            }\n            function handleSize() {\n                // console.log('watch mode guy');\n                // we want the video to be as wide as possible without overflowing the window.\n                // And dont' want to set the height directly, just the width. So math:\n                var win = angular.element(window);\n                var maxAllowableHeight = win.height() - 46; // TOOLBAR HEIGHT (plus some slop)\n                if (win.width() / maxAllowableHeight > (16 / 9)) {\n                    element.width(16 / 9 * maxAllowableHeight);\n                }\n                else {\n                    element.width(win.width());\n                }\n                changeMagnet();\n            }\n            function getMagnetBcr() {\n                return $timeout(function () {\n                    var readOnly = element[0].getBoundingClientRect();\n                    return {\n                        top: readOnly.top,\n                        bottom: readOnly.bottom,\n                        left: readOnly.left,\n                        right: readOnly.right,\n                        width: readOnly.width\n                    };\n                }, 100);\n            }\n            function changeMagnet(preCalcedBcr) {\n                if (preCalcedBcr) {\n                    var magnetStore = MagnetStore.of(preCalcedBcr);\n                    if (playbackService.getMetaProp('time') === 0) {\n                        $rootScope.$emit(JUMP_TO_MAGNET, magnetStore.bcr);\n                        return;\n                    }\n                    $rootScope.$emit(CHANGE_MAGNET, magnetStore.bcr);\n                    return;\n                }\n                getMagnetBcr().then(function (bcr) {\n                    var bcrCopy = Object.assign({}, bcr);\n                    if (appState.viewMode !== 'review') {\n                        // for IE compatibility\n                        bcrCopy.top = _adjustBcrOffset(bcrCopy.top);\n                    }\n                    var magnetStore = MagnetStore.of(bcrCopy);\n                    if (playbackService.getMetaProp('time') === 0) {\n                        $rootScope.$emit(JUMP_TO_MAGNET, magnetStore.bcr);\n                        return;\n                    }\n                    $rootScope.$emit(CHANGE_MAGNET, magnetStore.bcr);\n                });\n            }\n            // cleanup watchers on destroy\n            scope.$on('$destroy', onDestroy);\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/magnet/ittMagnetized.ts\n\n\n// TODO: remove dependence on jQuery? (lots of it here)\nittMagnetized.$inject = ['$rootScope', '$timeout', 'appState'];\nfunction ittMagnetized($rootScope, $timeout, appState) {\n    return {\n        restrict: 'A',\n        replace: true,\n        scope: true,\n        link: function (scope, element) {\n            var WIDTH = 854;\n            var TRANSITION_DURATION = '0.25s';\n            $rootScope.$on(CHANGE_MAGNET, function (evt, magnetElmBcr) { return jumpToMagnet(magnetElmBcr, true); });\n            $rootScope.$on(JUMP_TO_MAGNET, function (evt, magnetElmBcr) { return jumpToMagnet(magnetElmBcr, false); });\n            function jumpToMagnet(magnetElmBcr, animateTransition) {\n                if (magnetElmBcr == null) {\n                    return;\n                }\n                if (appState.viewMode === 'review') {\n                    element.css('position', 'fixed');\n                }\n                else {\n                    element.css('position', 'absolute');\n                }\n                var top = magnetElmBcr.top, left = magnetElmBcr.left, width = magnetElmBcr.width;\n                if (animateTransition === true) {\n                    element.css('transition-timing-function', 'cubic-bezier(0.4, 0, 1, 1)');\n                    element.css('transition-duration', TRANSITION_DURATION);\n                }\n                else {\n                    element.css('transition-duration', 'unset');\n                    element.css('transition-timing-function', 'unset');\n                }\n                var scaleFactor = width / WIDTH;\n                if (scaleFactor === 0) {\n                    return;\n                }\n                element.css('transform', \"translate(\" + Math.abs(left) + \"px, \" + Math.abs(top) + \"px) scale(\" + scaleFactor + \")\");\n            }\n            // cleanup watchers on destroy\n            scope.$on('$destroy', function () {\n                if (scope.unwatch) {\n                    scope.unwatch();\n                }\n            });\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittMcQuestion.ts\nittMcQuestion.$inject = ['questionAnswersSvc', 'analyticsSvc', 'appState'];\nfunction ittMcQuestion(questionAnswersSvc, analyticsSvc, appState) {\n    return {\n        restrict: 'E',\n        replace: false,\n        scope: {\n            plugin: '=data',\n            qid: '=',\n            choices: '=',\n            correct: '=',\n            onChoice: '=',\n            questionType: '@',\n            showChart: '='\n        },\n        templateUrl: \"templates/item/question-mc-inner.html\",\n        link: function (scope) {\n            scope.scoreQuiz = function (i) {\n                scope.plugin.distractors[i].selected = true;\n                scope.plugin.hasBeenAnswered = true;\n                scope.plugin.selectedDistractor = scope.plugin.distractors[i].index;\n                analyticsSvc.captureEventActivity(\"question-answered\", scope.qid, {\n                    'answer': scope.plugin.distractors[i].text,\n                    'index': scope.plugin.distractors[i].index,\n                    'correct': !!(scope.plugin.distractors[i].correct)\n                });\n            };\n            scope.feedback = function () {\n                for (var i = 0; i < scope.plugin.distractors.length; i++) {\n                    if (scope.plugin.distractors[i].index === scope.plugin.selectedDistractor) {\n                        return (scope.plugin.distractors[i].correct) ? scope.plugin.correctfeedback : scope.plugin.incorrectfeedback;\n                    }\n                }\n            };\n            scope.questionType = scope.plugin.questiontype;\n            // NOT YET SUPPORTED IN ittFlotChart:\n            scope.chartOptions = {}; // moving default chartOptions into ittFlotChart; use this to override.\n            var formatAnswersForFlotPieChart = function (grouped) {\n                // console.log(\"Formatting \", grouped, \" for \", scope.plugin);\n                var chartData = [];\n                for (var answerIndex in grouped) {\n                    if (grouped.hasOwnProperty(answerIndex)) {\n                        // translate the index into the answer text\n                        angular.forEach(scope.plugin.distractors, function (distractor) {\n                            if (distractor.index + \"\" === answerIndex + \"\") {\n                                var label = distractor.text;\n                                if (typeof (label) === 'object') {\n                                    label = label[appState.lang] || label.en || \"\";\n                                }\n                                chartData.push({\n                                    data: grouped[answerIndex],\n                                    label: label\n                                });\n                            }\n                        });\n                    }\n                }\n                return chartData;\n            };\n            if (scope.plugin.hasBeenAnswered === true) {\n                /*\n                 answer_counts is included in event data as {\n                 index: count,\n                 index: count\n                 }\n                 */\n                if (typeof scope.plugin.answer_counts === 'undefined') {\n                    // This is in case of failure on the API side to return answer_counts (which shouldn't happen):\n                    console.error(\"No answer_counts returned from API\");\n                    scope.plugin.answer_counts = {};\n                }\n                var grouped = scope.plugin.answer_counts;\n                var chartData = formatAnswersForFlotPieChart(grouped);\n                scope.chartData = chartData;\n            }\n            scope.scorePoll = function (i) {\n                console.log(\"scorePoll\");\n                questionAnswersSvc.saveAnswer(\"question-answered\", scope.qid, {\n                    'answer': scope.plugin.distractors[i].text,\n                    'index': scope.plugin.distractors[i].index,\n                    'correct': !!(scope.plugin.distractors[i].correct)\n                })\n                    .then(function () {\n                    scope.plugin.answer_counts = (typeof scope.plugin.answer_counts === 'undefined') ? {} : scope.plugin.answer_counts;\n                    questionAnswersSvc.incrementAnswerCount(scope.plugin.answer_counts, scope.plugin.distractors[i].index);\n                    var grouped = scope.plugin.answer_counts;\n                    var chartData = formatAnswersForFlotPieChart(grouped);\n                    scope.chartData = chartData;\n                    scope.plugin.distractors[i].selected = true;\n                    scope.plugin.hasBeenAnswered = true;\n                    scope.plugin.selectedDistractor = scope.plugin.distractors[i].index;\n                    //});\n                });\n            };\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittModal.ts\n/**\n * Created by githop on 6/1/16.\n */\nvar ittModal_TEMPLATE = \"\\n<div ng-class=\\\"$ctrl.wrapperClass\\\">\\n  <div ng-class=\\\"$ctrl.modalClass\\\">\\n    <ng-transclude></ng-transclude>\\n  </div>\\n</div>\\n\";\nvar ModalController = /** @class */ (function () {\n    function ModalController() {\n    }\n    ModalController.prototype.$onInit = function () {\n        if (this.wrapperClass == null) {\n            this.wrapperClass = 'itt__modal';\n        }\n    };\n    return ModalController;\n}());\nvar Modal = /** @class */ (function () {\n    function Modal() {\n        this.transclude = true;\n        this.bindings = {\n            modalClass: '@?',\n            wrapperClass: '@?'\n        };\n        this.template = ittModal_TEMPLATE;\n        this.controller = ModalController;\n    }\n    Modal.Name = 'npModal'; // tslint:disable-line\n    return Modal;\n}());\n\n/* tslint:disable */\n// export default function ittModal() {\n//   return {\n//     restrict: 'EA',\n//     transclude: true,\n//     scope: {\n//       modalClass: '@',\n//       wrapperClass: '@?'\n//     },\n//     template: [\n//       '<div class=\"{{wrapperClass ? wrapperClass : \\'itt__modal\\'}}\"><div class=\"{{modalClass}}\"><ng-transclude></ng-transclude></div></div>'\n//     ].join(' ')\n//   };\n// }\n\n// CONCATENATED MODULE: ./app/scripts/directives/npNarrativeDetail.ts\n/*\n\n TODO:\n split this file up into separate directive files\n when displaying a narrative, compare its user_id to the current user's id to set isOwner\n i18n\n\n To create a narrative:\n * get the user ID, make a group containing that ID,\n * create narrative with name,description,group id\n\n TO add a timeline:\n * user chooses a parent episode\n\n * create timeline with name,description,hidden,path, sort_order\n * make a child episode of parent episode\n * make an episode segment (needs timeline id, start, end, child episode id, sort_order)\n\n * then reload narrative/resolve\n\n (resolve should sort timelines and segments, API won't necessarily handle this for us)\n\n to update narrative or timeline: just send the basic fields, not the fully-resolved data.\n\n\n */\n\n\nvar npNarrativeDetail_NarrativeDetailController = /** @class */ (function () {\n    function NarrativeDetailController($routeParams, authSvc, appState, dataSvc, modelSvc) {\n        var _this = this;\n        this.$routeParams = $routeParams;\n        this.authSvc = authSvc;\n        this.appState = appState;\n        this.dataSvc = dataSvc;\n        this.modelSvc = modelSvc;\n        this.treeOpts = {\n            accept: function () { return true; },\n            dropped: function (event) {\n                var destIndex = event.dest.index;\n                var srcIndex = event.source.index;\n                if (destIndex !== srcIndex) {\n                    _this.narrative.timelines = NarrativeDetailController._updateSortOrder(destIndex, _this.narrative.timelines);\n                    _this._persistTimelineSortUpdate(_this.narrative.timelines[destIndex]);\n                }\n            }\n        };\n        //\n    }\n    NarrativeDetailController.prototype.$onInit = function () {\n        this.isOwner = false;\n        this.user = this.appState.user;\n        if (this.authSvc.userHasRole('admin') || this.authSvc.userHasRole('customer admin')) {\n            this.canAccess = true;\n        }\n        this._setTotalNarrativeDuration(this.narrative.timelines);\n    };\n    NarrativeDetailController.prototype.logout = function () {\n        this.authSvc.logout();\n    };\n    NarrativeDetailController.prototype.toggleEditNarrativeModal = function ($undo) {\n        var _this = this;\n        var cachedNarratives = existy(this.customers[0]) &&\n            existy(this.customers[0].narratives) &&\n            this.customers[0].narratives.length > 1;\n        //need list of other narratives to for validation of path slugs.\n        if (!cachedNarratives) {\n            this.dataSvc.getNarrativeList(this.customers[0])\n                .then(function () {\n                _this.editingNarrative = !_this.editingNarrative;\n            });\n        }\n        else {\n            this.editingNarrative = !this.editingNarrative;\n        }\n        if ($undo != null) {\n            this.narrative = $undo;\n        }\n    };\n    NarrativeDetailController.prototype.toggleEditingTimeline = function (tl) {\n        this.timelineUnderEdit = tl;\n    };\n    NarrativeDetailController.prototype.doneEditingTimeline = function () {\n        var _this = this;\n        this.timelineUnderEdit = null;\n        //remove tmp tl from timelines;\n        this.narrative.timelines = this.narrative.timelines.filter(function (tl) {\n            return tl !== _this.tmpTimeline;\n        });\n        this.tmpTimeline = null;\n    };\n    NarrativeDetailController.prototype.toggleOwnership = function () {\n        this.isOwner = !this.isOwner;\n    };\n    NarrativeDetailController.prototype.toggleEpisodeList = function () {\n        this.showEpisodeList = !this.showEpisodeList;\n    };\n    NarrativeDetailController.prototype.updateNarrative = function (update) {\n        var _this = this;\n        this.dataSvc.updateNarrative(update).then(function (resp) {\n            _this.editingNarrative = false;\n            //updateNarrative returns just the new narrative object, without timelines array\n            //merge the existing narrative on scope with the one returned via our post resp.\n            angular.extend(_this.narrative, resp.data);\n            var cust = _this.modelSvc.customers[resp.data.customer_id];\n            _this.modelSvc.assocNarrativesWithCustomer(cust, [resp.data]);\n        });\n    };\n    NarrativeDetailController.prototype.updateTimeline = function (newTimeline, oldTimeline) {\n        var _this = this;\n        this.dataSvc.storeTimeline(this.narrative._id, newTimeline).then(function (resp) {\n            angular.extend(oldTimeline, resp);\n            _this.doneEditingTimeline();\n        });\n    };\n    NarrativeDetailController.prototype.addTmpTimeline = function (currTl, timelines) {\n        var currSortOrder;\n        var fromTl;\n        var nextTlSortOrder;\n        var currIndex;\n        var newIndex;\n        if (!existy(currTl)) {\n            currSortOrder = 0;\n            newIndex = 0;\n        }\n        else {\n            currIndex = timelines.indexOf(currTl);\n            newIndex = currIndex + 1;\n            fromTl = timelines[currIndex];\n            currSortOrder = fromTl.sort_order;\n            if (timelines.slice(-1)[0] === fromTl) {\n                currSortOrder += 100;\n            }\n            else {\n                nextTlSortOrder = timelines[currIndex + 1].sort_order;\n                currSortOrder = bitwiseCeil((nextTlSortOrder + currSortOrder) / 2);\n            }\n        }\n        // ok to use createInstance outside of modelSvc#cache here\n        // because we do not have a case for 'timelines' in modelSvc#cache\n        var newTimeline = createInstance('Timeline', {\n            name: { en: '' },\n            description: { en: '' },\n            hidden: false,\n            sort_order: currSortOrder,\n            isTemp: true,\n            index: newIndex\n        });\n        //favor slice over splice as splice mutates array in place.\n        var head = timelines.slice(0, newIndex);\n        var tail = timelines.slice(newIndex, timelines.length);\n        head.push(newTimeline);\n        this.narrative.timelines = head.concat(tail);\n        this.tmpTimeline = newTimeline;\n        //to open episode select modal\n        this.toggleEpisodeList();\n    };\n    NarrativeDetailController.prototype.onEpisodeSelect = function (epId) {\n        var _this = this;\n        //if tmpTimeline is not set, assume\n        // this is the first timeline to create;\n        this.dataSvc.getEpisodeOverview(epId).then(function (episodeData) {\n            _this.tmpTimeline.parent_episode = episodeData;\n            if (existy(episodeData.description)) {\n                _this.tmpTimeline.description.en = stripHtmlTags(episodeData.description.en);\n            }\n            _this.tmpTimeline.name.en = stripHtmlTags(episodeData.title.en);\n            return episodeData;\n        }).then(function (episodeData) {\n            _this.dataSvc.getSingleAsset(episodeData.master_asset_id).then(function (data) {\n                if (data) {\n                    _this.tmpTimeline.duration = data.duration;\n                }\n                else {\n                    _this.tmpTimeline.duration = 0;\n                }\n                //to close episode select modal after select\n                _this.toggleEpisodeList();\n                //to open the timeline editor modal\n                _this.persistTmpTimeline(_this.tmpTimeline);\n            });\n        });\n    };\n    NarrativeDetailController.prototype.persistTmpTimeline = function (tl) {\n        var _this = this;\n        this.narrative.timelines = NarrativeDetailController._updateSortOrder(tl.index, this.narrative.timelines);\n        var storeChildEpisode = function (childEpisode) {\n            return _this.dataSvc.storeTimeline(_this.narrative._id, tl).then(function (tlData) {\n                return { d: tlData, e: childEpisode };\n            });\n        };\n        var handleEpisodeSegment = function (config) {\n            var tlData = config.d;\n            var childEpisode = config.e;\n            _this.dataSvc.createEpisodeSegment(tlData._id, {\n                episode_id: childEpisode._id,\n                start_time: 0,\n                end_time: tl.duration,\n                sort_order: 0,\n                timeline_id: tlData._id\n            }).then(function (segmentData) {\n                tlData.episode_segments = [segmentData];\n                angular.forEach(_this.narrative.timelines, function (tl) {\n                    if (tl.sort_order === tlData.sort_order) {\n                        angular.extend(tl, tlData, { isTemp: false });\n                    }\n                });\n                _this.tmpTimeline = null;\n                _this.doneEditingTimeline();\n                _this._setTotalNarrativeDuration(_this.narrative.timelines);\n            });\n        };\n        var logErr = function (e) { return console.log(e); };\n        this.dataSvc.createChildEpisode({\n            parent_id: tl.parent_episode._id\n        })\n            .then(storeChildEpisode)\n            .then(handleEpisodeSegment)\n            .catch(logErr);\n    };\n    NarrativeDetailController.prototype.editorAction = function (newTl, currTl) {\n        if (newTl.isTemp === true) {\n            this.persistTmpTimeline(newTl);\n        }\n        else {\n            this.updateTimeline(newTl, currTl);\n        }\n    };\n    NarrativeDetailController.prototype.deleteTimeline = function (tl) {\n        var _this = this;\n        this.dataSvc.deleteTimeline(tl._id).then(function () {\n            _this.narrative.timelines = _this.narrative.timelines.filter(function (t) {\n                return tl._id !== t._id;\n            });\n            _this.doneEditingTimeline();\n            _this._setTotalNarrativeDuration(_this.narrative.timelines);\n        });\n    };\n    NarrativeDetailController.prototype.exportToSpreadsheet = function (nId) {\n        this.dataSvc.getNarrativeExportAsSpreadsheet(nId);\n    };\n    NarrativeDetailController._updateSortOrder = function (destIndex, _arr) {\n        var arr = _arr.slice(); // copy to avoid mutation ;)\n        var len = arr.length;\n        var sortIndex = 0;\n        if (destIndex > 0) {\n            if (destIndex === len - 1) {\n                sortIndex = arr[destIndex - 1].sort_order + 100;\n            }\n            else {\n                sortIndex = bitwiseCeil((arr[destIndex - 1].sort_order + arr[destIndex + 1].sort_order) / 2);\n            }\n        }\n        var prevSortIndex = sortIndex;\n        arr[destIndex].sort_order = sortIndex;\n        var _destIndex = destIndex + 1;\n        sortIndex += 1;\n        for (; _destIndex < len; _destIndex += 1) {\n            if (prevSortIndex >= arr[_destIndex].sort_order) {\n                arr[_destIndex].sort_order = sortIndex;\n            }\n            prevSortIndex = sortIndex;\n            sortIndex += 1;\n        }\n        return arr;\n    };\n    NarrativeDetailController.prototype._setTotalNarrativeDuration = function (timelines) {\n        this.totalNarrativeDuration = timelines\n            .map(function (tl) { return tl.episode_segments.map(function (s) { return s.end_time; })[0]; })\n            .reduce(function (accm, durs) { return accm + durs; }, 0);\n    };\n    NarrativeDetailController.prototype._persistTimelineSortUpdate = function (timeline) {\n        this.dataSvc.storeTimeline(this.narrative._id, timeline).then(function (resp) {\n            angular.extend(timeline, resp);\n        });\n    };\n    NarrativeDetailController.$inject = ['$routeParams', 'authSvc', 'appState', 'dataSvc', 'modelSvc'];\n    return NarrativeDetailController;\n}());\nvar NarrativeDetail = /** @class */ (function () {\n    function NarrativeDetail() {\n        this.bindings = {\n            narrative: '<',\n            customers: '<'\n        };\n        this.templateUrl = 'templates/narrative/default.html';\n        this.controller = npNarrativeDetail_NarrativeDetailController;\n    }\n    NarrativeDetail.Name = 'npNarrativeDetail'; // tslint:disable-line\n    return NarrativeDetail;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/npNarrativeEditor.ts\n/**\n * Created by githop on 6/16/16.\n */\n\n\n\n/* tslint:disable */\n/**\n * @ngdoc directive\n * @name iTT.directive:ittNarrativeEditor\n * @restrict 'EA'\n * @scope\n * @description\n * A presentational component used to edit narratives\n * @param {Object} narrative the narrative to edit\n * @param {Array} customers an array of customers associated with the narrative\n * @param {customerId:string, containerId:string, name:string} containerInfo container specific info to set on the narrative\n * @param {Function} onDone output to call when on cancel.\n * @param {function} onUpdate output to call when saving.\n * @example\n * <pre>\n *  //containers page\n *  <np-narrative-editor\n customers=\"customers\"\n container-info=\"{containerId: container._id, customerId: container.customer_id, name: container.name}\"\n on-done=\"toggleNarrativeModal()\"\n on-update=\"postNewNarrative(data)\">\n </np-narrative-editor>\n\n //narrative show/index pages\n <np-narrative-editor\n customers=\"$ctrl.selectedCustomer\"\n narrative=\"$ctrl.narrativeToEdit\"\n on-done=\"$ctrl.closeAddOrEditModal()\"\n on-update=\"$ctrl.addOrUpdateNarrative(n)\">\n </np-narrative-editor>\n * </pre>\n */\n/* tslint:enable */\nvar npNarrativeEditor_TEMPLATE = \"\\n<div class=\\\"narrative__edit\\\">\\n  <h2>Narrative Settings</h2>\\n  <form name=\\\"nEditForm\\\">\\n    <div ng-show=\\\"$ctrl.containerInfo && $ctrl.canAccess\\\">\\n      <label for=\\\"nCustomer\\\">Customer\\n        <itt-validation-tip ng-if=\\\"nEditForm.customer.$invalid\\\" text=\\\"A customer must be set\\\"></itt-validation-tip>\\n      </label>\\n      <select id=\\\"nCustomer\\\" name=\\\"customer\\\" required ng-model=\\\"$ctrl.selectedCustomer\\\"\\n              ng-change=\\\"$ctrl.selectCustomer($ctrl.selectedCustomer)\\\"\\n              ng-options=\\\"cust.name for cust in $ctrl.customers track by cust._id\\\"></select></br>\\n    </div>\\n    <div ng-if=\\\"$ctrl.selectedCustomer && $ctrl.containerInfo == null\\\">\\n      <h5>{{$ctrl.selectedCustomer.name}}</h5>\\n    </div>\\n    <label id=\\\"nName\\\">Narrative Title\\n      <itt-validation-tip ng-if=\\\"nEditForm.name.$invalid\\\" text=\\\"Title is required\\\"></itt-validation-tip>\\n    </label>\\n    <input for=\\\"nName\\\" type=\\\"text\\\" name=\\\"name\\\" placeholder=\\\"Add Narrative Title\\\"\\n           ng-model=\\\"$ctrl.narrative.name.en\\\" required>\\n    <label for=\\\"nDescription\\\">Description</label>\\n    <textarea id=\\\"nDescription\\\" name=\\\"description\\\" placeholder=\\\"Add a Description\\\"\\n              ng-model=\\\"$ctrl.narrative.description.en\\\"></textarea>\\n    <div ng-if=\\\"!$ctrl.hidePathSlug\\\">\\n      <np-guest-accessible-url\\n        narrative=\\\"$ctrl.narrative\\\"\\n        sub-domain=\\\"{{$ctrl.narrative.narrative_subdomain}}\\\"\\n        customer=\\\"$ctrl.selectedCustomer\\\">\\n      </np-guest-accessible-url>\\n    </div>\\n    <label for=\\\"nSupportUrl\\\">Support Url\\n      <itt-validation-tip ng-if=\\\"nEditForm.supportUrl.$invalid\\\" text=\\\"Not a valid URL\\\"></itt-validation-tip>\\n    </label>\\n    <input id=\\\"nSupportUrl\\\" type=\\\"text\\\" name=\\\"supportUrl\\\" itt-valid-url placeholder=\\\"link for support\\\"\\n           ng-model=\\\"$ctrl.narrative.support_url\\\"/>\\n    <div class=\\\"narrative-flags\\\">\\n      <div>\\n        <input id=\\\"nNewWindow\\\" type=\\\"checkbox\\\" ng-model=\\\"$ctrl.narrative.disable_new_window\\\"/>\\n        <label for=\\\"nNewWindow\\\">Disable New Window</label>\\n      </div>\\n      <div>\\n        <input id=\\\"nDisableNav\\\" type=\\\"checkbox\\\" ng-model=\\\"$ctrl.narrative.disable_navigation\\\"/>\\n        <label for=\\\"nDisableNav\\\">Disable Navigation</label>\\n      </div>\\n      <div>\\n        <input\\n          id=\\\"nGuestAccess\\\"\\n          type=\\\"checkbox\\\"\\n          ng-change=\\\"$ctrl.guestAccessEffects()\\\"\\n          ng-model=\\\"$ctrl.narrative.guest_access_allowed\\\"/>\\n        <label for=\\\"nGuestAccess\\\">Enable Guest Access</label>\\n      </div>\\n      <div ng-if=\\\"$ctrl.trueAdmin && $ctrl.narrative._id\\\">\\n        <input\\n          id=\\\"socialshare-checkbox\\\"\\n          type=\\\"checkbox\\\"\\n          ng-disabled=\\\"$ctrl.narrative.disableSocialshare\\\"\\n          ng-model=\\\"$ctrl.narrative.enable_social_sharing\\\"/>\\n        <label for=\\\"socialshare-checkbox\\\">Enable Socialshare</label>\\n      </div>\\n    </div>\\n    <itt-enable-socialshare\\n      ng-if=\\\"$ctrl.trueAdmin && $ctrl.narrative._id\\\"\\n      container-id=\\\"{{$ctrl.selectedCustomer.root_container_id}}\\\"\\n      editor-form=\\\"nEditForm\\\"\\n      narrative=\\\"$ctrl.narrative\\\">\\n    </itt-enable-socialshare>\\n    <div class=\\\"ancillaryNav\\\">\\n      <button class=\\\"done\\\" ng-click=\\\"$ctrl.handleUpdate($ctrl.narrative)\\\"\\n              ng-disabled=\\\"nEditForm.$invalid || $ctrl.narrative.error\\\">Save\\n      </button>\\n      <button class=\\\"done\\\" ng-click=\\\"$ctrl.cancel()\\\">Cancel</button>\\n    </div>\\n  </form>\\n</div>\\n\";\nvar npNarrativeEditor_NarrativeEditorController = /** @class */ (function () {\n    function NarrativeEditorController(authSvc, uploadsService) {\n        this.authSvc = authSvc;\n        this.uploadsService = uploadsService;\n        //\n    }\n    NarrativeEditorController.prototype.$onInit = function () {\n        if (this.narrative) {\n            if (this.narrative.social_image_square != null || this.narrative.social_image_wide != null) {\n                this.narrative.social_image_wide = null;\n                this.narrative.social_image_square = null;\n            }\n        }\n        this._narrative = angular.copy(this.narrative);\n        this._setNameFromContainer();\n        this._setCustomer();\n        this.guestAccessEffects();\n    };\n    NarrativeEditorController.prototype.cancel = function () {\n        this.narrative = angular.copy(this._narrative);\n        this.onDone({ $undo: this.narrative });\n    };\n    NarrativeEditorController.prototype.trueAdmin = function () {\n        return this.authSvc.userHasRole('admin');\n    };\n    NarrativeEditorController.prototype.canAccess = function () {\n        return this.trueAdmin() || this.authSvc.userHasRole('customer admin');\n    };\n    NarrativeEditorController.prototype.guestAccessEffects = function () {\n        if (this.narrative == null) {\n            return;\n        }\n        if (this.narrative.guest_access_allowed === false) {\n            this.narrative.enable_social_sharing = false;\n            this.narrative.disableSocialshare = true;\n        }\n        else {\n            this.narrative.disableSocialshare = false;\n        }\n    };\n    NarrativeEditorController.prototype.selectCustomer = function (c) {\n        this.selectedCustomer = c;\n    };\n    NarrativeEditorController.prototype.handleUpdate = function (n) {\n        var _this = this;\n        //use selected customer from setCustomer() or from drop down select\n        if (existy(this.selectedCustomer)) {\n            n.customer_id = this.selectedCustomer._id;\n        }\n        var fields = [\n            'name',\n            'description',\n            'customer_id',\n            'guest_access_allowed',\n            'enable_social_sharing',\n            'narrative_image_ids',\n            'path_slug',\n            'support_url',\n            'disable_navigation',\n            'disable_new_window',\n            '_id'\n        ];\n        var narrative = createInstance('Narrative', pick(n, fields));\n        var socialImagesToUpload = [];\n        if (n.social_image_square) {\n            socialImagesToUpload.push({ file: n.social_image_square.file, tag: SOCIAL_IMAGE_SQUARE });\n        }\n        if (n.social_image_wide) {\n            socialImagesToUpload.push({ file: n.social_image_wide.file, tag: SOCIAL_IMAGE_WIDE });\n        }\n        //if there are pending social image uploads, upload them\n        //then push the asset ID in the img ids array.\n        if (socialImagesToUpload.length > 0) {\n            this.uploadsService.uploadTaggedFiles(socialImagesToUpload, this.selectedCustomer.root_container_id)\n                .then(function (assets) {\n                assets.forEach(function (asset) { return narrative.narrative_image_ids.push(asset.file._id); });\n                _this.uploadsService.resetUploads();\n                _this.onUpdate({ $narrative: narrative });\n                return;\n            });\n        }\n        else if (existy(this.containerInfo)) {\n            var containerId = this.containerInfo.containerId;\n            this.onUpdate({ $data: { narrative: narrative, containerId: containerId } });\n        }\n        else {\n            this.onUpdate({ $narrative: narrative });\n        }\n    };\n    NarrativeEditorController.prototype._setNameFromContainer = function () {\n        if (existy(this.containerInfo)) {\n            if (existy(this.narrative)) {\n                this.narrative.name = this.containerInfo.name;\n            }\n            else {\n                this.narrative = { name: this.containerInfo.name };\n            }\n        }\n    };\n    NarrativeEditorController.prototype._setCustomer = function () {\n        if (this.customers && this.customers.length === 1) {\n            this.selectCustomer(this.customers[0]);\n        }\n        else {\n            if (existy(this.narrative) || existy(this.containerInfo)) {\n                var cId_1 = existy(this.containerInfo) && this.containerInfo.customerId || this.narrative.customer_id;\n                this.selectCustomer(this.customers.filter(function (c) { return c._id === cId_1; })[0]);\n            }\n            else {\n                this.customers.unshift({ name: 'Select a Customer' });\n            }\n        }\n    };\n    NarrativeEditorController.$inject = ['authSvc', 'uploadsService'];\n    return NarrativeEditorController;\n}());\nvar NarrativeEditor = /** @class */ (function () {\n    function NarrativeEditor() {\n        this.bindings = {\n            narrative: '<?',\n            customers: '<',\n            containerInfo: '<?',\n            hidePathSlug: '<?',\n            onDone: '&',\n            onUpdate: '&'\n        };\n        this.template = npNarrativeEditor_TEMPLATE;\n        this.controller = npNarrativeEditor_NarrativeEditorController;\n    }\n    NarrativeEditor.Name = 'npNarrativeEditor'; // tslint:disable-line\n    return NarrativeEditor;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/npNarrativeList.ts\n\nvar npNarrativeList_NarrativeListController = /** @class */ (function () {\n    function NarrativeListController($location, authSvc, appState, dataSvc, modelSvc) {\n        this.$location = $location;\n        this.authSvc = authSvc;\n        this.appState = appState;\n        this.dataSvc = dataSvc;\n        this.modelSvc = modelSvc;\n        this.narrativeSelect = false;\n        this.user = null;\n        this.canAccess = false;\n        //\n    }\n    NarrativeListController.prototype.$onInit = function () {\n        this.user = this.appState.user;\n        if (this.authSvc.userHasRole('admin') || this.authSvc.userHasRole('customer admin')) {\n            this.canAccess = true;\n        }\n        this._updateAllEvenOdd();\n    };\n    NarrativeListController.prototype.logout = function () {\n        this.authSvc.logout();\n    };\n    NarrativeListController.prototype.setSelectedNarrative = function (customer) {\n        var _this = this;\n        var cachedNarratives = existy(customer.narratives) && customer.narratives.length > 1;\n        this.selectedCustomer = [customer];\n        //need list of other narratives to for validation of path slugs.\n        if (!cachedNarratives) {\n            this.dataSvc.getNarrativeList(customer)\n                .then(function () {\n                _this.narrativeSelect = !_this.narrativeSelect;\n            });\n        }\n        else {\n            this.narrativeSelect = !this.narrativeSelect;\n        }\n    };\n    NarrativeListController.prototype.customerRowClick = function (customer, $ev) {\n        $ev.stopPropagation();\n        customer.isActive = !customer.isActive;\n        this.narrativeRow = null;\n        this.customersData.forEach(function (cust) {\n            if (customer._id !== cust._id) {\n                cust.isActive = false;\n            }\n        });\n    };\n    NarrativeListController.prototype.gotoNarrative = function (narrativeId, $ev) {\n        $ev.stopPropagation();\n        this.$location.path('/story/' + narrativeId);\n    };\n    NarrativeListController.prototype.toggleRow = function (customer, $ev) {\n        $ev.stopPropagation();\n        customer.showNarratives = !customer.showNarratives;\n        if (customer.showNarratives) {\n            this._toggleNarrativesOpened(customer);\n        }\n        else {\n            customer.showNarratives = false;\n            this._toggleNarrativesClosed();\n        }\n    };\n    NarrativeListController.prototype.setRowClasses = function (customer) {\n        return {\n            'hoverIndicator': !customer.showNarratives,\n            'container__row--even': customer.evenOdd === false,\n            'container__row--odd': customer.evenOdd === true,\n            'isActive': customer.isActive\n        };\n    };\n    NarrativeListController.prototype.setNarrativeRowClasses = function (customer, narrative) {\n        return {\n            'hoverIndicator': customer.showNarratives,\n            'container__row--even': narrative.evenOdd === false,\n            'container__row--odd': narrative.evenOdd === true,\n            'isActive': narrative === this.narrativeRow\n        };\n    };\n    NarrativeListController.prototype.setNarrativeToEdit = function ($ev, narrative, customer) {\n        $ev.stopPropagation();\n        this.narrativeToEdit = narrative;\n        this.selectedCustomer = [customer];\n    };\n    NarrativeListController.prototype.closeAddOrEditModal = function (narrative, navigate) {\n        this.narrativeSelect = false;\n        this.selectedCustomer = [];\n        this.narrativeToEdit = null;\n        if (narrative && navigate) {\n            this.$location.path('/story/' + narrative._id);\n            return;\n        }\n        if (narrative) {\n            for (var c = 0; c < this.customersData.length; c += 1) {\n                if (this.customersData[c]._id === narrative.customer_id) {\n                    for (var n = 0; n < this.customersData[c].narratives.length; n += 1) {\n                        if (this.customersData[c].narratives[n]._id === narrative._id) {\n                            this.customersData[c].narratives[n] = narrative;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    NarrativeListController.prototype.addOrUpdateNarrative = function ($narrative) {\n        var _this = this;\n        var method = $narrative._id == null ? 'createNarrative' : 'updateNarrative';\n        this._addOrUpdateNarr($narrative, method)\n            .then(function (narrative) { return _this.closeAddOrEditModal(narrative, true); })\n            .catch(function (err) { return _this._handleErr(err); });\n    };\n    NarrativeListController.prototype.toggleNarrativeRow = function (narrative, $ev) {\n        $ev.stopPropagation();\n        if (this.narrativeRow === null) {\n            this.narrativeRow = narrative;\n        }\n        else if (narrative === this.narrativeRow) {\n            this.narrativeRow = null;\n        }\n        else {\n            this.narrativeRow = narrative;\n        }\n        //close any selected customers\n        this.customersData.forEach(function (cust) {\n            cust.isActive = false;\n        });\n    };\n    NarrativeListController.prototype._toggleNarrativesOpened = function (customer) {\n        //lazily load customers and cache them for later\n        if (!existy(customer.narratives) || customer.narratives.length === 0) {\n            //fetch and cache is async and will handle setting the evenOdd on the narratives/customers\n            //after they have resolved.\n            this._fetchAndCacheNarratives(customer);\n        }\n        //if we already cached our narratives and the list length is odd\n        //need to update the customers evenOdd.\n        if (existy(customer.narratives) && customer.narratives.length >= 1) {\n            this._updateAllEvenOdd();\n        }\n    };\n    NarrativeListController.prototype._fetchAndCacheNarratives = function (customer) {\n        var _this = this;\n        this.dataSvc.getNarrativeList(customer).then(function () {\n            //setting evenOdd after fetching should only need to happen the first time.\n            _this._updateAllEvenOdd();\n        });\n    };\n    NarrativeListController.prototype._updateAllEvenOdd = function () {\n        var rest = 1;\n        var len = this.customersData.length;\n        for (; rest <= len; rest += 1) {\n            if (rest - 1 === 0) {\n                this.customersData[0].evenOdd = false;\n            }\n            var nextCust = this.customersData[rest];\n            var currentCust = this.customersData[rest - 1];\n            var lastNarr = null;\n            if (existy(currentCust.narratives) && currentCust.narratives.length > 0 && currentCust.showNarratives === true) {\n                this._updateNarrativeEvenOdd(currentCust);\n                lastNarr = currentCust.narratives[currentCust.narratives.length - 1];\n            }\n            if (!existy(nextCust)) {\n                return;\n            }\n            if (existy(lastNarr)) {\n                nextCust.evenOdd = !lastNarr.evenOdd;\n            }\n            else {\n                nextCust.evenOdd = !currentCust.evenOdd;\n            }\n        }\n    };\n    NarrativeListController.prototype._updateNarrativeEvenOdd = function (customer) {\n        customer.narratives = customer.narratives\n            .sort(function (a, b) {\n            var aName = a.name.en.toLowerCase();\n            var bName = b.name.en.toLowerCase();\n            if (aName < bName) {\n                return -1;\n            }\n            else if (aName > bName) {\n                return 1;\n            }\n            return 0;\n        })\n            .reduce(function (narrs, narr, index) {\n            if (index === 0) {\n                //set first narrative to be opposite of customer\n                narr.evenOdd = !customer.evenOdd;\n                narrs.push(narr);\n                return narrs;\n            }\n            //continue alternating scheme by looking at the prior index and flipping it.\n            narr.evenOdd = !narrs[index - 1].evenOdd;\n            narrs.push(narr);\n            return narrs;\n        }, []);\n    };\n    NarrativeListController.prototype._toggleNarrativesClosed = function () {\n        this._updateAllEvenOdd();\n    };\n    NarrativeListController.prototype._addOrUpdateNarr = function (n, method) {\n        var _this = this;\n        return this.dataSvc[method](n)\n            .then(function (resp) {\n            var narrative = resp.data;\n            var customer = _this.modelSvc.customers[narrative.customer_id];\n            customer = _this.modelSvc.assocNarrativesWithCustomer(customer, [narrative]);\n            var custOnScope = _this.customersData.filter(function (cust) { return cust._id === customer._id; });\n            if (custOnScope.length === 1) {\n                _this._updateNarrativeEvenOdd(customer);\n                custOnScope[0] = customer;\n                if (method === 'createNarrative') {\n                    return narrative;\n                }\n            }\n        });\n    };\n    NarrativeListController.prototype._handleErr = function (err) {\n        if (err.data.path_slug) {\n            this.narrativeToEdit.error = 'path slug is already taken';\n        }\n    };\n    NarrativeListController.$inject = ['$location', 'authSvc', 'appState', 'dataSvc', 'modelSvc', 'ittUtils'];\n    return NarrativeListController;\n}());\nvar NarrativeList = /** @class */ (function () {\n    function NarrativeList() {\n        this.bindings = {\n            customersData: '<'\n        };\n        this.templateUrl = 'templates/narrativelist.html';\n        this.controller = npNarrativeList_NarrativeListController;\n    }\n    NarrativeList.Name = 'npNarrativeList'; // tslint:disable-line\n    return NarrativeList;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/npNarrativesContainer.ts\nvar npNarrativesContainer_TEMPLATE = \"\\n<div class=\\\"standaloneAncillaryPage\\\">\\n\\t<np-nav on-logout=\\\"$ctrl.logout()\\\"></np-nav>\\n\\t<h1>Narratives</h1>\\n\\t<np-loading ng-if=\\\"$ctrl.customersData == null\\\"></np-loading>\\n\\t<np-narrative-list\\n\\t  ng-if=\\\"$ctrl.customersData\\\"\\n\\t  class=\\\"np-narrative-container\\\"\\n\\t  customers-data=\\\"$ctrl.customersData\\\">\\n\\t</np-narrative-list>\\n</div>\\n\";\nvar NarrativesContainerController = /** @class */ (function () {\n    function NarrativesContainerController($q, authSvc, dataSvc, modelSvc) {\n        this.$q = $q;\n        this.authSvc = authSvc;\n        this.dataSvc = dataSvc;\n        this.modelSvc = modelSvc;\n        //\n    }\n    NarrativesContainerController.prototype.$onInit = function () {\n        var _this = this;\n        this._resolveCustomers()\n            .then(function (c) { return _this.customersData = _this.modelSvc.getCustomersAsArray(); });\n    };\n    NarrativesContainerController.prototype.logout = function () {\n        this.authSvc.logout();\n    };\n    NarrativesContainerController.prototype._resolveCustomers = function () {\n        var _this = this;\n        //needs to be an array\n        var cachedCustomers = this.modelSvc.getCustomersAsArray();\n        //if use visits /story/:id prior to visiting this route, they will have a single\n        //narrative in modelSvc. We consider the cache 'empty' if the only narrative\n        //in it came from loading data for /story/:id. Otherwise when they visit\n        // /stories, the only listing they would see would be the narrative from\n        // /stories/:id.\n        var isCached = Object.keys(cachedCustomers).length > 0;\n        if (isCached) {\n            //since this is going to be displayed in a dropdown, it needs to be an array of objects.\n            return this.$q.resolve(cachedCustomers);\n        }\n        return this.authSvc.authenticate()\n            .then(function () { return _this.dataSvc.getCustomerList(); })\n            .then(function (customers) { return customers; });\n    };\n    NarrativesContainerController.$inject = ['$q', 'authSvc', 'dataSvc', 'modelSvc'];\n    return NarrativesContainerController;\n}());\nvar NarrativesContainer = /** @class */ (function () {\n    function NarrativesContainer() {\n        this.bindings = {};\n        this.template = npNarrativesContainer_TEMPLATE;\n        this.controller = NarrativesContainerController;\n    }\n    NarrativesContainer.Name = 'npNarrativesContainer'; // tslint:disable-line\n    return NarrativesContainer;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/npNarrativeContainer.ts\n\nvar npNarrativeContainer_TEMPLATE = \"\\n<div class=\\\"standaloneAncillaryPage\\\">\\n\\t<np-nav on-logout=\\\"$ctrl.logout()\\\"></np-nav>\\n  <np-loading ng-if=\\\"$ctrl.narrative == null && $ctrl.customers == null\\\"></np-loading>\\n  <np-narrative-detail\\n    ng-if=\\\"$ctrl.narrative && $ctrl.customers\\\"\\n    class=\\\"np-narrative-container\\\"\\n    narrative=\\\"$ctrl.narrative\\\"\\n    customers=\\\"$ctrl.customers\\\">\\n  </np-narrative-detail> \\n</div>\\n\";\nvar npNarrativeContainer_NarrativeContainerController = /** @class */ (function () {\n    function NarrativeContainerController($q, $routeParams, modelSvc, dataSvc, authSvc) {\n        this.$q = $q;\n        this.$routeParams = $routeParams;\n        this.modelSvc = modelSvc;\n        this.dataSvc = dataSvc;\n        this.authSvc = authSvc;\n        //\n    }\n    NarrativeContainerController.prototype.$onInit = function () {\n        var _this = this;\n        this._resolveNarrative()\n            .then(function (_a) {\n            var n = _a.n, c = _a.c;\n            _this.narrative = n;\n            _this.customers = c;\n        });\n    };\n    NarrativeContainerController.prototype.logout = function () {\n        this.authSvc.logout();\n    };\n    NarrativeContainerController.prototype._resolveNarrative = function () {\n        var _this = this;\n        var pathOrId = this.$routeParams.narrativePath;\n        var cachedNarr = this.modelSvc.getNarrativeByPathOrId(pathOrId);\n        var cachedCustomer;\n        var doPullFromCache = existy(cachedNarr)\n            && existy(cachedNarr.path_slug)\n            && existy(cachedNarr.timelines)\n            && (cachedNarr.path_slug.en === pathOrId || cachedNarr._id === pathOrId);\n        if (doPullFromCache) {\n            cachedCustomer = this.modelSvc.customers[cachedNarr.customer_id];\n            return this.$q.resolve({ n: cachedNarr, c: [cachedCustomer] });\n        }\n        return this.dataSvc.getNarrative(pathOrId)\n            .then(function (narrativeData) {\n            return _this.dataSvc.getCustomer(narrativeData.customer_id, true)\n                .then(function (customer) { return ({ n: narrativeData, c: [customer] }); });\n        });\n    };\n    NarrativeContainerController.$inject = ['$q', '$routeParams', 'modelSvc', 'dataSvc', 'authSvc'];\n    return NarrativeContainerController;\n}());\nvar NarrativeContainer = /** @class */ (function () {\n    function NarrativeContainer() {\n        this.template = npNarrativeContainer_TEMPLATE;\n        this.controller = npNarrativeContainer_NarrativeContainerController;\n    }\n    NarrativeContainer.Name = 'npNarrativeContainer'; // tslint:disable-line\n    return NarrativeContainer;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittNarrativeTimeline.ts\nvar NarrativeTimelineCtrl = /** @class */ (function () {\n    function NarrativeTimelineCtrl($scope, $routeParams, $location, dataSvc, appState, authSvc, errorSvc) {\n        this.$scope = $scope;\n        this.$routeParams = $routeParams;\n        this.$location = $location;\n        this.dataSvc = dataSvc;\n        this.appState = appState;\n        this.authSvc = authSvc;\n        this.errorSvc = errorSvc;\n    }\n    NarrativeTimelineCtrl.prototype.$onInit = function () {\n        var _this = this;\n        this.disableSocialShareOnDev();\n        // this.appState.init();\n        console.log('narrative timeline init!');\n        this.dataSvc.getNarrative(this.$routeParams.narrativePath)\n            .then(function (narrative) {\n            _this.appState.narrativeId = narrative._id;\n            _this.$scope.narrative = narrative;\n            var narrativeRole = _this.authSvc.getRoleForNarrative(narrative._id);\n            var defaultProduct = _this.authSvc.getDefaultProductForRole(narrativeRole);\n            var currentTl = Object.create(null);\n            var tlTitle = '';\n            var tlId = '';\n            _this.appState.product = defaultProduct;\n            angular.forEach(narrative.timelines, function (timeline) {\n                if (timeline._id === _this.$routeParams.timelinePath ||\n                    timeline.path_slug.en === _this.$routeParams.timelinePath) {\n                    currentTl = timeline;\n                    tlTitle = timeline.name.en;\n                    tlId = timeline._id;\n                    _this.appState.timelineId = timeline._id;\n                    if (timeline.episode_segments[0]) {\n                        _this.appState.episodeId = timeline.episode_segments[0].episode_id;\n                        _this.appState.episodeSegmentId = timeline.episode_segments[0]._id;\n                        _this.$scope.showPlayer = true;\n                    }\n                }\n            });\n            var narrativeUrl = narrative.path_slug.en;\n            var timelineUrl = currentTl.path_slug.en;\n            var subDomain = narrative.narrative_subdomain;\n            if (narrative.enable_social_sharing === true && _this.$scope.enableSocialSharing === true) {\n                _this.$scope.socialShareInfo = {\n                    subDomain: subDomain,\n                    tlTitle: tlTitle,\n                    narrative: narrativeUrl,\n                    timeline: { url: timelineUrl, id: tlId }\n                };\n            }\n            if (!_this.appState.episodeId) {\n                _this.errorSvc.error({\n                    data: 'Sorry, no episode was found in this timeline.'\n                });\n            }\n        });\n    };\n    NarrativeTimelineCtrl.prototype.disableSocialShareOnDev = function () {\n        this.$scope.enableSocialSharing = !(/api-dev|np-dev|demo/.test(this.$location.host()));\n    };\n    NarrativeTimelineCtrl.$inject = [\n        '$scope',\n        '$routeParams',\n        '$location',\n        'dataSvc',\n        'appState',\n        'authSvc',\n        'errorSvc'\n    ];\n    return NarrativeTimelineCtrl;\n}());\n// ittNarrativeTimeline.$inject = ['$routeParams', '$location', 'dataSvc', 'appState', 'authSvc', 'errorSvc'];\nfunction ittNarrativeTimeline() {\n    return {\n        restrict: 'A',\n        replace: true,\n        templateUrl: 'templates/player-timeline.html',\n        controller: NarrativeTimelineCtrl\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittNav.ts\n/**\n * Created by githop on 9/22/16.\n */\nvar bannerImg = __webpack_require__(\"rFfA\");\nvar logo = __webpack_require__(\"5Tuk\");\nvar ittNav_TEMPLATE = \"\\n<div>\\n\\t<header class=\\\"nav__header\\\">\\n\\t\\t<div class=\\\"nav__item\\\">\\n\\t\\t\\t<img ng-if=\\\"!$ctrl.inPlayer\\\" ng-src=\\\"{{::$ctrl.bannerImg}}\\\"/>\\n\\t\\t\\t<img ng-if=\\\"$ctrl.inPlayer\\\" ng-src=\\\"{{::$ctrl.logo}}\\\"/>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"nav__item\\\" ng-if=\\\"$ctrl.appState.user._id\\\">\\n\\t\\t\\t<div class=\\\"nav__controls\\\">\\n\\t\\t\\t\\t<div class=\\\"navControls__item item--left\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"nav__user\\\" ng-click=\\\"$ctrl.goToAccounts()\\\">\\n\\t\\t\\t\\t\\t\\t<img ng-src=\\\"{{$ctrl.appState.user.avatar || $ctrl.noAvatar}}\\\">\\n\\t\\t\\t\\t\\t\\t<a class=\\\"nav__button\\\" ng-if=\\\"$ctrl.appState.user\\\">{{$ctrl.appState.user.name}}</a>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<a class=\\\"nav__button\\\"\\n\\t\\t\\t\\t\\t  ng-if=\\\"$ctrl.currentPath !== '/projects' && $ctrl.canAccess\\\" href=\\\"/#/projects\\\">My Projects</a>\\n\\t\\t\\t\\t\\t<a class=\\\"nav__button\\\"\\n\\t\\t\\t\\t\\t  ng-if=\\\"$ctrl.currentPath !== '/stories' && $ctrl.canAccess\\\" href=\\\"/#/stories\\\">My Narratives</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"navControls__item item--right\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"nav__button\\\" ng-click=\\\"$ctrl.onLogout()\\\">Log out</a>\\n\\t\\t\\t\\t\\t<a class=\\\"nav__button\\\" \\n\\t\\t\\t\\t\\t  ng-if=\\\"$ctrl.canAccess\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"https://support.narrasys.com\\\">Help</a>\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</header>\\n</div>\\n\";\nvar NavController = /** @class */ (function () {\n    function NavController($location, appState, authSvc) {\n        this.$location = $location;\n        this.appState = appState;\n        this.authSvc = authSvc;\n        //\n        this.bannerImg = bannerImg;\n        this.logo = logo;\n        //\n    }\n    Object.defineProperty(NavController.prototype, \"currentPath\", {\n        get: function () {\n            return this.$location.path();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NavController.prototype, \"noAvatar\", {\n        get: function () {\n            return this.appState.noAvatarImg;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NavController.prototype.$onInit = function () {\n        var _this = this;\n        this.authSvc.authenticate().then(function () {\n            _this.canAccess = _this.authSvc.userHasRole('admin')\n                || _this.authSvc.userHasRole('customer admin')\n                || _this.authSvc.userHasRole('instructor');\n        });\n    };\n    NavController.prototype.goToAccounts = function () {\n        if (this.canAccess) {\n            this.$location.url('/account');\n        }\n    };\n    NavController.$inject = ['$location', 'appState', 'authSvc'];\n    return NavController;\n}());\nvar Nav = /** @class */ (function () {\n    function Nav() {\n        this.bindings = {\n            inPlayer: '<?',\n            onLogout: '&?'\n        };\n        this.template = ittNav_TEMPLATE;\n        this.controller = NavController;\n    }\n    Nav.Name = 'npNav'; // tslint:disable-line\n    return Nav;\n}());\n\n/* tslint:disable */\n// export default function ittNav() {\n//   return {\n//     restrict: 'EA',\n//     scope: {\n//       onLogout: '&',\n//       inPlayer: '=?'\n//     },\n//     template: `\n//       `,\n//     controller: ['$location', 'appState', 'authSvc', function ($location, appState, authSvc) {\n//       var ctrl = this;\n//       ctrl.currentPath = $location.path();\n//       ctrl.appState = appState;\n//       ctrl.goToAccounts = goToAccounts;\n//       ctrl.bannerImg = bannerImg;\n//       ctrl.noAvatar = appState.noAvatarImg;\n//       ctrl.logo = logo;\n//       authSvc.authenticate().then(function () {\n//         ctrl.canAccess = authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin') || authSvc.userHasRole('instructor');\n//       });\n//\n//       function goToAccounts() {\n//         if (ctrl.canAccess) {\n//           $location.url('/account');\n//         }\n//       }\n//     }],\n//     controllerAs: '$ctrl',\n//     bindToController: true\n//   };\n// }\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittOptionsDisabled.ts\n/**\n * Created by githop on 8/9/16.\n */\nittOptionsDisabled.$inject = ['$parse'];\n//from: http://stackoverflow.com/a/16203547\nfunction ittOptionsDisabled($parse) {\n    return {\n        restrict: 'EA',\n        priority: 0,\n        require: 'ngModel',\n        link: link\n    };\n    function _disableOptions(scope, attr, element, data, fnDisableIfTrue) {\n        var options = element.find('option');\n        var pos = 0, index = 0, len = options.length, locals;\n        for (; pos < len; pos++) {\n            var elm = angular.element(options[pos]);\n            if (elm.val() != '') {\n                locals = {};\n                locals[attr] = data[index];\n                elm.attr('disabled', fnDisableIfTrue(scope, locals));\n                index++;\n            }\n        }\n    }\n    function link(scope, elm, attrs) {\n        var expElements = attrs.ittOptionsDisabled.match(/^\\s*(.+)\\s+for\\s+(.+)\\s+in\\s+(.+)?\\s*/);\n        var attrToWatch = expElements[3];\n        var fnDisableIfTrue = $parse(expElements[1]);\n        scope.$watch(attrToWatch, function (nv) {\n            if (nv) {\n                _disableOptions(scope, expElements[2], elm, nv, fnDisableIfTrue);\n            }\n        }, true);\n        scope.$watch(attrs.ngModel, function (nv) {\n            var disOptions = $parse(attrToWatch)(scope);\n            if (nv) {\n                _disableOptions(scope, expElements[2], elm, disOptions, fnDisableIfTrue);\n            }\n        });\n    }\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittQuestionOptions.ts\n/**\n * Created by githop on 6/30/16.\n */\nfunction ittQuestionOptions() {\n    return {\n        restrict: 'EA',\n        scope: true,\n        template: [\n            '<div class=\"field\"><div class=\"label\">Answers</div></div>',\n            '<div class=\"field\" ng-repeat=\"distractor in item.data._plugin.distractors track by $index\">',\n            '\t<div class=\"label\">',\n            '\t\t{{$index | alpha}} &nbsp;',\n            '\t\t<input type=\"checkbox\" ng-model=\"distractor.correct\" ng-change=\"onFormativeChecked(distractor)\" ng-if=\"item.data._plugin.questiontype == \\'mc-formative\\'\">',\n            '\t</div>',\n            '\t<div class=\"input\" sxs-input-i18n=\"distractor.text\" x-inputtype=\"\\'textarea\\'\"></div>',\n            '</div>',\n            '<div class=\"field\">',\n            '\t<div class=\"input\">',\n            '\t\t<button ng-click=\"addDistractor($event)\">Add distractor</button>',\n            '\t</div>',\n            '</div>',\n            '<div class=\"field\" ng-if=\"item.data._plugin.questiontype == \\'mc-formative\\'\">',\n            '\t<div class=\"label\">Feedback when correct</div>',\n            '\t<div class=\"input\" sxs-input-i18n=\"item.data._plugin.correctfeedback\" x-inputtype=\"\\'textarea\\'\"></div>',\n            '</div>',\n            '<div class=\"field\" ng-if=\"item.data._plugin.questiontype == \\'mc-formative\\'\">',\n            '\t<div class=\"label\">Feedback when incorrect</div>',\n            '\t<div class=\"input\" sxs-input-i18n=\"item.data._plugin.incorrectfeedback\" x-inputtype=\"\\'textarea\\'\"></div>',\n            '</div>'\n        ].join(' ')\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittQuestionTextField.ts\n/**\n * Created by githop on 6/30/16.\n */\nfunction ittQuestionTextField() {\n    return {\n        restrict: 'EA',\n        scope: {\n            data: \"=\",\n            doValidate: '=?',\n            ittItemForm: '=?'\n        },\n        template: [\n            '<div class=\"field\">',\n            '\t<div class=\"label\">Question text',\n            '\t\t<itt-validation-tip ng-if=\"$ctrl.ittItemForm[$ctrl.textAreaName].$invalid\" text=\"Question Text is a required field\"></itt-validation-tip>',\n            '\t</div>',\n            '\t<div class=\"input\" do-validate=\"$ctrl.doValidate\" on-emit-name=\"$ctrl.onName($taName)\" sxs-input-i18n=\"$ctrl.data.data._plugin.questiontext\" x-inputtype=\"\\'textarea\\'\"></div>',\n            '</div>'\n        ].join(' '),\n        controller: [function () {\n                var ctrl = this;\n                ctrl.onName = onName;\n                function onName(v) {\n                    console.log(\"name!\", v);\n                    ctrl.textAreaName = v;\n                }\n            }],\n        controllerAs: '$ctrl',\n        bindToController: true\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittQuestionTypeSelect.ts\n/**\n * Created by githop on 6/30/16.\n */\nfunction ittQuestionTypeSelect() {\n    return {\n        restrict: 'EA',\n        scope: {\n            data: '='\n        },\n        template: [\n            '<div class=\"field\">',\n            '\t<div class=\"label\">Template</div>',\n            '\t<div class=\"input\">',\n            '\t<select ng-model=\"$ctrl.data.data._plugin.questiontype\" ng-options=\"{{$ctrl.setNgOpts(\\'questionType\\')}}\"></select>',\n            '\t</div>',\n            '</div>'\n        ].join(' '),\n        controller: ['selectService', 'ittUtils', function (selectService, ittUtils) {\n                var ctrl = this;\n                ctrl.setNgOpts = ittUtils.setNgOpts;\n                ctrl.getSelectOpts = selectService.getSelectOpts;\n                onInit();\n                function onInit() {\n                    //initialize layout data by forcing a pass through the select service.\n                    selectService.onSelectChange(ctrl.data, {});\n                }\n            }],\n        controllerAs: '$ctrl',\n        bindToController: true\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittReviewMode.ts\n// Force scenes to render scenes sequentially instead of all in one ng-repeat, because it looks faster that way.\n// (why don't all ng-repeats do this?  More to the point, why don't all of OUR ng-repeats do this?)\n// NOTE this is only used in the \"review mode\", not in the new combined search/review\nittReviewMode.$inject = ['$timeout', 'appState'];\nfunction ittReviewMode($timeout, appState) {\n    return {\n        restrict: 'A',\n        replace: false,\n        scope: {\n            allScenes: '=ittReviewMode'\n        },\n        templateUrl: 'templates/episode/components/reviewmode-scenes.html',\n        link: function (scope) {\n            // console.log('ittReviewMode', scope);\n            // scope.scenes is what is being displayed right now. scope.allScenes is a reference to the original episode data,\n            // which is handy if the episode data hasn't loaded before this gets invoked.\n            scope.appState = appState;\n            scope.scenes = [];\n            var delay = 100; // would be better if there were a way to directly determine whether the prev scene has finished rendering, but this will do for now\n            var cur = 0;\n            scope.isLoading = true;\n            // Was just rendering one scene at a time, but with a lot scenes that can be a different kind of slow.\n            // So we'll ramp up gradually rendering more and more each iteration:\n            var fib = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, Infinity];\n            scope.addOne = function () {\n                cur++;\n                if (scope.allScenes) {\n                    scope.scenes = scope.allScenes.slice(0, fib[cur]);\n                    // console.log(\"scope.scenes length is \",scope.scenes.length);\n                    if (cur < scope.allScenes.length) {\n                        $timeout(scope.addOne, delay);\n                    }\n                    else {\n                        scope.isLoading = false;\n                        scope.scenes = scope.allScenes; // swap in the original data reference once we think we're done loading, so in case users start adding new scenes later we're not stuck with a partial slice\n                        // console.log(\"stopping\");\n                    }\n                }\n                else {\n                    // No scenes loaded yet, so wait for them and try again.  (TODO see if this still works ok if users are editing or adding scenes while in review mode)\n                    var loadWatcher = scope.$watch(function () {\n                        return scope.allScenes;\n                    }, function () {\n                        if (scope.allScenes) {\n                            loadWatcher();\n                            scope.addOne();\n                        }\n                    });\n                }\n            };\n            $timeout(scope.addOne, delay);\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittRouteLoading.ts\n/**\n * Created by githop on 6/15/16.\n */\nfunction ittRouteLoading() {\n    return {\n        restrict: 'EA',\n        template: [\n            '<div ng-if=\"routeLoadingCtrl.isLoading\" class=\"loading routeLoading\">',\n            '\t<div class=\"spinner\">',\n            '\t\t<div class=\"rotating pie\"></div>',\n            '\t\t<div class=\"filler pie\"></div>',\n            '\t\t<div class=\"mask\"></div>',\n            '\t</div><span class=\"loading__text\">Loading</span>',\n            '</div>'\n        ].join(' '),\n        scope: {\n            isLoading: '=?'\n        },\n        controller: ['$rootScope', '$scope', '$timeout', 'errorSvc',\n            function ($rootScope, $scope, $timeout, errorSvc) {\n                var ctrl = this;\n                ctrl.isLoading = ctrl.isLoading || false;\n                var threshold;\n                $rootScope.$on('$routeChangeStart', function () {\n                    threshold = $timeout(function () {\n                        ctrl.isLoading = true;\n                    }, 500);\n                });\n                $rootScope.$on('$routeChangeSuccess', function () {\n                    $timeout.cancel(threshold);\n                    ctrl.isLoading = false;\n                });\n                $rootScope.$on('$locationChangeSuccess', function () {\n                    $timeout.cancel(threshold);\n                    ctrl.isLoading = false;\n                });\n                $rootScope.$on('$routeChangeError', function () {\n                    $timeout.cancel(threshold);\n                    ctrl.isLoading = false;\n                });\n                //do not show loading indicator\n                //when we have errors\n                $scope.$watch(function () {\n                    return errorSvc.errors.length;\n                }, function (newVal, oldVal) {\n                    if (newVal !== oldVal && newVal > 0) {\n                        $timeout.cancel(threshold);\n                        ctrl.isLoading = false;\n                    }\n                });\n            }],\n        controllerAs: 'routeLoadingCtrl',\n        bindToController: true\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittScene.ts\n// Minor jquery dependency ($.inArray)\nittScene.$inject = ['$timeout', 'appState'];\nfunction ittScene($timeout, appState) {\n    return {\n        restrict: 'A',\n        replace: false,\n        scope: {\n            scene: '=ittScene',\n            episode: '=episode'\n        },\n        template: '<span ng-include=\"scene.templateUrl\"></span>',\n        controller: 'SceneController',\n        link: function (scope, element) {\n            // force discover and watch modes to not start out scrolled halfway out of view (STORY-161)\n            if (appState.viewMode !== 'review') {\n                window.scrollTo(0, 0);\n            }\n            scope.precalculateSceneValues();\n            scope.appState = appState;\n            // Trigger twiddleScene when the window changes size, the scene becomes current, or the viewMode changes:\n            window.addEventListener('resize', function () { return twiddleScene(); });\n            twiddleScene();\n            function twiddleScene() {\n                $timeout(function () {\n                    element.find('.matchVideoHeight:visible').each(function () {\n                        $(this).css('height', element.find('.videoMagnet img').height());\n                    });\n                    var availableViewportHeight = angular.element(window).height() - $('#CONTAINER').scrollTop();\n                    /* TOOLBAR HEIGHT */\n                    element.find('.stretchToViewport:visible').each(function () {\n                        $(this).css('min-height', (availableViewportHeight - $(this).offset().top));\n                    });\n                    // landing screen: keep the bottom toolbar onscreen\n                    element.find('.stretchToViewportShort:visible').each(function () {\n                        // HARDCODED FOOTER HEIGHT\n                        $(this).css('min-height', (availableViewportHeight - $(this).offset().top - 210));\n                    });\n                }, 100);\n            }\n            // trigger init when the user edits content:\n            scope.unwatchEdits = scope.$watch(function () { return appState.editEvent; }, scope.precalculateSceneValues, true);\n            // HACK to catch cases (mostly on ios) where matchvideoheight isn't matching.\n            // slow, odd interval\n            // scope.safetyBelt = $interval(twiddleScene, 1321);\n            // cleanup watchers on destroy\n            scope.$on('$destroy', function () {\n                // scope.unwatch();\n                scope.unwatchEdits();\n                // $interval.cancel(scope.safetyBelt);\n            });\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittSearchPanel.ts\n// Was a 'panel' in the old three-modes style.  New layout combined search with review mode, still uses this.\n// Maybe rename it after we finally migrate completely away from the three-modes layout.\nittSearchPanel.$inject = ['appState'];\nfunction ittSearchPanel(appState) {\n    return {\n        restrict: 'A',\n        replace: true,\n        scope: true,\n        templateUrl: 'templates/searchpanel.html',\n        controller: 'SearchPanelController',\n        link: function (scope) {\n            scope.appState = appState;\n            // $timeout(function () {\n            // console.log(\"ittSearchPanel\", scope);\n            scope.indexEvents();\n            // });\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittShowFocus.ts\nittShowFocus.$inject = ['$timeout'];\nfunction ittShowFocus($timeout) {\n    return function (scope, element, attrs) {\n        scope.$watch(attrs.ittShowFocus, function (newValue) {\n            $timeout(function () {\n                /* jshint -W030 */\n                newValue && element.filter(':visible')\n                    .first()\n                    .focus();\n                /* jshint +W030 */\n            });\n        }, true);\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittShowHideVisualOnly.ts\nittShowHideVisualOnly.$inject = ['$animate'];\nfunction ittShowHideVisualOnly($animate) {\n    return {\n        restrict: 'A',\n        multiElement: true,\n        link: function (scope, element, attr) {\n            scope.$watch(attr.ittShowHideVisualOnly, function ngShowWatchAction(value) {\n                if (value) {\n                    $animate.removeClass(element, 'visual-hide');\n                }\n                else {\n                    $animate.addClass(element, 'visual-hide');\n                }\n            });\n        }\n    };\n}\nfunction visualHideAnimation() {\n    return {\n        addClass: function (element) {\n            //we'll use opacity, so we aren't hidden from screen readers, just hidden from eyes.\n            element.fadeTo(\"slow\", 0, function () {\n            });\n        },\n        removeClass: function (element) {\n            element.fadeTo(\"slow\", 1, function () {\n            });\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittSpeakerField.ts\n/**\n * Created by githop on 6/30/16.\n */\nfunction ittSpeakerField() {\n    return {\n        restrict: 'EA',\n        template: \"\\n      <div class=\\\"field\\\" ng-if=\\\"selectService.getVisibility('speakerField')\\\">\\n      \\t<div class=\\\"label\\\">Speaker [{{appState.lang}}]</div>\\n      \\t<div class=\\\"input\\\">\\n      \\t\\t<div sxs-annotator-autocomplete=\\\"annotators\\\" item=\\\"item\\\" ng-model=\\\"item.annotator\\\"></div>\\n      \\t</div>\\n      </div>\"\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittSpeakerThumbField.ts\n/**\n * Created by githop on 6/30/16.\n */\nfunction ittSpeakerThumbField() {\n    return {\n        restrict: 'EA',\n        template: [\n            '<div class=\"field\">',\n            '\t<div class=\"label\">Speaker thumbnail</div>',\n            '\t<div class=\"input\" ng-include=\"\\'templates/producer/upload-producer.html\\'\"></div>',\n            '</div>'\n        ].join(' ')\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittTabs.ts\n/*\n\n No sneaky changing the tab order or number of tabs after init allowed.\n\n Possibly boneheaded parts of this:\n\n - jQuery (.find())\n - depends on magic classNames 'cur' and 'ittTab'\n - depends on the directive user to keep track of tabindex :P\n\n TODO: allow different html layouts in ittTab (right now this is just for the producer edit pane)\n\n *** this is now deprecated **\n How to use:\n\n <div class=\"ittTabs\" itt-tabs>\n <div class=\"ittTab\" itt-tab=\"tabs[0]\" x-tabindex=\"0\" x-tablabel=\"Label 1\">\n Tab contents 1\n </div>\n <div class=\"ittTab cur\" itt-tab=\"tabs[1]\" x-tabindex=\"1\" x-tablabel=\"Label 2\">\n Tab contents 2 (Note that you can force this to start as the visible tab by giving it class 'cur')\n </div>\n <div class=\"ittTab\" itt-tab=\"tabs[2]\" x-tabindex=\"2\" x-tablabel=\"Label 3\">\n Tab contents 3\n </div>\n </div>\n\n *** new Example **\n improvements:\n - directive user does not need to keep track of tab index.\n - no jQuery dep.\n - still uses cur css class to style selected tab label.\n <itt-tabs>\n <itt-tab title=\"title 1\"> contents </itt-tab>\n <itt-tab title=\"title 2\"> contents </itt-tab>\n <itt-tab title=\"title 3\"> contents </itt-tab>\n </itt-tabs>\n\n */\nfunction ittTabs() {\n    return {\n        template: [\n            '<div class=\"\">',\n            '\t<ul class=\"nav nav-tabs\">',\n            '\t\t<li ng-repeat=\"pane in panes\" class=\"tab-pane\"><p class=\"ittTabLabel\" ng-class=\"{cur:pane.selected}\" ng-click=\"select(pane)\">{{pane.title}}</p></li>',\n            '\t</ul>',\n            '\t<div class=\"tab-content\"><ng-transclude></ng-transclude></div>',\n            '</div>'\n        ].join(''),\n        transclude: true,\n        restrict: 'EA',\n        scope: {},\n        controller: ['$scope', function ($scope) {\n                var panes = $scope.panes = [];\n                $scope.select = select;\n                var ctrl = this;\n                function select(pane) {\n                    angular.forEach(panes, function (p) {\n                        p.selected = false;\n                    });\n                    pane.selected = true;\n                }\n                ctrl.addPane = function addPane(pane) {\n                    if (panes.length === 0) {\n                        select(pane);\n                    }\n                    panes.push(pane);\n                };\n            }]\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittTab.ts\n/**\n * Created by githop on 3/30/17.\n */\nfunction ittTab() {\n    return {\n        template: '<div ng-show=\"selected\"><ng-transclude></ng-transclude></div>',\n        require: '^^ittTabs',\n        transclude: true,\n        scope: {\n            title: '@'\n        },\n        link: function (scope, elm, attrs, tabsCtrl) {\n            tabsCtrl.addPane(scope);\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittTemplateSelect.ts\n\nvar ittTemplateSelect_TEMPLATE = \"\\n<div class=\\\"field\\\" ng-if=\\\"$ctrl.isVisible\\\">\\n\\t<div class=\\\"label\\\">{{$ctrl.labelText}}</div>\\n\\t<div class=\\\"input\\\" ng-class=\\\"{layouts: $ctrl.labelText === 'Template' && $ctrl.data.producerItemType === 'scene'}\\\">\\n\\t\\t<select\\n\\t\\t  ng-if=\\\"$ctrl.context === 'event'\\\"\\n\\t\\t  ng-model=\\\"$ctrl.data.templateUrl\\\"\\n\\t\\t  ng-change=\\\"$ctrl.onSelectChange($ctrl.data, $ctrl.itemForm)\\\"\\n\\t\\t  ng-options=\\\"option.url as option.name for option in $ctrl.data.templateOpts\\\"\\n\\t\\t  itt-options-disabled=\\\"option.isDisabled for option in $ctrl.data.templateOpts\\\">\\n    </select>\\n    \\n    <select\\n      ng-if=\\\"$ctrl.context === 'episode'\\\"\\n\\t\\t  ng-model=\\\"$ctrl.data.template_id\\\"\\n\\t\\t  ng-change=\\\"$ctrl.onEpisodeTemplateChange()\\\"\\n\\t\\t  ng-options=\\\"option.id as option.name for option in $ctrl.data.templateOpts\\\">\\n    </select>\\n\\t</div>\\n</div>\";\nvar ittTemplateSelect_TemplateSelectController = /** @class */ (function () {\n    function TemplateSelectController(selectService, modelSvc) {\n        this.selectService = selectService;\n        this.modelSvc = modelSvc;\n        this.labelText = 'Template';\n        this.context = 'event';\n        //\n    }\n    TemplateSelectController.prototype.$onInit = function () {\n        this.isAnnotation = this.data instanceof IAnnotation;\n        this.isEpisode = this.data instanceof IEpisode;\n        if (this.data instanceof IEpisode) {\n            this.context = 'episode';\n        }\n        if (this.isAnnotation) {\n            var currentScene = this.selectService.getSceneName(this.modelSvc.scene(this.data.scene_id));\n            var isCenterVV = currentScene === 'centerVV';\n            var isMondrian = currentScene === 'centerVVMondrian';\n            //remove H1s for certain layouts - TS-1137\n            if (isCenterVV || isMondrian) {\n                this.data.templateOpts.forEach(function (tmpl) {\n                    if (tmpl.name === 'Header 1') {\n                        tmpl.isDisabled = true;\n                    }\n                });\n            }\n        }\n        //for episodes, not items (aka events).\n        //need a type of 'episode' for our selectSerivce\n        //switch statement\n        if (!this.data.hasOwnProperty('producerItemType')) {\n            this.data.producerItemType = 'episode';\n            this.labelText = 'Theme';\n        }\n    };\n    Object.defineProperty(TemplateSelectController.prototype, \"isVisible\", {\n        get: function () {\n            return this.selectService.getVisibility('templateSelect');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TemplateSelectController.prototype.onSelectChange = function (item, form) {\n        this.selectService.onSelectChange(item, form);\n    };\n    TemplateSelectController.prototype.onEpisodeTemplateChange = function () {\n        var dataToEmit = {\n            $data: {\n                episode: this.data,\n                templateId: this.data.template_id\n            }\n        };\n        this.onEpisodeEdit(dataToEmit);\n    };\n    TemplateSelectController.$inject = ['selectService', 'modelSvc'];\n    return TemplateSelectController;\n}());\nvar TemplateSelect = /** @class */ (function () {\n    function TemplateSelect() {\n        this.bindings = {\n            data: '=',\n            itemForm: '=?',\n            onEpisodeEdit: '&'\n        };\n        this.template = ittTemplateSelect_TEMPLATE;\n        this.controller = ittTemplateSelect_TemplateSelectController;\n    }\n    TemplateSelect.Name = 'npTemplateSelect'; // tslint:disable-line\n    return TemplateSelect;\n}());\n\n// export default function ittTemplateSelect() {\n//   return {\n//     restrict: 'EA',\n//     scope: {\n//       data: '=',\n//       itemForm: '=?'\n//     },\n//     template: `\n// <div class=\"field\" ng-if=\"$ctrl.isVisible('templateSelect')\">\n// \t<div class=\"label\">{{$ctrl.labelText}}</div>\n// \t<div class=\"input\" ng-class=\"{layouts: $ctrl.labelText === 'Template' && $ctrl.data.producerItemType === 'scene'}\">\n// \t\t<select\n// \t\t  ng-model=\"$ctrl.data.templateUrl\"\n// \t\t  ng-change=\"$ctrl.onSelectChange($ctrl.data, $ctrl.itemForm)\"\n// \t\t  ng-options=\"option.url as option.name for option in $ctrl.data.templateOpts\"\n// \t\t  itt-options-disabled=\"option.isDisabled for option in $ctrl.data.templateOpts\">\n//     </select>\n// \t</div>\n// </div>\n//       `,\n//     controller: ['selectService', 'modelSvc', function (selectService, modelSvc) {\n//       var ctrl = this;\n//       ctrl.isVisible = selectService.getVisibility.bind(selectService);\n//       ctrl.onSelectChange = selectService.onSelectChange.bind(selectService);\n//       ctrl.getSelectOpts = selectService.getSelectOpts.bind(selectService);\n//       ctrl.labelText = 'Template';\n//\n//       var isAnnotation = ctrl.data.producerItemType === 'annotation';\n//       var currentScene, isCenterVV, isMondrian;\n//       if (isAnnotation) {\n//         currentScene = selectService.getSceneName(modelSvc.scene(ctrl.data.scene_id));\n//         isCenterVV = currentScene === 'centerVV';\n//         isMondrian = currentScene === 'centerVVMondrian';\n//         //remove H1s for certain layouts - TS-1137\n//         if (isCenterVV || isMondrian) {\n//           angular.forEach(ctrl.data.templateOpts, function (tmpl) {\n//             if (tmpl.name === 'Header 1') {\n//               tmpl.isDisabled = true;\n//             }\n//           });\n//         }\n//       }\n//\n//\n//       //for episodes, not items (aka events).\n//       //need a type of 'episode' for our selectSerivce\n//       //switch statement\n//       if (!ctrl.data.hasOwnProperty('producerItemType')) {\n//         ctrl.data.producerItemType = 'episode';\n//         ctrl.labelText = 'Theme';\n//       }\n//     }],\n//     controllerAs: '$ctrl',\n//     bindToController: true\n//\n//   };\n// }\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittTimeField.ts\n/**\n * Created by githop on 6/30/16.\n */\nfunction ittTimeField() {\n    return {\n        restrict: 'EA',\n        scope: true,\n        template: [\n            '<div class=\"field\" ng-if=\"!(item._type===\\'Scene\\' && item.start_time <= 0.1)\">',\n            '\t<div class=\"label\">Start</div>',\n            '\t<div class=\"input\">',\n            '  <itt-validation-tip ng-if=\"ittItemForm.time.$invalid\" text=\"{{item.validationMessage}}\"></itt-validation-tip>',\n            '\t\t<span sxs-input-time=\"item\" x-input-field=\"start_time\"></span>',\n            '\t\t<span ng-if=\"!(item.stop || item._type === \\'Scene\\' || item._type === \\'Chapter\\')\">',\n            '\t\t\t<span class=\"label\"> &nbsp; &nbsp; &nbsp; End</span>',\n            '\t\t\t<span sxs-input-time=\"item\" x-input-field=\"end_time\"></span>',\n            '\t\t</span>',\n            '\t</div>',\n            '</div>'\n        ].join(' ')\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittTimeline.ts\n// jQuery dependencies: offset(), animate(), namespaced .bind and .unbind\n// TODO some events need to be unbound on destroy, which I'll get around to implementing if this ever needs to be destroyed\n// TODO for now simply hiding volume controls on touchscreen devices (they'll use native buttons). Future, see if we can include those and have them work properly...\nittTimeline.$inject = ['$timeout', 'appState', 'timelineSvc', 'modelSvc', 'playbackService'];\nfunction ittTimeline($timeout, appState, timelineSvc, modelSvc, playbackService) {\n    return {\n        restrict: 'A',\n        replace: true,\n        scope: true,\n        templateUrl: \"templates/timeline-story.html\",\n        controller: \"TimelineController\",\n        link: function (scope, element) {\n            // console.log('ittTimeline', scope, element);\n            scope.appState = appState;\n            scope.timeline = timelineSvc;\n            scope.handlePosition = 0; // position of draghandle (as a fraction of full timeline)\n            scope.zoomLevel = 1; // multiples by which the timeline is zoomed in\n            scope.zoomOffset = 0; // multiple by which the timeline is offset to the left\n            // Prevent this from being visible on touchscreens before playback, to allow youtube to init from direct user input\n            if (appState.isTouchDevice && !playbackService.getMetaProp('hasBeenPlayed')) {\n                scope.isSuppressed = true;\n            }\n            var watch = scope.$watch(function () {\n                return playbackService.getMetaProp('hasBeenPlayed');\n            }, function (wasPlayed) {\n                if (wasPlayed === true) {\n                    scope.isSuppressed = false;\n                    watch();\n                }\n            });\n            // these classnames and variable names aren't confusing AT ALL.  Curse you, past Daniel\n            var timelineNode, timelineContainer;\n            $timeout(function () {\n                timelineNode = element.find('.progressbarContainer');\n                timelineContainer = element.find('.progressbar');\n                initPlayheadEvents();\n            });\n            // zoom in on item edit:\n            scope.autoZoom = function (item) {\n                // console.log(\"autoZoom\");\n                scope.savedZoomLevel = scope.zoomLevel;\n                var itemLength = item.end_time - item.start_time;\n                var toEnd = (playbackService.getMetaProp('duration') - item.end_time);\n                // toEnd/itemLength puts the item end at the right edge of the visible playhead.\n                // trim it back by 40% for some wiggle room, and cap it at 2000% zoom so we don't go nuts on short-duration events\n                scope.zoomLevel = Math.min(Math.max(Math.round(0.6 * toEnd / itemLength), 1), 20);\n                zoom();\n            };\n            scope.endAutoZoom = function () {\n                if (scope.savedZoomLevel) {\n                    scope.zoomLevel = scope.savedZoomLevel;\n                    zoom();\n                    delete scope.savedZoomLevel;\n                }\n            };\n            var editWatcher = scope.$watch(function () {\n                return appState.editEvent;\n            }, function (item) {\n                if (appState.product === 'producer') {\n                    if (item) {\n                        scope.autoZoom(item);\n                    }\n                    else {\n                        scope.endAutoZoom();\n                    }\n                }\n            });\n            scope.appState = appState;\n            scope.setNewLanguage = function () {\n                modelSvc.setLanguageStrings();\n            };\n            scope.showSceneMenuTooltip = function (makeVisible) {\n                if (makeVisible && !(appState.isTouchDevice)) {\n                    scope.sceneMenuToolTip = true;\n                }\n                else {\n                    scope.sceneMenuToolTip = false;\n                }\n            };\n            scope.prevScene = function () {\n                // console.log(\"prevScene\");\n                timelineSvc.prevScene();\n            };\n            scope.nextScene = function () {\n                // console.log(\"nextScene\");\n                timelineSvc.nextScene();\n            };\n            scope.userChangingVolume = function (evt) {\n                if (playbackService.getMetaProp('muted')) {\n                    scope.toggleMute();\n                }\n                var volumeNode = angular.element(evt.currentTarget);\n                var updateVolume = function (movement, noApplyNeeded) {\n                    var newVolume = (movement.clientX - volumeNode.offset()\n                        .left) / volumeNode.width() * 100;\n                    if (newVolume > 98) {\n                        newVolume = 100;\n                    }\n                    if (newVolume < 3) {\n                        newVolume = 0;\n                    }\n                    if (noApplyNeeded) {\n                        scope.setVolume(newVolume); // mousedown\n                    }\n                    else {\n                        scope.$apply(scope.setVolume(newVolume)); // mousemove\n                    }\n                };\n                updateVolume(evt, true); //mousedown\n                volumeNode.bind('mousemove.volume', updateVolume); // mousemove\n                angular.element(document)\n                    .bind('mouseup.volume', function () {\n                    angular.element(document)\n                        .unbind('mouseup.volume');\n                    volumeNode.unbind('mousemove.volume');\n                });\n            };\n            var KeyCodes = {\n                PAGEUP: 33,\n                PAGEDOWN: 34,\n                END: 35,\n                HOME: 36,\n                LEFTARROW: 37,\n                UPARROW: 38,\n                RIGHTARROW: 39,\n                DOWNARROW: 40\n            };\n            scope.onVolumeKeyDown = function ($event) {\n                var e = $event;\n                // var $target = $(e.target);\n                // var nextTab;\n                var passThrough = true;\n                switch (e.keyCode) {\n                    case KeyCodes.LEFTARROW:\n                        decrementVolume(1);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.RIGHTARROW:\n                        incrementVolume(1);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.UPARROW:\n                        incrementVolume(1);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.DOWNARROW:\n                        decrementVolume(1);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.PAGEUP:\n                        incrementVolume(10);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.PAGEDOWN:\n                        decrementVolume(10);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.HOME:\n                        decrementVolume(100);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.END:\n                        incrementVolume(100);\n                        passThrough = false;\n                        break;\n                    default:\n                        passThrough = true;\n                        break;\n                }\n                if (!passThrough) {\n                    // console.log(\"stop propagation\");\n                    $event.stopPropagation();\n                    $event.preventDefault();\n                }\n            };\n            function adjustHigh(volume) {\n                return volume > 98 ? 100 : volume;\n            }\n            function adjustLow(volume) {\n                return volume < 3 ? 0 : volume;\n            }\n            function incrementVolume(chunk) {\n                var volume = scope.currentVolume() + chunk;\n                volume = adjustHigh(volume);\n                if (typeof scope.setVolume === \"function\") {\n                    scope.setVolume(volume);\n                }\n            }\n            function decrementVolume(chunk) {\n                var volume = scope.currentVolume() - chunk;\n                volume = adjustLow(volume);\n                if (typeof scope.setVolume === \"function\") {\n                    scope.setVolume(volume);\n                }\n            }\n            scope.currentVolume = function () {\n                if (playbackService.getMetaProp('muted')) {\n                    return 0;\n                }\n                else {\n                    return playbackService.getMetaProp('volume');\n                }\n            };\n            scope.audioIcon = function () {\n                if (playbackService.getMetaProp('muted')) {\n                    return \"muted\";\n                }\n                else {\n                    return \"vol\" + Math.floor(playbackService.getMetaProp('volume') / 34);\n                }\n            };\n            scope.showTooltip = function (event) {\n                // console.log(\"tip: \", event);\n                event.showTooltip = true;\n            };\n            scope.hideTooltip = function (event) {\n                event.showTooltip = false;\n            };\n            scope.zoomIn = function () {\n                scope.stopWatching = true;\n                scope.zoomLevel = scope.zoomLevel + 1;\n                zoom();\n            };\n            scope.zoomOut = function () {\n                scope.stopWatching = true;\n                if (scope.zoomLevel <= 2) {\n                    scope.zoomLevel = 1;\n                }\n                else if (scope.zoomLevel <= 3) {\n                    scope.zoomLevel = 1.5;\n                }\n                else {\n                    scope.zoomLevel = scope.zoomLevel / 2;\n                }\n                zoom();\n            };\n            // adjust the position of the playhead after a scale change:\n            var zoom = function () {\n                scope.zoomOffset = -((scope.zoomLevel - 1) * (playbackService.getMetaProp('time') / playbackService.getMetaProp('duration')));\n                // console.log(\"zoom().scope.zoomOffset = \", scope.zoomOffset);\n                // console.log(\"zoom().scope.zoomLevel = \", scope.zoomLevel);\n                timelineNode.stop().animate({\n                    \"left\": (scope.zoomOffset * 100) + \"%\",\n                    \"width\": (scope.zoomLevel * 100) + \"%\"\n                }, 1000, function () {\n                    scope.stopWatching = false; // so we don't try to update the playhead during a zoom animation\n                });\n            };\n            // at all times keep playhead position at the same % of the visible progress bar as the time is to the duration\n            // cosmetic: stop watching while zoom-animation is in progress\n            scope.$watch(function () {\n                return {\n                    t: playbackService.getMetaProp('time'),\n                    d: playbackService.getMetaProp('duration')\n                };\n            }, function () {\n                if (!scope.stopWatching) {\n                    scope.zoomOffset = -((scope.zoomLevel - 1) * (playbackService.getMetaProp('time') / playbackService.getMetaProp('duration')));\n                    if (timelineNode) {\n                        timelineNode.css({\n                            \"left\": (scope.zoomOffset * 100) + '%'\n                        });\n                    }\n                }\n            }, true);\n            // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n            // BEGIN handling of seek: mouse/touch interactions with the playhead\n            // startSeek when they mousedown or touchdown (binds the finish and cancel events)\n            // seeking on mousemove or touchmove (sets the time they will be seeking to)\n            // finishSeek when they mouseup or touchend inside the playhead (triggers the actual seek)\n            // cancelSeek when they mouseup or touchend outside the playhead (cancels)\n            var startSeek = function (evt) {\n                // console.log('startSeek');\n                playbackService.pauseOtherPlayers();\n                $timeout(function () {\n                    // short delay for visibility of handle (don't want it when just clicking)\n                    scope.seekHandleVisible = true;\n                }, 250);\n                scope.isSeeking = true;\n                var userEventName = (appState.isTouchDevice) ? 'touchend.timeline' : 'mouseup.timeline';\n                timelineContainer.bind(userEventName, function () {\n                    finishSeek();\n                });\n                angular.element(document)\n                    .bind(userEventName, function () {\n                    cancelSeek();\n                });\n                seeking(evt);\n            };\n            /* SxS. Needed to position the edit handle when not actively dragging timeline */\n            scope.$watch(function () {\n                return playbackService.getMetaProp('time');\n            }, function () {\n                if (appState.editEvent) {\n                    scope.willSeekTo = playbackService.getMetaProp('time');\n                }\n            });\n            /* end SxS */\n            // triggered on mousemove:\n            var seeking = function (evt) {\n                if (!scope.isSeeking) {\n                    return;\n                }\n                var currentDuration = playbackService.getMetaProp('duration');\n                // timelineNode is the full timeline, including offscreen portions if zoomed in.\n                // So this math gives how far the pointer is in the full timeline as a percentage,\n                // multiplied by the real duration, which gives the real time.\n                scope.willSeekTo = (evt.clientX - timelineNode.offset()\n                    .left) / timelineNode.width() * currentDuration;\n                // ios is still registering drags outside the visible boundaries of the timeline,\n                // so need to do some sanity checking here:\n                if (scope.willSeekTo < 0) {\n                    scope.willSeekTo = 0;\n                }\n                if (scope.willSeekTo > currentDuration) {\n                    scope.willSeekTo = currentDuration;\n                }\n            };\n            var finishSeek = function () {\n                // console.log(\"timeline mouseup or touchend\");\n                scope.stopWatching = true;\n                scope.enableAutoscroll(); // in playerController\n                timelineSvc.seek(scope.willSeekTo, 'scrubTimeline');\n                zoom();\n            };\n            var cancelSeek = function () {\n                // console.log(\"doc mouseup or touchend\");\n                // kill all events on  mouse up (anywhere).\n                angular.element(document)\n                    .off('mouseup.timeline');\n                angular.element(document)\n                    .off('touchend.timeline');\n                timelineContainer.off('mouseup.timeline');\n                timelineContainer.off('touchend.timeline');\n                $timeout(function () {\n                    scope.isSeeking = false;\n                    scope.seekHandleVisible = false;\n                });\n            };\n            var initPlayheadEvents = function () {\n                // bind playhead events:\n                var playhead = $(element.find('.playhead')); // WARN template url needs to have resolved first!\n                // console.log(\"ittTimeline initPlayheadEvents\", playhead);\n                if (appState.isTouchDevice) {\n                    playhead.on('touchstart.timeline', function (e) {\n                        startSeek(e.originalEvent.targetTouches[0]);\n                        e.preventDefault();\n                    });\n                    playhead.on('touchmove.timeline', function (e) {\n                        seeking(e.originalEvent.targetTouches[0]);\n                        e.preventDefault();\n                    });\n                }\n                else {\n                    playhead.on('mousedown.timeline', function (e) {\n                        startSeek(e);\n                        e.preventDefault();\n                    });\n                    playhead.on('mousemove.timeline', function (e) {\n                        seeking(e);\n                        e.preventDefault();\n                    });\n                }\n            };\n            scope.$on('$destroy', function () {\n                cancelSeek(); // unbinds playhead events\n                editWatcher(); // stop watching for event edits\n            });\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/npTimelineEditor.ts\n\n\n/**\n * Created by githop on 6/16/16.\n */\nvar npTimelineEditor_TEMPLATE = \"\\n<div class=\\\"timeline__edit\\\">\\n  <form name=\\\"tlEditForm\\\">\\n    <label for=\\\"tlName\\\">Name\\n      <itt-validation-tip ng-if=\\\"tlEditForm.name.$invalid\\\" text=\\\"Name is required\\\"></itt-validation-tip>\\n    </label>\\n    <input type=\\\"text\\\" name=\\\"name\\\" ng-model=\\\"$ctrl._timeline.name.en\\\" id=\\\"tlName\\\" required>\\n    <label for=\\\"tlDescription\\\">Description</label>\\n    <textarea id=\\\"tlDescription\\\" name=\\\"description\\\" placeholder=\\\"Insert Description...\\\"\\n              ng-model=\\\"$ctrl._timeline.description.en\\\"></textarea>\\n    <np-guest-accessible-url narrative=\\\"$ctrl.narrative\\\" timeline=\\\"$ctrl._timeline\\\"></np-guest-accessible-url>\\n    <label>Hidden</label>\\n    <input type=\\\"checkbox\\\" ng-model=\\\"$ctrl._timeline.hidden\\\"/>\\n    <itt-enable-socialshare\\n      ng-if=\\\"$ctrl.trueAdmin\\\"\\n      narrative=\\\"$ctrl.narrative\\\"\\n      container-id=\\\"{{$ctrl.containerId}}\\\"\\n      editor-form=\\\"tlEditForm\\\"\\n      timeline=\\\"$ctrl._timeline\\\">\\n    </itt-enable-socialshare>\\n    <div class=\\\"ancillaryNav\\\">\\n      <button class=\\\"button\\\" ng-disabled=\\\"tlEditForm.$invalid || $ctrl._timeline.error\\\"\\n              ng-click=\\\"$ctrl.handleUpdate($ctrl._timeline)\\\">Save\\n      </button>\\n      <button class=\\\"button\\\" ng-click=\\\"$ctrl.confirmDelete()\\\">Delete</button>\\n      <button class=\\\"button\\\" ng-click=\\\"$ctrl.onDone()\\\">Cancel</button>\\n    </div>\\n  </form>\\n</div>\\n<np-modal modal-class=\\\"modal__center-center\\\" ng-if=\\\"$ctrl.underDelete\\\">\\n  <h2>Are you sure?</h2>\\n  <p>delete: </p>\\n  <p class=\\\"under__delete\\\"><strong>{{$ctrl._timeline.name.en}}?</strong></p>\\n  <button ng-click=\\\"$ctrl.onDelete({ $timeline: $ctrl._timeline })\\\">yes</button>\\n  <button ng-click=\\\"$ctrl.underDelete = false\\\">no</button>\\n</np-modal>\\n\";\nvar npTimelineEditor_TimelineEditorController = /** @class */ (function () {\n    function TimelineEditorController($location, config, uploadsService, authSvc) {\n        this.$location = $location;\n        this.config = config;\n        this.uploadsService = uploadsService;\n        this.authSvc = authSvc;\n        this.underDelete = false;\n        //\n    }\n    TimelineEditorController.prototype.$onInit = function () {\n        this.host = this.$location.protocol() + ':' + this.config.apiDataBaseUrl;\n        this.trueAdmin = this.authSvc.userHasRole('admin');\n        if (existy(this.timeline) && this.timeline.isTemp === true) {\n            this._timeline = this.timeline;\n        }\n        else {\n            this._timeline = angular.copy(this.timeline);\n        }\n    };\n    TimelineEditorController.prototype.handleUpdate = function (t) {\n        var _this = this;\n        var tlFileds = [\n            '_id',\n            'name',\n            'description',\n            'hidden',\n            'sort_order',\n            'path_slug',\n            'episode_segments',\n            'timeline_image_ids'\n        ];\n        var tlToSave = pick(t, tlFileds);\n        var socialImagesToUpload = [];\n        if (t.social_image_square) {\n            socialImagesToUpload.push({ file: t.social_image_square.file, tag: SOCIAL_IMAGE_SQUARE });\n        }\n        if (t.social_image_wide) {\n            socialImagesToUpload.push({ file: t.social_image_wide.file, tag: SOCIAL_IMAGE_WIDE });\n        }\n        if (socialImagesToUpload.length > 0) {\n            this.uploadsService.uploadTaggedFiles(socialImagesToUpload, this.containerId)\n                .then(function (assets) {\n                assets.forEach(function (asset) { return tlToSave.timeline_image_ids.push(asset.file._id); });\n                _this.uploadsService.resetUploads();\n                _this.onUpdate({ $timeline: tlToSave });\n                return;\n            });\n        }\n        else {\n            this.onUpdate({ $timeline: tlToSave });\n        }\n    };\n    TimelineEditorController.prototype.confirmDelete = function () {\n        this.underDelete = true;\n    };\n    TimelineEditorController.$inject = ['$location', 'config', 'uploadsService', 'authSvc'];\n    return TimelineEditorController;\n}());\nvar TimelineEditor = /** @class */ (function () {\n    function TimelineEditor() {\n        this.bindings = {\n            timeline: '<',\n            narrative: '<',\n            containerId: '@?',\n            onUpdate: '&',\n            onDelete: '&',\n            onDone: '&'\n        };\n        this.template = npTimelineEditor_TEMPLATE;\n        this.controller = npTimelineEditor_TimelineEditorController;\n    }\n    TimelineEditor.Name = 'npTimelineEditor'; // tslint:disable-line\n    return TimelineEditor;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittTimestampSelect.ts\n/**\n * Created by githop on 6/30/16.\n */\nfunction ittTimestampSelect() {\n    return {\n        restrict: 'EA',\n        scope: true,\n        template: [\n            '<div class=\"field\">',\n            '\t<div class=\"label\"><span ng-if=\"episode\">Display </span>Timestamp</div>',\n            '\t<div class=\"input\">',\n            '\t\t<select size=\"1\" ng-model=\"itemForm.timestamp\">',\n            '\t\t\t<option ng-if=\"episode\" value=\"\">(Default)</option>',\n            '\t\t\t<option ng-if=\"item._type === \\'Scene\\'\" value=\"\">(Inherit from episode)</option>',\n            '\t\t\t<option ng-if=\"item._type !== \\'Scene\\'\" value=\"\">(Inherit from layout)</option>',\n            '\t\t\t<option value=\"None\">Off</option>',\n            '\t\t\t<option value=\"Inline\">On</option>',\n            '\t\t</select>',\n            '\t</div>',\n            '</div>'\n        ].join(' ')\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittTitleField.ts\n/**\n * Created by githop on 6/30/16.\n */\nfunction ittTitleField() {\n    return {\n        restrict: 'EA',\n        scope: {\n            data: '=',\n            modelOpts: '=?',\n            doValidate: '=?',\n            ittItemForm: '=?'\n        },\n        template: [\n            '<div class=\"field\" ng-if=\"$ctrl.isVisible(\\'titleField\\')\">',\n            '\t<div class=\"label\">Title [{{$ctrl.appState.lang}}]',\n            '\t\t<itt-validation-tip ng-if=\"$ctrl.ittItemForm[$ctrl.textAreaName].$invalid\" text=\"Title is a required field\"></itt-validation-tip>',\n            '\t</div>',\n            '\t<div class=\"input\" ng-model-options=\"$ctrl.modelOpts\" do-validate=\"$ctrl.doValidate\" sxs-input-i18n=\"$ctrl.data.title\" on-emit-name=\"$ctrl.onName($taName)\" x-inputtype=\"\\'input\\'\" autofocus></div>',\n            '</div>'\n        ].join(' '),\n        controller: ['appState', 'ittUtils', 'selectService', function (appState, ittUtils, selectService) {\n                var ctrl = this;\n                ctrl.appState = appState;\n                ctrl.isVisible = selectService.getVisibility;\n                ctrl.onName = onName;\n                if (!ittUtils.existy(ctrl.modelOpts)) {\n                    ctrl.modelOpts = { updateOn: 'default' };\n                }\n                function onName(v) {\n                    ctrl.textAreaName = v;\n                }\n            }],\n        controllerAs: '$ctrl',\n        bindToController: true\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittToolbarStory.ts\n/**\n * Created by githop on 12/21/15.\n */\nfunction ittToolbarStory() {\n    return {\n        scope: true,\n        templateUrl: 'templates/toolbar-story.html'\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittTooltip.ts\n/**\n * Created by githop on 9/28/16.\n */\nvar ittTooltip_TEMPLATE = \"\\n<span class=\\\"ittTooltip\\\" ng-mouseenter=\\\"$ctrl.mouseAction(true)\\\" ng-mouseleave=\\\"$ctrl.mouseAction(false)\\\">\\n\\t<ng-transclude></ng-transclude>\\n\\t<span\\n\\t  ng-if=\\\"$ctrl.showTip\\\" ng-class=\\\"$ctrl.css\\\" style=\\\"text-indent: 0;\\\">{{$ctrl.tipText}}</span>\\n</span>\\n\";\nvar TooltipController = /** @class */ (function () {\n    function TooltipController() {\n    }\n    TooltipController.prototype.$onInit = function () {\n        if (this.css == null) {\n            this.css = 'ittTooltip__text';\n        }\n    };\n    TooltipController.prototype.mouseAction = function (bool) {\n        this.showTip = bool;\n    };\n    return TooltipController;\n}());\nvar Tooltip = /** @class */ (function () {\n    function Tooltip() {\n        this.transclude = true;\n        this.bindings = {\n            tipText: '@',\n            css: '@?'\n        };\n        this.template = ittTooltip_TEMPLATE;\n        this.controller = TooltipController;\n    }\n    Tooltip.Name = 'npTooltip'; // tslint:disable-line\n    return Tooltip;\n}());\n\n/* tslint:disable */\n// export default function ittTooltip() {\n//   return {\n//     restrict: 'EA',\n//     transclude: true,\n//     scope: {\n//       tipText: '@',\n//       css: '@?'\n//     },\n//     template: [\n//       '<span class=\"ittTooltip\">',\n//       '\t<ng-transclude></ng-transclude>',\n//       '\t<span ng-if=\"showTip\" class=\"{{css ? css : \\'ittTooltip__text\\'}}\" style=\"text-indent: 0;\">{{tipText}}</span>',\n//       '</span>'\n//     ].join(''),\n//     link: function (scope, elm) {\n//       elm.mouseenter(onMouseenter);\n//       function onMouseenter() {\n//         scope.$apply(function () {\n//           scope.showTip = true;\n//         });\n//       }\n//\n//       elm.mouseleave(onMouseleave);\n//       function onMouseleave() {\n//         scope.$apply(function () {\n//           scope.showTip = false;\n//         });\n//       }\n//     }\n//   };\n// }\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittTranscriptField.ts\n/**\n * Created by githop on 6/30/16.\n */\nfunction ittTranscriptField() {\n    return {\n        restrict: 'EA',\n        scope: {\n            data: '=',\n            //not itemForm, which is a plain old JS object,\n            //this is the 'IttItemForm' a ng-form defined at the head of item.html\n            ittItemForm: '='\n        },\n        template: [\n            '<div class=\"field\">',\n            '\t<div class=\"label\">Transcript [{{$ctrl.appState.lang}}]',\n            '\t\t<itt-validation-tip ng-if=\"$ctrl.ittItemForm[$ctrl.textAreaName].$invalid\" text=\"Transcript is a required field\"></itt-validation-tip>',\n            '\t</div>',\n            '\t<div class=\"input\" sxs-input-i18n=\"$ctrl.data.annotation\" do-validate=\"true\" x-inputtype=\"\\'textarea\\'\" on-emit-name=\"$ctrl.onName($taName)\" autofocus></div>',\n            '</div>'\n        ].join(' '),\n        controller: ['appState', function (appState) {\n                var ctrl = this;\n                ctrl.onName = onName;\n                ctrl.appState = appState;\n                ctrl.textAreaName = '';\n                function onName(v) {\n                    ctrl.textAreaName = v;\n                }\n            }],\n        controllerAs: '$ctrl',\n        bindToController: true\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittTransitionSelect.ts\n/**\n * Created by githop on 6/30/16.\n */\nfunction ittTransitionSelect() {\n    return {\n        restrict: 'EA',\n        template: [\n            '<div class=\"field\">',\n            '\t<div class=\"label\">Transition</div>',\n            '\t<div class=\"input\">',\n            '\t\t<select size=\"1\" ng-model=\"itemForm.transition\">',\n            '\t\t\t<option ng-if=\"episode\" value=\"\">(Default)</option>',\n            '\t\t\t<option ng-if=\"item._type === \\'Scene\\'\" value=\"\">(Inherit from episode)</option>',\n            '\t\t\t<option ng-if=\"item._type !== \\'Scene\\' && !episode\" value=\"\">(Inherit from layout)</option>',\n            '\t\t\t<option value=\"None\">No transition</option>',\n            '\t\t\t<option value=\"Fade\">Fade</option>',\n            '\t\t\t<option value=\"SlideL\">Slide left</option>',\n            '\t\t\t<option value=\"SlideR\">Slide right</option>',\n            // '\t\t\t<option value=\"ExpandW\">Expand</option>',\n            '\t\t\t<option value=\"Pop\">Pop</option>',\n            '\t\t</select>',\n            '\t</div>',\n            '</div>'\n        ].join(' ')\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittTypographySelect.ts\n/**\n * Created by githop on 6/30/16.\n */\nfunction ittTypographySelect() {\n    return {\n        restrict: 'EA',\n        template: [\n            '<div class=\"field\">',\n            '\t<div class=\"label\">Typography</div>',\n            '\t<div class=\"input\">',\n            '\t\t<select size=\"1\" ng-model=\"itemForm.typography\">',\n            '\t\t\t<option value=\"\">(Default)</option>',\n            '\t\t\t<option value=\"Sans\">Sans</option>',\n            '\t\t\t<option value=\"Serif\">Serif</option>',\n            '\t\t\t<option value=\"Book\">Book</option>',\n            '\t\t\t<option value=\"Swiss\">Swiss</option>',\n            '\t\t</select>',\n            '\t</div>',\n            '</div>'\n        ].join(' ')\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/npUrlField.ts\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar npUrlField_TEMPLATE = \"\\n<div class=\\\"field\\\">\\n  <div class=\\\"label\\\">{{$ctrl.label || \\\"URL\\\"}}\\n    <span ng-repeat=\\\"(field, val) in $ctrl.validatedFields\\\">\\n      <itt-validation-tip ng-if=\\\"val.showInfo\\\" text=\\\"{{val.message}}\\\" do-info=\\\"val.doInfo\\\"></itt-validation-tip>\\n     </span>\\n  </div>\\n  <div class=\\\"input\\\" ng-if=\\\"$ctrl.context !== 'episode'\\\">\\n    <div  class=\\\"ittUrl__escapeLink\\\">\\n      <input\\n        id=\\\"urlEscapeLink\\\"\\n        type=\\\"checkbox\\\"\\n        ng-change=\\\"$ctrl.updateTemplateOpts()\\\"\\n        ng-true-value=\\\"'_blank'\\\"\\n        ng-false-value=\\\"'_self'\\\"\\n        ng-disabled=\\\"!$ctrl.canEmbed\\\"\\n        ng-model=\\\"$ctrl.data.target\\\"/>\\n      <span class=\\\"escapelink\\\"></span>\\n      <label for=\\\"urlEscapeLink\\\">Force new tab</label>\\n\\n    </div>\\n    <input\\n      type=\\\"text\\\"\\n      name=\\\"itemUrl\\\"\\n      ng-blur=\\\"$ctrl.onUrlFieldChange($ctrl.eventUrl)\\\"\\n      ng-focus=\\\"$ctrl.onFocused()\\\"\\n      ng-model=\\\"$ctrl.eventUrl\\\"/>\\n  </div>\\n  <div class=\\\"input\\\" ng-if=\\\"$ctrl.context === 'episode'\\\">\\n    <input\\n      type=\\\"text\\\"\\n      ng-model=\\\"$ctrl.data\\\"\\n      itt-valid-episode-url\\n      on-validation-notice=\\\"$ctrl.handleEpisodeValidationMessage($notice)\\\"/>\\n    <button ng-if=\\\"$ctrl.data\\\" ng-click=\\\"$ctrl.onAttach({$url: $ctrl.data})\\\">Attach Video</button>\\n  </div>\\n</div>\\n\";\nvar npUrlField_UrlFieldController = /** @class */ (function () {\n    function UrlFieldController(validationSvc) {\n        this.validationSvc = validationSvc;\n        this.context = 'producer';\n        this.validatedFields = {\n            url: null,\n            iframeHeaders: null,\n            '404': null,\n            '301': null,\n            mixedContent: null\n        };\n        this.message = {\n            showInfo: false,\n            message: '',\n            doInfo: false\n        };\n        //\n    }\n    UrlFieldController.prototype.$onInit = function () {\n        this.eventUrl = this.data.url;\n        if (this.context !== 'episode') {\n            this.onUrlFieldChange(this.eventUrl, this.data.url_status);\n        }\n    };\n    UrlFieldController.prototype.updateTemplateOpts = function () {\n        this.data.templateOpts = this._disableTemplateOpts(this.data.target === '_blank');\n    };\n    UrlFieldController.prototype.onFocused = function () {\n        // if user focuses input, eagerly set form to invalid and allow blur event to handle recovery\n        this._setValidity(false);\n    };\n    UrlFieldController.prototype.onUrlFieldChange = function (url, urlStatus) {\n        if (url === 'https://') {\n            this._setValidity(false);\n            return;\n        }\n        this._itemUrlValidationPipeline(url, urlStatus, this.context);\n    };\n    UrlFieldController.prototype.handleEpisodeValidationMessage = function (notice) {\n        this.validatedFields = {\n            kaltura: null,\n            youtube: null,\n            html5: null,\n            error: null\n        };\n        Object.assign(this.validatedFields, notice);\n    };\n    UrlFieldController.prototype._inspectHeaders = function (url, cachedResults, context) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, canEmbed, location, urlStatus, isMixedContent, e_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.validationSvc.inspectHeadersAsync(url, this, cachedResults, context)];\n                    case 1:\n                        _a = _b.sent(), canEmbed = _a.canEmbed, location = _a.location, urlStatus = _a.urlStatus;\n                        this._setValidity(true);\n                        isMixedContent = this.validationSvc.mixedContent(location || url, this);\n                        //since all HTTP links are checked, it is possible that the target site\n                        //allows for iframing, but is not served from a secure context so it would not\n                        //be iframeable in our app.\n                        this.canEmbed = canEmbed && !isMixedContent;\n                        if (!this.canEmbed) {\n                            this.data.target = '_blank';\n                        }\n                        this.data.templateOpts = this._disableTemplateOpts(!this.canEmbed);\n                        this.data.url_status = Object.assign(new ILinkStatus(), urlStatus);\n                        this.data.url = location || url;\n                        this.eventUrl = this.data.url;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_1 = _b.sent();\n                        this._setValidity(false);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    UrlFieldController.prototype._itemUrlValidationPipeline = function (url, cachedResults, context) {\n        this._resetFields();\n        var isValidUrl = this._setValidity(this.validationSvc.validateUrl(url, this));\n        if (isValidUrl) {\n            this._inspectHeaders(url, cachedResults, context);\n        }\n    };\n    UrlFieldController.prototype._disableTemplateOpts = function (val) {\n        if (val === true) {\n            this.data.showInlineDetail = false;\n        }\n        if (this.context === 'editor' || this.context === 'editor-video') {\n            //editors do not have the option to specify the template.\n            return;\n        }\n        return this.data.templateOpts.map(function (opt) {\n            if (opt.name === 'Embedded link' || opt.name === 'Link modal') {\n                opt.isDisabled = val;\n            }\n            return opt;\n        });\n    };\n    UrlFieldController.prototype._setValidity = function (val, field) {\n        if (field === void 0) { field = 'itemUrl'; }\n        if (this.ittItemForm != null) {\n            this.ittItemForm.$setValidity(field, val, null);\n        }\n        return val;\n    };\n    UrlFieldController.prototype._resetFields = function () {\n        var _this = this;\n        Object.keys(this.validatedFields)\n            .forEach(function (key) { return _this.validatedFields[key] = _this.message; });\n    };\n    UrlFieldController.$inject = ['validationSvc'];\n    return UrlFieldController;\n}());\nvar UrlField = /** @class */ (function () {\n    function UrlField() {\n        this.bindings = {\n            data: '=',\n            context: '@?',\n            label: '@',\n            onAttach: '&',\n            ittItemForm: '<?'\n        };\n        this.template = npUrlField_TEMPLATE;\n        this.controller = npUrlField_UrlFieldController;\n    }\n    UrlField.Name = 'npUrlField'; // tslint:disable-line\n    return UrlField;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittUser.ts\nvar ittUser_noAvatarImg = __webpack_require__(\"IiAB\");\nittUser.$inject = ['$q', 'appState', 'authSvc', 'dataSvc', 'awsSvc', 'modelSvc', 'imageResize'];\nfunction ittUser($q, appState, authSvc, dataSvc, awsSvc, modelSvc, imageResize) {\n    return {\n        restrict: 'A',\n        replace: true,\n        scope: {},\n        templateUrl: 'templates/user.html',\n        link: function (scope, element, attrs) {\n            scope.inPlayer = attrs.inPlayer;\n            scope.appState = appState;\n            scope.loading = true;\n            scope.logout = authSvc.logout;\n            scope.canAccess = authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin');\n            authSvc.authenticate().then(function () {\n                scope.loading = false;\n                scope.user = appState.user;\n                scope.userHasRole = authSvc.userHasRole;\n                //TS-1120 - remove purchases\n                // if (!scope.inPlayer && !authSvc.isGuest()) {\n                // \tscope.getMyNarratives();\n                // }\n            });\n            scope.isEditing = false;\n            scope.toggleEditing = toggleEditing;\n            function toggleEditing() {\n                scope.isEditing = !scope.isEditing;\n            }\n            // TODO refactor: this is very similar to ittItemEditor's uploadAsset\n            scope.uploadStatus = [];\n            scope.toggleUploadAvatar = function () {\n                scope.showUploadField = !scope.showUploadField;\n            };\n            scope.uploadAvatar = function (files) {\n                //Start the upload status out at 0 so that the\n                //progress bar renders correctly at first\n                scope.uploadStatus[0] = {\n                    \"bytesSent\": 0,\n                    \"bytesTotal\": 1\n                };\n                //promise chain\n                imageResize.readFileToImg(files[0])\n                    .then(_resizeWithService)\n                    .then(_avatarFileFromImg)\n                    .then(_postToAWS)\n                    .catch(function (e) {\n                    console.log('something failed resizing / uploading the image', e);\n                });\n                //handler functions; i.e., 'links' in the 'promise chain' ;)\n                function _resizeWithService(img) {\n                    return imageResize.resizeImg(img, 60, 60, true)\n                        .then(function (dataUrl) {\n                        return dataUrl;\n                    });\n                }\n                //takes a base64 encoded URL with PNG image\n                //and turns it back into a File Object\n                function _avatarFileFromImg(dataUrl) {\n                    return $q(function (resolve) {\n                        var file = imageResize.createFileFromDataURL(dataUrl, files[0].name);\n                        resolve(file);\n                    });\n                }\n                //pass file to AWS service for file upload\n                function _postToAWS(file) {\n                    awsSvc.uploadUserFiles(appState.user._id, [file])[0]\n                        .then(function (data) {\n                        scope.showUploadField = false;\n                        modelSvc.cache(\"asset\", data.file);\n                        if (appState.user.avatar_id) {\n                            // TODO delete the user's previous avatar asset now that we have a new one\n                            // (but first confirm that events the user has already created aren't storing the old avatar_id directly.... which would be a bug)\n                        }\n                        appState.user.avatar_id = data.file._id;\n                        scope.updateUser();\n                        delete scope.uploads;\n                    });\n                }\n            };\n            scope.updateUser = function () {\n                authSvc.updateUser(appState.user).then(function () {\n                    scope.user = appState.user;\n                });\n            };\n            scope.getMyNarratives = function () {\n                dataSvc.getUserNarratives(scope.user._id).then(function (data) {\n                    // console.log(\"purchase\", data);\n                    scope.myPurchases = data;\n                    angular.forEach(scope.myPurchases, function (purchase) {\n                        purchase.daysUntilExpiration = Math.floor((new Date(purchase.expiration_date) - new Date()) / 86400000);\n                        // get the narrative data for each purchase (this copes with multiple purchases of the same narrative)\n                        dataSvc.getNarrativeOverview(purchase.narrative_id).then(function (nData) {\n                            angular.forEach(scope.myPurchases, function (pur) {\n                                if (pur.narrative_id === nData._id) {\n                                    pur.narrativeData = nData;\n                                }\n                            });\n                        });\n                    });\n                });\n            };\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittValidAsset.ts\n/**\n * Created by githop on 7/12/16.\n */\nittValidAsset.$inject = ['ittUtils'];\nfunction ittValidAsset(ittUtils) {\n    return {\n        restrict: 'EA',\n        require: '^ngModel',\n        scope: {\n            item: '='\n        },\n        link: function (scope, elm, attrs, ngModelCtrl) {\n            if (ngModelCtrl) {\n                //set to valid right off the bat, then use $watch below\n                //to update validity on subsequent selections.\n                ngModelCtrl.$validators.itemAsset = function () {\n                    return true;\n                };\n                scope.$watch(watchItem, handleChanges, true);\n            }\n            function watchItem() {\n                return scope.item;\n            }\n            function handleChanges(newVal) {\n                var tmplUrl = newVal.templateUrl;\n                var asset = newVal.asset;\n                switch (tmplUrl) {\n                    case 'templates/item/file.html':\n                    case 'templates/item/image-plain.html':\n                    case 'templates/item/image-inline-withtext.html':\n                    case 'templates/item/image-caption-sliding.html':\n                    case 'templates/item/image.html':\n                    case 'templates/item/image-fill.html':\n                    case 'templates/item/link-withimage-notitle.html':\n                        if (ittUtils.existy(asset)) {\n                            ngModelCtrl.$setValidity('itemAsset', true);\n                        }\n                        else {\n                            ngModelCtrl.$setValidity('itemAsset', false);\n                        }\n                        break;\n                    case 'templates/item/link.html':\n                    case 'templates/item/link-modal-thumb.html':\n                    case 'templates/item/link-descriptionfirst.html':\n                    case 'templates/item/link-embed.html':\n                        ngModelCtrl.$setValidity('itemAsset', true);\n                        break;\n                }\n            }\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittValidationTip.ts\n/**\n * Created by githop on 8/24/16.\n */\nfunction ittValidationTip() {\n    return {\n        restrict: 'EA',\n        scope: {\n            text: '@',\n            doInfo: '=?'\n        },\n        template: [\n            '<span class=\"tooltip-static\">',\n            '\t<i class=\"fa fa-info-circle\" ng-class=\"{\\'error-red\\': !doInfo, \\'info-blue\\': doInfo}\"></i>',\n            '\t<span class=\"tooltip-text\">{{text}}</span>',\n            '</span>'\n        ].join('\\n')\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittValidEpisodeUrl.ts\n/**\n * Created by githop on 2/21/17.\n */\nittValidEpisodeUrl.$inject = ['urlService', 'ittUtils', 'authSvc'];\nfunction ittValidEpisodeUrl(urlService, ittUtils, authSvc) {\n    return {\n        require: '?ngModel',\n        scope: {\n            onValidationNotice: '&'\n        },\n        link: function (scope, elm, attr, ngModel) {\n            var _capitalize = ittUtils.capitalize;\n            var message = {\n                showInfo: false,\n                message: '',\n                doInfo: false\n            };\n            var validatedFields = {\n                kaltura: message,\n                youtube: message,\n                html5: message,\n                error: message\n            };\n            ngModel.$validators = {\n                episodeUrl: episodeUrl\n            };\n            scope.$watch(watchFields, handleUpdates, true);\n            function watchFields() {\n                return validatedFields;\n            }\n            function handleUpdates(newVal) {\n                scope.onValidationNotice({ $notice: newVal });\n            }\n            function episodeUrl(viewVal) {\n                validatedFields = {};\n                if (ngModel.$isEmpty(viewVal)) {\n                    validatedFields['error'] = { showInfo: true, message: 'Field cannot be blank.' }; //jshint ignore:line\n                    return false;\n                }\n                else if (urlService.isVideoUrl(viewVal)) {\n                    var type = urlService.checkUrl(viewVal).type;\n                    if (type === 'html5' || type === 'wistia' && !authSvc.userHasRole('admin')) {\n                        validatedFields[type] = { showInfo: true, message: _capitalize(type) + ' video currently not supported' };\n                        return false;\n                    }\n                    validatedFields[type] = { showInfo: true, message: _capitalize(type) + ' detected', doInfo: true };\n                    return true;\n                }\n                else {\n                    validatedFields['error'] = { showInfo: true, message: viewVal + ' is not a valid episode URL' }; //jshint ignore:line\n                    return false;\n                }\n            }\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittValidPathslug.ts\n/**\n * Created by githop on 3/23/17.\n */\n//this directive currently depends on the parent directive having\n//the necessary narrative(s) / timeline(s) data already cached in the modelSvc\nittValidPathslug.$inject = ['modelSvc', 'ittUtils'];\nfunction ittValidPathslug(modelSvc, ittUtils) {\n    return {\n        require: ['^ngModel', '^npGuestAccessibleUrl'],\n        restrict: 'EA',\n        link: function ittValidPathslugLink(scope, elm, attr, ctrls) {\n            var _slugify = ittUtils.slugify;\n            var _existy = ittUtils.existy;\n            var ngModel = ctrls[0];\n            var parentCtrl = ctrls[1];\n            var customer = modelSvc.customers[parentCtrl.narrative.customer_id] || parentCtrl.customer;\n            var pathSlugs = parentCtrl.type === 'narrative' ?\n                modelSvc.cachedNarrativesByCustomer(customer) :\n                parentCtrl.narrative.timelines;\n            var id = parentCtrl[parentCtrl.type]._id;\n            if (ngModel) {\n                ngModel.$validators = {\n                    validPathslug: validPathslug\n                };\n            }\n            function validPathslug(viewVal) {\n                parentCtrl[parentCtrl.type].error = null;\n                if (ngModel.$isEmpty(viewVal)) {\n                    parentCtrl[parentCtrl.type].error = 'Slug cannot be empty';\n                    return true;\n                }\n                var asSlug = _slugify(viewVal);\n                var subdomainSet = _gatherPathSlugs(pathSlugs, id);\n                if (subdomainSet.indexOf(asSlug) !== -1) {\n                    parentCtrl[parentCtrl.type].error = asSlug + ' is already taken.';\n                }\n                return true;\n            }\n            function _gatherPathSlugs(pathSlugs, id) {\n                return pathSlugs.reduce(function (slugSet, n) {\n                    if (n.path_slug && n.path_slug.en) {\n                        if (_existy(id)) {\n                            if (id !== n._id) {\n                                slugSet.push(n.path_slug.en);\n                                return slugSet;\n                            }\n                        }\n                        else {\n                            slugSet.push(n.path_slug.en);\n                        }\n                    }\n                    return slugSet;\n                }, []);\n            }\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittValidUrl.ts\n/**\n * Created by githop on 6/24/16.\n */\nittValidUrl.$inject = ['ittUtils'];\nfunction ittValidUrl(ittUtils) {\n    return {\n        require: '?ngModel',\n        link: function (scope, elm, attr, ngModel) {\n            if (ngModel) {\n                ngModel.$validators.supportUrl = function (modelVal) {\n                    return ngModel.$isEmpty(modelVal) || ittUtils.isValidURL(modelVal);\n                };\n            }\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittVideo.ts\n/* tslint:disable:prefer-const */\nfunction ittVideo() {\n    return {\n        replace: false,\n        templateUrl: 'templates/video.html',\n        scope: {\n            poster: '=?',\n            mainPlayer: '=',\n            mediaSrcArr: '=',\n            playerId: '='\n        },\n        controller: [\n            '$scope',\n            '$timeout',\n            '$interval',\n            '$sce',\n            '$rootScope',\n            '$routeParams',\n            'playbackService',\n            'ittUtils', 'timelineSvc',\n            'modelSvc',\n            'dataSvc',\n            'appState',\n            'analyticsSvc',\n            function ($scope, $timeout, $interval, $sce, $rootScope, $routeParams, playbackService, ittUtils, timelineSvc, modelSvc, dataSvc, appState, analyticsSvc) {\n                var ctrl = this; //jshint ignore:line\n                //controller public properties\n                ctrl.isTranscoded = false;\n                ctrl.transcodedInterval = angular.noop;\n                //controller public methods.\n                ctrl.playbackService = playbackService;\n                ctrl.videoClick = videoClick;\n                ctrl.playerIsPaused = playerIsPaused;\n                ctrl.showUnstartedOverlay = showUnstartedOverlay;\n                ctrl.showReplayOverlay = showReplayOverlay;\n                ctrl.setCssClass = setCssClass;\n                ctrl.showMask = showMask;\n                ctrl.appState = appState;\n                var _existy = ittUtils.existy;\n                //controller event bindings\n                $scope.$on('$destroy', onDestroy);\n                onInit();\n                function onInit() {\n                    //empty input passed in\n                    if (!_existy(ctrl.mediaSrcArr) || ctrl.mediaSrcArr.length === 0) {\n                        console.warn('No MediaSrc Array was passed to ittVideo');\n                        //check to see if video has transcoded every 10 seconds\n                        ctrl.transcodedInterval = $interval(checkTranscoded, 10 * 1000);\n                        return;\n                    }\n                    playbackService.seedPlayer(ctrl.mediaSrcArr, ctrl.playerId, ctrl.mainPlayer);\n                    ctrl.playerElement = $sce.trustAsHtml(playbackService.getPlayerDiv(ctrl.playerId));\n                    $timeout(function () {\n                        playbackService.createInstance(ctrl.playerId);\n                        if (ctrl.mainPlayer === true) {\n                            if ($routeParams.t) {\n                                playbackService.setMetaProp('startAtTime', ittUtils.parseTime($routeParams.t), ctrl.playerId);\n                            }\n                            if ($routeParams.autoplay === 'true') {\n                                playbackService.setMetaProp('autoplay', true, ctrl.playerId);\n                            }\n                        }\n                    }, 0);\n                }\n                //video mask controls\n                function videoClick() {\n                    playbackService.togglePlayback(ctrl.playerId, timelineSvc.restartEpisode, analyticsSvc.captureEpisodeActivity.bind(analyticsSvc));\n                }\n                function setCssClass() {\n                    var cssClass = {};\n                    var embed = { 'np--embed': ctrl.mainPlayer === false };\n                    var paused = { 'play': playerIsPaused() };\n                    var firstplay = { 'firstplay': showUnstartedOverlay() };\n                    var replay = { 'rewind': showReplayOverlay() };\n                    angular.extend(cssClass, embed, paused, firstplay, replay);\n                    return cssClass;\n                }\n                //if have less than iOS 10\n                //if our video is youtube\n                //hide the unstarted mask\n                function showMask() {\n                    if (_existy(appState.iOSVersion) && appState.iOSVersion.length\n                        && playbackService.getMetaProp('videoType', ctrl.playerId) === 'youtube') {\n                        if (showUnstartedOverlay()) {\n                            return (appState.iOSVersion[0] > 9);\n                        }\n                    }\n                    return true;\n                }\n                function playerIsPaused() {\n                    return playbackService.getPlayerState(ctrl.playerId) === 'paused' && !showReplayOverlay();\n                }\n                function showUnstartedOverlay() {\n                    return playbackService.getMetaProp('hasBeenPlayed', ctrl.playerId) === false;\n                }\n                function showReplayOverlay() {\n                    var time = playbackService.getMetaProp('time', ctrl.playerId);\n                    var duration = playbackService.getMetaProp('duration', ctrl.playerId);\n                    return (ctrl.mainPlayer === true && time > 0 && time >= duration - 0.3);\n                }\n                function onDestroy() {\n                    playbackService.handle$Destroy(ctrl.playerId);\n                }\n                function checkTranscoded() {\n                    var currentEpisode = modelSvc.episodes[appState.episodeId];\n                    if (currentEpisode && currentEpisode.masterAsset && !modelSvc.isTranscoded(currentEpisode.masterAsset)) {\n                        dataSvc.getSingleAsset(currentEpisode.master_asset_id)\n                            .then(function (latestAsset) {\n                            modelSvc.cache('asset', latestAsset);\n                            var newAsset = modelSvc.assets[latestAsset._id];\n                            if (modelSvc.isTranscoded(newAsset)) {\n                                ctrl.isTranscoded = true;\n                                $interval.cancel(ctrl.transcodedInterval);\n                                //use the new mediaSrcArr from the server\n                                ctrl.mediaSrcArr = newAsset.mediaSrcArr;\n                                //do this so playerController re-initializes the episode.\n                                $rootScope.$broadcast('dataSvc.getEpisode.done');\n                                //re-init ittVideo, playbackService etc..\n                                onInit();\n                            }\n                        });\n                    }\n                    else {\n                        $interval.clear(ctrl.transcodedInterval);\n                    }\n                }\n            }\n        ],\n        bindToController: true,\n        controllerAs: '$ctrl'\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittVideoPositionSelect.ts\nvar ittVideoPositionSelect_TEMPLATE = \"\\n<div class=\\\"field\\\" ng-if=\\\"$ctrl.selectService.getVisibility('videoPosition')\\\">\\n  <div class=\\\"label\\\">Video Postion</div>\\n  <div class=\\\"input\\\">\\n    <select\\n      ng-model=\\\"$ctrl.data.layouts[0]\\\"\\n      ng-options=\\\"option.value as option.name for option in $ctrl.selectService.getSelectOpts('video')\\\">\\n    </select>\\n  </div>\\n</div>\\n\";\nvar VideoPositionSelectController = /** @class */ (function () {\n    function VideoPositionSelectController($rootScope, $timeout, selectService) {\n        this.$rootScope = $rootScope;\n        this.$timeout = $timeout;\n        this.selectService = selectService;\n        //\n    }\n    VideoPositionSelectController.$inject = ['$rootScope', '$timeout', 'selectService'];\n    return VideoPositionSelectController;\n}());\nvar VideoPositionSelect = /** @class */ (function () {\n    function VideoPositionSelect() {\n        this.bindings = {\n            data: '='\n        };\n        this.template = ittVideoPositionSelect_TEMPLATE;\n        this.controller = VideoPositionSelectController;\n    }\n    VideoPositionSelect.Name = 'ittVideoPositionSelect'; // tslint:disable-line\n    return VideoPositionSelect;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittVolumeSlider.ts\nittVolumeSlider.$inject = ['playbackService'];\nfunction ittVolumeSlider(playbackService) {\n    return {\n        restrict: 'E',\n        scope: true,\n        template: '<div ng-focus=\"showControls()\" role=\"slider\" aria-label=\"volume\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"{{currentVolume()}}\" aria-valuetext=\"{{currentVolume()}}\" tabindex=\"0\" class=\"volumebar\" ng-mousedown=\"userChangingVolume($event)\" ng-keydown=\"onVolumeKeyDown($event)\" aria-labelledby=\"volumeControlDescription\"> <div class=\"volume\" ng-style=\"{width: currentVolume()+\\'%\\'}\"></div> <div id=\"volumeControlDescription\" class=\"screen-reader-offscreen\"> Use left and right arrows to increase or decrease the volume by 1. Use page up and page down to increase or decrease the volume by 10. Use home and end to move to the volume to the lowest and highest setting.  </div> ',\n        multiElement: false,\n        link: function (scope) {\n            scope.userChangingVolume = function (evt) {\n                var volumeNode = angular.element(evt.currentTarget);\n                var updateVolume = function (movement, noApplyNeeded) {\n                    var newVolume = (movement.clientX - volumeNode.offset()\n                        .left) / volumeNode.width() * 100;\n                    if (newVolume > 98) {\n                        newVolume = 100;\n                    }\n                    if (newVolume < 3) {\n                        newVolume = 0;\n                    }\n                    if (noApplyNeeded) {\n                        scope.setVolume(newVolume); // mousedown\n                    }\n                    else {\n                        scope.$apply(scope.setVolume(newVolume)); // mousemove\n                    }\n                };\n                updateVolume(evt, true); //mousedown\n                volumeNode.bind('mousemove.volume', updateVolume); // mousemove\n                angular.element(document)\n                    .bind('mouseup.volume', function () {\n                    angular.element(document)\n                        .unbind('mouseup.volume');\n                    volumeNode.unbind('mousemove.volume');\n                });\n            };\n            var KeyCodes = {\n                PAGEUP: 33,\n                PAGEDOWN: 34,\n                END: 35,\n                HOME: 36,\n                LEFTARROW: 37,\n                UPARROW: 38,\n                RIGHTARROW: 39,\n                DOWNARROW: 40\n            };\n            scope.onVolumeKeyDown = function ($event) {\n                var e = $event;\n                // var $target = $(e.target);\n                // var nextTab;\n                var passThrough = true;\n                switch (e.keyCode) {\n                    case KeyCodes.LEFTARROW:\n                        decrementVolume(1);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.RIGHTARROW:\n                        incrementVolume(1);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.UPARROW:\n                        incrementVolume(1);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.DOWNARROW:\n                        decrementVolume(1);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.PAGEUP:\n                        incrementVolume(10);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.PAGEDOWN:\n                        decrementVolume(10);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.HOME:\n                        decrementVolume(100);\n                        passThrough = false;\n                        break;\n                    case KeyCodes.END:\n                        incrementVolume(100);\n                        passThrough = false;\n                        break;\n                    default:\n                        passThrough = true;\n                        break;\n                }\n                if (!passThrough) {\n                    $event.stopPropagation();\n                    $event.preventDefault();\n                }\n            };\n            function adjustHigh(volume) {\n                return volume > 98 ? 100 : volume;\n            }\n            function adjustLow(volume) {\n                return volume < 3 ? 0 : volume;\n            }\n            function incrementVolume(chunk) {\n                var volume = scope.currentVolume() + chunk;\n                volume = adjustHigh(volume);\n                if (typeof scope.setVolume === \"function\") {\n                    scope.setVolume(volume);\n                }\n            }\n            function decrementVolume(chunk) {\n                var volume = scope.currentVolume() - chunk;\n                volume = adjustLow(volume);\n                if (typeof scope.setVolume === \"function\") {\n                    scope.setVolume(volume);\n                }\n            }\n            scope.currentVolume = function () {\n                if (playbackService.getMetaProp('muted')) {\n                    return 0;\n                }\n                else {\n                    return playbackService.getMetaProp('volume');\n                }\n            };\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittWidthWatch.ts\n/* Attach this to content panes, so they can tell their items when to drop into inline timestamps. */\nfunction ittWidthWatch() {\n    return {\n        restrict: 'A',\n        replace: false,\n        link: function (scope, element) {\n            var unwatch = scope.$watch(function () {\n                return element.width();\n            }, function (w) {\n                scope.isNarrow = (w < 450);\n            });\n            scope.$on(\"$destroy\", unwatch);\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/sxsAddContent.ts\n/*\n The \"add\" buttons for instructors to choose what type of content they want to add to the episode.\n\n TODO make this smarter about when it shows buttons; for example instead of matching against appState.time,\n look for current scene.id matching \"internal\".  Dim buttons instead of hiding them completely.\n\n */\nsxsAddContent.$inject = ['appState', 'playbackService'];\nfunction sxsAddContent(appState, playbackService) {\n    return {\n        restrict: 'A',\n        replace: true,\n        scope: {},\n        templateUrl: 'templates/producer/addcontent.html',\n        controller: 'EditController',\n        link: function (scope) {\n            scope.appState = appState;\n            scope.playbackService = playbackService;\n            scope.expand = function () {\n                scope.expanded = true;\n                angular.element(document).one('mouseup.addcontent', function () {\n                    scope.collapse();\n                });\n            };\n            scope.collapse = function () {\n                scope.expanded = false;\n            };\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/sxsAnnotatorAutocomplete.ts\n/*\n TODO: make sure newly added annotators wind up in hte episode.annotators list\n TODO: disentangle annotator_image_id from this, move it into parent template\n */\nsxsAnnotatorAutocomplete.$inject = ['$timeout', 'modelSvc', 'appState'];\nfunction sxsAnnotatorAutocomplete($timeout, modelSvc, appState) {\n    return {\n        require: 'ngModel',\n        templateUrl: 'templates/producer/annotator-autocomplete.html',\n        scope: {\n            annotators: '=sxsAnnotatorAutocomplete',\n            item: '=item'\n        },\n        link: function (scope, element, attrs, ngModelController) {\n            scope.appState = appState;\n            scope.hasAnnotator = function () {\n                if (scope.item.annotator) {\n                    return Object.keys(scope.item.annotator).length > 0;\n                }\n            };\n            // look up the annotator images\n            angular.forEach(scope.annotators, function (annotator) {\n                if (annotator.annotation_image_id) {\n                    annotator.imageUrl = modelSvc.assets[annotator.annotation_image_id].url;\n                }\n            });\n            // the form value we'll ultimately want to return\n            scope.annotator = {\n                name: scope.item.annotator\n            };\n            if (scope.annotators[scope.item.annotator] && scope.annotators[scope.item.annotator].annotation_image_id) {\n                scope.annotator.imageUrl = modelSvc.assets[scope.annotators[scope.item.annotator].annotation_image_id].url;\n            }\n            scope.filteredAnnotators = _sortAvailableAnnotators(angular.copy(scope.annotators));\n            scope.preselectedItem = -1;\n            function _sortAvailableAnnotators(annotators) {\n                var _filteredAnnotators = Object.keys(annotators).map(function (key) { return annotators[key]; });\n                var _nextAnnotator = _filteredAnnotators.pop();\n                var _sortedAndFiltered = _filteredAnnotators.sort(function (a, b) {\n                    if (a.key.toLowerCase() < b.key.toLowerCase()) {\n                        return -1;\n                    }\n                    else if (a.key.toLowerCase() > b.key.toLowerCase()) {\n                        return 1;\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n                _sortedAndFiltered.push(_nextAnnotator);\n                //return object built from sorted array\n                return _sortedAndFiltered.reduce(function (sortedObj, annotator) {\n                    sortedObj[annotator.key] = annotator;\n                    return sortedObj;\n                }, {});\n            }\n            element.find('.annotatorChooser').bind(\"keydown\", function (event) {\n                switch (event.which) {\n                    case 40:// down arrow\n                        scope.preselectedItem = (scope.preselectedItem + 1) % Object.keys(scope.filteredAnnotators).length;\n                        break;\n                    case 38:// up arrow\n                        scope.preselectedItem = (scope.preselectedItem - 1) % Object.keys(scope.filteredAnnotators).length;\n                        break;\n                    case 13:// enter\n                        event.preventDefault();\n                        if (scope.preselectedItem > -1) {\n                            scope.selectByIndex(scope.preselectedItem);\n                        }\n                        break;\n                    default:\n                }\n            });\n            // TODO destroy langWatcher when unlinking\n            scope.handleAutocomplete = function () {\n                scope.annotator.name = '';\n                if (scope.searchText) {\n                    scope.preselectedItem = -1;\n                    var newFilter = {};\n                    angular.forEach(scope.annotators, function (annotator) {\n                        // console.log(annotator.key.toLowerCase().indexOf(scope.searchText.toLowerCase()) > -1, annotator.key.toLowerCase(), scope.searchText.toLowerCase());\n                        if (annotator.key.toLowerCase().indexOf(scope.searchText.toLowerCase()) > -1) {\n                            newFilter[annotator.key] = annotator;\n                        }\n                    });\n                    scope.filteredAnnotators = newFilter;\n                    // if only one left, select it automatically\n                    if (Object.keys(scope.filteredAnnotators).length === 1) {\n                        scope.preselectedItem = 0;\n                    }\n                }\n                else {\n                    // empty searchText, show all autocomplete options\n                    scope.filteredAnnotators = angular.copy(scope.annotators);\n                    scope.preselectedItem = -1;\n                }\n            };\n            scope.selectByIndex = function (index) {\n                if (index < 0) {\n                    return;\n                }\n                var names = Object.keys(scope.filteredAnnotators).sort();\n                scope.select(scope.filteredAnnotators[names[index]]);\n            };\n            scope.select = function (annotator) {\n                // console.log(\"Selected \", annotator);\n                scope.preselectedItem = -1;\n                if (annotator.annotation_image_id) {\n                    scope.item.annotation_image_id = annotator.annotation_image_id;\n                    scope.item.asset = modelSvc.assets[annotator.annotation_image_id];\n                    scope.annotator.imageUrl = scope.item.asset.url;\n                }\n                else {\n                    // TODO allow adding new image\n                    delete scope.annotator.imageUrl;\n                    delete scope.item.asset;\n                }\n                ngModelController.$setViewValue(annotator.name); // passes annotator name back to item\n                scope.searchText = '';\n                //TODO  allow upload to replace image\n            };\n            scope.autoCompleting = false;\n            scope.showAutocomplete = function () {\n                var inputField = element.find('.annotatorChooser')[0];\n                inputField.setSelectionRange(0, inputField.value.length);\n                scope.autoCompleting = true;\n            };\n            scope.hideAutocomplete = function () {\n                $timeout(function () {\n                    if (scope.preselectedItem > -1) {\n                        scope.selectByIndex(scope.preselectedItem);\n                    }\n                    else {\n                        // doesn't match an existing name, so...\n                        if (scope.searchText !== '') {\n                            scope.addNewAnnotator();\n                        }\n                    }\n                    scope.autoCompleting = false;\n                }, 300);\n            };\n            scope.addNewAnnotator = function () {\n                var annotatorName = scope.searchText; // TODO sanitize me!!!\n                scope.item.annotator = {};\n                scope.item.annotator[appState.lang] = annotatorName;\n                scope.searchText = \"\";\n                scope.handleAutocomplete();\n                // var newAnnotator = {\n                // \t\"name\": {\n                // \t\t\"en\": annotatorName // make sure we have something consistent to key against\n                // \t},\n                // \t\"imageUrl\": \"\",\n                // \t\"annotation_image_id\": false\n                // };\n                // if (appState.lang !== 'en') {\n                // \tnewAnnotator.name[appState.lang] = annotatorName;\n                // }\n                // console.log(newAnnotator);\n                // // make available in future transcript edits\n                // // TODO shoudl this happen now? or wait until save?\n                // scope.annotators[annotatorName] = angular.copy(newAnnotator);\n                // console.log(scope.annotators);\n                // scope.annotator = angular.copy(newAnnotator);\n                // delete scope.annotator.imageUrl;\n                // ngModelController.$setViewValue(newAnnotator);\n            };\n            scope.uploadAnnotatorImage = function () {\n                window.alert(\"TODO\");\n                // For replacing existing annotator thumbnails, do we need to go through every transcript node with that speaker and replace its annotator ID? TODO check with Bill how he ahndles that in old authoring\n            };\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/sxsContainerAssets.ts\n/* WARN I badly misnamed this; it's used in  producer.  TODO eliminate the sxs prefix, it never made sense anyway */\n\n\nvar sxsContainerAssets_SxsContainerAssetsController = /** @class */ (function () {\n    function SxsContainerAssetsController($rootScope, $q, dataSvc, modelSvc, awsSvc, appState, MIMES, authSvc) {\n        this.$rootScope = $rootScope;\n        this.$q = $q;\n        this.dataSvc = dataSvc;\n        this.modelSvc = modelSvc;\n        this.awsSvc = awsSvc;\n        this.appState = appState;\n        this.MIMES = MIMES;\n        this.authSvc = authSvc;\n    }\n    SxsContainerAssetsController.prototype.$onInit = function () {\n        var _this = this;\n        this.$q(function (resolve, reject) {\n            if (_this.modelSvc.containers[_this.containerId]) {\n                // console.log(\"Container already loaded\");\n                _this.container = _this.modelSvc.containers[_this.containerId];\n                if (!_this.container.assetsHaveLoaded) {\n                    // console.log(\"Assets had not loaded, getting them\");\n                    _this.dataSvc.getContainerAssets(_this.containerId)\n                        .then(resolve);\n                }\n                else {\n                    resolve();\n                }\n            }\n            else {\n                // console.log(\"Getting container\");\n                _this.dataSvc.getContainer(_this.containerId).then(function () {\n                    _this.container = _this.modelSvc.containers[_this.containerId];\n                    _this.dataSvc.getContainerAssets(_this.containerId)\n                        .then(resolve);\n                });\n            }\n        }).then(function (_) {\n            //filter assets if necessary\n            if (_this.context === 'narrative') {\n                _this.assets = Object.keys(_this.modelSvc.assets)\n                    .reduce(function (newAssets, assetKey) {\n                    var asset = _this.modelSvc.assets[assetKey];\n                    if (asset.tags && asset.tags[0] === SOCIAL_IMAGE_SQUARE || asset.tags[0] === SOCIAL_IMAGE_WIDE) {\n                        newAssets[assetKey] = asset;\n                    }\n                    return newAssets;\n                }, {});\n            }\n            else {\n                _this.assets = _this.modelSvc.assets;\n            }\n            _this.isCustAdmin = _this.authSvc.userHasRole('customer admin');\n            _this.isAdmin = _this.authSvc.userHasRole('admin');\n            _this.canAccess = _this.isCustAdmin || _this.isAdmin;\n            if (_this.MIMES[_this.mimeKey]) {\n                _this.mimes = _this.MIMES[_this.mimeKey];\n                if (_this.isAdmin) {\n                    _this.mimes += ',video/*';\n                }\n            }\n            else {\n                _this.mimes = _this.MIMES.default;\n            }\n        });\n    };\n    SxsContainerAssetsController.prototype.up = function () {\n        this.showParent = true;\n    };\n    SxsContainerAssetsController.prototype.toggleImages = function () {\n        this.onlyImages = !this.onlyImages;\n    };\n    SxsContainerAssetsController.prototype.toggleGrid = function () {\n        this.gridView = !this.gridView;\n    };\n    SxsContainerAssetsController.prototype.assetClick = function (assetId) {\n        console.log('User clicked on asset ', assetId);\n        //when it comes time to emit data from a component\n        //\"isolate scope &\" is a better fit than pubsub with $rootScope\n        if (this.context && this.context === 'narrative') {\n            this.onAssetSelect({ $assetId: assetId });\n            return;\n        }\n        this.$rootScope.$emit('UserSelectedAsset', assetId);\n    };\n    SxsContainerAssetsController.prototype.requestDeleteAsset = function ($asset, $ev) {\n        // to avoid triggering the click handler on the <tr> element.\n        $ev.stopPropagation();\n        this.assetToDelete = $asset;\n    };\n    SxsContainerAssetsController.prototype.deleteAsset = function (id) {\n        var _this = this;\n        this.dataSvc.deleteAsset(id)\n            .then(function () {\n            //delete local copies on scope and modelSvc\n            _this.assets = omit(_this.assets, id);\n            _this.modelSvc.assets = omit(_this.modelSvc.assets, id);\n        })\n            .catch(function (e) { return console.log(e); })\n            .finally(function () { return _this.assetToDelete = null; });\n    };\n    SxsContainerAssetsController.$inject = ['$rootScope', '$q', 'dataSvc', 'modelSvc', 'awsSvc', 'appState', 'MIMES', 'authSvc'];\n    return SxsContainerAssetsController;\n}());\nvar SxsContainerAssets = /** @class */ (function () {\n    function SxsContainerAssets() {\n        this.bindings = {\n            containerId: '@',\n            mimeKey: '@?',\n            context: '@?',\n            onAssetSelect: '&?'\n        };\n        this.templateUrl = 'templates/producer/container-assets.html';\n        this.controller = sxsContainerAssets_SxsContainerAssetsController;\n    }\n    SxsContainerAssets.Name = 'sxsContainerAssets'; // tslint:disable-line\n    return SxsContainerAssets;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/sxsInputI18n.ts\nsxsInputI18n.$inject = ['$timeout', 'appState', 'textAngularManager'];\nfunction sxsInputI18n($timeout, appState, textAngularManager) {\n    return {\n        templateUrl: 'templates/producer/inputi18n.html',\n        scope: {\n            field: \"=sxsInputI18n\",\n            inputtype: \"=inputtype\",\n            doValidate: '=',\n            onEmitName: '&'\n        },\n        link: function (scope, el, attrs) {\n            if (!scope.field) {\n                // need to init the object if it's empty\n                scope.field = {\n                    en: \"\"\n                };\n            }\n            scope.appState = appState;\n            //do this in both cases so we can use the name on regular text inputs in addition to textareas\n            scope.textangularname = \"ta\" + new Date().getUTCMilliseconds() + \"y\" + Math.random().toString(16);\n            /*\n             textAngular requires unique name attributes set on the textarea or input element\n             ng-forms will use the name attribute as a namespace for ng-specific state regarding\n             the various states of validity an item can be in.\n      \n             example:\n             <form ng-form=\"aForm\">\n             <input type=\"text\" name=\"firstName\">\n             </form>\n      \n             will result in an ngform object like so:\n             aForm.firstName = {$valid: <boolean>, $invalid: <boolean>, $dirty: <boolean>}\n      \n             It's hard to known the name of the textarea, because we ensure that it is unique by\n             randomly creating a name prop based upon the current time.\n      \n             this makes the following technique a little harder:\n             <p ng-if=\"aForm.firstName.$invalid\">this is a required field</p>\n             because firstName (the value of the name attribute on the text area) is randomly generated.\n      \n             the solution is to emit the name up to the directive that is consuming sxsInputI18n\n             after it has been set, then we can check the state of the validity in the parent component.\n             */\n            scope.onEmitName({ $taName: scope.textangularname });\n            if (scope.inputtype === 'textarea') {\n                $timeout(function () {\n                    if (attrs.autofocus !== undefined) {\n                        var editorScope = textAngularManager.retrieveEditor(scope.textangularname).scope;\n                        editorScope.displayElements.text.trigger('focus');\n                    }\n                });\n                scope.trim = function () {\n                    // Let's prevent users from throwing extra whitespace at beginning and end:\n                    var txt = scope.field[appState.lang];\n                    if (!txt) {\n                        return;\n                    }\n                    console.log(\"BEFORE\", txt);\n                    // yay regexp parsing of html my favorite thing to do\n                    txt = txt.replace(/<br\\/>/g, '<br>'); // no xml-style tags\n                    // Replacing lots of complicated regexps with this brute force (we don't want user-input spans or divs anyway.)\n                    txt = txt.replace(/<div>/g, '<br>');\n                    txt = txt.replace(/<\\/?(span|div)>/g, '');\n                    txt = txt.replace(/(<br>)*$/, ''); // kill extra linebreaks at end of entered text\n                    console.log(\"AFTER\", txt);\n                    scope.field[appState.lang] = txt;\n                };\n                scope.sanitizePastedHtml = function (pasted) {\n                    // Strip out all markup from pasted content (to keep those addicted to MS Word from shooting themselves in the foot)\n                    var frag = document.createElement(\"div\");\n                    frag.innerHTML = pasted;\n                    return frag.textContent;\n                };\n            }\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/sxsInputTime.ts\n/*For form fields: displays m:ss, sets model as number of seconds. accepts s or m:ss as input. */\nsxsInputTime.$inject = ['$rootScope', '$timeout', 'appState', 'modelSvc', 'timelineSvc', 'playbackService', 'ittUtils'];\nfunction sxsInputTime($rootScope, $timeout, appState, modelSvc, timelineSvc, playbackService, ittUtils) {\n    return {\n        require: '?^^form',\n        scope: {\n            item: '=sxsInputTime'\n        },\n        templateUrl: 'templates/producer/inputtime.html',\n        link: function (scope, elem, attrs, ngForm) {\n            var _existy = ittUtils.existy;\n            angular.extend(scope, {\n                fieldname: angular.copy(attrs.inputField),\n                realValue: angular.copy(scope.item[attrs.inputField]),\n                playbackService: playbackService,\n                model: format(angular.copy(scope.item[attrs.inputField])),\n                appState: appState,\n                parse: parse,\n                format: format,\n                nudge: nudge,\n                setTime: setTime,\n                showTools: showTools,\n                isTranscript: isTranscript\n            });\n            onInit();\n            function onInit() {\n                if (scope.item._type === 'Scene') {\n                    scope.scene = function () {\n                        return scope.item;\n                    };\n                }\n                else {\n                    scope.scene = function () {\n                        return modelSvc.sceneAtEpisodeTime(scope.item.cur_episode_id, playbackService.getMetaProp('time'));\n                    };\n                }\n            }\n            // Watch for user input, send it to item if different\n            scope.$watch(watchModel, handleUpdates);\n            function watchModel() {\n                return parse(scope.model);\n            }\n            function handleUpdates(parsedTime) {\n                setTime(parsedTime);\n                // Stop questions should always have the same start + end\n                if (attrs.inputField === 'start_time' && scope.item.stop) {\n                    scope.item.end_time = parsedTime;\n                }\n            }\n            function handelValidation(t) {\n                scope.item.validationMessage = null;\n                ngForm.time.$setValidity('time', true);\n                //these validations are specific to scenes.\n                if (scope.item._type !== 'Scene') {\n                    return true;\n                }\n                var isValidInput = false;\n                var validStartTime = validateStartTime(t);\n                var isOnExistingScene = validateSceneStartTime(t);\n                isValidInput = validStartTime && isOnExistingScene;\n                if (!isValidInput) {\n                    if (ngForm) {\n                        ngForm.time.$setValidity('time', false);\n                        ngForm.time.$setViewValue(format(t));\n                        ngForm.time.$render();\n                        if (!isOnExistingScene) {\n                            scope.item.validationMessage = 'Scenes cannot share the same start time.';\n                        }\n                        if (!validStartTime) {\n                            scope.item.validationMessage = 'For a start time <=0:00.1, please edit the first layout';\n                        }\n                    }\n                }\n                return isValidInput;\n            }\n            function validateSceneStartTime(t) {\n                var isOnSameStartTime;\n                var isValid = true;\n                //don't check the current scene\n                if (scope.item.start_time !== t) {\n                    isOnSameStartTime = modelSvc.isOnExistingSceneStart(t);\n                    isValid = !isOnSameStartTime;\n                }\n                return isValid;\n            }\n            function validateStartTime(t) {\n                return (_existy(t) && t > 0.1);\n            }\n            function setTime(t) {\n                if (handelValidation(t) === false) {\n                    return;\n                }\n                if (t > episodeDuration) {\n                    t = episodeDuration;\n                }\n                if (scope.item.stop) {\n                    scope.item.end_time = t;\n                }\n                scope.realValue = t;\n                scope.item[attrs.inputField] = scope.realValue;\n                scope.model = scope.format(t);\n                scope.item.invalid_end_time = (scope.item.start_time > scope.item.end_time);\n            }\n            function parse(data) {\n                // console.log(\"Converting view \", data, \" to model\");\n                var ret;\n                if (data === undefined || data === '') {\n                    ret = playbackService.getMetaProp('time');\n                }\n                else if (isNaN(data)) {\n                    var mss = data.split(':');\n                    if (mss.length === 2) {\n                        if (isNaN(mss[0])) {\n                            mss[0] = 0;\n                        }\n                        if (isNaN(mss[1])) {\n                            mss[1] = 0;\n                        }\n                        ret = (Number(mss[0]) * 60 + Number(mss[1]));\n                    }\n                    else {\n                        ret = playbackService.getMetaProp('time');\n                    }\n                }\n                else {\n                    ret = data;\n                }\n                // HACK First scene is bumped a bit after the landing screen...\n                if (ret < 0.01) {\n                    ret = 0.01;\n                }\n                $rootScope.$emit('searchReindexNeeded'); // HACK\n                return ret;\n            }\n            function format(data) {\n                // convert model value to view value\n                // in a way which is not completely borken, for a change\n                // srsly how was that even working before\n                var mins = Math.floor(data / 60);\n                var secs = Math.round((data % 60) * 100) / 100;\n                if (secs < 10) {\n                    secs = \"0\" + secs;\n                }\n                return mins + \":\" + secs;\n            }\n            // console.log(\"initing inputTime: \", scope.realValue, scope.model);\n            // TODO this will break in multi-episode timelines\n            var episodeDuration = modelSvc.episodes[scope.item.cur_episode_id].masterAsset.duration;\n            function nudge(amt) {\n                // keep the tooltip panel open:\n                $timeout.cancel(tooltipHider);\n                elem.find('.inputfield').focus();\n                // This ends up triggering setTime twice (it changes scope.model, which triggers the $watch)  Oh Well\n                var diff = amt / 30; // pretend 1 frame is always 1/30s for now\n                setTime(scope.item[attrs.inputField] + diff);\n                if (attrs.inputField === 'start_time') {\n                    timelineSvc.seek(scope.item[attrs.inputField] + diff);\n                }\n            }\n            var tooltipHider;\n            function showTools(x) {\n                if (x) {\n                    scope.tooltip = true;\n                }\n                else {\n                    // allow time for clicks before we unload the thing being clicked on:\n                    tooltipHider = $timeout(function () {\n                        scope.tooltip = false;\n                    }, 300);\n                }\n            }\n            function isTranscript() {\n                // TODO\n                return false;\n            }\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/socialshare/ittEnableSocialshare.ts\n\n/**\n * Created by githop on 5/22/17.\n */\n/* tslint:disable: no-trailing-whitespace */\nvar ittEnableSocialshare_TEMPLATE = \"\\n<div ng-if=\\\"$ctrl.narrative.enable_social_sharing\\\" class=\\\"socialshare-filedrop\\\">\\n\\n  <div ng-repeat=\\\"(tag, imgObj) in $ctrl.images\\\" ng-class=\\\"'itt-filedrop__' + tag\\\">\\n    <itt-filedrop\\n      on-error=\\\"$ctrl.display[tag].error\\\"\\n      on-drop=\\\"$ctrl.handleImage(files, tag)\\\">\\n      \\n      <itt-filedrop-target>\\n        <div class=\\\"itt-filedrop__wrapper\\\" ng-if=\\\"imgObj.path == null\\\">\\n          <span class=\\\"itt-filedrop__placeholder --default-image-opacity\\\" ng-class=\\\"tag + '--default'\\\"></span>\\n        </div>\\n      </itt-filedrop-target>\\n\\n      <itt-filedrop-preview>\\n        <div ng-if=\\\"imgObj.path\\\">\\n          <div class=\\\"socialshare__img\\\">\\n            <itt-upload-progress upload=\\\"$ctrl.uploadsService.uploadsDisplay[tag]\\\"></itt-upload-progress>\\n            <img\\n              ng-class=\\\"{\\n                '--drop-error': $ctrl.display[tag].error,\\n                '--default-image-opacity': $ctrl.display[tag].defaultFromNarrative\\n              }\\\"\\n              ng-src=\\\"{{imgObj.path}}\\\"/>\\n          </div>\\n        </div>\\n      </itt-filedrop-preview> \\n\\n    </itt-filedrop> \\n    <div>{{$ctrl.display[tag].text}}</div>\\n  </div>\\n\\n  <!--begin social controls-->\\n  <div class=\\\"socialshare__controls\\\">\\n    <button\\n      ng-disabled=\\\"$ctrl.isUsingDefaultImages()\\\"\\n      ng-click=\\\"$ctrl.resetImgs()\\\">\\n      {{$ctrl.isUsingDefaultImages() ? 'Default images in use' : 'Use default images'}}\\n    </button>\\n    <button ng-click=\\\"$ctrl.toggleBrowseUploaded()\\\">Browse uploaded</button>\\n    <label class=\\\"button\\\" for=\\\"fileBtn\\\">Upload new</label>\\n\\n    <input id=\\\"fileBtn\\\" type=\\\"file\\\" accept=\\\"image/*\\\" itt-files-handler on-selected=\\\"$ctrl.handleImage(files)\\\"/>\\n  </div>\\n  <!--end social controls-->\\n\\n  <!--begin browse uploaded-->\\n  <np-modal wrapper-class=\\\"responsive-modal__wrapper\\\" modal-class=\\\"narrative__modal\\\" ng-if=\\\"$ctrl.browseUploaded\\\">\\n    <div class=\\\"scrollContainer\\\">\\n      <sxs-container-assets\\n        container-id=\\\"{{$ctrl.containerId}}\\\"\\n        on-asset-select=\\\"$ctrl.uploadedAssetSelected($assetId)\\\"\\n        context=\\\"narrative\\\">\\n      </sxs-container-assets>\\n    </div>\\n    <div class=\\\"controlsContainer\\\">\\n      <button ng-click=\\\"$ctrl.toggleBrowseUploaded()\\\">Cancel</button>\\n    </div>\\n  </np-modal>\\n  <!--end browse uploaded-->\\n</div>\\n\";\nvar DEFAULT_DISPLAY_TEXT = {\n    social_image_square: 'Recommend 576 x 576',\n    social_image_wide: 'Recommend 1200 x 630'\n};\nvar initialImages = {\n    social_image_square: { file: null, path: null },\n    social_image_wide: { file: null, path: null }\n};\nvar initialDisplay = {\n    social_image_square: {\n        text: DEFAULT_DISPLAY_TEXT[SOCIAL_IMAGE_SQUARE],\n        error: false,\n        defaultFromNarrative: false\n    },\n    social_image_wide: {\n        text: DEFAULT_DISPLAY_TEXT[SOCIAL_IMAGE_WIDE],\n        error: false,\n        defaultFromNarrative: false\n    }\n};\nvar ittEnableSocialshare_EnableSocialshareController = /** @class */ (function () {\n    function EnableSocialshareController($q, $timeout, uploadsService, imageResize, dataSvc, modelSvc) {\n        this.$q = $q;\n        this.$timeout = $timeout;\n        this.uploadsService = uploadsService;\n        this.imageResize = imageResize;\n        this.dataSvc = dataSvc;\n        this.modelSvc = modelSvc;\n        //\n        this.browseUploaded = false;\n        this.files = {\n            social_image_square: { file: null },\n            social_image_wide: { file: null }\n        };\n    }\n    EnableSocialshareController.prototype.$onInit = function () {\n        if (this.timeline == null) {\n            this.type = 'narrative';\n        }\n        else {\n            this.type = 'timeline';\n        }\n        this.model = this[this.type];\n        this.setInitialDisplay();\n        this.fetchAssetsOnInit();\n    };\n    EnableSocialshareController.prototype.resetImgs = function () {\n        var _this = this;\n        if (this.type === 'timeline') {\n            if (this.narrative.narrative_image_ids && this.narrative.narrative_image_ids.length === 2) {\n                this.narrative.narrative_image_ids.forEach(function (nAssedId) {\n                    var asset = _this.modelSvc.assets[nAssedId];\n                    var tagType = asset.tags[0];\n                    _this.images[tagType] = { assetId: asset._id, path: asset.url };\n                    _this.display[tagType].defaultFromNarrative = true;\n                });\n            }\n            else {\n                this.setInitialDisplay();\n            }\n            this.timeline.timeline_image_ids = [];\n            return;\n        }\n        this.narrative.narrative_image_ids = [];\n        this.images = Object.assign({}, initialImages);\n    };\n    EnableSocialshareController.prototype.isUsingDefaultImages = function () {\n        var fromNarrative = this.display[SOCIAL_IMAGE_SQUARE].defaultFromNarrative === true &&\n            this.display[SOCIAL_IMAGE_WIDE].defaultFromNarrative === true;\n        var narrasysBranded = this.images[SOCIAL_IMAGE_SQUARE].path == null &&\n            this.images[SOCIAL_IMAGE_WIDE].path == null;\n        return fromNarrative || narrasysBranded;\n    };\n    EnableSocialshareController.prototype.toggleBrowseUploaded = function () {\n        this.browseUploaded = !this.browseUploaded;\n    };\n    EnableSocialshareController.prototype.uploadedAssetSelected = function (assetId) {\n        var imgAsset = this.modelSvc.assets[assetId];\n        this.setImageFromAsset(imgAsset, false);\n        this.browseUploaded = false;\n    };\n    EnableSocialshareController.prototype.handleImage = function (data, currTag) {\n        var _this = this;\n        this.checkAspectRatio(data[0])\n            .then(function (_a) {\n            var images = _a.images, tag = _a.tag;\n            if (currTag != null && currTag !== tag) {\n                return _this.$q.reject({ currTag: currTag, tag: tag, errorType: 'TAG_MISMATCH' });\n            }\n            _this.files[tag].file = data;\n            _this.images = Object.assign({}, _this.images, images);\n            //set a reference to the uploaded file\n            _this.model[tag] = { file: data };\n            _this.setValidity();\n        })\n            .catch(function (e) { return _this.handleTagmismatchError(e.errorType, e.currTag, e.tag); });\n    };\n    EnableSocialshareController.prototype.setInitialDisplay = function () {\n        this.display = angular.copy(initialDisplay);\n        this.images = angular.copy(initialImages);\n    };\n    EnableSocialshareController.prototype.fetchAssetsOnInit = function () {\n        if (this.type === 'narrative') {\n            this.fetchNarrativeImageAssets();\n        }\n        if (this.type === 'timeline') {\n            this.fetchImageAssetsTimeline();\n        }\n    };\n    EnableSocialshareController.prototype.fetchNarrativeImageAssets = function () {\n        if (this.narrative && this.narrative.narrative_image_ids && this.narrative.narrative_image_ids.length > 0) {\n            this.getImageAssets('narrative').then(function () { return void 0; });\n        }\n    };\n    EnableSocialshareController.prototype.fetchImageAssetsTimeline = function () {\n        var _this = this;\n        var loadStatus = {\n            narrative: [],\n            timeline: []\n        };\n        if (this.timeline.timeline_image_ids && this.timeline.timeline_image_ids.length > 0) {\n            // queue timeline ids for loading\n            loadStatus.timeline = this.timeline.timeline_image_ids.slice();\n            // set narrative to only be loaded\n            loadStatus.use = 'timeline';\n        }\n        else {\n            loadStatus.use = 'narrative';\n        }\n        if (this.narrative.narrative_image_ids && this.narrative.narrative_image_ids.length > 0) {\n            // queue narrative ids for loading\n            loadStatus.narrative = this.narrative.narrative_image_ids.slice();\n        }\n        var allIds = loadStatus.narrative.concat(loadStatus.timeline);\n        // the above assets need to be retrieved either from teh API or the cache\n        // only fetch the necessary ids that aren't already cached\n        var idsToFetch = allIds.reduce(function (toFetch, id) {\n            if (!_this.modelSvc.assets[id]) {\n                toFetch.push(id);\n            }\n            return toFetch;\n        }, []);\n        var setCorrectImagesFromAssets = function () {\n            loadStatus[loadStatus.use].forEach(function (id) {\n                // the second parameter when true will set the $ctrl.images (for display) with assets from the\n                // narrative but avoid putting the ID's from these assets into the timeline.timeline_image_ids array\n                _this.setImageFromAsset(_this.modelSvc.assets[id], loadStatus.use === 'narrative');\n            });\n        };\n        // get assets and set them for use in display\n        if (idsToFetch.length > 0) {\n            this.dataSvc.fetchAndCacheAssetsByIds(idsToFetch).then(setCorrectImagesFromAssets);\n        }\n        else {\n            setCorrectImagesFromAssets();\n        }\n    };\n    EnableSocialshareController.prototype.getImageAssets = function (type, skipImgIdArray) {\n        var _this = this;\n        if (skipImgIdArray === void 0) { skipImgIdArray = false; }\n        return this.$q(function (resolve) {\n            var assetsToFetch = [];\n            _this[type][type + '_image_ids'].forEach(function (assetId) {\n                if (assetId && _this.modelSvc.assets[assetId]) {\n                    _this.setImageFromAsset(_this.modelSvc.assets[assetId], skipImgIdArray);\n                }\n                else {\n                    assetsToFetch.push(assetId);\n                }\n            });\n            if (assetsToFetch.length > 0) {\n                _this.dataSvc.fetchAndCacheAssetsByIds(assetsToFetch)\n                    .then(function (assets) {\n                    assets.forEach(function (asset) { return _this.setImageFromAsset(asset, skipImgIdArray); });\n                    return resolve();\n                });\n            }\n            return resolve();\n        });\n    };\n    EnableSocialshareController.prototype.handleTagmismatchError = function (errorType, currentTag, newTag) {\n        var _this = this;\n        this.display[currentTag].error = true;\n        this.display[currentTag].text = 'The aspect ratio is not correct.';\n        this.$timeout(function () {\n            _this.display[currentTag].error = false;\n            _this.display[currentTag].text = DEFAULT_DISPLAY_TEXT[currentTag];\n        }, 3 * 1000);\n    };\n    EnableSocialshareController.prototype.checkAspectRatio = function (file) {\n        var _this = this;\n        return this.imageResize.readFileToImg(file)\n            .then(function (img) {\n            var tag = _this.imageResize.getImageTagType(img.width, img.height);\n            var images = (_a = {}, _a[tag] = { name: file.name, path: img.src }, _a);\n            return { images: images, tag: tag };\n            var _a;\n        });\n    };\n    EnableSocialshareController.prototype.setImageFromAsset = function (asset, skipImgIdArray) {\n        if (skipImgIdArray === void 0) { skipImgIdArray = false; }\n        var tagType = asset.tags[0];\n        var currentImage = this.images[tagType];\n        this.images[tagType] = { assetId: asset._id, path: asset.url };\n        this.display[tagType].defaultFromNarrative = false;\n        if (skipImgIdArray) {\n            this.display[tagType].defaultFromNarrative = true;\n            this.setValidity();\n            return;\n        }\n        if (currentImage && currentImage.assetId) {\n            this.removeImageId(currentImage.assetId);\n        }\n        this.addImageId(asset._id);\n        this.setValidity();\n    };\n    EnableSocialshareController.prototype.setValidity = function () {\n        var _a = this.images, social_image_square = _a.social_image_square, social_image_wide = _a.social_image_wide;\n        var isMixedDefault = this.display[SOCIAL_IMAGE_SQUARE].defaultFromNarrative !==\n            this.display[SOCIAL_IMAGE_WIDE].defaultFromNarrative;\n        var bothPathsSet = typeof social_image_square.path === 'string' && typeof social_image_wide.path === 'string';\n        var bothPathsNull = social_image_square.path == null && social_image_wide.path == null;\n        // if either path is null consider invalid or we have mixed default images\n        var isValid = !isMixedDefault && (bothPathsSet || bothPathsNull);\n        this.editorForm.$setValidity(this.editorForm.$name, isValid, this.editorForm);\n    };\n    EnableSocialshareController.prototype.removeImageId = function (targetId) {\n        this.model[this.type + '_image_ids'] = this.model[this.type + '_image_ids'].filter(function (id) { return targetId !== id; });\n    };\n    EnableSocialshareController.prototype.addImageId = function (targetId) {\n        if (!this.model[this.type + '_image_ids'].includes(targetId)) {\n            this.model[this.type + '_image_ids'].push(targetId);\n        }\n    };\n    EnableSocialshareController.$inject = ['$q', '$timeout', 'uploadsService', 'imageResize', 'dataSvc', 'modelSvc'];\n    return EnableSocialshareController;\n}());\nvar EnableSocialshare = /** @class */ (function () {\n    function EnableSocialshare() {\n        this.bindings = {\n            containerId: '@?',\n            narrative: '<',\n            timeline: '<?',\n            editorForm: '<'\n        };\n        this.template = ittEnableSocialshare_TEMPLATE;\n        this.controller = ittEnableSocialshare_EnableSocialshareController;\n    }\n    EnableSocialshare.Name = 'ittEnableSocialshare'; // tslint:disable-line\n    return EnableSocialshare;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/socialshare/ittSocialShare.ts\nvar SocialShareController = /** @class */ (function () {\n    function SocialShareController(Socialshare, dataSvc) {\n        this.Socialshare = Socialshare;\n        this.dataSvc = dataSvc;\n        // props\n        this.stubUrl = 'https://thecareerplaybook.narrasys.com/narratives/jim-citrin';\n        this.expanded = false;\n        this.emailshareExpanded = false;\n        this.textCopied = false;\n        this.email = {};\n    } // tslint:disable-line\n    SocialShareController.prototype.$onInit = function () {\n        //MVP only works in player, so require full timeline path\n        if (this.subdomain && this.paths && this.paths.narrative && this.paths.timeline) {\n            this.stubUrl = SocialShareController.formatShareUrl(this.subdomain, this.paths.narrative, this.paths.timeline.url);\n        }\n    };\n    SocialShareController.prototype.onShare = function (provider) {\n        // available providers, params: https://github.com/720kb/angular-socialshare\n        var shareConfig = {\n            provider: provider,\n            attrs: {}\n        };\n        switch (provider) {\n            case 'email':\n                this.toggleEmailshare();\n                return;\n            case 'linkedin':\n            case 'twitter':\n            case 'reddit':\n                // these providers in 720.kb use the socialshareText attr.\n                Object.assign(shareConfig.attrs, { socialshareText: this.shareTitle }, { socialshareUrl: this.stubUrl });\n                break;\n            default:\n                Object.assign(shareConfig.attrs, { socialshareUrl: this.stubUrl });\n        }\n        this.Socialshare.share(shareConfig);\n        this.closeAll();\n    };\n    SocialShareController.prototype.toggleExpanded = function () {\n        this.expanded = !this.expanded;\n        this.textCopied = false;\n        this.emailshareExpanded = false;\n    };\n    SocialShareController.prototype.ontextCopied = function (e) {\n        this.textCopied = true;\n    };\n    SocialShareController.prototype.handleEmailShare = function (email, ngForm) {\n        var _this = this;\n        if (ngForm.$invalid) {\n            ngForm.$error.required.forEach(function (field) {\n                field.$setTouched();\n            });\n            return;\n        }\n        this.dataSvc.sendSocialshareEmail(this.paths.timeline.id, email)\n            .then(function (resp) { return _this.closeAll(); })\n            .catch(function (e) { return console.log('error!', e); });\n    };\n    SocialShareController.formatShareUrl = function (subDomain, narrativePath, timelinePath) {\n        var protocol = 'https://';\n        var rootDomain = '.narrasys.com/narratives/';\n        return \"\" + protocol + subDomain + rootDomain + narrativePath + \"/\" + timelinePath;\n    };\n    SocialShareController.prototype.closeAll = function () {\n        this.expanded = false;\n        this.textCopied = false;\n        this.emailshareExpanded = false;\n    };\n    SocialShareController.prototype.toggleEmailshare = function () {\n        this.emailshareExpanded = !this.emailshareExpanded;\n    };\n    SocialShareController.$inject = ['Socialshare', 'dataSvc'];\n    return SocialShareController;\n}());\nvar IttSocialShare = /** @class */ (function () {\n    function IttSocialShare() {\n        this.bindings = {\n            providers: '<',\n            subdomain: '@',\n            shareTitle: '@',\n            paths: '<'\n        };\n        this.templateUrl = 'scripts/directives/socialshare/social-share.html';\n        this.controller = SocialShareController;\n    }\n    IttSocialShare.Name = 'ittSocialShare'; // tslint:disable-line\n    return IttSocialShare;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/socialshare/index.ts\n/**\n * Created by githop on 6/22/17.\n */\n\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittFiledrop.ts\n/**\n * Created by githop on 6/5/17.\n */\nvar ittFiledrop_TEMPLATE = \"\\n<div class=\\\"itt-filedrop itt-filedrop--border\\\" ng-class=\\\"{'--drop-error': $ctrl.onError}\\\"> \\n  <div ng-transclude=\\\"target\\\"></div>\\n  \\n   <div class=\\\"itt-filedrop__wrapper\\\" ng-if=\\\"$ctrl.onError\\\">\\n    <span class=\\\"itt-filedrop__placeholder --drop-error\\\"></span>\\n   </div>\\n  \\n  <div ng-if=\\\"!$ctrl.error\\\" ng-transclude=\\\"preview\\\"></div>\\n</div>\\n\";\nvar FiledropController = /** @class */ (function () {\n    function FiledropController($element) {\n        this.$element = $element;\n    }\n    FiledropController.prototype.$postLink = function () {\n        this.attachListeners();\n    };\n    FiledropController.prototype.$onDestroy = function () {\n        this.removeListeners();\n    };\n    FiledropController.prototype.attachListeners = function () {\n        var _this = this;\n        this.$element[0].addEventListener('drop', function (e) { return _this.handleDrop(e); });\n        this.$element[0].addEventListener('dragover', function (e) { return _this.handleDragOver(e); });\n        this.$element[0].addEventListener('dragenter', function (e) { return _this.handleDragEnter(e); });\n        this.$element[0].addEventListener('dragleave', function (e) { return _this.handleDragLeave(e); });\n    };\n    FiledropController.prototype.removeListeners = function () {\n        var _this = this;\n        this.$element[0].removeEventListener('drop', function (e) { return _this.handleDrop(e); });\n        this.$element[0].removeEventListener('dragover', function (e) { return _this.handleDragOver(e); });\n        this.$element[0].removeEventListener('dragenter', function (e) { return _this.handleDragEnter(e); });\n        this.$element[0].removeEventListener('dragleave', function (e) { return _this.handleDragLeave(e); });\n    };\n    FiledropController.prototype.handleDrop = function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.handleDragLeave(e);\n        this.onDrop({ files: e.dataTransfer.files });\n    };\n    FiledropController.prototype.handleDragOver = function (e) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n        this.handleDragEnter(e);\n        return false;\n    };\n    FiledropController.prototype.handleDragEnter = function (ev) {\n        this.$element.children().addClass('itt-filedrop--droppable');\n    };\n    FiledropController.prototype.handleDragLeave = function (ev) {\n        this.$element.children().removeClass('itt-filedrop--droppable');\n    };\n    FiledropController.$inject = ['$element'];\n    return FiledropController;\n}());\nvar Filedrop = /** @class */ (function () {\n    function Filedrop() {\n        this.transclude = {\n            'target': 'ittFiledropTarget',\n            'preview': 'ittFiledropPreview'\n        };\n        this.bindings = {\n            onError: '<',\n            onDrop: '&'\n        };\n        this.template = ittFiledrop_TEMPLATE;\n        this.controller = FiledropController;\n    }\n    Filedrop.Name = 'ittFiledrop'; // tslint:disable-line\n    return Filedrop;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittUploadProgress.ts\n/**\n * Created by githop on 6/6/17.\n */\nvar ittUploadProgress_TEMPLATE = \"\\n\\n<div class=\\\"upload-progress\\\" ng-if=\\\"$ctrl.upload != null\\\">\\n  <h5>{{$ctrl.upload.name}} - {{$ctrl.upload.percent}}%</h5>\\n  <progress\\n    ng-attr-max=\\\"{{$ctrl.upload.bytesTotal}}\\\"\\n    ng-attr-value=\\\"{{$ctrl.upload.bytesSent}}\\\">\\n  </progress>\\n</div>\\n\\n<!--<div class=\\\"upload-progress\\\">-->\\n  <!--<p>File name! - 80%</p>-->\\n  <!--<progress max=\\\"10\\\" value=\\\"8\\\"></progress>-->\\n<!--</div>-->\\n\\n\";\nvar UploadProgress = /** @class */ (function () {\n    function UploadProgress() {\n        this.bindings = {\n            upload: '<'\n        };\n        this.template = ittUploadProgress_TEMPLATE;\n    }\n    UploadProgress.Name = 'ittUploadProgress';\n    return UploadProgress;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/ittPlayerContainer.ts\n/**\n * Created by githop on 7/5/17.\n */\nfunction ittPlayerContainer() {\n    return {\n        templateUrl: 'templates/player.html',\n        controller: 'PlayerController'\n    };\n}\n\n// CONCATENATED MODULE: ./app/scripts/directives/npProjectsContainer.ts\nvar npProjectsContainer_TEMPLATE = \"\\n<div class=\\\"standaloneAncillaryPage\\\">\\n\\t<np-nav on-logout=\\\"$ctrl.logout()\\\"></np-nav>\\n\\n\\t<h1>Projects</h1>\\n  <np-episode-list class=\\\"np-container\\\" context=\\\"episode\\\"></np-episode-list>\\n</div>\\n\";\nvar ProjectsContainerController = /** @class */ (function () {\n    function ProjectsContainerController(authSvc) {\n        this.authSvc = authSvc;\n        //\n    }\n    ProjectsContainerController.prototype.$onInit = function () {\n        //\n    };\n    ProjectsContainerController.prototype.logout = function () {\n        this.authSvc.logout();\n    };\n    ProjectsContainerController.$inject = ['authSvc'];\n    return ProjectsContainerController;\n}());\nvar ProjectsContainer = /** @class */ (function () {\n    function ProjectsContainer() {\n        this.template = npProjectsContainer_TEMPLATE;\n        this.controller = ProjectsContainerController;\n    }\n    ProjectsContainer.Name = 'npProjectsContainer'; // tslint:disable-line\n    return ProjectsContainer;\n}());\n\n\n// CONCATENATED MODULE: ./app/scripts/directives/directives.module.ts\n/**\n * Created by githop on 3/30/17.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar directivesModule = angular.module('itt.directives', [])\n    .directive('ittAnnotationField', ittAnnotationField)\n    .component(AssetUploader.Name, new AssetUploader())\n    .component(Clipboard.Name, new Clipboard())\n    .directive('ittColorSelect', ittColorSelect)\n    .component(Container.Name, new Container())\n    .component(ContainerEpisodes.Name, new ContainerEpisodes())\n    .directive('ittDescriptionField', ittDescriptionField)\n    .directive('ittDisplaySelect', ittDisplaySelect)\n    .directive('ittDynamicModel', ittDynamicModel)\n    .component(EditPencil.Name, new EditPencil())\n    .directive('ittFileField', ittFileField)\n    .directive('ittFilesHandler', ittFilesHandler)\n    .component(Flags.Name, new Flags())\n    .directive('ittFlotr2Chart', ittFlotr2Chart)\n    .component(GuestAccessibleUrl.Name, new GuestAccessibleUrl())\n    .directive('ittHighlightSelect', ittHighlightSelect)\n    .directive('ittIframe', ittIframe)\n    .directive('ittImageField', ittImageField)\n    .directive('ittItem', ittItem)\n    .directive('ittItemDetailModal', ittItemDetailModal)\n    .directive('ittItemEditor', ittItemEditor)\n    .directive('ittLanguageFlags', ittLanguageFlags)\n    .directive('ittLanguageSelect', ittLanguageSelect)\n    .component(Loading.Name, new Loading())\n    .directive('ittLogin', ittLogin)\n    .directive('ittMagnet', ittMagnet)\n    .directive('ittMagnetized', ittMagnetized)\n    .directive('ittMcQuestion', ittMcQuestion)\n    .component(Modal.Name, new Modal())\n    .component(NarrativeEditor.Name, new NarrativeEditor())\n    .component(NarrativeList.Name, new NarrativeList())\n    .directive('ittNarrativeTimeline', ittNarrativeTimeline)\n    .component(Nav.Name, new Nav())\n    .directive('ittOptionsDisabled', ittOptionsDisabled)\n    .directive('ittQuestionOptions', ittQuestionOptions)\n    .directive('ittQuestionTextField', ittQuestionTextField)\n    .directive('ittQuestionTypeSelect', ittQuestionTypeSelect)\n    .directive('ittReviewMode', ittReviewMode)\n    .directive('ittRouteLoading', ittRouteLoading)\n    .directive('ittScene', ittScene)\n    .directive('ittSearchPanel', ittSearchPanel)\n    .directive('ittShowFocus', ittShowFocus)\n    .directive('ittShowHideVisualOnly', ittShowHideVisualOnly)\n    .animation('.visual-hide', visualHideAnimation)\n    .directive('ittSpeakerField', ittSpeakerField)\n    .directive('ittSpeakerThumbField', ittSpeakerThumbField)\n    .directive('ittTabs', ittTabs)\n    .directive('ittTab', ittTab)\n    .component(TemplateSelect.Name, new TemplateSelect())\n    .directive('ittTimeField', ittTimeField)\n    .directive('ittTimeline', ittTimeline)\n    .component(TimelineEditor.Name, new TimelineEditor())\n    .directive('ittTimestampSelect', ittTimestampSelect)\n    .directive('ittTitleField', ittTitleField)\n    .directive('ittToolbarStory', ittToolbarStory)\n    .component(Tooltip.Name, new Tooltip())\n    .directive('ittTranscriptField', ittTranscriptField)\n    .directive('ittTransitionSelect', ittTransitionSelect)\n    .directive('ittTypographySelect', ittTypographySelect)\n    .component(UploadTranscripts.Name, new UploadTranscripts())\n    .component(UrlField.Name, new UrlField())\n    .directive('ittUser', ittUser)\n    .directive('ittValidAsset', ittValidAsset)\n    .directive('ittValidationTip', ittValidationTip)\n    .directive('ittValidEpisodeUrl', ittValidEpisodeUrl)\n    .directive('ittValidPathslug', ittValidPathslug)\n    .directive('ittValidUrl', ittValidUrl)\n    .directive('ittVideo', ittVideo)\n    .component(VideoPositionSelect.Name, new VideoPositionSelect())\n    .directive('ittVolumeSlider', ittVolumeSlider)\n    .directive('ittWidthWatch', ittWidthWatch)\n    .directive('sxsAddContent', sxsAddContent)\n    .directive('sxsAnnotatorAutocomplete', sxsAnnotatorAutocomplete)\n    .component(SxsContainerAssets.Name, new SxsContainerAssets())\n    .directive('sxsInputI18n', sxsInputI18n)\n    .directive('sxsInputTime', sxsInputTime)\n    .directive('autofocus', autofocus)\n    .component(IttSocialShare.Name, new IttSocialShare())\n    .component(EnableSocialshare.Name, new EnableSocialshare())\n    .component(Filedrop.Name, new Filedrop())\n    .component(UploadProgress.Name, new UploadProgress())\n    .directive('ittPlayerContainer', ittPlayerContainer)\n    .component(NarrativeDetail.Name, new NarrativeDetail())\n    .component(NarrativeContainer.Name, new NarrativeContainer())\n    .component(ProjectsContainer.Name, new ProjectsContainer())\n    .component(NarrativesContainer.Name, new NarrativesContainer());\n/* harmony default export */ var directives_module = (directivesModule);\n\n// CONCATENATED MODULE: ./app/episode/components/episode/ittEpisode.ts\nvar ittEpisode_TEMPLATE = \"\\n<div class=\\\"episode episode-template\\\" ng-class=\\\"episode.templateCss\\\" ng-hide=\\\"episodeTheme.sheetLoading\\\">\\n\\n  <div\\n    class=\\\"fill\\\"\\n    ng-if=\\\"episode.template.css_configuration.fill_class != null\\\"\\n    ng-class=\\\"episode.template.css_configuration.fill_class\\\">\\n    \\n    <div ng-if=\\\"episode.template.css_configuration.fill_class === 'gwsb-seal'\\\" class=\\\"fill\\\"></div>\\n  </div>\\n  <span ng-include=\\\"'view-modes/review-mode/reviewmode.html'\\\"></span>\\n  <span ng-include=\\\"'view-modes/watch-mode/watchmode.html'\\\"></span>\\n  <span\\n    ng-class=\\\"{'colorInvert DiscoverModeOnly': episode.template.displayName === 'Middlebury'}\\\"\\n    ng-repeat=\\\"scene in episode.scenes | isCurrent\\\"\\n    ng-include=\\\"'view-modes/discover-mode/discovermode.html'\\\">\\n  </span>\\n  <span ng-include=\\\"'view-modes/video/video.html'\\\"></span>\\n  <span ng-include=\\\"'view-modes/windowfg/windowfg.html'\\\"></span>\\n  \\n  <np-episode-footer template-data=\\\"episode.template\\\"></np-episode-footer>\\n</div>\\n\";\nvar EpisodeController = /** @class */ (function () {\n    function EpisodeController($scope, $interval, analyticsSvc, modelSvc, appState, dataSvc, timelineSvc) {\n        this.$scope = $scope;\n        this.$interval = $interval;\n        this.analyticsSvc = analyticsSvc;\n        this.modelSvc = modelSvc;\n        this.appState = appState;\n        this.dataSvc = dataSvc;\n        this.timelineSvc = timelineSvc;\n    }\n    EpisodeController.prototype.$onInit = function () {\n        var _this = this;\n        // console.log('episode init!');\n        // this.appState.episodeId = this.$routeParams.epId;\n        this.$scope.episode = this.modelSvc.episodes[this.appState.episodeId];\n        // TODO: this will break if the timeline and the episode timeline don't match.\n        // TODO: check whether this gets called if multiple episodes are added to the timeline...\n        // I'm thinking probably not....\n        // I did something stupid here wrt scoping, apparently;\n        // 'edit episode' causes this scope to refer to a copy of the data rather than back to the modelSvc cache.\n        // This is an even stupider but relatively harmless HACK to keep it  pointing at the right data:\n        // classic daniel ^^\n        this.loadEpisodeForPlayer();\n        var scopeHack = function () {\n            _this.$scope.episode = _this.modelSvc.episodes[_this.appState.episodeId];\n        };\n        this.$interval(scopeHack, 457);\n    };\n    EpisodeController.prototype.$onDestroy = function () {\n        this.analyticsSvc.captureEpisodeActivity('episodeUnload');\n        this.analyticsSvc.stopPolling();\n    };\n    EpisodeController.prototype.loadEpisodeForPlayer = function () {\n        this.analyticsSvc.startPolling();\n        this.analyticsSvc.captureEpisodeActivity('episodeLoad');\n    };\n    EpisodeController.$inject = [\n        '$scope',\n        '$interval',\n        'analyticsSvc',\n        'modelSvc',\n        'appState',\n        'dataSvc',\n        'timelineSvc'\n    ];\n    return EpisodeController;\n}());\nfunction ittEpisode() {\n    return {\n        restrict: 'EA',\n        replace: false,\n        template: ittEpisode_TEMPLATE,\n        controller: EpisodeController\n    };\n}\n\n// CONCATENATED MODULE: ./app/episode/components/episode-editor/ittEpisodeEditor.ts\nittEpisodeEditor.$inject = [\n    '$rootScope',\n    '$timeout',\n    'appState',\n    'modelSvc',\n    'dataSvc',\n    'authSvc',\n    'selectService',\n    'playbackService',\n    'urlService',\n    'episodeTheme',\n    'episodeEdit'\n];\nfunction ittEpisodeEditor($rootScope, $timeout, appState, modelSvc, dataSvc, authSvc, selectService, playbackService, urlService, episodeTheme, episodeEdit) {\n    return {\n        restrict: 'A',\n        replace: true,\n        scope: {\n            episode: '=ittEpisodeEditor'\n        },\n        templateUrl: 'templates/producer/episode.html',\n        controller: 'EditController',\n        link: function episodeEditorLinkFn(scope) {\n            scope.translationMessage = translationMessage;\n            function translationMessage(langArr) {\n                var prefix = '';\n                var langs = langArr.filter(function (l) {\n                    if (l.default == undefined) {\n                        return true;\n                    }\n                    else {\n                        prefix = 'Translate from ' + l.code + ' to: ';\n                        return false;\n                    }\n                }).map(function (l) {\n                    l = l.code;\n                    return l;\n                }).join(', ');\n                return prefix + langs;\n            }\n            scope.beginBackgroundTranslations = beginBackgroundTranslations;\n            function beginBackgroundTranslations(episodeId) {\n                dataSvc.beginBackgroundTranslations(episodeId)\n                    .then(handleSuccess)\n                    .catch(handleError);\n                function handleSuccess(resp) {\n                    console.log('resp from translations!', resp);\n                    if (resp.status === 'Request for translations queued') {\n                        scope.afterTranslationAttempt = resp.status + ', check back later!';\n                    }\n                    else {\n                        scope.afterTranslationAttempt = 'Something went wrong...';\n                    }\n                    scope.doCheckForTranslations = true;\n                }\n                function handleError(e) {\n                    console.log('error:', e);\n                }\n            }\n            scope.episodeContainerId = modelSvc.episodes[appState.episodeId].container_id;\n            var container = modelSvc.containers[scope.episodeContainerId];\n            scope.customer = modelSvc.customers[container.customer_id];\n            if (scope.episode.master_asset_id && scope.episode.master_asset_id !== \"\") {\n                scope.masterAsset = modelSvc.assets[scope.episode.master_asset_id];\n            }\n            scope.uploadStatus = [];\n            scope.uneditedEpisode = angular.copy(scope.episode); // in case of cancel.   Must be a copy, not the original!\n            scope.itemForm = selectService.setupItemForm(scope.episode.styles, 'episode');\n            if (!authSvc.userHasRole('admin') || (scope.masterAsset && /video\\/x-/.test(scope.masterAsset.content_type))) {\n                scope.masterAssetType = 'WebUrl';\n            }\n            else {\n                scope.masterAssetType = 'Video';\n            }\n            // extract episode languages for the form\n            scope.langForm = { 'en': true, 'es': false, 'zh': false, 'pt': false, 'fr': false, 'de': false, 'it': false };\n            for (var j = 0; j < scope.episode.languages.length; j++) {\n                scope.langForm[scope.episode.languages[j].code] = true;\n            }\n            scope.langForm[scope.episode.defaultLanguage] = true;\n            scope.languageWatcher = scope.$watch(function () {\n                return [scope.langForm, scope.episode.defaultLanguage];\n            }, function () {\n                var languageCount = 0; // not sure if necessary -- can use languages.length instead?\n                var lastSelectedLanguage = \"\"; // convenience to stuff into default if the old default is no longer valid\n                var newLanguages = []; // will replace the existing episode languages array\n                for (var lang in scope.langForm) {\n                    if (scope.langForm[lang]) {\n                        languageCount++;\n                        lastSelectedLanguage = lang;\n                        newLanguages.push({\n                            'code': lang\n                        });\n                    }\n                    else {\n                        // language not selected; remove it as default if it was one\n                        if (scope.episode.defaultLanguage === lang) {\n                            scope.episode.defaultLanguage = false;\n                        }\n                    }\n                }\n                scope.languageCount = languageCount;\n                // ensure there is a valid default selection:\n                if (scope.episode.defaultLanguage === false) {\n                    scope.episode.defaultLanguage = lastSelectedLanguage;\n                }\n                // set the default inside in the languages structure:\n                angular.forEach(newLanguages, function (lang) {\n                    if (lang.code === scope.episode.defaultLanguage) {\n                        lang.default = true;\n                    }\n                });\n                scope.episode.languages = angular.copy(newLanguages);\n            }, true);\n            // Transform changes to form fields for styles into item.styles[]:\n            scope.watchStyleEdits = scope.$watch(function () {\n                return scope.itemForm;\n            }, function () {\n                // console.log(\"itemForm:\", scope.itemForm);\n                var styles = [];\n                for (var styleType in scope.itemForm) {\n                    if (scope.itemForm[styleType]) {\n                        styles.push(styleType + scope.itemForm[styleType]);\n                    }\n                }\n                scope.episode.styles = styles;\n                modelSvc.deriveEpisode(scope.episode);\n                modelSvc.resolveEpisodeEvents(scope.episode._id); // needed for template or style changes\n            }, true);\n            scope.appState = appState;\n            // Angular1.3 dependency: watchGroup\n            // Deep-watching the entire episode is not so much with the good performance characteristics so we instead only watch the editable fields\n            // TODO would it be worth using watchGroup in itemEdit as well?\n            scope.watchEdits = scope.$watchGroup(\n            // I am kind of amazed that using appState.lang works here, these strings must get recalculated every tick\n            [\n                'episode.title[appState.lang]',\n                'episode.description[appState.lang]'\n            ], function () {\n                modelSvc.deriveEpisode(scope.episode);\n                // modelSvc.resolveEpisodeContainers(scope.episode._id); // only needed for navigation_depth changes\n                modelSvc.resolveEpisodeEvents(scope.episode._id); // needed for template or style changes\n            });\n            scope.dismissalWatcher = $rootScope.$on(\"player.dismissAllPanels\", scope.cancelEdit);\n            scope.cancelEdit = function () {\n                // hand off to EditController (with the original to be restored)\n                scope.cancelEpisodeEdit(scope.uneditedEpisode);\n            };\n            scope.attachChosenAsset = function (asset_id) {\n                scope.episode.replacingMasterAsset = false;\n                var asset = modelSvc.assets[asset_id];\n                var previousAsset = modelSvc.assets[scope.episode.master_asset_id];\n                scope.showmessage = \"New video attached.\";\n                if (previousAsset && (asset.duration < previousAsset.duration)) {\n                    var orphans = scope.getItemsAfter(scope.episode.items.concat(scope.episode.scenes), asset.duration);\n                    if (orphans.length) {\n                        // TODO i18n\n                        scope.showmessage = \"Warning: this new video is shorter than the current video and we've detected that some existing content items will be impacted. If you save this edit, these events will have their start and end times adjusted to the new episode end. (If this isn't what you want, choose a different video or hit 'cancel'.)\";\n                    }\n                }\n                scope.episode._master_asset_was_changed = true;\n                scope.episode.master_asset_id = asset._id;\n                scope.masterAsset = asset;\n                scope.episode.masterAsset = asset;\n                modelSvc.deriveEpisode(scope.episode);\n            };\n            scope.attachPosterAsset = function (assetId) {\n                var asset = modelSvc.assets[assetId];\n                scope.episode.poster_frame_id = assetId;\n                scope.episode.poster = asset;\n                modelSvc.deriveEpisode(scope.episode);\n            };\n            scope.assetUploaded = function (assetId) {\n                scope.showUploadButtons = false;\n                scope.showUploadField = false;\n                scope.attachChosenAsset(assetId);\n            };\n            scope.posterUploaded = function (assetId) {\n                scope.showUploadButtonsPoster = false;\n                scope.showUploadFieldPoster = false;\n                scope.attachPosterAsset(assetId);\n            };\n            function waitForDuration(onDone, url, type) {\n                return function (state) {\n                    if (state === 'player ready') {\n                        playbackService.unregisterStateChangeListener(waitForDuration);\n                        //push to end of event loop.\n                        $timeout(function () {\n                            onDone({\n                                duration: playbackService.getMetaProp('duration', 'replaceMe'),\n                                url: url,\n                                type: type\n                            });\n                            //remove temp\n                            scope.episode.swap = {};\n                        }, 0);\n                    }\n                };\n            }\n            function createAssetFromTmp(tmpAsset) {\n                var asset = Object.create(null);\n                asset.content_type = tmpAsset.type;\n                asset.duration = tmpAsset.duration;\n                asset.url = tmpAsset.url;\n                asset.name = scope.episode.title;\n                asset.description = scope.episode.description;\n                dataSvc.createAsset(scope.episodeContainerId, asset).then(function (data) {\n                    modelSvc.cache('asset', data);\n                    playbackService.renamePid('replaceMe', data._id);\n                    scope.attachChosenAsset(data._id);\n                }).catch(function (e) {\n                    console.log('errr', e);\n                });\n            }\n            scope.attachMediaSrc = attachMediaSrc;\n            function attachMediaSrc(urlOrEmbedCode) {\n                var contentType;\n                var pmTypeAndMimeType = urlService.checkUrl(urlOrEmbedCode);\n                var type = pmTypeAndMimeType.type;\n                if (type === 'wistia' && !authSvc.userHasRole('admin')) {\n                    return;\n                }\n                if (type.length > 0) {\n                    contentType = pmTypeAndMimeType.mimeType;\n                    scope.episode.replacingMasterAsset = true;\n                    scope.showmessage = 'Getting ' + type + ' video...';\n                    var mediaSrcUrl = urlService.parseInput(urlOrEmbedCode);\n                    scope.episode.swap = {\n                        _id: 'replaceMe',\n                        mediaSrcArr: [mediaSrcUrl]\n                    };\n                    var afterReady = waitForDuration(createAssetFromTmp, mediaSrcUrl, contentType);\n                    playbackService.registerStateChangeListener(afterReady);\n                }\n            }\n            scope.replaceAsset = function (assetType) {\n                assetType = assetType || '';\n                scope[\"showUploadButtons\" + assetType] = true;\n                scope[\"showUploadField\" + assetType] = false;\n            };\n            scope.detachMasterAsset = detachMasterAsset;\n            function detachMasterAsset() {\n                scope.episode.masterAsset = null;\n                appState.editEpisode.masterAsset = null;\n                appState.editEpisode._master_asset_was_changed = true;\n                episodeEdit.detatchMasterAsset(scope.episode);\n            }\n            scope.saveEpisode = saveEpisode;\n            function saveEpisode() {\n                episodeEdit.saveEpisode(scope.episode);\n            }\n            scope.selectText = function (event) {\n                event.target.select(); // convenience for selecting the episode url\n            };\n            scope.$on('$destroy', function () {\n                scope.watchEdits();\n                scope.dismissalWatcher();\n                scope.languageWatcher();\n                scope.watchStyleEdits();\n            });\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./app/episode/components/episode-list/ittEpisodeList.ts\n\nvar ittEpisodeList_TEMPLATE = \"\\n<div ng-if=\\\"$ctrl.context === 'episode' && $ctrl.userHasRole('admin') || $ctrl.userHasRole('customer admin')\\\">\\n  <np-loading ng-if=\\\"$ctrl.loading\\\"></np-loading>\\n\\n  <np-container\\n    ng-repeat=\\\"child in $ctrl.root.children\\\"\\n    depth=\\\"0\\\"\\n    container=\\\"child\\\"\\n    containers=\\\"$ctrl.modelSvc.containers\\\"\\n    on-container-remove=\\\"$ctrl.onRequestContainerRemove($container)\\\"\\n    on-container-click=\\\"$ctrl.onContainerClick($container)\\\"\\n    on-container-add=\\\"$ctrl.onContainerAdd($container)\\\">\\n  </np-container>\\n  \\n  <np-modal class=\\\"modal__center-center\\\" ng-if=\\\"$ctrl.containerToDelete != null\\\">\\n    <h4>Delete</h4>\\n    {{$ctrl.containerToDelete.name.en}}?\\n    <div>\\n      <button ng-click=\\\"$ctrl.removeContainer($ctrl.containerToDelete)\\\">Delete</button>\\n      <button ng-click=\\\"$ctrl.containerToDelete = null\\\">cancel</button>\\n    </div>\\n  </np-modal>\\n  \\n  <div ng-if=\\\"$ctrl.showAdmin\\\">\\n    Looks like you aren't logged in as an admin -- <a ng-click=\\\"logout();\\\">try again</a>.\\n  </div>\\n</div>\\n\\n<!--for the add timeline modal in /story/:id-->\\n<div ng-if=\\\"$ctrl.context === 'narrative'\\\">\\n      Choose an episode:\\n      <button ng-click=\\\"$ctrl.onCancel()\\\">cancel</button>\\n      <np-container-episodes\\n        ng-repeat=\\\"child in $ctrl.root.children\\\"\\n        depth=\\\"0\\\"\\n        on-node-click=\\\"$ctrl.selectEpisode(node)\\\"\\n        for-admin=\\\"true\\\"\\n        container=\\\"$ctrl.containers[child._id]\\\">\\n      </np-container-episodes>\\n</div>\\n\";\nvar gatherIds = function (container, ids) {\n    if (ids === void 0) { ids = []; }\n    ids.push(container._id);\n    if (container.children && container.children.length > 0) {\n        container.children.forEach(function (child) {\n            gatherIds(child, ids);\n        });\n    }\n    return ids;\n};\nvar ittEpisodeList_EpisodeListController = /** @class */ (function () {\n    function EpisodeListController($location, $timeout, authSvc, dataSvc, modelSvc) {\n        this.$location = $location;\n        this.$timeout = $timeout;\n        this.authSvc = authSvc;\n        this.dataSvc = dataSvc;\n        this.modelSvc = modelSvc;\n        //\n    }\n    Object.defineProperty(EpisodeListController.prototype, \"showAdmin\", {\n        get: function () {\n            return !(this.userHasRole('admin')\n                || this.userHasRole('customer admin')\n                || (!this.loading && (this.failedLogin || this.root.children.length === 0)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EpisodeListController.prototype.$onInit = function () {\n        var _this = this;\n        this.loading = true;\n        this.containers = this.modelSvc.containers;\n        this.dataSvc.getCustomerList();\n        this.dataSvc.getContainerRoot()\n            .then(function (rootIDs) {\n            _this.root = {\n                children: []\n            };\n            rootIDs.forEach(function (id) {\n                _this.root.children.push(_this.modelSvc.containers[id]);\n            });\n            _this.walkContainers(_this.root.children, true, true);\n            _this.loading = false;\n        })\n            .catch(function (e) {\n            _this.failedLogin = true;\n            _this.loading = false;\n        });\n    };\n    EpisodeListController.prototype.selectEpisode = function (e) {\n        this.onEpisodeSelect({ node: e });\n    };\n    EpisodeListController.prototype.logout = function () {\n        this.authSvc.logout();\n    };\n    EpisodeListController.prototype.userHasRole = function (role) {\n        return this.authSvc.userHasRole(role);\n    };\n    EpisodeListController.prototype.onContainerAdd = function ($container) {\n        this.walkContainers(this.root.children, !$container.evenOdd, false);\n    };\n    EpisodeListController.prototype.onRequestContainerRemove = function ($container) {\n        this.containerToDelete = $container;\n    };\n    EpisodeListController.prototype.removeContainer = function ($container) {\n        var _this = this;\n        this.dataSvc.deleteContainer($container._id)\n            .then(function () { return _this.removeContainerSuccess($container); })\n            .catch(function (e) { return console.log('error removing container!'); })\n            .finally(function () { return _this.containerToDelete = null; });\n    };\n    EpisodeListController.prototype.removeContainerSuccess = function ($container) {\n        this.modelSvc.containers = omit.apply(void 0, [this.modelSvc.containers].concat(gatherIds($container)));\n        this.walkContainers(this.root.children, !$container.evenOdd, true);\n    };\n    EpisodeListController.prototype.walkContainers = function (containerList, _evenOdd, findLastContainer) {\n        var _this = this;\n        var evenOdd = _evenOdd; // no-param-reassign\n        containerList.sort(function (a, b) {\n            if (a.name.en.toLowerCase() < b.name.en.toLowerCase()) {\n                return -1;\n            }\n            else if (a.name.en.toLowerCase() > b.name.en.toLowerCase()) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n        containerList.forEach(function (_container) {\n            var container = _this.modelSvc.containers[_container._id];\n            if (container == null) {\n                return;\n            }\n            container.evenOdd = evenOdd;\n            evenOdd = !evenOdd;\n            if (container.isActive && findLastContainer) {\n                _this.lastClickedContainer = { container: container, bool: false };\n            }\n            if (container.showChildren && container.children) {\n                evenOdd = _this.walkContainers((container.children), evenOdd, findLastContainer);\n            }\n        });\n        return evenOdd;\n    };\n    EpisodeListController.prototype.onContainerClick = function ($container) {\n        var _this = this;\n        if ($container.container.children) {\n            if ($container.bool === false) {\n                $container.container.showChildren = !$container.container.showChildren;\n            }\n            // have already loaded kids\n            this.walkContainers(this.root.children, true, false);\n        }\n        else {\n            this.dataSvc.getContainer($container.container._id).then(function (id) {\n                $container.container = _this.modelSvc.containers[id];\n                if ($container.bool === false) {\n                    $container.container.showChildren = true;\n                }\n                _this.walkContainers(_this.root.children, true, false);\n            });\n        }\n        if ($container.bool === true) {\n            if (existy(this.lastClickedContainer)) {\n                if (this.lastClickedContainer.container !== $container.container) {\n                    this.lastClickedContainer.container.isActive = false;\n                    this.lastClickedContainer = $container;\n                    this.lastClickedContainer.container.isActive = true;\n                }\n                else {\n                    this.lastClickedContainer.container.isActive = !this.lastClickedContainer.container.isActive;\n                }\n            }\n            else {\n                this.lastClickedContainer = $container;\n                this.lastClickedContainer.container.isActive = true;\n            }\n        }\n    };\n    EpisodeListController.$inject = ['$location', '$timeout', 'authSvc', 'dataSvc', 'modelSvc'];\n    return EpisodeListController;\n}());\nvar EpisodeList = /** @class */ (function () {\n    function EpisodeList() {\n        this.bindings = {\n            context: '@',\n            onCancel: '&?',\n            onEpisodeSelect: '&?'\n        };\n        this.template = ittEpisodeList_TEMPLATE;\n        this.controller = ittEpisodeList_EpisodeListController;\n    }\n    EpisodeList.Name = 'npEpisodeList'; // tslint:disable-line\n    return EpisodeList;\n}());\n\n\n// EXTERNAL MODULE: ./node_modules/webfontloader/webfontloader.js\nvar webfontloader = __webpack_require__(\"01M/\");\nvar webfontloader_default = /*#__PURE__*/__webpack_require__.n(webfontloader);\n\n// CONCATENATED MODULE: ./app/episode/services/episodeTheme.service.ts\n\nvar episodeTheme_service_EpisodeTheme = /** @class */ (function () {\n    function EpisodeTheme($q, config) {\n        this.$q = $q;\n        this.config = config;\n        this.linkId = 'np-template-theme';\n        this._sheetLoading = false;\n        //\n    }\n    Object.defineProperty(EpisodeTheme.prototype, \"sheetLoading\", {\n        get: function () {\n            return this._sheetLoading;\n        },\n        set: function (val) {\n            this._sheetLoading = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EpisodeTheme.prototype.setTheme = function (template) {\n        var _this = this;\n        return this.loadThemeStyleSheet(template.id)\n            .then(function () { return _this.loadFontFamily(template.fonts); });\n    };\n    EpisodeTheme.prototype.loadThemeStyleSheet = function (templateId) {\n        if (this.linkTag != null) {\n            this._changeHref(templateId);\n        }\n        else {\n            this._appendLinkTag(templateId);\n        }\n        return this._imgLoadEvtHack();\n    };\n    EpisodeTheme.prototype.loadFontFamily = function (font) {\n        if (font != null) {\n            webfontloader[\"load\"](font);\n        }\n    };\n    EpisodeTheme.prototype._imgLoadEvtHack = function () {\n        var _this = this;\n        // https://www.viget.com/articles/js-201-run-a-function-when-a-stylesheet-finishes-loading\n        this.sheetLoading = true;\n        return this.$q(function (resolve) {\n            _this.imgElm = document.createElement('img');\n            _this.imgElm.src = _this.linkTag.href;\n            document.body.appendChild(_this.imgElm);\n            _this.imgElm.onerror = function () {\n                document.body.removeChild(_this.imgElm);\n                _this.sheetLoading = false;\n                return resolve(void 0);\n            };\n        });\n    };\n    EpisodeTheme.prototype._changeHref = function (id) {\n        this.linkTag.setAttribute('href', this._getHrefPath(id));\n    };\n    EpisodeTheme.prototype._getHrefPath = function (templateId) {\n        return \"https:\" + this.config.apiDataBaseUrl + \"/v1/templates/\" + templateId + \".css\";\n    };\n    EpisodeTheme.prototype._appendLinkTag = function (templateId) {\n        var link = document.createElement('link');\n        link.setAttribute('id', this.linkId);\n        link.setAttribute('rel', 'stylesheet');\n        link.setAttribute('href', this._getHrefPath(templateId));\n        this.linkTag = link;\n        document.head.appendChild(this.linkTag);\n    };\n    EpisodeTheme.Name = 'episodeTheme'; // tslint:disable-line\n    EpisodeTheme.$inject = ['$q', 'config'];\n    return EpisodeTheme;\n}());\n\n\n// CONCATENATED MODULE: ./app/episode/services/episodeEdit.service.ts\n\nvar episodeEdit_service_EpisodeEditService = /** @class */ (function () {\n    function EpisodeEditService($timeout, appState, selectService, modelSvc, dataSvc, episodeTheme, playbackService, timelineSvc) {\n        this.$timeout = $timeout;\n        this.appState = appState;\n        this.selectService = selectService;\n        this.modelSvc = modelSvc;\n        this.dataSvc = dataSvc;\n        this.episodeTheme = episodeTheme;\n        this.playbackService = playbackService;\n        this.timelineSvc = timelineSvc;\n        //\n    }\n    EpisodeEditService.prototype.updateEpisodeTemplate = function (episode, templateId) {\n        var template = this.dataSvc.getTemplate(templateId);\n        var copy = createInstance('Episode', episode);\n        copy.template = template;\n        copy.template_id = template.id;\n        var derived = this.modelSvc.deriveEpisode(copy);\n        this.modelSvc.cache('episode', derived); // because resolveEpisodeEvents pulls from cache by ID\n        var resolved = this.modelSvc.resolveEpisodeEvents(derived._id); // needed for template or style changes\n        return this.episodeTheme.setTheme(template)\n            .then(function () { return resolved; });\n    };\n    EpisodeEditService.prototype.addEpisodeToContainer = function (newContainer) {\n        var _this = this;\n        var newEpisode = {\n            'container_id': newContainer._id,\n            'title': angular.copy(newContainer.name)\n        };\n        return this.dataSvc.fetchTemplates()\n            .then(function () { return _this.dataSvc.getEpisodeTemplatesByCustomerIds([newContainer.customer_id]); })\n            .then(function (templates) {\n            // do template stuff...\n            // if the customer does not have a custom template, use the unbranded one\n            if (templates.length === 1) {\n                newEpisode.template_id = templates[0].id;\n            }\n            else {\n                // if they have a custom template, use the first template (by their customer id) that\n                // is not the unbranded one\n                var customerTemplate = templates.filter(function (t) { return t.name !== 'Unbranded'; });\n                newEpisode.template_id = customerTemplate[0].id;\n            }\n        })\n            .then(function () {\n            return _this.dataSvc.createEpisode(newEpisode)\n                .then(function (epResp) {\n                var newScene = {\n                    '_type': 'Scene',\n                    'title': {},\n                    'description': {},\n                    'templateUrl': 'templates/scene/1col.html',\n                    'start_time': 0,\n                    'end_time': 0,\n                    'episode_id': epResp._id\n                };\n                return newScene;\n            })\n                .then(function (firstScene) { return _this.dataSvc.storeItem(firstScene); })\n                .then(function () { return newContainer; });\n        });\n    };\n    EpisodeEditService.prototype.setEpisodeToEdit = function () {\n        var episode = this.modelSvc.episodes[this.appState.episodeId];\n        var customerId = this.modelSvc.containers[episode.container_id].customer_id;\n        this.appState.editEpisode = episode;\n        this.appState.editEpisode.templateOpts = this.selectService.getTemplates('episode', [customerId]);\n        this.appState.videoControlsActive = true; // TODO see playerController showControls;\n        this.appState.videoControlsLocked = true; // this may not be sufficient on touchscreens\n    };\n    EpisodeEditService.prototype.detatchMasterAsset = function (episode) {\n        this.dataSvc.detachMasterAsset(episode)\n            .then(function (data) {\n            window.location.reload(); //?? not sure what to do next.\n        });\n    };\n    EpisodeEditService.prototype.saveEpisode = function ($episode) {\n        var _this = this;\n        var toSave = angular.copy(this.appState.editEpisode);\n        console.log('wtf?', toSave);\n        this.dataSvc.storeEpisode(toSave)\n            .then(function (data) {\n            _this.modelSvc.cache('episode', _this.dataSvc.resolveIDs(data));\n            if (_this.appState.editEpisode._master_asset_was_changed) {\n                delete _this.modelSvc.episodes[data._id]._master_asset_was_changed; // probably unnecessary\n                var duration_1 = _this.modelSvc.assets[data.master_asset_id].duration;\n                var endTime_1 = duration_1 - 0.01;\n                _this.modelSvc.episodes[_this.appState.episodeId].masterAsset = _this.modelSvc.assets[$episode.master_asset_id];\n                _this.modelSvc.episodes[_this.appState.episodeId].master_asset_id = data.master_asset_id;\n                /*\n                 iterate through episode.scenes.\n                 if start time > duration, delete the scene.\n                 if end time > duration, set end time to duration.\n                 iterate through episode.items.\n                 if start or end time > duration, set to duration.\n      \n                 update ending scene\n                 resolveEpisode and resolveEpisodeEvents\n      \n                 */\n                var modifiedEvents_1 = [];\n                var deletedScenes_1 = [];\n                var episode = _this.modelSvc.episodes[toSave._id];\n                angular.forEach(episode.scenes, function (scene) {\n                    if (scene.start_time > duration_1) {\n                        deletedScenes_1.push(scene);\n                    }\n                    else if (scene.end_time > duration_1) {\n                        scene.end_time = endTime_1;\n                        modifiedEvents_1.push(scene);\n                    }\n                });\n                angular.forEach(episode.items, function (item) {\n                    if (item.start_time > duration_1) {\n                        item.start_time = endTime_1;\n                    }\n                    if (item.end_time > duration_1) {\n                        item.end_time = endTime_1;\n                    }\n                    modifiedEvents_1.push(item);\n                });\n                var endingScene = _this.modelSvc.events['internal:endingscreen:' + toSave._id];\n                if (endingScene) {\n                    endingScene.start_time = endTime_1;\n                    endingScene.end_time = endTime_1;\n                }\n                else {\n                    _this.modelSvc.addEndingScreen(toSave._id);\n                }\n                _this.modelSvc.resolveEpisodeEvents(_this.appState.episodeId);\n                // modelSvc.resolveEpisodeContainers(appState.episodeId); // only needed for navigation_depth changes\n                _this.modelSvc.resolveEpisodeAssets(_this.appState.episodeId); // TODO I suspect this is unnecessary...\n                _this.playbackService.setMetaProp('duration', duration_1);\n                _this.appState.editEpisode = false;\n                _this.appState.videoControlsLocked = false;\n                _this.timelineSvc.init(_this.appState.episodeId);\n                // push each of modifiedEvents to server (TODO combine these into one call!)\n                angular.forEach(modifiedEvents_1, function (event) {\n                    if (event._id.indexOf('internal') < 0) {\n                        _this.dataSvc.storeItem(event);\n                    }\n                });\n                // ditto for orphaned scenes\n                angular.forEach(deletedScenes_1, function (scene) {\n                    if (scene._id.indexOf('internal') < 0) {\n                        _this.dataSvc.deleteItem(scene._id);\n                    }\n                });\n                // HACK HACK HACK super brute force -- something is going screwy with the timeline and video here,\n                // especially when we switch from youtube to native or vv.  Force it with a full reload.\n                // (Note this makes a lot of the above re-init code redundant,\n                // but I'm hopeful I'll someday have time to fix this prOH HA HA HA I COULDNT SAY IT WITH A STRAIGHT FACE)\n                _this.$timeout(function () {\n                    window.location.reload();\n                }, 500);\n            }\n            else {\n                // modelSvc.resolveEpisodeContainers(appState.episodeId); // only needed for navigation_depth changes\n                _this.modelSvc.resolveEpisodeEvents(_this.appState.episodeId);\n                _this.modelSvc.resolveEpisodeAssets(_this.appState.episodeId);\n                _this.appState.editEpisode = false;\n                _this.appState.videoControlsLocked = false;\n            }\n        })\n            .catch(function (data) {\n            console.error('FAILED TO STORE EPISODE', data);\n        });\n    };\n    EpisodeEditService.Name = 'episodeEdit'; // tslint:disable-line\n    EpisodeEditService.$inject = [\n        '$timeout',\n        'appState',\n        'selectService',\n        'modelSvc',\n        'dataSvc',\n        'episodeTheme',\n        'playbackService',\n        'timelineSvc'\n    ];\n    return EpisodeEditService;\n}());\n\n\n// CONCATENATED MODULE: ./app/episode/components/copyright/npCopyright.ts\nvar npCopyright_TEMPLATE = \"\\n{{$ctrl.copyrightOrg}} player &#169;\\n<span ng-bind-html=\\\"$ctrl.now | date:'yyyy'\\\"></span>\\n<a\\n  ng-href=\\\"//{{$ctrl.orgLinkUrl}}\\\"\\n  target=\\\"_blank\\\"\\n  rel=\\\"noopener noreferrer\\\">{{$ctrl.orgLinkText}}</a>. All rights reserved.\\n<br>\\n<a href=\\\"/privacy.html\\\" target=\\\"_blank\\\">Privacy</a>\\n<span ng-if=\\\"$ctrl.supportUrl\\\"> -\\n\\t<a ng-href=\\\"{{$ctrl.supportUrl}}\\\">Support</a>\\n</span>\\n\";\nvar CopyrightController = /** @class */ (function () {\n    function CopyrightController() {\n        this.now = new Date;\n        this.itt = {\n            copyrightOrg: 'TELLING STORY',\n            orgLinkUrl: 'inthetelling.com',\n            orgLinkText: 'IN THE TELLING'\n        };\n        this.np = {\n            copyrightOrg: 'Narrative',\n            orgLinkUrl: 'narrasys.com',\n            orgLinkText: 'Narrasys'\n        };\n    }\n    Object.defineProperty(CopyrightController.prototype, \"copyrightOrg\", {\n        get: function () {\n            return this[this.org].copyrightOrg;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CopyrightController.prototype, \"orgLinkUrl\", {\n        get: function () {\n            return this[this.org].orgLinkUrl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CopyrightController.prototype, \"orgLinkText\", {\n        get: function () {\n            return this[this.org].orgLinkText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CopyrightController;\n}());\nvar Copyright = /** @class */ (function () {\n    function Copyright() {\n        this.bindings = {\n            org: '@',\n            supportUrl: '@'\n        };\n        this.template = npCopyright_TEMPLATE;\n        this.controller = CopyrightController;\n    }\n    Copyright.Name = 'npCopyright'; // tslint:disable-line\n    return Copyright;\n}());\n\n\n// CONCATENATED MODULE: ./app/episode/components/episode-footer/npEpisodeFooter.ts\nvar npEpisodeFooter_TEMPLATE = \"\\n<div ng-if=\\\"$ctrl.appState.viewMode != 'watch'\\\" ng-class=\\\"$ctrl.brandingDivClass\\\">\\n\\n  <div ng-if=\\\"$ctrl.proTemplate\\\" class=\\\"branding--content\\\">\\n    <np-copyright org=\\\"np\\\" class=\\\"professional__copyright\\\"></np-copyright>  \\n    <div class=\\\"professional__logo\\\"></div>\\n  </div>\\n  \\n  <a\\n    ng-if=\\\"!$ctrl.proTemplate\\\"\\n    ng-repeat=\\\"logoImg in $ctrl.logos\\\"\\n    ng-class=\\\"logoImg.css_class\\\"\\n    ng-href=\\\"{{logoImg.url}}\\\"\\n    target=\\\"_blank\\\"\\n    rel=\\\"noopener noreferrer\\\">\\n      <img ng-src=\\\"{{logoImg.src}}\\\" alt=\\\"{{logoImg.alt_text}}\\\"/>\\n  </a>\\n  <np-copyright ng-if=\\\"!$ctrl.proTemplate\\\" class=\\\"copyright\\\" org=\\\"np\\\"></np-copyright>\\n</div>\\n\\n<div ng-if=\\\"$ctrl.bannerLogo != null\\\" ng-class=\\\"$ctrl.bannerLogo.css_class\\\">\\n  <img\\n    ng-if=\\\"$ctrl.bannerLogo.src\\\"\\n    ng-src=\\\"{{$ctrl.bannerLogo.src}}\\\"\\n    alt=\\\"{{ctrl.bannerLogo.alt_text}}\\\"/>\\n</div>\\n\";\nvar EpisodeFooterController = /** @class */ (function () {\n    function EpisodeFooterController(appState) {\n        this.appState = appState;\n        //\n    }\n    Object.defineProperty(EpisodeFooterController.prototype, \"proTemplate\", {\n        get: function () {\n            if (this.templateData) {\n                return this.templateData.pro_episode_template;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EpisodeFooterController.prototype, \"bannerLogo\", {\n        get: function () {\n            if (this.templateData && this.templateData.css_configuration != null) {\n                return this.templateData.css_configuration.legacy_banner_logo;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EpisodeFooterController.prototype, \"logos\", {\n        get: function () {\n            if (this.templateData && this.templateData.css_configuration != null) {\n                return this.templateData.css_configuration.legacy_logos;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EpisodeFooterController.prototype.$onChanges = function (changesObj) {\n        var legacyFooterClass = 'branding footer';\n        var proFooterClass = 'professional__branding';\n        if (!changesObj.templateData.isFirstChange()) {\n            if (this.templateData.pro_episode_template) {\n                this.brandingDivClass = proFooterClass;\n            }\n            else {\n                this.brandingDivClass = legacyFooterClass;\n            }\n        }\n    };\n    EpisodeFooterController.$inject = ['appState'];\n    return EpisodeFooterController;\n}());\nvar EpisodeFooter = /** @class */ (function () {\n    function EpisodeFooter() {\n        this.bindings = {\n            templateData: '<'\n        };\n        this.template = npEpisodeFooter_TEMPLATE;\n        this.controller = EpisodeFooterController;\n    }\n    EpisodeFooter.Name = 'npEpisodeFooter'; // tslint:disable-line\n    return EpisodeFooter;\n}());\n\n\n// CONCATENATED MODULE: ./app/episode/episode.module.ts\n\n\n\n\n\n\n\nvar npEpisodeModule = angular.module('npEpisode', []);\nvar services = [\n    episodeTheme_service_EpisodeTheme,\n    episodeEdit_service_EpisodeEditService\n];\nvar components = [\n    EpisodeList,\n    Copyright,\n    EpisodeFooter\n];\nservices.forEach(function (service) {\n    npEpisodeModule.service(service.Name, service);\n});\ncomponents.forEach(function (cmp) {\n    npEpisodeModule.component(cmp.Name, new cmp);\n});\nnpEpisodeModule\n    .directive('ittEpisode', ittEpisode)\n    .directive('ittEpisodeEditor', ittEpisodeEditor);\n/* harmony default export */ var episode_module = (npEpisodeModule);\n\n// CONCATENATED MODULE: ./app/scripts/app.ts\n\n// Declare the top level application module and its dependencies\n/**\n * @ngdoc interface\n * @name iTT\n * @description\n * The default namespace / angular module which houses the rest of the application code.\n * Officially titled as 'com.inthetelling.story' but iTT seems a little less verbose\n * @requires ngRoute\n * @requires ngAnimate\n * @requires ngSanitize\n * @requires textAngular\n */\nvar templates = __webpack_require__(\"ZcPu\");\nvar componentTemplates = __webpack_require__(\"Ogf/\");\nvar viewModeTemplates = __webpack_require__(\"bKzE\");\n[templates, componentTemplates, viewModeTemplates].forEach(function (templateSource) {\n    templateSource.keys().forEach(function (path) { return templateSource(path); });\n});\n\n\n\n\n\n\n//text angular\n\n\n\n\n\n//end text angular\n\n\n\n\n\n\nvar itt = angular.module('iTT', [\n    'ngRoute',\n    'ngAnimate',\n    'ngSanitize',\n    'textAngular',\n    'ui.tree',\n    '720kb.socialshare',\n    'npEpisode',\n    'itt.controllers',\n    'itt.filters',\n    'itt.services',\n    'itt.directives'\n])\n    .constant('MIMES', {\n    'assetLib': 'image/*,text/plain,application/pdf,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,text/rtf',\n    'file': 'text/plain,application/pdf,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,text/rtf',\n    'default': 'image/*',\n    'transcripts': 'text/vtt,text/srt'\n})\n    .constant('PLAYERSTATES', {\n    '-1': 'unstarted',\n    '0': 'ended',\n    '1': 'playing',\n    '2': 'paused',\n    '3': 'buffering',\n    '5': 'video cued',\n    '4': 'quality changed',\n    '6': 'player ready'\n})\n    .constant('PLAYERSTATES_WORD', {\n    'unstarted': '-1',\n    'ended': '0',\n    'playing': '1',\n    'paused': '2',\n    'buffering': '3',\n    'quality changed': '4',\n    'video cued': '5',\n    'player ready': '6'\n})\n    .config(['$routeProvider', routerConfig])\n    .config(['$sceDelegateProvider', xDomainConfig])\n    .config(['$httpProvider', authInterceptorConfig])\n    .config(['$provide', textAngularConfig])\n    .config(['$compileProvider', debugInfoConfig])\n    .run(['$rootScope', 'errorSvc', runFunction]);\nfunction routerConfig($routeProvider) {\n    $routeProvider\n        .when('/', {\n        title: 'Narrative Producer',\n        templateUrl: 'templates/root.html'\n    })\n        .when('/auth', {\n        templateUrl: 'templates/auth.html',\n        reloadOnSearch: false\n    })\n        .when('/account', {\n        template: [\n            '<div class=\"standaloneAncillaryPage\">',\n            '\t<np-nav on-logout=\"logout()\"></np-nav>',\n            '\t<h1>My Account</h1>',\n            '\t<div itt-user></div>',\n            '</div>'\n        ].join(''),\n        controller: ['$scope', 'authSvc', function ($scope, authSvc) {\n                $scope.logout = authSvc.logout;\n            }]\n    })\n        .when('/stories', {\n        title: 'Available Narratives',\n        template: \"<np-narratives-container></np-narratives-container>\"\n    })\n        .when('/story/:narrativePath', {\n        title: 'Narrative',\n        template: \"<np-narrative-container></np-narrative-container>\"\n    })\n        .when('/story/:narrativePath/:timelinePath', {\n        template: '<div itt-narrative-timeline></div>',\n        resolve: {\n            product: ['appState', function (appState) {\n                    appState.init();\n                    appState.product = 'player';\n                    appState.productLoadedAs = 'narrative';\n                }]\n        }\n    })\n        .when('/projects', {\n        title: 'Available projects',\n        template: '<np-projects-container></np-projects-container>'\n    })\n        .when('/episode/:epId', {\n        title: 'Narrative Producer',\n        template: '<itt-player-container></itt-player-container>',\n        resolve: {\n            product: ['appState', function (appState) {\n                    appState.init();\n                    appState.product = 'player';\n                    appState.productLoadedAs = 'player';\n                }]\n        }\n    })\n        .when('/episode/:epId/:viewMode', {\n        title: 'Narrative Producer',\n        template: '<itt-player-container></itt-player-container>',\n        resolve: {\n            product: ['appState', function (appState) {\n                    appState.init();\n                    appState.product = 'player';\n                    appState.productLoadedAs = 'player';\n                }]\n        }\n    })\n        .when('/sxs/:epId', {\n        title: 'Narrative Producer',\n        template: '<itt-player-container></itt-player-container>',\n        resolve: {\n            product: ['appState', function (appState) {\n                    appState.init();\n                    appState.product = 'sxs';\n                    appState.productLoadedAs = 'sxs';\n                }]\n        }\n    })\n        .when('/editor/:epId', {\n        title: 'Narrative Producer',\n        template: '<itt-player-container></itt-player-container>',\n        resolve: {\n            product: ['appState', function (appState) {\n                    appState.init();\n                    appState.product = 'sxs';\n                    appState.productLoadedAs = 'sxs';\n                }]\n        }\n    })\n        .when('/producer/:epId', {\n        title: 'Narrative Producer',\n        template: '<itt-player-container></itt-player-container>',\n        resolve: {\n            product: ['$route', 'appState', function ($route, appState) {\n                    appState.init();\n                    appState.episodeId = appState.episodeId = $route.current.params.epId;\n                    appState.product = 'producer';\n                    appState.productLoadedAs = 'producer';\n                }]\n        }\n    })\n        .when('/assets/:containerId', {\n        title: 'Container Assets test',\n        controller: 'ContainerAssetsTestController',\n        template: [\n            '<div class=\"standaloneAncillaryPage\">',\n            '\t<np-nav on-logout=\"logout()\"></np-nav>',\n            '\t<div>',\n            '\t\t<sxs-container-assets container-id=\"{{containerId}}\" mime-key=\"assetLib\"></sxs-container-assets>',\n            '\t</div>',\n            '</div>'\n        ].join(''),\n        resolve: {\n            authEffects: ['authSvc', function (authSvc) {\n                    //to ensure that canAccess is properly set.\n                    return authSvc.authenticate().then(angular.noop);\n                }]\n        }\n    })\n        .otherwise({\n        title: 'Narrative Producer: Error',\n        controller: 'ErrorController',\n        templateUrl: 'templates/error-404.html'\n    });\n    //$locationProvider.html5Mode(false); // TODO we had trouble getting the server config working for this... thought we had it but IE still choked\n}\nfunction xDomainConfig($sceDelegateProvider) {\n    $sceDelegateProvider.resourceUrlWhitelist([\n        'self',\n        /.*/,\n        /^http(s)?:\\/\\/platformuniv-p.edgesuite.net/,\n        /^http(s)?:\\/\\/themes.googleusercontent.com/\n    ]);\n}\nfunction authInterceptorConfig($httpProvider) {\n    $httpProvider.defaults.useXDomain = true;\n    $httpProvider.defaults.withCredentials = true;\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\n    $httpProvider.interceptors.push(['$q', 'errorSvc', function ($q, errorSvc) {\n            return {\n                'responseError': function (rejection) {\n                    if (rejection.data && rejection.data.path_slug) {\n                        return $q(function (resolve, reject) {\n                            return reject(rejection);\n                        });\n                    }\n                    errorSvc.error(rejection);\n                    return $q.reject(rejection);\n                }\n            };\n        }]);\n}\nfunction textAngularConfig($provide) {\n    $provide.decorator('taOptions', ['taRegisterTool', '$delegate', function (taRegisterTool, taOptions) {\n            taOptions.defaultFileDropHandler = function (a, b) {\n            }; //jshint ignore:line\n            taOptions.toolbar = [\n                ['h1', 'h2', 'h3'],\n                ['bold', 'italics', 'underline', 'strikeThrough'],\n                ['ul', 'ol'],\n                ['undo', 'redo', 'clear']\n                // ['bold', 'italics', 'underline', 'strikeThrough', 'ul', 'ol', 'redo', 'undo', 'clear'],\n                // ['justifyLeft','justifyCenter','justifyRight','indent','outdent'],\n                // ['html', 'insertImage', 'insertLink', 'insertVideo', 'wordcount', 'charcount']\n            ];\n            return taOptions;\n        }]);\n}\nfunction debugInfoConfig($compileProvider) {\n    var isDev = false;\n    var currentHost = window.location.hostname;\n    if (currentHost.indexOf('localhost') === 0 ||\n        currentHost.indexOf('api-dev') === 0 ||\n        currentHost.indexOf('np-dev') === 0) {\n        isDev = true;\n    }\n    if (isDev === false) {\n        $compileProvider.debugInfoEnabled(false);\n    }\n}\nfunction runFunction($rootScope, errorSvc) {\n    $rootScope.$on('$routeChangeSuccess', function (event, currentRoute) {\n        document.title = currentRoute.title ? currentRoute.title : 'Narrative Producer';\n        errorSvc.init(); // clear display of any errors from the previous route\n    });\n    // globally emit rootscope event for certain keypresses:\n    var fhotkb = false; // user's forehead is not on the keyboard\n    $(document).on('keydown', function (e) {\n        if (fhotkb ||\n            document.activeElement.tagName === 'INPUT' ||\n            document.activeElement.tagName === 'TEXTAREA' ||\n            document.activeElement.attributes.contenteditable) {\n            return;\n        }\n        fhotkb = true;\n        if (e.keyCode === 27) {\n            $rootScope.$emit('userKeypress.ESC');\n            e.preventDefault();\n        }\n        if (e.which === 32) {\n            $rootScope.$emit('userKeypress.SPACE');\n            e.preventDefault();\n        }\n    });\n    $(document).on('keyup', function () {\n        fhotkb = false; // oh good they've woken up\n    });\n}\n\n\n/***/ }),\n\n/***/ \"mNIM\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/scene/debug.html';\nvar html = \" <pre>{{scene | pretty}}</pre>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"mbIM\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/scene/centered.html';\nvar html = \"<div class=\\\"scene centered\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=col> <div itt-magnet class=videoMagnet> <img src=\" + __webpack_require__(\"rXKF\") + \"> </div> <div class=\\\"pane mainPane\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainBgItems| isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: (contentItems | isCurrent).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: contentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in (contentItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"mrOr\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'view-modes/review-mode/reviewmode.html';\nvar html = \"<div ng-show=\\\"appState.viewMode == 'review'\\\" class=searchMode> <div itt-magnet id=searchVideoMagnet class=videoMagnet> <img src=\" + __webpack_require__(\"rXKF\") + \"> </div> <div itt-search-panel></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"nd4G\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/item/usc-badges-inner.html';\nvar html = \"<span> <img style=max-width:5em;float:left;margin-right:.5em ng-src={{plugin.credlyImageUrl}}> <b>{{plugin.achievement}}</b> <span ng-if=plugin.eligibleForBadges> <p>Complete the following requirements to earn a <a ng-href=https://credly.com/recipients/{{plugin.credlyBadgeId}} target=_blank>USC Scholar's Badge</a>:</p> <div style=\\\"clear:both;margin:1em 1.2em;font-size:90%\\\"> <div ng-repeat=\\\"req in plugin.requirements\\\"> <img ng-if=req.achieved style=width:1em;height:1em;margin-left:-1.2em src=\" + __webpack_require__(\"6/Qv\") + \"> <img ng-if=!req.achieved style=width:1em;height:1em;margin-left:-1.2em src=\" + __webpack_require__(\"FUk5\") + \"> <span style=\\\"\\\">{{req.name}}</span> </div> </div> <p ng-if=\\\"plugin.totalAchieved != plugin.requirements.length\\\"> You have completed {{plugin.totalAchieved}} of {{plugin.requirements.length}} parts of this achievement. </p> <div ng-if=\\\"plugin.totalAchieved == plugin.requirements.length && !plugin.gotBadge\\\"> <p>Congratulations! You are eligible for a USC Scholar’s Badge. Enter your email address to claim it:</p> <input type=text ng-model=plugin.userEmail> <input type=button value=Go ng-click=badger()> <span ng-if=plugin.gettingBadge> <small>Getting your badge...</small> </span> <div ng-if=plugin.error> <small>We're sorry, there was an error retrieving your badge. Please try again later.</small> </div> </div> <div ng-if=plugin.gotBadge> Your badge is in the mail. <span ng-if=plugin.alreadyHadBadge>(It looks like you've already acquired this badge; you might want to check your spam folder for an email from credly.com.)</span> </div> </span> <span ng-if=!plugin.eligibleForBadges> <p>We're sorry, guest users are not eligibile for USC Scholar's Badges.</p> </span> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"p2SB\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/item.html';\nvar html = \"<div class=\\\"itemEdit authoringForm\\\"> <form name=ittItemForm class=doValidate> <div ng-if=\\\"appState.product == 'sxs'\\\" class=authoringFormScrollContainer> <itt-time-field></itt-time-field> <div ng-include=itemEditor></div> </div> <div ng-if=\\\"appState.product == 'producer'\\\"> <div itt-tabs class=ittTabs> <div itt-tab class=ittTab ng-if=\\\"selectService.showTab(item.producerItemType, 'Item')\\\" title=\\\"{{item.producerItemType | capitalize}}\\\"> <label ng-if=\\\"languages.length > 1\\\" style=float:right;padding-right:24px for=itemLangSelect>Current Language <select id=itemLangSelect size=1 ng-model=appState.lang ng-change=forcePreview() ng-options=\\\"language.code as ('['+language.code.toUpperCase()+']') for language in languages\\\"> </select> </label> <div ng-switch on=item.producerItemType> <div ng-switch-when=link> <itt-time-field></itt-time-field> <itt-title-field do-validate=true data=item itt-item-form=ittItemForm></itt-title-field> <np-url-field data=item itt-item-form=ittItemForm></np-url-field> <itt-description-field data=item></itt-description-field> <np-template-select data=item item-form=itemForm></np-template-select> <itt-image-field></itt-image-field> <np-flags data=item template-url={{item.templateUrl}} item-form=itemForm flags=\\\"['required', 'stop', 'cosmetic']\\\"></np-flags> </div> <div ng-switch-when=transcript> <itt-time-field></itt-time-field> <itt-speaker-field></itt-speaker-field> <itt-transcript-field data=item itt-item-form=ittItemForm></itt-transcript-field> <itt-speaker-thumb-field></itt-speaker-thumb-field> </div> <div ng-switch-when=annotation> <itt-time-field></itt-time-field> <itt-title-field data=item></itt-title-field> <itt-annotation-field data=item itt-item-form=ittItemForm></itt-annotation-field> <np-template-select data=item item-form=itemForm></np-template-select> <itt-speaker-field></itt-speaker-field> <np-flags data=item template-url={{item.templateUrl}} item-form=itemForm flags=\\\"['stop', 'cosmetic', 'chapter_marker', 'invertColor']\\\"></np-flags> </div> <div ng-switch-when=file> <itt-time-field></itt-time-field> <itt-title-field do-validate=true data=item itt-item-form=ittItemForm></itt-title-field> <itt-file-field></itt-file-field> <itt-description-field data=item></itt-description-field> <np-flags data=item template-url={{item.templateUrl}} item-form=itemForm flags=\\\"['required', 'stop', 'cosmetic']\\\"></np-flags> </div> <div ng-switch-when=image> <itt-time-field></itt-time-field> <itt-title-field do-validate=true data=item itt-item-form=ittItemForm></itt-title-field> <itt-image-field></itt-image-field> <itt-description-field data=item></itt-description-field> <np-template-select data=item item-form=itemForm></np-template-select> <itt-display-select data=item item-form=itemForm></itt-display-select> <np-flags data=item template-url={{item.templateUrl}} item-form=itemForm flags=\\\"['required', 'stop', 'cosmetic']\\\"></np-flags> </div> <div ng-switch-when=question> <span class=\\\"eventIcon icon-question\\\"></span> <itt-time-field></itt-time-field> <itt-title-field do-validate=true data=item itt-item-form=ittItemForm></itt-title-field> <itt-question-text-field data=item do-validate=false itt-item-form=ittItemForm></itt-question-text-field> <itt-question-type-select data=item></itt-question-type-select> <itt-image-field></itt-image-field> <itt-question-options></itt-question-options> </div> <div ng-switch-when=chapter> <itt-time-field></itt-time-field> <itt-title-field do-validate=true data=item itt-item-form=ittItemForm></itt-title-field> <itt-description-field data=item></itt-description-field> </div> <div ng-switch-when=video> <h4>{{item.producerItemType}}</h4> </div> <div ng-switch-default> <h4>Default!</h4> </div> </div> </div> <div itt-tab class=ittTab ng-if=\\\"selectService.showTab(item.producerItemType, 'Style')\\\" title=\\\"{{item.producerItemType === 'scene' ? 'Layout' : 'Style'}}\\\"> <div ng-switch on=item.producerItemType> <div ng-switch-when=link> <itt-display-select></itt-display-select> </div> <div ng-switch-when=transcript> <np-template-select data=item item-form=itemForm></np-template-select> </div> <div ng-switch-when=annotation> <itt-display-select></itt-display-select> </div> <div ng-switch-when=scene> <itt-time-field></itt-time-field> <np-template-select data=item item-form=itemForm></np-template-select> <itt-video-position-select data=item></itt-video-position-select> <itt-display-select data=item></itt-display-select> </div> <div ng-switch-when=question> <np-template-select data=item item-form=itemForm></np-template-select> <itt-display-select data=item item-form=itemForm></itt-display-select> <np-flags data=item template-url={{item.templateUrl}} item-form=itemForm flags=\\\"['required', 'stop', 'cosmetic']\\\"></np-flags> </div> <div ng-switch-when=chapter> <h4>{{item.producerItemType}}</h4> </div> <div ng-switch-when=video> <h4>{{item.producerItemType}}</h4> </div> <div ng-switch-default> <h4>Default!</h4> </div> </div> </div> <div itt-tab class=ittTab ng-if=\\\"selectService.showTab(item.producerItemType, 'Customize')\\\" title=Customize> <div ng-switch on=item.producerItemType> <div ng-switch-when=link> <itt-typography-select></itt-typography-select> <itt-color-select></itt-color-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> <div ng-switch-when=transcript> <itt-typography-select></itt-typography-select> <itt-color-select></itt-color-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> <div ng-switch-when=annotation> <itt-typography-select></itt-typography-select> <itt-color-select></itt-color-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> <div ng-switch-when=scene> <itt-typography-select></itt-typography-select> <itt-color-select></itt-color-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> <div ng-switch-when=file> <itt-typography-select></itt-typography-select> <itt-color-select></itt-color-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> <div ng-switch-when=image> <itt-typography-select></itt-typography-select> <itt-color-select></itt-color-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> <div ng-switch-when=question> <itt-typography-select></itt-typography-select> <itt-color-select></itt-color-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> <div ng-switch-when=chapter> <h4>{{item.producerItemType}}</h4> </div> <div ng-switch-when=video> <h4>{{item.producerItemType}}</h4> </div> <div ng-switch-default> <h4>Default!</h4> </div> </div> </div> </div> </div> <div class=ittTabFoot> <a ng-click=cancelEdit()>Cancel</a> &nbsp; &nbsp; <button ng-if=\\\"\\n\\t\\t\\titem._id != 'internal:editing' &&\\n\\t\\t\\t!(item._type == 'Scene' && item.start_time <= 0.01)\\n\\t\\t\\\" ng-click=deleteEvent(item._id)>Delete </button> <button ng-click=saveEvent() ng-disabled=\\\"blockDoubleClicks || ittItemForm.$invalid\\\">Save</button> </div> </form> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"p3P+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/player.html';\nvar html = \"<div class=ios-iframe-overlay ng-if=showIframeIOSOverlay ng-click=iframeIOSOverlayHandler()></div> <div ng-class=\\\"{\\n\\tisTouchDevice: appState.isTouchDevice,\\n\\tisFramed: appState.isFramed,\\n\\tisProducer: (appState.product == 'producer'),\\n\\tisSxS: (appState.product == 'sxs'),\\n\\n\\tcanEditContent: (!appState.editEvent && !appState.editEpisode) && (appState.product == 'producer' || appState.product == 'sxs')\\n\\t}\\\"> <div class=player> <itt-toolbar-story></itt-toolbar-story> <np-loading ng-if=loading></np-loading> <div ng-show=!loading itt-episode ng-class=\\\"{\\n\\t\\tpadForEditing: appState.editEvent || appState.editEpisode,\\n\\t\\tshowBackgroundOnly: appState.producerEditLayer < 0,\\n\\t\\tshowForegroundOnly: appState.producerEditLayer > 0,\\n\\t}\\\"></div> <div class=toolbar-bottom itt-show-hide-visual-only=appState.videoControlsActive ng-mouseenter=showControls(); ng-click=showControls(); ng-mouseleave=allowControlsExit()> <div class=toolbar-bottom-fill> <div ng-show=\\\"appState.editEvent || appState.editEpisode\\\" class=\\\"navPanel editPanel\\\"> <div ng-if=appState.editEvent itt-item-editor=appState.editEvent></div> <div ng-if=appState.editEpisode itt-episode-editor=appState.editEpisode></div> </div> <div itt-timeline></div> </div> </div> <div class=toolbar-bottom-controltrigger ng-mouseenter=showControls(); ng-click=showControls(); ng-focus=showControls()></div> </div> <div class=\\\"animate transitionFade\\\" ng-if=\\\"appState.videoControlsActive && (appState.product == 'sxs' || appState.product == 'producer')\\\" ng-mouseenter=showControls(); ng-click=showControls(); ng-focus=showControls() sxs-add-content></div> <div class=autoscroll ng-if=\\\"appState.autoscroll && appState.autoscrollBlocked\\\" ng-click=enableAutoscroll()> <img src=\" + __webpack_require__(\"WeeJ\") + \" width=32 height=32> </div> <div ng-show=show.navPanel class=modal-backdrop ng-click=\\\"hidePanel('navPanel')\\\"></div> <div ng-show=show.profilePanel class=modal-backdrop ng-click=\\\"hidePanel('profilePanel')\\\"></div> <div ng-show=appState.itemDetail class=modal-backdrop ng-click=\\\"appState.itemDetail=false\\\"></div> <div ng-if=appState.itemDetail itt-item-detail-modal=appState.itemDetail></div> <div ng-if=show.profilePanel> <np-modal modal-class=account__modal wrapper-class=account__modal--wrapper> <button ng-hide=\\\"appState.isFramed ||  !(userHasRole('admin') || userHasRole('customer admin'))\\\" class=button ng-click=\\\"editInfo = !editInfo\\\">{{editInfo ? 'Done Editing' : 'Edit Profile'}}</button> <a class=button ng-click=\\\"show.profilePanel = false\\\">close</a> <np-nav ng-if=\\\"!editInfo && ((userHasRole('admin') || userHasRole('customer admin')) && !appState.isFramed)\\\" on-logout=$parent.logout() in-player=true></np-nav> <div ng-if=\\\"editInfo || appState.isFramed ||  !(userHasRole('admin') || userHasRole('customer admin'))\\\"> <div itt-user></div> </div> </np-modal> </div> <div ng-cloak ng-if=\\\"show.wileyNag &&  (appState.productLoadedAs == 'player'\\n\\t \\t\\t\\t|| (appState.productLoadedAs == 'narrative'\\n\\t \\t\\t\\t&& !narrative.disable_new_window ) )\\\" class=\\\"wileyNag animate transitionFade\\\"> <div> <span style=float:right>⤴</span> <span style=float:right;display:inline-block;padding:5px>Go here for best view</span> </div> <a class=goAway ng-click=noWileyNag()>Don't show this again</a> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"phYv\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/review-transmedia.html';\nvar html = \"<span ng-class=\\\"{isCosmetic: item.cosmetic}\\\"> <div ng-if=item.sxs ng-include=item.templateUrl></div> <span ng-if=!item.sxs> <span ng-if=\\\"item.layouts[0] == 'windowFg'\\\" ng-include=\\\"'templates/item/review-windowfg.html'\\\"></span> <span ng-if=\\\"item.layouts[0] != 'windowFg'\\\"> <div ng-if=item.data._pluginType ng-include=item.templateUrl></div> <span ng-if=!item.data._pluginType> <a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button tabindex=0 class=\\\"startTime displayTime\\\" aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <span ng-if=\\\"item._type == 'Annotation'\\\"> <div class=text> <div class=title> <div ng-if=item.display_annotator class=authorName ng-bind-html=item.display_annotator></div> <div ng-if=item.display_title class=authorName ng-bind-html=item.display_title></div> </div> <div ng-bind-html=item.display_annotation></div> </div> </span> <span ng-if=\\\"item._type != 'Annotation'\\\"> <div class=text> <div class=title> <a tabindex=0 ng-if=handleOutgoingLinkDisplay() class=\\\"fakeLink escapelink\\\" ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> <a tabindex=0 role=button class=fakeLink ng-if=!handleOutgoingLinkDisplay() x-ng-keypress=toggleDetailOnKeyPress($event) ng-click=toggleDetailView() ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\" aria-label=\\\"Toggle detail display of {{item.display_title}}\\\"></a> </div> <div ng-bind-html=item.display_description></div> </div> <div class=itemDetail ng-if=\\\"item.showInlineDetail && item._type == 'Link'\\\"> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) class=escapelink>(new window)</a> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </div> <div class=itemDetail ng-if=\\\"item.showInlineDetail && item._type != 'Link'\\\"> <div class=touchable style=position:relative> <img ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> </div> </span> </div> </span> </span> </span> <div class=clear></div> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"q06B\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/sxs-video.html';\nvar html = \"<div class=\\\"itemTemplate sxs-item\\\"> <a class=edit-event ng-click=editItem() ng-if=item.editableByThisUser>[Edit]</a> <div class=avatar> <img ng-src=\\\"{{item.avatar.url || appState.noAvatar }}\\\"> </div> <div class=itemHead> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <div class=text> <div class=title ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <a class=escapelink ng-click=outgoingLink(item.url)>New window</a> <div ng-if=!handleOutgoingLinkDisplay()> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <div class=sxs-video> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"qZRx\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/scene/centeredPro.html';\nvar html = \"<div class=\\\"scene centered-pro\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div itt-item=item class=\\\"item animate banner-pull-quote\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" ng-repeat=\\\"item in (contentItems | isCurrent | filter:{templateUrl: 'templates/item/text-h1.html'} )\\\"> </div> <div class=col> <div itt-magnet class=videoMagnet> <img src=\" + __webpack_require__(\"rXKF\") + \"> </div> <div class=\\\"pane mainPane\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainBgItems| isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: (contentItems | isCurrent).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: contentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in (contentItems | isCurrent | filter:centeredProTransmedia  )\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"qpRi\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/image-linkonly.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=category> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=text> <div class=title> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.asset.url,$event) ng-click=outgoingLink(item.asset.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <div class=text ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"rFfA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"images/Narrasys_Banner.02a409f34b80c72134169a171c9c8852.svg\";\n\n/***/ }),\n\n/***/ \"rGHM\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/item/sxs-link.html';\nvar html = \"<span class=\\\"eventIcon icon-link\\\"></span> <itt-title-field do-validate=false data=item itt-item-form=ittItemForm></itt-title-field> <np-url-field data=item context=editor itt-item-form=ittItemForm></np-url-field> <itt-description-field data=item></itt-description-field> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"rLXe\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/producer/container-assets.html';\nvar html = \"<div ng-if=$ctrl.showParent> <sxs-container-assets container-id={{$ctrl.container.parent_id}}></sxs-container-assets> </div> <div class=containerAssets> <div ng-if=\\\"$ctrl.appState.product != 'sxs' && $ctrl.container.parent_id && !$ctrl.showParent\\\"> <a class=goUp ng-click=$ctrl.up()>Parent container</a> </div> <div class=title>{{$ctrl.container.display_name}} - Asset Library </div> <div class=controls> <a ng-click=$ctrl.toggleImages()> <span ng-if=$ctrl.onlyImages>Images</span> <span ng-if=!$ctrl.onlyImages>All</span> </a> &nbsp; <a ng-click=$ctrl.toggleGrid()> <span ng-if=$ctrl.gridView>▦</span> <span ng-if=!$ctrl.gridView>☰</span> </a> </div> <div class=scrollPane ng-if=!$ctrl.hideItems> <div ng-if=$ctrl.gridView> <div class=grid ng-repeat=\\\"asset in $ctrl.isCustAdmin ? ($ctrl.assets | vidsFromCustAdmins) : $ctrl.assets\\\" ng-if=\\\"asset.container_id == $ctrl.containerId && !($ctrl.onlyImages && asset._type != 'Asset::Image')\\\" ng-click=$ctrl.assetClick(asset._id)> <div ng-if=\\\"asset._type == 'Asset::Image'\\\"> <img class=thumbnail ng-src={{asset.url}}> </div> <div ng-if=\\\"asset._type != 'Asset::Image'\\\"> <div class=thumbnail>{{asset._type}}</div> </div> {{asset.display_name}} <span ng-if=asset.tags[0]> - {{asset.tags[0] | tagName}}</span> </div> </div> <table ng-if=!$ctrl.gridView> <tr ng-repeat=\\\"asset in $ctrl.isCustAdmin ? ($ctrl.assets | vidsFromCustAdmins) : $ctrl.assets\\\" ng-if=\\\"asset.container_id == $ctrl.containerId && !($ctrl.onlyImages && asset._type != 'Asset::Image')\\\" ng-click=$ctrl.assetClick(asset._id)> <td> <div ng-if=\\\"asset._type == 'Asset::Image'\\\"> <img class=thumbnail ng-src={{asset.url}}> </div> </td> <td>{{asset.size |asBytes}}</td> <td>{{asset.content_type}}</td> <td> {{asset.display_name}} </td> <td ng-if=asset.tags[0]>{{asset.tags[0] | tagName}}</td> <td class=delete-button__container> <np-tooltip tip-text=\\\"Delete Asset\\\"> <a ng-click=\\\"$ctrl.requestDeleteAsset(asset, $event)\\\" class=delete__button></a> </np-tooltip> </td> </tr> </table> </div> <br> <np-modal class=modal__center-center ng-if=\\\"$ctrl.assetToDelete != null\\\"> <h4>Delete</h4> {{$ctrl.assetToDelete.display_name}}? <div> <button ng-click=$ctrl.deleteAsset($ctrl.assetToDelete._id)>Delete</button> <button ng-click=\\\"$ctrl.assetToDelete = null\\\">cancel</button> </div> </np-modal> <itt-asset-uploader container-id={{$ctrl.container._id}} mime-types={{$ctrl.mimes}} multiple=true ng-if=\\\"$ctrl.canAccess && $ctrl.context !== 'narrative'\\\"> </itt-asset-uploader> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"rXKF\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"images/aspectratiopreserver-16x9.81dd48a755a6e8f01bfc872a4d2ab76a.gif\";\n\n/***/ }),\n\n/***/ \"rdiM\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/image-caption.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"captionContainer touchable\\\"> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> <div class=caption> <div class=\\\"title item__title item__title--image-caption\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div class=\\\"text item__text item__text--image-caption\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"rfeV\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/scene/1col.html';\nvar html = \"<div class=\\\"scene onecol\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div itt-magnet class=videoMagnet ng-class=\\\"{hasLeftSidebar: mainContentHasLeftSidebar, hasRightSidebar: mainContentHasRightSidebar}\\\"> <img src=\" + __webpack_require__(\"rXKF\") + \"> </div> <div class=col> <div class=\\\"pane mainPane\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (mainContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (mainContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: mainContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: mainContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: mainContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in showCurrent ? (contentItems | isCurrent) : contentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"sGzq\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/searchpanel.html';\nvar html = \"<div ng-class=episode.styleCss class=searchPanel__wrapper> <div aria-label=\\\"sort toggle\\\" class=searchfilters aria-controls=sortableSearch> <div> Sorted by <button tabindex=0 class=\\\"fakeLink fake-link--search-results\\\" ng-click=toggleSortBy(sortBy) aria-label=\\\"toggles sort to {{getToggledValue(sortBy)}}\\\">{{getFriendlySortText(sortBy)}}</button> </div> </div> <div class=scrollContainer> <div class=\\\"searchResults content\\\" id=sortableSearch itt-width-watch ng-class=\\\"{isNarrow: isNarrow}\\\"> <div ng-if=\\\"sortBy == 'startTime'\\\" class=sortByTime> <h1 ng-bind-html=episode.display_title></h1> <div ng-repeat=\\\"scene in episode.scenes\\\"> <span ng-switch=appState.product> <div ng-switch-when=producer ng-repeat=\\\"item in scene.items\\\" ng-show=\\\"([item.searchableText] | filter:appState.searchText).length\\\" class=\\\"item animate\\\" ng-class=item.state itt-item=item forcetemplate=searchresults-all> </div> <div ng-switch-default ng-repeat=\\\"item in scene.items | filter: {cosmetic: false }\\\" ng-show=\\\"([item.searchableText] | filter:appState.searchText).length\\\" class=\\\"item animate\\\" ng-class=item.state itt-item=item forcetemplate=searchresults-all> </div> </span> </div> </div> <div ng-if=\\\"sortBy == 'type'\\\" class=sortByType> <div ng-repeat=\\\"category in typeCategories\\\"> <h3 ng-if=\\\"matchedItems.length > 0\\\" ng-bind-html=showTypes[category].name></h3> <div class=\\\"item animate\\\" ng-repeat=\\\"item in matchedItems=(showTypes[category].items | orderBy:'start_time')\\\" ng-show=\\\"([item.searchableText] | filter:appState.searchText).length\\\" ng-class=item.state itt-item=item forcetemplate=searchresults-all> </div> </div> <div ng-if=\\\"(episode.items | filter:{'searchableText': appState.searchText||'', 'cosmetic': false}).length == 0\\\"> (Nothing matched your search.) </div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"teY+\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"images/Narrasys_Logo.df561103178efc6ff2c87d7f47387f90.png\";\n\n/***/ }),\n\n/***/ \"uFtN\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar path = 'templates/scene/pip.html';\nvar html = \"<div class=\\\"scene pip\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=\\\"pane altPane stretchToViewport\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in (altBgItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (altContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (altContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: altContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: altContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: altContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in showCurrent ? (altContentItems | isCurrent) : altContentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in (altFgItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> <div ng-class=\\\"{padForBottomToolbar: appState.videoControlsActive}\\\"> <div class=videoPositioner> <div itt-magnet class=videoMagnet> <img src=\" + __webpack_require__(\"rXKF\") + \"> </div> </div> <div class=\\\"pane mainPane\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in (mainBgItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer showCurrent\\\" ng-class=\\\"{\\n\\t\\t\\t\\thasLeftSidebar: mainContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: mainContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: mainContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainContentItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> </div> <div class=clear></div> </div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"un+J\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/link-withimage-notitle.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text\\\"> <span ng-if=handleOutgoingLinkDisplay()> <span ng-if=!item.targetTop> <a tabindex=0 ng-if=item.asset.url x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)> <img ng-src={{item.asset.url}} class=img--link-with-image-no-title> </a> </span> <span ng-if=item.targetTop> <a tabindex=0 target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)> <img ng-src={{item.asset.url}} class=img--link-with-image-no-title> </a> </span> </span> <span ng-if=!handleOutgoingLinkDisplay()> <img ng-click=toggleDetailView() ng-src={{item.asset.url}} class=img--link-with-image-no-title> </span> <div class=\\\"item__text item__text--link text--link-with-image\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> </div> <div class=itemDetail ng-if=item.showInlineDetail> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) class=\\\"escapelink item__link--escape-link escape-link--link-with-image\\\">(new window)</a> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </div> <div class=clear></div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"vjhS\":\n/***/ (function(module, exports) {\n\nvar path = 'view-modes/discover-mode/discovermode.html';\nvar html = \"<div class=discoverMode ng-if=\\\"appState.viewMode == 'discover'\\\"> <div class=\\\"fill windowBg bgLayer\\\"> <div ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item class=\\\"item animate\\\" ng-repeat=\\\"item in scene.items | isCurrent | itemLayout:'windowBg'\\\"> </div> </div> <div itt-scene=scene episode=episode class=scene__container></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"vxq4\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/sxs-image.html';\nvar html = \"<div class=\\\"itemTemplate sxs-item\\\"> <a class=edit-event ng-click=editItem() ng-if=item.editableByThisUser>[Edit]</a> <div class=avatar> <img ng-src=\\\"{{item.avatar.url || '/images/no-avatar.gif'}}\\\"> </div> <div class=itemHead> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <div> <b ng-bind-html=item.title.en></b> <p style=text-align:center> </p><div ng-if=item.asset.url class=touchable> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> <p></p> </div> <div class=text ng-bind-html=item.description.en></div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"w2z7\":\n/***/ (function(module, exports) {\n\nvar config = {\n\t// Fill this in only if you need to load data from something other than the current server\n\t// apiDataBaseUrl: 'https://story.inthetelling.com',\n\t// apiDataBaseUrl: 'https://demo.inthetelling.com',\n\t// apiDataBaseUrl: 'https://api-dev.inthetelling.com',\n\t// apiDataBaseUrl: 'https://api-dev-sub.inthetelling.com',\n\n\t// apiDataBaseUrl: 'https://e-literate-tv.inthetelling.com',\n\t// apiDataBaseUrl: 'https://gwsb.inthetelling.com',\n\t// apiDataBaseUrl: 'https://ewb-usa.inthetelling.com',\n\t// apiDataBaseUrl: 'https://purdue.inthetelling.com',\n\t// apiDataBaseUrl: 'https://usc-scholars.inthetelling.com',\n\t// apiDataBaseUrl: 'https://sustainablebizeducation.inthetelling.com',\n\t// apiDataBaseUrl: 'https://columbiabusinessschool.inthetelling.com',\n\t// apiDataBaseUrl: 'https://middlebury.inthetelling.com',\n\n\tlocalStorageKey: \"storyToken\",\n\tyoutube: {\n\t\tdisabled: false,\n\t\ttimeout: 5000,\n\t\t// apikey: 'AIzaSyDBU-E8lrZdKdAJ9XaVva95FuZLYoL-Tb4'\n\t},\n\tdisableAnalytics: false,\n\tdebugInBrowser: false // Set this to false to make karma less noisy.  This setting will have no effect in production builds, which drop all console logs anyway.\n};\n\n\n/***/ }),\n\n/***/ \"w5Vi\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/container.html';\nvar html = \" <div class=container ng-if=$ctrl.container ng-class=\\\"{\\n     hoverIndicator: $ctrl.depth === 3,\\n     isActive: $ctrl.container.isActive,\\n     'container__row--odd': $ctrl.container.evenOdd === false,\\n     'container__row--even': $ctrl.container.evenOdd === true\\n     }\\\" ng-style=\\\"{'text-indent': 1 * $ctrl.depth + 'em' }\\\" ng-if=$ctrl.container._id> <span ng-class=\\\"{\\n\\tisOpen: $ctrl.container.showChildren && $ctrl.depth !== 3,\\n\\tisClosed: !$ctrl.container.showChildren && $ctrl.depth !== 3\\n\\t}\\\" ng-click=$ctrl.onToggleChildren(false)> </span> <np-modal modal-class=narrative__modal ng-if=$ctrl.showNarrativeModal> <np-narrative-editor customers=$ctrl.customers container-info=\\\"{\\n      containerId: $ctrl.container._id,\\n      customerId: $ctrl.container.customer_id,\\n      name: $ctrl.container.name\\n      }\\\" hide-path-slug=::true on-done=$ctrl.toggleNarrativeModal($undo) on-update=$ctrl.postNewNarrative($data)> </np-narrative-editor> <itt-route-loading is-loading=$ctrl.resolvingNarrative></itt-route-loading> </np-modal> <div ng-class=\\\"{hoverIndicator: $ctrl.depth !== 3, isActive: $ctrl.container.isActive && depth !== 3}\\\"> <div ng-if=\\\"$ctrl.depth === 3\\\"> <np-tooltip tip-text={{$ctrl.container.status}} class=published__state ng-style=\\\"$ctrl.container.isActive && { 'top':'17.5px' }\\\" style=text-indent:0> <span ng-class=\\\"{\\n          isPublished: $ctrl.container.status === 'Published',\\n          isUnPublished: $ctrl.container.status !== 'Published'\\n          }\\\"></span> </np-tooltip> </div> <div class=delete-button__container ng-style=\\\"$ctrl.depth != 3 && {'padding-right': '5.5px'}\\\" ng-if=\\\"$ctrl.depth > 0 && $ctrl.container.isActive && !$ctrl.container.editingContainer\\\"> <np-tooltip tip-text=\\\"Delete {{$ctrl.containerType}}?\\\"> <a ng-click=$ctrl.deleteContainer($ctrl.container._id) class=delete__button></a> </np-tooltip> </div> <span ng-if=!$ctrl.container.editingContainer ng-style=\\\"$ctrl.depth === 3 ? {'text-indent': '4em'} : ''\\\"> <np-edit-pencil ng-if=\\\"$ctrl.depth !== 0\\\" can-access=true on-edit=\\\"$ctrl.container.editingContainer = true\\\"> <a ng-click=$ctrl.onToggleChildren(true)>{{$ctrl.container.name.en}}</a> </np-edit-pencil> <a ng-if=\\\"$ctrl.depth === 0\\\" ng-click=$ctrl.onToggleChildren(true)>{{$ctrl.container.name.en}}</a> </span> <div ng-if=\\\"$ctrl.depth === 0\\\"> <div ng-if=!$ctrl.container.addingContainer> <div ng-if=$ctrl.container.isActive class=button__row> <div> <np-tooltip tip-text=\\\"Add Project\\\"> <a class=\\\"icon__button button__add-inverted\\\" ng-click=\\\"$ctrl.container.addingContainer = true\\\"></a> </np-tooltip> <np-tooltip tip-text=\\\"Link Status Report\\\"> <a ng-if=$ctrl.isAdmin class=\\\"icon__button button__link-status\\\" ng-click=$ctrl.getLinkStatusReport($ctrl.container.customer_id)></a> </np-tooltip> </div> </div> </div> <div ng-if=$ctrl.container.addingContainer> <label>Name:&nbsp; <input ng-model=$ctrl.container.newContainerTitle type=text autofocus>&nbsp; </label> <button ng-click=\\\"$ctrl.container.addingContainer = false\\\">Cancel</button> <button ng-disabled=!$ctrl.container.newContainerTitle ng-click=$ctrl.addContainer($ctrl.container)>Add</button> </div> </div> <div ng-if=\\\"$ctrl.depth === 1\\\"> <div ng-if=!$ctrl.container.addingContainer> <div ng-if=$ctrl.container.isActive class=button__row> <div> <np-tooltip tip-text=\\\"Add Module\\\"> <a class=\\\"icon__button button__add-inverted\\\" ng-click=\\\"$ctrl.container.addingContainer = true\\\"></a> </np-tooltip> <np-tooltip tip-text=\\\"Go to assets\\\"> <a class=\\\"icon__button button__assets\\\" ng-href=#/assets/{{$ctrl.container._id}}></a> </np-tooltip> <np-tooltip tip-text=\\\"Generate new narrative\\\"> <a ng-if=$ctrl.canAccess class=\\\"icon__button button__generateNarrative\\\" ng-click=$ctrl.toggleNarrativeModal()></a> </np-tooltip> </div> </div> </div> <div ng-if=$ctrl.container.addingContainer> <label>Name:&nbsp; <input ng-model=$ctrl.container.newContainerTitle type=text autofocus>&nbsp; </label> <button ng-click=\\\"$ctrl.container.addingContainer = false\\\">Cancel</button> <button ng-disabled=!$ctrl.container.newContainerTitle ng-click=$ctrl.addContainer($ctrl.container)>Add</button> </div> </div> <div ng-if=\\\"$ctrl.depth === 2\\\"> <div ng-if=!$ctrl.container.addingContainer> <div ng-if=$ctrl.container.isActive class=button__row> <np-tooltip tip-text=\\\"Add Episode\\\"> <a class=\\\"icon__button button__add-inverted\\\" ng-click=\\\"$ctrl.container.addingContainer = true\\\"></a> </np-tooltip> <np-tooltip tip-text=\\\"Go to assets\\\"> <a class=\\\"icon__button button__assets\\\" ng-href=#/assets/{{$ctrl.container._id}}></a> </np-tooltip> <np-tooltip tip-text=\\\"Generate new narrative\\\"> <a ng-if=$ctrl.canAccess class=\\\"icon__button button__generateNarrative\\\" ng-click=$ctrl.toggleNarrativeModal()></a> </np-tooltip> </div> </div> <div ng-if=$ctrl.container.addingContainer> <label>Name:&nbsp; <input ng-model=$ctrl.container.newContainerTitle type=text autofocus>&nbsp; </label> <button ng-click=\\\"$ctrl.container.addingContainer = false\\\">Cancel</button> <button ng-disabled=!$ctrl.container.newContainerTitle ng-click=$ctrl.addContainer($ctrl.container)>Add</button> </div> </div> <span ng-if=$ctrl.container.editingContainer> <label>Name:&nbsp; <input ng-model=$ctrl.container.newContainerName ng-init=\\\"$ctrl.container.newContainerName = $ctrl.container.name.en\\\" type=text autofocus>&nbsp; </label> <button ng-click=\\\"$ctrl.container.editingContainer = false\\\">Cancel</button> <button ng-disabled=\\\"!$ctrl.container.newContainerName || $ctrl.container.newContainerName == $ctrl.container.name.en\\\" ng-click=$ctrl.renameContainer()>Save</button> </span> </div> <div ng-if=\\\"$ctrl.depth == 3 && $ctrl.container.isActive\\\" class=container style=text-indent:4em> <div class=episode__button-row> <div class=episode__button> <np-tooltip tip-text=\\\"Go to editor\\\"> <a class=\\\"icon__button button__editor\\\" ng-if=$ctrl.isDemoServer href=#/editor/{{$ctrl.container.episodes[0]}}></a> </np-tooltip> <np-tooltip tip-text=\\\"Go to producer\\\"> <a class=\\\"icon__button button__producer\\\" href=#/producer/{{$ctrl.container.episodes[0]}}></a> </np-tooltip> <np-tooltip tip-text=\\\"Go to assets\\\"> <a class=\\\"icon__button button__assets\\\" ng-href=#/assets/{{$ctrl.container._id}}></a> </np-tooltip> <np-tooltip tip-text=\\\"Generate new narrative\\\"> <a ng-if=$ctrl.canAccess class=\\\"icon__button button__generateNarrative\\\" title=\\\"Generate new narrative\\\" ng-click=$ctrl.toggleNarrativeModal()></a> </np-tooltip> </div> </div> </div> <np-container ng-if=\\\"$ctrl.depth < 3 && $ctrl.container.showChildren\\\" ng-repeat=\\\"child in $ctrl.container.children\\\" depth=\\\"$ctrl.depth + 1\\\" container=$ctrl.containers[child._id] containers=$ctrl.modelSvc.containers on-container-remove=\\\"$ctrl.onContainerRemove({ $container })\\\" on-container-click=\\\"$ctrl.onContainerClick({ $container })\\\" on-container-add=\\\"$ctrl.onContainerAdd({ $container })\\\"> </np-container> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"wXer\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/pullquote-noattrib.html';\nvar html = \" <a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=\\\"itemTemplate headerItem\\\"> <div class=category></div> <div class=\\\"pullquote item__text item__text--pullquote\\\" ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> <div class=pullquoteSpeaker ng-if=item.display_annotator> — <span ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></span></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"x+pf\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/player-timeline.html';\nvar html = \"<span> <div ng-if=showPlayer> <itt-player-container></itt-player-container> </div> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ }),\n\n/***/ \"zuiT\":\n/***/ (function(module, exports) {\n\nvar path = 'templates/item/link.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text\\\"> <span ng-if=handleOutgoingLinkDisplay()> <span ng-if=!item.targetTop> <div class=\\\"title item__title item__title--link title--link-with-image\\\"> <a tabindex=0 class=\\\"escapelink item__link--escape-link escape-link--link-with-image\\\" x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <a tabindex=0 ng-if=item.asset.url x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)> <img ng-if=item.asset.url ng-src={{item.asset.url}}> </a> </span> <span ng-if=item.targetTop> <div class=\\\"title item__title item__title--link title--link-with-image\\\"> <a tabindex=0 target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <a tabindex=0 target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)> <img ng-if=item.asset.url ng-src={{item.asset.url}}> </a> </span> </span> <span ng-if=!handleOutgoingLinkDisplay()> <div class=\\\"title item__title item__title--link title--link-with-image\\\"> <a role=button x-ng-keypress=toggleDetailOnKeyPress($event) class=\\\"fakeLink item__link--fake-link\\\" tabindex=0 ng-click=toggleDetailView() ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <img ng-if=item.asset.url ng-click=toggleDetailView() ng-src={{item.asset.url}}> </span> <div class=\\\"item__text item__text--link text--link-with-image\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> </div> <div class=itemDetail ng-if=item.showInlineDetail> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) class=\\\"escapelink item__link--escape-link escape-link--link-with-image\\\">(new window)</a> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </div> <div class=clear></div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n/***/ })\n\n},[\"m2IE\"]);\n\n\n// WEBPACK FOOTER //\n// app.454cfd7c9a5d81cfc41e.min.js","var path = 'templates/item/modal.html';\nvar html = \"<div class=modal ng-style=modalStyle ng-click=dismiss();> <span ng-if=\\\"item._type == 'Link'\\\" ng-click=$event.stopPropagation()> <div class=modalmenu> <a href={{item.url}} target=_blank class=escapelink>(new window)</a> </div> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </span> <span ng-if=\\\"item._type == 'Upload'\\\"> <span ng-switch=\\\"item.asset.content_type.indexOf('image/')\\\"> <span ng-switch-when=-1> <div class=modalmenu> <a href={{item.asset.url}} target=_blank class=escapelink>(new window)</a> </div> <itt-iframe x-src={{item.asset.url}} item=item x-contenttype={{item.asset.content_type}}></itt-iframe> </span> <span ng-switch-default> <div class=modalimage ng-if=\\\"item._type == 'Upload'\\\"> <img ng-src={{item.asset.url}}> </div> </span> </span> </span> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/modal.html\n// module id = +o/S\n// module chunks = 0","module.exports = angular;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 0YuG\n// module chunks = 0","var path = 'templates/item/question-mc-inner.html';\nvar html = \"<div class=\\\"question item__text\\\"> <p ng-bind-html=\\\"plugin.questiontext | i18n\\\"></p> <div ng-if=!showChart> <div ng-repeat=\\\"distractor in choices\\\"> <div ng-if=\\\"(distractor.text | i18n) != ''\\\"> <label ng-class=\\\"{\\n\\t\\t\\t\\t\\tcorrect: plugin.hasBeenAnswered && distractor.correct,\\n\\t\\t\\t\\t\\tincorrect: plugin.hasBeenAnswered && !distractor.correct\\n\\t\\t\\t\\t}\\\"> <input ng-change=scoreQuiz($index) type=radio name=fnord ng-model=index ng-disabled=plugin.hasBeenAnswered value={{$index}} ng-checked=distractor.selected> <span ng-bind-html=\\\"distractor.text | i18n\\\"></span> </label> </div> </div> <div ng-if=plugin.hasBeenAnswered ng-bind-html=\\\"feedback() | i18n\\\"></div> </div> <div ng-if=showChart> <div ng-if=!plugin.hasBeenAnswered ng-repeat=\\\"distractor in plugin.distractors\\\"> <div ng-if=\\\"(distractor.text | i18n) != ''\\\"> <label> <input ng-change=scorePoll($index) type=radio name=fnord ng-disabled=plugin.hasBeenAnswered ng-model=$parent.plugin.selectedDistractor value={{$index}}> <span ng-bind-html=\\\"distractor.text | i18n\\\"></span> </label> </div> </div> <br> <div ng-if=plugin.hasBeenAnswered> <p ng-if=plugin.selectedDistractor>Here's how others answered this question. (Your choice was: <b ng-repeat=\\\"distractor in plugin.distractors | filter:{ index: plugin.selectedDistractor }\\\" ng-bind-html=\\\"distractor.text | i18n\\\"></b>) </p> <itt-flotr2-chart type={{chartType}} title=\\\"\\\" data={{chartData}} options={{chartOptions}}></itt-flotr2-chart> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/question-mc-inner.html\n// module id = 0ePo\n// module chunks = 0","var path = 'templates/toolbar-story.html';\nvar html = \"<div class=toolbar> <div class=\\\"buttongroup nav-item scene-nav-btns\\\"> <a ng-if=\\\"appState.productLoadedAs == 'narrative' && !narrative.disable_navigation\\\" class=\\\"button button-exitEpisode\\\" href=/#/story/{{narrative.path_slug.en}}> <span>Exit</span> </a> <button tabindex=0 class=\\\"button button-nav\\\" ng-click=toggleNavPanel();> <span>Chapters</span> </button> </div> <div class=\\\"nav-item toolbar-logos\\\"> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/customer/Narrasys_Logo.png\") + \" id=toolbar-logo-big ng-if=\\\"episode.template.displayName === 'Narrasys Professional' && appState.windowWidth > 500\\\"> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/customer/Narrasys-Tree.png\") + \" id=toolbar-logo-small ng-if=\\\"episode.template.displayName === 'Narrasys Professional' && appState.windowWidth <= 500\\\"/> </div> <div class=\\\"nav-item new-window-btn\\\"> <div ng-if=\\\"appState.isFramed && (appState.productLoadedAs == 'player'\\n\\t \\t\\t\\t|| (appState.productLoadedAs == 'narrative'\\n\\t \\t\\t\\t&& !narrative.disable_new_window ) )\\\" class=\\\"escapegroup buttongroup\\\"> <a class=\\\"button button-mainframeescape\\\" ng-click=pause() ng-href={{calcNewWindowUrl()}} target=_blank> <span>New window</span> </a> </div> </div> <div class=\\\"nav-item searchgroup buttongroup\\\" ng-class=\\\"{cur: show.searchPanel}\\\"> <button tabindex=2 class=\\\"button button-search\\\" ng-click=toggleSearchPanel() aria-label=Search aria-expanded={{show.searchPanel}}> <span>Search</span> </button> <label for=searchtext class=hidden>Search Text</label> <input tabindex=2 name=searchtext id=searchtext type=text ng-show=show.searchPanel ng-model=appState.searchText ng-model-options=\\\"{ debounce: 200 }\\\"/> </div> <div class=\\\"nav-item socialshare social-buttongroup\\\"> <itt-social-share ng-if=socialShareInfo subdomain={{socialShareInfo.subDomain}} paths=\\\"{narrative: socialShareInfo.narrative, timeline: socialShareInfo.timeline}\\\" share-title={{socialShareInfo.tlTitle}} providers=\\\"['facebook', 'linkedin', 'twitter', 'google', 'reddit', 'email']\\\"> </itt-social-share> </div> <div class=\\\"nav-item profilegroup buttongroup\\\"> <a class=\\\"button button-preview\\\" ng-if=\\\"appState.productLoadedAs=='producer' && (userHasRole('admin') || userHasRole('customer admin'))\\\" ng-click=toggleProducerPreview()> <span ng-if=\\\"appState.product == 'producer'\\\">Preview</span> <span ng-if=\\\"appState.product == 'player'\\\">Edit</span> </a> <a class=\\\"button button-profile\\\" ng-hide=isTrueGuest() ng-click=\\\"appState.show.profilePanel = !appState.show.profilePanel\\\"> <span>Profile</span> </a> </div> </div> <div ng-cloak ng-show=show.navPanel class=\\\"navPanel topDrawer\\\" ng-class=episode.styleCss> <div class=parent ng-repeat=\\\"parent in episode.parents\\\" ng-bind-html=parent.display_name></div> <h2 ng-bind-html=episode.display_title class=fakeLink ng-click=seek(0)></h2> <div class=scene x-ng-if=\\\"chapter.display_annotation || chapter.display_title\\\" x-ng-repeat=\\\"chapter in episode.chapters\\\" x-ng-class=\\\"{currentScene: chapter.isCurrent}\\\" x-ng-click=seek(chapter.start_time)> <span class=displayTime>{{chapter.displayStartTime}}</span> <p> <button class=fakeLink tabindex=0 ng-bind-html=\\\"chapter.display_annotation || chapter.display_title\\\" x-ng-class=\\\"{sceneLink: !chapter.isCurrent}\\\" ng-focus=showControls()></button> <br> <span ng-bind-html=chapter.display_description></span> </p> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/toolbar-story.html\n// module id = 1Wv5\n// module chunks = 0","var path = 'templates/item/sxs-annotation.html';\nvar html = \"<div class=\\\"itemTemplate sxs-item\\\"> <a class=edit-event ng-click=editItem() ng-if=item.editableByThisUser>[Edit]</a> <div class=avatar> <img ng-src=\\\"{{item.avatar.url || appState.noAvatar}}\\\"> </div> <div class=itemHead> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <div class=text ng-bind-html=item.annotation.en></div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/sxs-annotation.html\n// module id = 2+b9\n// module chunks = 0","var path = 'templates/item/caption.html';\nvar html = \" <div class=\\\"itemTemplate itemCaption\\\"> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <div class=text ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/caption.html\n// module id = 2/3b\n// module chunks = 0","var path = 'templates/item/text-transmedia.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=item__title> <h2 class=\\\"item__title item__title--transmedia\\\" ng-if=\\\"item.display_title | highlightSubstring: appState.searchText\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></h2> </div> </div> <div class=\\\"text item__text item__text--transmedia\\\" ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/text-transmedia.html\n// module id = 3gcz\n// module chunks = 0","var path = 'templates/narrativelist.html';\nvar html = \"<div class=\\\"\\\"> <np-modal wrapper-class=responsive-modal__wrapper modal-class=narrative__modal ng-if=\\\"$ctrl.narrativeSelect || $ctrl.narrativeToEdit\\\"> <h3>{{$ctrl.narrativeSelect ? 'Add' : 'Edit'}} Narrative</h3> <np-narrative-editor customers=$ctrl.selectedCustomer narrative=$ctrl.narrativeToEdit hide-path-slug=$ctrl.narrativeSelect on-done=$ctrl.closeAddOrEditModal($undo) on-update=$ctrl.addOrUpdateNarrative($narrative)> </np-narrative-editor> </np-modal> <div ng-repeat=\\\"customer in $ctrl.customersData\\\" ng-click=\\\"$ctrl.customerRowClick(customer, $event)\\\" ng-class=$ctrl.setRowClasses(customer)> <span ng-click=\\\"$ctrl.toggleRow(customer, $event)\\\" ng-class=\\\"customer.showNarratives ? 'isOpen' : 'isClosed'\\\"> </span> <a>{{customer.name}}</a> <div ng-if=\\\"customer.isActive === true\\\"> <div ng-if=$ctrl.canAccess style=padding-left:1em> <np-tooltip tip-text=\\\"Add Narrative\\\"> <a class=\\\"icon__button button__add-inverted\\\" ng-click=$ctrl.setSelectedNarrative(customer)></a> </np-tooltip> </div> </div> <div ng-repeat=\\\"narrative in customer.narratives\\\" style=padding-left:2em ng-if=\\\"customer.showNarratives === true\\\" ng-click=\\\"$ctrl.toggleNarrativeRow(narrative, $event)\\\" ng-class=\\\"$ctrl.setNarrativeRowClasses(customer, narrative)\\\"> <div> <np-edit-pencil can-access=true on-edit=\\\"$ctrl.setNarrativeToEdit($event, narrative, customer)\\\"> <a>{{narrative.name.en}}</a> </np-edit-pencil> <p ng-if=narrative.description> <small>{{narrative.description.en}}</small> </p> <div ng-if=\\\"$ctrl.narrativeRow._id === narrative._id\\\"> <np-tooltip tip-text=\\\"Go to Narrative\\\"> <a ng-click=\\\"$ctrl.gotoNarrative(narrative._id, $event)\\\" class=\\\"icon__button button__generateNarrative\\\" title=\\\"Go to Narrative\\\"></a> </np-tooltip> <a> <np-guest-accessible-url narrative=narrative clipboard-mode=\\\"Click to Copy\\\"> </np-guest-accessible-url> </a> </div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/narrativelist.html\n// module id = 4bbU\n// module chunks = 0","var path = 'templates/item/searchresults-all.html';\nvar html = \"<span ng-class=\\\"{'sxs-item': item.sxs}\\\"> <a ng-if=item.editableByThisUser class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div ng-style=\\\"\\n    item.sxs?{background:'url('+item.avatar.url+') no-repeat scroll right top / 40px 40px',minHeight:'40px'}:{}\\n    \\\" ng-class=\\\"{isCosmetic: item.cosmetic}\\\" class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" ng-if=\\\"item._type !== 'Chapter' && !item.chapter_marker\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> <div ng-if=\\\"item.display_annotator && item.producerItemType !== 'annotation' || item.isPq\\\" class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> <div ng-if=\\\"item.producerItemType == 'annotation' && item.display_title && !item.isHeader && !item.isPq\\\" class=authorName ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <span ng-if=\\\"item._type != 'Annotation' && item._type !== 'Chapter'\\\"> <a tabindex=0 ng-if=handleOutgoingLinkDisplay() class=\\\"fakeLink escapelink item__link--escape-link item__link--fake-link\\\" ng-click=outgoingLink(item.url) ng-bind-html=\\\"(item.display_title || '(Untitled)') | highlightSubstring: appState.searchText\\\"></a> <a tabindex=0 role=button class=\\\"fakeLink item__link--fake-link\\\" ng-if=!handleOutgoingLinkDisplay() x-ng-keypress=toggleDetailOnKeyPress($event) ng-click=\\\"item.showInlineDetail=!item.showInlineDetail\\\" ng-bind-html=\\\"(item.display_title || '(Untitled)') | highlightSubstring: appState.searchText\\\" aria-label=\\\"Toggle detail display of {{item.display_title}}\\\"></a> </span> <span ng-if=\\\"item._type === 'Chapter' || item.chapter_marker\\\"> <h2 class=searchChapter ng-bind-html=\\\"(item.display_annotation || item.display_title) | highlightSubstring: appState.searchText\\\"></h2> </span> </div> <div class=\\\"text item__text\\\"> <div ng-class=\\\"{showAsHeader: item.showAsHeader}\\\" ng-if=!item.chapter_marker ng-bind-html=\\\"item.display_annotation || item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <div class=itemDetail ng-if=item.showInlineDetail> <span ng-switch=item.producerItemType> <span ng-switch-when=file> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.asset.url,$event) ng-click=outgoingLink(item.asset.url) class=\\\"escapelink item__link--escape-link\\\">(new window)</a> <itt-iframe ng-if=\\\"appState.viewMode == 'review'\\\" x-src={{item.asset.url}} x-contenttype={{item.asset.content_type}}></itt-iframe> </span> <span ng-switch-when=link> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) class=\\\"escapelink item__link--escape-link\\\">(new window)</a> <itt-iframe ng-if=\\\"!item.isVideoUrl && appState.viewMode == 'review'\\\" x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=\\\"item.isVideoUrl && appState.viewMode == 'review'\\\" media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </span> <span ng-switch-when=video> <span ng-switch-when=file> <itt-video ng-if=\\\"item.isVideoUrl && appState.viewMode == 'review'\\\" media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.asset.url,$event) ng-click=outgoingLink(item.asset.url) class=\\\"escapelink item__link--escape-link\\\">(new window)</a> </span> </span> <span ng-switch-when=image> <div class=touchable style=position:relative> <img ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> </span> <span ng-switch-when=question> <div ng-if=item.asset.url class=touchable> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> <itt-mc-question show-chart=\\\"item.data._plugin.questiontype == 'mc-poll'\\\" choices=item.data._plugin.distractors on-choice=save data=item.data._plugin qid=item._id></itt-mc-question> </span> <span ng-switch-default> <span ng-if=\\\"item.data._pluginType == 'credlyBadge'\\\" ng-include=\\\"'templates/item/usc-badges-inner.html'\\\"></span> </span> </span> </div> </div> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/searchresults-all.html\n// module id = 55GB\n// module chunks = 0","module.exports = __webpack_public_path__ + \"images/Narrasys-Tree.cc1cd923afd67c6dc362c6aa5c3b5399.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/images/customer/Narrasys-Tree.png\n// module id = 5Tuk\n// module chunks = 0","module.exports = __webpack_public_path__ + \"images/checkmark.80564877965f7d5b3ab0fccf3fde46c1.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/images/checkmark.png\n// module id = 6/Qv\n// module chunks = 0","var path = 'templates/narrative/default.html';\nvar html = \"<div class=narrative> <div> <np-edit-pencil can-access=$ctrl.canAccess on-edit=$ctrl.toggleEditNarrativeModal()> <h2 ng-bind-html=$ctrl.narrative.name.en></h2> </np-edit-pencil> <p ng-bind-html=$ctrl.narrative.description.en></p> <p>Total Duration: {{$ctrl.totalNarrativeDuration | asTime}}</p> </div> <div class=episode__button-row> <div ng-if=$ctrl.canAccess> <np-tooltip tip-text=\\\"Add Timeline\\\" ng-class=\\\"{overlay: $ctrl.timelineUnderEdit || $ctrl.tmpTimeline}\\\"> <a class=\\\"icon__button button__add-inverted\\\" ng-click=\\\"$ctrl.addTmpTimeline(null, $ctrl.narrative.timelines)\\\"></a> </np-tooltip> <np-tooltip tip-text=\\\"Export links to spreadsheet\\\"> <a class=\\\"icon__button button__export-spreadsheet\\\" ng-click=$ctrl.exportToSpreadsheet($ctrl.narrative._id)> </a> </np-tooltip> <np-guest-accessible-url narrative=$ctrl.narrative sub-domain={{$ctrl.narrative.narrative_subdomain}} clipboard-mode=\\\"Click to copy URL\\\"> </np-guest-accessible-url> </div> </div> <np-modal ng-if=$ctrl.showEpisodeList> <np-episode-list depth=0 context=narrative class=\\\"admin episodePicker\\\" on-episode-select=$ctrl.onEpisodeSelect(node) on-cancel=\\\"$ctrl.toggleEpisodeList(); $ctrl.doneEditingTimeline()\\\"> </np-episode-list> </np-modal> <np-modal wrapper-class=responsive-modal__wrapper modal-class=narrative__modal ng-if=\\\"$ctrl.editingNarrative || $ctrl.timelineUnderEdit != null\\\"> <div ng-if=$ctrl.editingNarrative> <np-narrative-editor narrative=$ctrl.narrative customers=$ctrl.customers on-done=$ctrl.toggleEditNarrativeModal($undo) on-update=$ctrl.updateNarrative($narrative)> </np-narrative-editor> </div> <div ng-if=\\\"$ctrl.timelineUnderEdit != null\\\"> <np-timeline-editor class=tl__editor timeline=$ctrl.timelineUnderEdit narrative=$ctrl.narrative container-id={{$ctrl.customers[0].root_container_id}} on-done=$ctrl.doneEditingTimeline() on-update=\\\"$ctrl.editorAction($timeline, $ctrl.timelineUnderEdit)\\\" on-delete=$ctrl.deleteTimeline($timeline)> </np-timeline-editor> </div> </np-modal> <div ui-tree=$ctrl.treeOpts ng-if=\\\"$ctrl.narrative.timelines.length !== 0\\\"> <div ui-tree-nodes ng-model=$ctrl.narrative.timelines> <div class=\\\"storyTimeline hoverIndicator\\\" ng-class-even=\\\"'container__row--even'\\\" ng-class-odd=\\\"'container__row--odd'\\\" ng-mouseenter=\\\"rowHover = true\\\" ng-mouseleave=\\\"rowHover = false\\\" ui-tree-node ng-repeat=\\\"timeline in $ctrl.narrative.timelines |\\n               filter: ($ctrl.canAccess === false || undefined) && {hidden: false}\\\"> <div ng-class=\\\"{'timeline--hidden': timeline.hidden}\\\"> <span ng-show=\\\"$ctrl.canAccess && rowHover\\\" class=tlDrag__handle ui-tree-handle> <i class=\\\"fa fa-arrows\\\"></i> </span> <div class=tl__wrapper> <np-edit-pencil can-access=$ctrl.canAccess force=\\\"rowHover && $ctrl.canAccess\\\" on-edit=$ctrl.toggleEditingTimeline(timeline)> <h3> <i ng-if=timeline.hidden class=\\\"fa fa-eye-slash\\\"></i> <a href=/#/story/{{$ctrl.narrative._id}}/{{timeline._id}}>{{timeline.name.en}}</a> </h3> </np-edit-pencil> <p>{{timeline.episode_segments[0].end_time | asTime}}</p> <p>{{timeline.description.en}}</p> <div class=tl__addButton> <div ng-if=\\\"rowHover && $ctrl.canAccess\\\" class=episode__button-row> <div> <np-tooltip tip-text=\\\"Insert Timeline\\\"> <a class=\\\"icon__button button__add-inverted\\\" ng-click=\\\"$ctrl.addTmpTimeline(timeline, $ctrl.narrative.timelines)\\\"></a> </np-tooltip> <np-guest-accessible-url narrative=$ctrl.narrative timeline=timeline clipboard-mode=\\\"Copy to Clipboard\\\"> </np-guest-accessible-url> </div> </div> </div> </div> </div> </div> </div> </div> </div> <a ng-if=$ctrl.narrative.support_url target=_blank ng-href={{$ctrl.narrative.support_url}}>Support</a> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/narrative/default.html\n// module id = 6ze8\n// module chunks = 0","var path = 'templates/item/transcript.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=\\\"itemTemplate transcript\\\"> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> </div> <div class=icon style=float:left;margin-right:.5em> <img ng-if=item.asset.url ng-src={{item.asset.url}}> <div class=clear></div> </div> <div class=\\\"authorName item__title\\\" ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> <div class=\\\"text item__text item__text--transcript\\\" ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/transcript.html\n// module id = 7GUz\n// module chunks = 0","var path = 'templates/item/image-thumbnail.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"thumbnail touchable\\\" x-ng-class=\\\"{fullsize: item.showInlineDetail || item.isActive}\\\" x-ng-click=toggleDetailView()> <img ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> <div class=\\\"text item__text\\\"> <div class=\\\"title item__title item__title--image-thumbnail\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div class=\\\"text item__text item__text--image text--image-thumbnail\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/image-thumbnail.html\n// module id = 7XCA\n// module chunks = 0","var path = 'templates/item/pullquote.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=\\\"itemTemplate headerItem\\\"> <div class=category></div> <div class=\\\"pullquote item__text item__text--pullquote\\\" ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> <div class=pullquoteSpeaker ng-if=item.display_annotator> — <span ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></span></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/pullquote.html\n// module id = 84qX\n// module chunks = 0","var path = 'templates/testbed-event.html';\nvar html = \"<style>.testContentPane{border:1px solid #000;position:absolute;overflow:hidden;top:3em;left:2em;right:2em;bottom:10em}.testEditorPane{position:absolute;bottom:0;z-index:2;left:0;right:0;height:10em;overflow-y:scroll}label{margin:0 2em}</style> <div class=controls> <label> Content pane type: <select size=1 ng-model=testbed.contentType ng-init=\\\"testbed.contentType='content'\\\"> <option value=content>Content</option> <option value=fill>Overlay</option> </select> </label> <label ng-if=\\\"testbed.contentType == 'content'\\\"> <input type=checkbox ng-model=testbed.isNarrow> Narrow content pane </label> <label> Item state: <select size=1 ng-model=item.state ng-init=\\\"item.state='isCurrent'\\\"> <option value=isCurrent>Current</option> <option value=isPast>Past</option> <option value=isFuture>Future</option> </select> </label> <label> <input type=checkbox ng-model=testbed.showCurrent ng-init=\\\"testbed.showCurrent = false;\\\"> Hide non-current items </label> </div> <div class=\\\"testContentPane allowHighlights allowSidebars hasLeftSidebar hasRightSidebar {{testbed.contentType}}\\\" ng-class=\\\"{isNarrow: testbed.isNarrow, showCurrent: testbed.showCurrent}\\\"> <div ng-if=\\\"!(testbed.showCurrent && item.state!='isCurrent')\\\" class=\\\"item animate\\\" itt-item=item ng-class=\\\"item.styleCss + ' ' + item.state\\\"></div> </div> <div class=testEditorPane itt-item-editor=item></div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/testbed-event.html\n// module id = 888c\n// module chunks = 0","var path = 'templates/timeline-story.html';\nvar html = \"<div class=timeline ng-show=!isSuppressed ng-cloak> <button tabindex=0 ng-focus=showControls() class=button ng-class=setBtnClass() ng-click=timelineBtnClick()> <span class=control-text>{{controlText}}</span> </button> <div class=progressbarBox> <div class=pbarTop> <span ng-if=\\\"appState.product == 'producer'\\\"> <a class=\\\"button button-zoomout\\\" ng-if=\\\"zoomLevel != 1\\\" ng-click=zoomOut()> <span class=control-text>Zoom out</span> </a> <small ng-if=\\\"zoomLevel != 1\\\">Zoom: {{zoomLevel*100}}%</small> <a class=\\\"button button-zoomin\\\" ng-click=zoomIn()> <span class=control-text>Zoom in</span> </a> </span> </div> <div class=pbarMain> <button ng-focus=showControls() ng-class=\\\"{invisible: playbackService.getMetaProp('time') == 0}\\\" class=\\\"button button-prev\\\" ng-click=prevScene()> <span class=control-text>Previous</span> </button> <button ng-focus=showControls() tabindex=0 ng-class=\\\"{invisible: playbackService.getMetaProp('time')>= playbackService.getMetaProp('duration')- 0.1}\\\" class=\\\"button button-next\\\" ng-click=nextScene()> <span class=control-text>Next</span> </button> <div class=progressbar> <div class=mask> <div class=progressbarContainer style=width:{};> <div class=buffered ng-style=\\\"{width: playbackService.getMetaProp('bufferedPercent')+'%'}\\\"></div> <div class=played ng-style=\\\"{width: markerPercent(playbackService.getMetaProp('time'))+'%'}\\\"></div> </div> </div> <div class=progressbarContainer style=width:{};> <div class=handle ng-show=isSeeking ng-style=\\\"{left: markerPercent(willSeekTo)+'%'}\\\"> <div class=tip ng-show=seekHandleVisible>{{willSeekTo | asTime}}</div> </div> <div class=tooltip ng-if=eventGroup.showTooltip ng-repeat=\\\"eventGroup in timeline.displayMarkedEvents\\\" ng-style=\\\"{left: markerPercent(eventGroup.start_time)+'%'}\\\"> <span class=content ng-bind-html=eventGroup.toolTipText></span> </div> <div class=\\\"handle sxsHandle playhead\\\" ng-show=appState.editEvent ng-style=\\\"{left: markerPercent(appState.editEvent.start_time)+'%'}\\\"> <div class=tip ng-click=\\\"\\\">{{appState.editEvent.start_time | asTime}}</div> </div> </div> <div class=\\\"playhead mask\\\"> <div class=progressbarContainer ng-style=\\\"{width: zoomLevel+'00%'}\\\"> <div class=marker ng-mouseover=showTooltip(eventGroup) ng-mouseout=hideTooltip(eventGroup) ng-repeat=\\\"eventGroup in timeline.displayMarkedEvents\\\" ng-style=\\\"{left: markerPercent(eventGroup.start_time)+'%'}\\\" ng-if=\\\"eventGroup.stop || eventGroup.toolTipText || appState.product == 'producer' && eventGroup.toolTipText != null\\\" ng-class=\\\"{stop: eventGroup.stop && !eventGroup.multiStop, mini: eventGroup.layoutChange, multi: eventGroup.multiStop}\\\"> </div> <div ng-if=appState.editEvent class=editingItem ng-style=\\\"{left: markerPercent(appState.editEvent.start_time)+'%', right: markerPercent(playbackService.getMetaProp('duration') - appState.editEvent.end_time)+'%'}\\\"></div> </div> </div> </div> </div> <div class=pbarBottom> <span class=timedisplay> {{playbackService.getMetaProp('time')| asTime}} / {{playbackService.getMetaProp('duration') | asTime}} <span class=speedcontrol> <button ng-focus=showControls() class=button-speedcontrol ng-click=changeSpeed(-0.25) aria-label=\\\"Slow down video\\\"> <div ng-class=\\\"{arrowLeft: playbackService.getMetaProp('timeMultiplier') > 0.5}\\\"></div> </button> <span class=speeddisplay ng-click=resetSpeed()>{{playbackService.getMetaProp('timeMultiplier')}}x</span> <button ng-focus=showControls() class=button-speedcontrol ng-click=changeSpeed(0.25) aria-label=\\\"Speed up video\\\"> <div ng-class=\\\"{arrowRight: playbackService.getMetaProp('timeMultiplier') < 2}\\\"></div> </button> </span> </span> <span style=display:inline-block;height:1em;position:relative ng-if=\\\"episode.languages.length > 1\\\"> <select size=1 ng-model=appState.lang class=languageSelector ng-change=setNewLanguage() ng-options=\\\"language.code as ('['+language.code.toUpperCase()+']') for language in episode.languages\\\"> </select> </span> <button ng-focus=showControls() tabindex=0 ng-if=\\\"appState.viewMode == 'watch'\\\" class=\\\"button button-captions\\\" ng-click=\\\"appState.hideCaptions=!appState.hideCaptions\\\" ng-class=\\\"{active: !appState.hideCaptions}\\\"> <span class=control-text>Captions</span> </button> <a ng-if=\\\"appState.viewMode=='watch'\\\" class=\\\"button button-fullscreen active\\\" ng-click=\\\"viewMode('discover')\\\"> <span class=control-text>Exit fullscreen</span> </a> <a ng-if=\\\"appState.viewMode!='watch'\\\" class=\\\"button button-fullscreen\\\" ng-click=\\\"viewMode('watch')\\\"> <span class=control-text>Fullscreen video</span> </a> <span ng-if=!appState.isTouchDevice> <button ng-focus=showControls() tabindex=0 class=\\\"button button-mute {{audioIcon()}}\\\" ng-click=toggleMute()> <span class=control-text>Mute</span> </button> <itt-volume-slider></itt-volume-slider> </span> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/timeline-story.html\n// module id = 9ij1\n// module chunks = 0","var path = 'templates/item/text-definition.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div> <div class=\\\"itemTemplate definition\\\"> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"item__title item__title--definition\\\"> <span ng-if=\\\"item.display_title | highlightSubstring: appState.searchText\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></span> </div> </div> <div class=\\\"text item__text item__text--definition\\\" ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/text-definition.html\n// module id = AZay\n// module chunks = 0","var path = 'templates/producer/upload-masterasset.html';\nvar html = \" <div ng-if=showAssetPicker class=floatAssetPicker> <div class=scrollContainer> <sxs-container-assets container-id={{episodeContainerId}}></sxs-container-assets> </div> <div class=controlsContainer> <button ng-click=endChooseAsset();>Cancel</button> </div> </div> <div> <div ng-if=\\\"(masterAsset.original_filename) && !showUploadButtonsMaster\\\"> {{masterAsset.display_name}} <button class=button ng-click=\\\"replaceAsset('Master')\\\"> Replace</button> <button class=button ng-click=detachMasterAsset()>Remove</button> </div> <div ng-if=\\\"showUploadButtonsMaster || !(masterAsset.original_filename)\\\"> <span ng-if=showUploadFieldMaster> <itt-asset-uploader container-id={{episodeContainerId}} callback=assetUploaded(data)></itt-asset-uploader> </span> <span ng-if=!showUploadFieldMaster> <button class=button ng-click=\\\"chooseAsset('Master')\\\">Browse uploaded assets</button> <button class=button ng-click=\\\"toggleUpload('Master')\\\">Upload new asset</button> </span> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/upload-masterasset.html\n// module id = AeV0\n// module chunks = 0","var path = 'templates/producer/questionauthoring.html';\nvar html = \"<div style=margin:1em> <p>This is a standalone editor for question items. Fill in the fields below, then copy the JSON data below into the existing authoring tool. To edit an existing question paste its JSON into the json field and the editor will separate it out into editable fields.</p> <table class=authoringForm> <tr> <td class=label>Question type</td> <td> <select ng-model=question.questiontype> <option value=mc-poll>Poll</option> <option value=mc-formative>Formative</option> </select> </td> </tr> <tr> <td class=label>Question text</td> <td> <textarea rows=4 ng-model=question.questiontext>\\n\\t\\t\\t\\t</textarea> </td> </tr> <tr> <td colspan=2>Answer choices. <span ng-if=\\\"question.questiontype == 'mc-formative'\\\">Check the correct answer (if more than one is selected, either will count as correct).</span>To remove an answer choice, just leave it blank. </td> </tr> <tr ng-repeat=\\\"distractor in question.distractors\\\"> <td class=label> <input type=checkbox ng-model=distractor.correct ng-if=\\\"question.questiontype == 'mc-formative'\\\"> </td> <td> <input type=text ng-model=distractor.text> </td> </tr> <tr> <td class=label><a ng-click=addDistractor()>add another</a> </td> <td> </td> </tr> <tr ng-if=\\\"question.questiontype == 'mc-formative'\\\"> <td class=label>Feedback for correct answer</td> <td> <input type=text ng-model=question.correctfeedback> </td> </tr> <tr ng-if=\\\"question.questiontype == 'mc-formative'\\\"> <td class=label>Feedback for incorrect answer</td> <td> <input type=text ng-model=question.incorrectfeedback> </td> </tr> <tr> <td colspan=2> <br> <hr> <br> </td> </tr> <tr> <td class=label>JSON data: <span ng-if=editwarning>Invalid JSON!</span> </td> <td> <textarea rows=10 ng-model=pluginjson></textarea> </td> </tr> </table> <br> <hr> <br> <p class=label>Question preview:</p> <div class=item> <div ng-if=preview itt-item=questionpreview></div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/questionauthoring.html\n// module id = AiEB\n// module chunks = 0","var path = 'view-modes/watch-mode/watchmode.html';\nvar html = \" <div ng-if=\\\"appState.viewMode == 'watch'\\\" style=padding-bottom:100%> <div class=watchMode> <div itt-magnet id=watchModeVideoMagnet class=videoMagnet> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \"> </div> </div> <span class=watchModeCaptions ng-class=\\\"{padForBottomToolbar: appState.videoControlsActive}\\\"> <div class=\\\"item watchModeCaption\\\" ng-if=\\\"item.isCurrent && !appState.hideCaptions\\\" ng-repeat=\\\"item in episode.items | transcript\\\" ng-class=item.state itt-item=item forcetemplate=caption> </div> </span> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/view-modes/watch-mode/watchmode.html\n// module id = AxNG\n// module chunks = 0","var path = 'templates/root.html';\nvar html = \"<div class=\\\"rootLogin standaloneAncillaryPage\\\" itt-login> <np-nav on-logout=logout()></np-nav> <div class=inner> <div ng-if=appState.user._id> <div itt-user></div> </div> <div ng-if=!appState.user._id> <form ng-submit=adminLogin()> <h1>Sign in to Narrative Producer</h1> <label> <span>Username</span> <input type=email name=auth_key ng-model=loginForm.auth_key> </label> <label> <span>Password</span> <input type=password name=password ng-model=loginForm.password> </label> <input class=\\\"submit button\\\" type=submit value=\\\"Sign in\\\"> <span class=error ng-if=badlogin>Sorry, try again?</span> </form> </div> <br style=clear:both> </div> <small ng-if=!appState.user._id><a href={{apiDataBaseUrl}}/oauth2>OAuth</a></small> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/root.html\n// module id = CQGL\n// module chunks = 0","var path = 'templates/item/image.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=category> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text\\\"> <div class=\\\"title item__title item__title--image\\\"> <a class=\\\"fakeLink item__link--fake-link\\\" role=button tabindex=0 ng-click=toggleDetailView() x-ng-keypress=toggleDetailOnKeyPress($event) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <div class=\\\"item__text item__text--image\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <div class=itemDetail x-ng-if=item.showInlineDetail> <div class=touchable style=position:relative> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/image.html\n// module id = CVkk\n// module chunks = 0","var path = 'templates/scene/landingscreen.html';\nvar html = \"<div class=\\\"landingscreen stretchToViewportShort\\\"> <div> <div class=\\\"pane introtext\\\"> <h1 ng-bind-html=episode.display_title></h1> <p id=episode--description ng-bind-html=episode.display_description></p> <br> </div> <div itt-magnet class=videoMagnet> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \"> </div> <div class=landingscreen-end></div> <div class=clear></div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/scene/landingscreen.html\n// module id = D/IP\n// module chunks = 0","var path = 'templates/producer/annotator-autocomplete.html';\nvar html = \"<div style=position:relative ng-show=!hasAnnotator()> <input class=annotatorChooser type=text ng-model=searchText ng-focus=showAutocomplete() ng-blur=hideAutocomplete() ng-change=handleAutocomplete()> <div class=\\\"autocompleteList animate transitionFade\\\" ng-if=autoCompleting> <div class=autocompleteItem ng-repeat=\\\"annotator in filteredAnnotators\\\" ng-click=select(annotator) ng-class=\\\"{selected: ($index == preselectedItem)}\\\" style=white-space:nowrap> <img ng-src={{annotator.imageUrl}}> <span ng-bind-html=\\\"(annotator.key | highlightSubstring: searchText) || '(New speaker)'\\\"></span> </div> </div> </div> <div style=position:relative ng-show=hasAnnotator()> <div sxs-input-i18n=item.annotator x-inputtype=\\\"'input'\\\"></div> <a style=position:absolute;top:3px;right:10px ng-click=\\\"item.annotator={}\\\">(x)</a> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/annotator-autocomplete.html\n// module id = EDO7\n// module chunks = 0","var path = 'templates/scene/mirrored-twocol.html';\nvar html = \" <div class=\\\"scene cornerV\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=col> <div itt-magnet class=videoMagnet> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \"> </div> <div class=\\\"pane mainPane\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{singleitem: altContentItems.length==1, isNarrow: isNarrow, isEmpty: altContentItems.length == 0}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altItems = (altContentItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> <div class=col> <div class=\\\"pane altPane stretchToViewport\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (mainContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (mainContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: mainContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: mainContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: mainContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in showCurrent ? (mainContentItems | isCurrent) : mainContentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/scene/mirrored-twocol.html\n// module id = F5VT\n// module chunks = 0","var path = 'templates/item/file-withimage.html';\nvar html = \" <a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=category> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text item__text--file-with-image\\\"> <span ng-if=handleOutgoingLinkDisplay()> <span ng-if=!item.targetTop> <div class=\\\"title item__title item__title--file-with-image\\\"> <a tabindex=0 class=\\\"escapelink item__link--escape-link\\\" x-ng-keypress=outgoingLinkOnKeyPress(item.asset.url,$event) ng-click=outgoingLink(item.asset.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <a tabindex=0 ng-if=item.asset.url x-ng-keypress=outgoingLinkOnKeyPress(item.asset.url,$event) ng-click=outgoingLink(item.asset.url)> <img ng-src={{item.asset.url}}> </a> </span> <span ng-if=item.targetTop> <div class=\\\"title item__title item__title--file-with-image\\\"> <a tabindex=0 target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <a tabindex=0 target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)> <img ng-src={{item.asset.url}}> </a> </span> </span> <span ng-if=!handleOutgoingLinkDisplay()> <div class=\\\"title item__title item__title--file-with-image\\\"> <a role=button x-ng-keypress=toggleDetailOnKeyPress($event) class=\\\"fakeLink item__link--fake-link\\\" tabindex=0 ng-click=toggleDetailView() ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <img ng-click=toggleDetailView() ng-src={{item.asset.url}}> </span> </div> <div class=\\\"item__text item__text--file-with-image\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <div class=itemDetail ng-if=item.showInlineDetail> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) class=escapelink>(new window)</a> <itt-iframe x-src={{item.asset.url}} item=item x-contenttype={{item.asset.content_type}}></itt-iframe> </div> <div class=clear></div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/file-withimage.html\n// module id = FFkw\n// module chunks = 0","module.exports = __webpack_public_path__ + \"images/checkmark-empty.eccafa854fceac6359bac2609d44e2ce.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/images/checkmark-empty.png\n// module id = FUk5\n// module chunks = 0","var path = 'templates/item/review-annotation.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div ng-class=\\\"{isCosmetic: item.cosmetic}\\\"> <div ng-if=item.isTranscript class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <div class=text ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> </div> <div ng-if=!item.isTranscript ng-include=item.templateUrl></div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/review-annotation.html\n// module id = G4Wk\n// module chunks = 0","var path = 'templates/item/debug.html';\nvar html = \"<div class=itemTemplate> <pre ng-if=itemDebug>{{item | pretty}}</pre> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/debug.html\n// module id = GGxq\n// module chunks = 0","var path = 'templates/error.html';\nvar html = \"<span ng-if=\\\"errorSvc.errors.length || errorSvc.notifications.length\\\" class=errors> <div class=error ng-repeat=\\\"error in errorSvc.errors\\\" ng-click=dismiss(error)> <h3><i class=\\\"fa fa-exclamation-triangle error-red\\\"></i>Error: <span ng-bind-html=\\\"error.cause || error.exception.data.error || error.exception.data.base[0]|| error.exception.data || '(unknown reason)'\\\"></span></h3> <p ng-if=error.exception.config.url> <i>(While trying to load {{error.exception.config.url}})</i> </p> <p ng-if=\\\"error.exception.status == 401\\\"> Please <span ng-if=user.login_url> <a ng-if=user.login_via_top_window_only ng-click=logout(); ng-href={{user.login_url}} target=_top>click here</a> <a ng-if=!user.login_via_top_window_only ng-click=logout(); ng-href={{user.login_url}}>click here</a> to log back in. </span> <span ng-if=!user.login_url> <a ng-click=logout();>reset your session</a> and start over. </span> </p> </div> <div class=notification ng-repeat=\\\"notification in errorSvc.notifications\\\"> <a style=float:right ng-click=dismiss(notification)>[x]</a> <p><i class=\\\"fa fa-info-circle info-blue\\\"></i> <strong> Note: </strong> {{notification.text}}</p> </div> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/error.html\n// module id = GUWn\n// module chunks = 0","var path = 'templates/producer/upload-producer.html';\nvar html = \" <div ng-if=showAssetPicker class=floatAssetPicker> <div class=scrollContainer> <sxs-container-assets container-id={{episodeContainerId}} mime-key={{item.producerItemType}}></sxs-container-assets> </div> <div class=controlsContainer> <button ng-click=endChooseAsset();>Cancel</button> </div> </div> <div> <ng-model ng-model=item.asset name=itemAsset itt-valid-asset item=item></ng-model> <div ng-if=\\\"item.asset && !showUploadButtons\\\"> {{item.asset.display_name}} <button class=button ng-click=replaceAsset()>Replace</button> <button class=button ng-click=\\\"detachAsset(); selectService.onSelectChange(item, itemForm)\\\">Remove</button> </div> <div ng-if=\\\"showUploadButtons || !item.asset\\\"> <span ng-if=showUploadField> <itt-asset-uploader container-id={{episodeContainerId}} ng-if=canAccess callback=assetUploaded(data) mime-types={{mimes}}> </itt-asset-uploader> </span> <span ng-if=!showUploadField> <button class=button ng-click=chooseAsset()>Browse uploaded</button> <button class=button ng-click=toggleUpload()>Upload new</button> </span> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/upload-producer.html\n// module id = GeQP\n// module chunks = 0","var path = 'templates/scene/cornerH.html';\nvar html = \" <div class=\\\"scene cornerH\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=row> <div itt-magnet class=videoMagnet> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \"> </div> <div class=\\\"pane mainPane matchVideoHeight\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer\\\" ng-class=\\\"{singleitem: mainContentItems.length==1, isNarrow: isNarrow, isEmpty: mainContentItems.length == 0}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainItems = (mainContentItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> <div class=row> <div class=\\\"pane altPane\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (altContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (altContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: altContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: altContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: altContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in showCurrent ? (altContentItems | isCurrent) : altContentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/scene/cornerH.html\n// module id = GoGc\n// module chunks = 0","var path = 'templates/copyright.html';\nvar html = \"TELLING STORY player &#169; <span ng-bind-html=\\\"now | date:'yyyy'\\\"></span> <a href=//inthetelling.com target=_blank>IN THE TELLING</a>. All rights reserved. <br> <a href=/privacy.html target=_blank>Privacy</a> <span ng-if=narrative.support_url> - <a ng-href={{narrative.support_url}}>Support</a> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/copyright.html\n// module id = HyaP\n// module chunks = 0","var path = 'templates/item/link-descriptionfirst.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=category> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text\\\"> <div class=\\\"item__text--link text--description-first\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> <div class=\\\"title item__title item__title--link title--description-first\\\"> <a tabindex=0 ng-if=\\\"handleOutgoingLinkDisplay() && !item.targetTop\\\" class=\\\"escapelink item__escape-link item__link--escape-link escape-link--description-first\\\" x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> <a tabindex=0 ng-if=\\\"handleOutgoingLinkDisplay() && item.targetTop\\\" target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> <a tabindex=0 ng-if=!handleOutgoingLinkDisplay() ng-click=toggleDetailView() ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> </div> <div class=itemDetail ng-if=item.showInlineDetail> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) class=\\\"escapelink item__link--escape-link escape-link--description-first\\\">(new window)</a> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/link-descriptionfirst.html\n// module id = IL3w\n// module chunks = 0","module.exports = __webpack_public_path__ + \"images/no-avatar.a012e2f1c64d5ed04112b126c8c347ba.gif\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/images/no-avatar.gif\n// module id = IiAB\n// module chunks = 0","var path = 'templates/scene/cornerV.html';\nvar html = \" <div class=\\\"scene cornerV\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=col> <div itt-magnet class=videoMagnet> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \"> </div> <div class=\\\"pane mainPane\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{singleitem: mainContentItems.length==1, isNarrow: isNarrow, isEmpty: mainContentItems.length == 0}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainItems = (mainContentItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> <div class=col> <div class=\\\"pane altPane stretchToViewport\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (altContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (altContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: altContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: altContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: altContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in showCurrent ? (altContentItems | isCurrent) : altContentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/scene/cornerV.html\n// module id = JTcP\n// module chunks = 0","var path = 'templates/item/link-embed.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text\\\"> <div class=\\\"title item__title item__title--link title--link-embed\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div class=\\\"item__text--link text--link-embed\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <a tabindex=0 class=\\\"escapelink item__link--escape-link escape-link--link-embed\\\" x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)>(new window)</a> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/link-embed.html\n// module id = Jetm\n// module chunks = 0","var path = 'templates/item/searchresults.html';\nvar html = \"<div ng-class=\\\"{\\nsearchitem:true,\\nisSxS: item.sxs,\\nisCurrent: ((item.start_time <= playbackService.getMetaProp('time')) && (item.end_time > playbackService.getMetaProp('time'))),\\nisCosmetic: item.cosmetic\\n}\\\" ng-style=\\\"item.sxs?{backgroundImage:'url('+item.avatar.url+')'}:{}\\\"> <a class=edit-event ng-click=editItem(item._id)> <span>Edit item</span> </a> <span class=displayTime> <button class=fakeLink tabindex=2 ng-click=\\\"seek(item.start_time, item._id)\\\">{{item.displayStartTime}}</button> </span> <span class=type ng-bind-html=\\\"(item.display_title || item.display_annotator) | highlightSubstring: appState.searchText\\\"></span> <div class=description ng-bind-html=\\\"(item.display_description || item.display_annotation) | highlightSubstring: appState.searchText\\\"></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/searchresults.html\n// module id = JkHQ\n// module chunks = 0","var path = 'templates/item/link-modal-thumb.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text\\\"> <span ng-if=handleOutgoingLinkDisplay()> <span ng-if=!item.targetTop> <div class=\\\"title item__title item__title--link title--link-modal\\\"> <a tabindex=0 class=\\\"escapelink item__link--escape-link escape-link--link-modal\\\" x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <a tabindex=0 ng-if=item.asset.url x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)> <img ng-if=item.asset.url ng-src={{item.asset.url}}> </a> </span> <span ng-if=item.targetTop> <div class=\\\"title item__title item__title--link title--link-modal\\\"> <a tabindex=0 target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <a tabindex=0 target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)> <img ng-if=item.asset.url ng-src={{item.asset.url}}> </a> </span> </span> <span ng-if=!handleOutgoingLinkDisplay()> <div class=\\\"title item__title item__title--link title--link-modal\\\"> <a role=button x-ng-keypress=toggleDetailOnKeyPress($event) class=\\\"fakeLink item__link--fake-link\\\" tabindex=0 ng-click=forceModal(false) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <img ng-if=item.asset.url ng-click=forceModal(false) ng-src={{item.asset.url}}> </span> <div class=\\\"item__text item__text--link text--link-modal\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> </div> <div class=itemDetail ng-if=\\\"item.showInlineDetail && appState.viewMode === 'review'\\\"> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) class=\\\"escapelink item__link--escape-link escape-link--link-modal\\\">(new window)</a> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </div> <div class=clear></div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/link-modal-thumb.html\n// module id = JnVu\n// module chunks = 0","var path = 'scripts/directives/socialshare/social-share.html';\nvar html = \"<span class=itt-socialshare> <span ng-if=!$ctrl.expanded> <a class=\\\"button button-facebook\\\" ng-click=\\\"$ctrl.onShare('facebook')\\\"></a> <a class=\\\"button button-linkedin\\\" ng-click=\\\"$ctrl.onShare('linkedin')\\\"></a> <a class=\\\"button button-share\\\" ng-click=$ctrl.toggleExpanded()></a> </span> <div class=socialshare__row ng-if=$ctrl.expanded> <button class=socialshare__exit ng-click=$ctrl.toggleExpanded()> </button> <div class=socialshare__row--expanded> <div> <p>Share episode</p> <a ng-repeat=\\\"provider in $ctrl.providers\\\" class=button ng-click=$ctrl.onShare(provider) ng-class=\\\"'button-' + provider\\\"> </a> </div> <div> <p>Copy link</p> <div class=socialshare__clipboard> <np-clipboard light=true custom-notice=true on-copy=$ctrl.ontextCopied($event) source-text={{$ctrl.stubUrl}}> </np-clipboard> <div ng-if=$ctrl.textCopied> <span class=\\\"button button-text-copied\\\"></span> <span class=text--notice>(Link copied to clipboard)</span> </div> </div> </div> <np-modal wrapper-class=email-modal__wrapper modal-class=email-modal__content ng-if=$ctrl.emailshareExpanded> <form name=emailshareForm> <div class=socialshare__email-row> <div class=socialshare__email-from> <span> <label for=ssFromName>From name</label> <input type=text id=ssFromName ng-model=email.from_name required/> </span> <span> <label for=ssFromEmail>From email</label> <input type=email id=ssFromEmail ng-model=email.from_email_address required/> </span> </div> <div class=socialshare__email-to> <span> <label for=ssToName>To name</label> <input id=ssToName type=text ng-model=email.to_name required/> </span> <span> <label for=ssToEmail>To email</label> <input type=email id=ssToEmail ng-model=email.to_email_address required/> </span> </div> <div class=socialshare__email-subject> <span> <label for=ssSubject>Subject</label> <input type=text id=ssSubject ng-init=\\\"email.subject = $ctrl.shareTitle\\\" ng-model=email.subject required/> </span> </div> <div class=socialshare__email-message> <label for=ssMessage>Message</label> <textarea id=ssMessage ng-model=email.message required></textarea> </div> <div class=socialshare__email-sender-copy> <span> <input type=checkbox id=ssSenderCopy ng-init=\\\"email.sender_copy = true\\\" ng-model=email.sender_copy /> <label for=ssSenderCopy>Send me a copy</label> </span> </div> <div class=socialshare__email-buttons> <button ng-click=\\\"$ctrl.handleEmailShare(email, emailshareForm)\\\" type=submit>Send email</button> <button ng-click=$ctrl.toggleEmailshare()>Close</button> </div> </div> </form> </np-modal> </div> </div> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/scripts/directives/socialshare/social-share.html\n// module id = JoBD\n// module chunks = 0","var path = 'templates/auth.html';\nvar html = \"<div itt-login style=margin:2em> <a style=\\\"animation:delayedFadeIn 5s\\\" href=/#/ >Home</a> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/auth.html\n// module id = JtGx\n// module chunks = 0","var path = 'templates/producer/item/sxs-video.html';\nvar html = \"<span class=\\\"eventIcon icon-video\\\"></span> <np-url-field data=item label=\\\"Video url\\\" context=editor-video itt-item-form=ittItemForm></np-url-field> <itt-title-field do-validate=false data=item itt-item-form=ittItemForm></itt-title-field> <itt-description-field data=item></itt-description-field> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/item/sxs-video.html\n// module id = K96E\n// module chunks = 0","var path = 'templates/item/sxs-link.html';\nvar html = \"<div class=\\\"itemTemplate sxs-item\\\"> <a class=edit-event ng-click=editItem() ng-if=item.editableByThisUser>[Edit]</a> <div class=avatar> <img ng-src=\\\"{{item.avatar.url || appState.noAvatar }}\\\"> </div> <div class=itemHead> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <a ng-if=handleOutgoingLinkDisplay() class=escapelink ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.title.en ||'(Untitled)'\\\"></a> <h3 ng-if=!handleOutgoingLinkDisplay() ng-bind-html=\\\"item.title.en ||'(Untitled)'\\\"></h3> <div class=text ng-bind-html=item.description.en></div> <div class=itemDetail ng-if=\\\"item.url && !handleOutgoingLinkDisplay() && item.url != 'https://'\\\"> <div class=modalmenu> <a ng-click=outgoingLink(item.url) class=escapelink>(new window)</a> </div> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/sxs-link.html\n// module id = KP/u\n// module chunks = 0","var path = 'templates/producer/inputi18n.html';\nvar html = \"<input ng-if=\\\"inputtype=='input'\\\" ng-model=field[appState.lang] name={{textangularname}} ng-required=doValidate> <text-angular ng-if=\\\"inputtype=='textarea'\\\" name={{textangularname}} ng-required=doValidate ng-model=field[appState.lang] ta-paste=sanitizePastedHtml($html) ta-default-wrap=span ng-blur=trim()></text-angular> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/inputi18n.html\n// module id = LSM6\n// module chunks = 0","var path = 'templates/producer/item/sxs-annotation.html';\nvar html = \" <span class=\\\"eventIcon icon-comment\\\"></span> <div class=field> <div class=label>Comment </div> <div class=input sxs-input-i18n=item.annotation autofocus x-inputtype=\\\"'textarea'\\\"></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/item/sxs-annotation.html\n// module id = N29+\n// module chunks = 0","var path = 'templates/producer/item/sxs-question.html';\nvar html = \"<span class=\\\"eventIcon icon-question\\\"></span> <div class=field> <div class=label>Question type </div> <div class=input> <select ng-model=item.data._plugin.questiontype> <option value=mc-poll>Poll</option> <option value=mc-formative>Formative</option> </select> </div> </div> <div class=field> <div class=label>Question text </div> <div class=input autofocus sxs-input-i18n=item.data._plugin.questiontext x-inputtype=\\\"'textarea'\\\"></div> </div> <div class=field> <div class=label>Question Title </div> <div class=input> <input type=text ng-model=item.title.en autofocus> </div> </div> <div class=field> <div class=label>Image (optional) </div> <div class=input ng-include=\\\"'templates/producer/upload-sxs.html'\\\"> </div> </div> <div class=field ng-repeat=\\\"distractor in item.data._plugin.distractors track by $index\\\"> <div class=label> {{$index | alpha}} &nbsp; <input type=checkbox ng-model=distractor.correct ng-if=\\\"item.data._plugin.questiontype == 'mc-formative'\\\"> </div> <div class=input sxs-input-i18n=distractor.text x-inputtype=\\\"'textarea'\\\"></div> </div> <div class=field> <div class=input> <button ng-click=addDistractor($event)>Add distractor</button> </div> </div> <div class=field ng-if=\\\"item.data._plugin.questiontype == 'mc-formative'\\\"> <div class=label>Feedback when correct </div> <div class=input sxs-input-i18n=item.data._plugin.correctfeedback x-inputtype=\\\"'textarea'\\\"></div> </div> <div class=field ng-if=\\\"item.data._plugin.questiontype == 'mc-formative'\\\"> <div class=label>Feedback when incorrect </div> <div class=input sxs-input-i18n=item.data._plugin.incorrectfeedback x-inputtype=\\\"'textarea'\\\"></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/item/sxs-question.html\n// module id = NnMI\n// module chunks = 0","var path = 'templates/item/image-fill.html';\nvar html = \" <a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=\\\"itemTemplate imageFill\\\" ng-style=\\\"{'background-image': 'url(' + item.asset.cssBgUrl + ')'}\\\"> <img class=fillImg ng-src={{item.asset.url}}> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/image-fill.html\n// module id = O4Bc\n// module chunks = 0","var path = 'templates/item/image-caption-sliding.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"captionContainer touchable\\\"> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> <div class=\\\"caption slidingcaption\\\"> <div class=\\\"title item__title item__title--image item__title--image-caption-sliding\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div class=\\\"text item__text item__text--image item__text--image-caption-sliding\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/image-caption-sliding.html\n// module id = OCYu\n// module chunks = 0","var path = 'templates/navpanel.html';\nvar html = \"<span class=navPanel> <div class=parent ng-repeat=\\\"parent in episode.parents\\\" ng-bind-html=parent.display_name></div> <div class=scene x-ng-if=scene.display_title x-ng-repeat=\\\"scene in episode.scenes\\\" x-ng-class=\\\"{currentScene: scene.isCurrent}\\\" x-ng-click=seek(scene.start_time)> <span class=displayTime>{{scene.displayStartTime}}</span> <p> <button class=fakeLink tabindex=0 ng-bind-html=scene.display_title x-ng-class=\\\"{sceneLink: !scene.isCurrent}\\\" ng-focus=showControls()></button> <br> <span ng-bind-html=scene.display_description></span> </p> </div> <div class=crossEpisode> <a class=prevEpisode ng-if=episode.previousEpisodeContainer ng-href=/#/{{appState.crossEpisodePath}}/{{episode.previousEpisodeContainer.episodes[0]}} title={{episode.previousEpisodeContainer.display_name}}>Previous episode</a> <a class=nextEpisode ng-if=episode.nextEpisodeContainer ng-href=/#/{{appState.crossEpisodePath}}/{{episode.nextEpisodeContainer.episodes[0]}} title={{episode.nextEpisodeContainer.display_name}}>Next Episode</a> </div> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/navpanel.html\n// module id = Of5n\n// module chunks = 0","var map = {\n\t\"./socialshare/social-share.html\": \"JoBD\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"Ogf/\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/scripts/directives \\.html$\n// module id = Ogf/\n// module chunks = 0","var path = 'view-modes/video/video.html';\nvar html = \"<div itt-magnetized class=\\\"pane videoContainer\\\"> <span ng-if=\\\"episode.swap && episode.replacingMasterAsset\\\" style=visibility:hidden> <itt-video class=\\\"video contentLayer\\\" media-src-arr=episode.swap.mediaSrcArr poster=episode.poster player-id=episode.swap._id main-player=true> </itt-video> </span> <span ng-if=\\\"episode.masterAsset && !episode.replacingMasterAsset\\\"> <itt-video class=\\\"video contentLayer\\\" media-src-arr=episode.masterAsset.mediaSrcArr poster=episode.poster player-id=episode.masterAsset._id main-player=true> </itt-video> </span> <div class=\\\"pane fill overlay fgLayer\\\"> <div ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item class=\\\"item animate\\\" ng-repeat=\\\"item in episode.items | itemLayout:'videoOverlay' | isCurrent\\\"> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/view-modes/video/video.html\n// module id = Qi2g\n// module chunks = 0","var path = 'templates/producer/item/sxs-image.html';\nvar html = \"<span class=\\\"eventIcon icon-image\\\"></span> <div class=field> <div class=label>Title </div> <div class=input> <input type=text ng-model=item.title.en autofocus> </div> </div> <div class=field> <div class=label>Image </div> <div class=input ng-include=\\\"'templates/producer/upload-sxs.html'\\\"> </div> </div> <div class=field> <div class=label>Description </div> <div class=input sxs-input-i18n=item.description x-inputtype=\\\"'textarea'\\\"></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/item/sxs-image.html\n// module id = RMtA\n// module chunks = 0","var path = 'templates/item/file.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text item__text--file\\\"> <div class=\\\"title item__title item__title--file\\\"> <a role=button tabindex=0 x-ng-keypress=toggleDetailOnKeyPress($event) ng-click=toggleDetailView() ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <div class=\\\"item__text item__text--file\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <div class=itemDetail ng-if=item.showInlineDetail> <span ng-switch=\\\"item.asset.content_type.indexOf('image/')\\\"> <span ng-switch-when=-1> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.asset.url,$event) ng-click=outgoingLink(item.asset.url) class=\\\"escapelink item__link--escape-link\\\">(new window)</a> <itt-iframe x-src={{item.asset.url}} item=item x-contenttype={{item.asset.content_type}}></itt-iframe> </span> <span ng-switch-default> <img ng-src={{item.asset.url}}> </span> </span> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/file.html\n// module id = SwK8\n// module chunks = 0","var path = 'templates/item/sxs-file.html';\nvar html = \"<div class=\\\"itemTemplate sxs-item\\\"> <a class=edit-event ng-click=editItem() ng-if=item.editableByThisUser>[Edit]</a> <div class=avatar> <img ng-src=\\\"{{item.avatar.url || appState.noAvatar}}\\\"> </div> <div class=itemHead> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <a ng-click=outgoingLink(item.asset.url) ng-bind-html=\\\"item.title.en ||'(Untitled)'\\\"></a> <div class=text ng-bind-html=item.description.en></div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/sxs-file.html\n// module id = TEP0\n// module chunks = 0","var path = 'templates/item/transcript-withthumbnail.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=\\\"itemTemplate transcript\\\"> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> </div> <div class=icon style=float:left;margin-right:.5em> <img ng-if=item.asset.url ng-src={{item.asset.url}}> <div class=clear></div> </div> <div class=\\\"authorName item__title\\\" ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> <div class=\\\"text item__text\\\" ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/transcript-withthumbnail.html\n// module id = UW+C\n// module chunks = 0","var path = 'templates/producer/addcontent.html';\nvar html = \"<div ng-show=\\\"!appState.editEvent && !appState.editEpisode\\\" class=controlPanel ng-class=\\\"{\\n\\tisProducer: appState.product == 'producer',\\n\\tisSxS: appState.product == 'sxs'\\n}\\\"> <div ng-if=\\\"appState.product == 'producer'\\\" class=editButtonPanel> <a class=\\\"button button-episode\\\" ng-click=editEpisode()>Edit episode</a> <a class=\\\"button button-scene\\\" ng-if=\\\"playbackService.getMetaProp('time') > 0  && playbackService.getMetaProp('time') < (playbackService.getMetaProp('duration') - 0.1) && appState.viewMode == 'discover'\\\" ng-click=editCurrentScene()>Edit Layout</a> </div> <div class=\\\"producer addButtonPanel\\\" ng-show=\\\"!item && playbackService.getMetaProp('time') > 0 && playbackService.getMetaProp('time') < (playbackService.getMetaProp('duration') - 0.1) \\\"> <span ng-if=expanded style=\\\"padding:0 1em\\\" class=\\\"animate transitionExpandW\\\"> <span ng-if=\\\"appState.product == 'sxs'\\\"> <a class=\\\"button button-comment\\\" ng-click=\\\"addEvent('annotation')\\\">Comment</a> <a class=\\\"button button-link\\\" ng-click=\\\"addEvent('link')\\\">Link</a> <a class=\\\"button button-question\\\" ng-click=\\\"addEvent('question')\\\">Question</a> <a class=\\\"button button-image\\\" ng-click=\\\"addEvent('image')\\\">Image</a> <a class=\\\"button button-file\\\" ng-click=\\\"addEvent('file')\\\">File</a> <a class=\\\"button button-video\\\" ng-click=\\\"addEvent('video')\\\">Video</a> </span> <span ng-if=\\\"appState.product == 'producer'\\\"> <a class=\\\"button button-scene\\\" ng-click=\\\"addEvent('scene')\\\">Layout</a> <a class=\\\"button button-comment\\\" ng-click=\\\"addEvent('transcript')\\\">Transcript</a> <a class=\\\"button button-comment\\\" ng-click=\\\"addEvent('annotation')\\\">Annotation</a> <a class=\\\"button button-link\\\" ng-click=\\\"addEvent('link')\\\">Link</a> <a class=\\\"button button-image\\\" ng-click=\\\"addEvent('image')\\\">Image</a> <a class=\\\"button button-file\\\" ng-click=\\\"addEvent('file')\\\" ng-if=\\\"userHasRole('admin') || userHasRole('customer admin')\\\">File</a> <a class=\\\"button button-question\\\" ng-click=\\\"addEvent('question')\\\">Question</a> <a class=\\\"button button-chapter\\\" ng-click=\\\"addEvent('chapter')\\\">Chapter</a> </span> </span> <span ng-if=!expanded> <a class=\\\"button button-add\\\" ng-click=expand()>Add</a> </span> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/addcontent.html\n// module id = V8p6\n// module chunks = 0","var path = 'templates/user.html';\nvar html = \"<div class=userHome> <div class=user__info> <div class=user__item> <div class=user__label>Role</div> <h4>{{user.role_description}}</h4> <hr> </div> <div clas=user__item> <div class=user__label>Name</div> <np-edit-pencil can-access=true on-edit=toggleEditing() ng-if=!isEditing> <p>{{user.name}}</p> </np-edit-pencil> <div ng-if=isEditing> <input class=userEditable ng-model=user.name> <button class=button ng-click=\\\"updateUser(); toggleEditing()\\\">save</button> <button class=button ng-click=toggleEditing()>cancel</button> </div> <hr> </div> <div class=user__item ng-if=!isTrueGuest()> <div class=user__label>Email</div> <div>{{user.email}}</div> <hr> </div> <div class=user__item ng-if=!isTrueGuest()> <div class=user__avatar> <div class=user__label>Avatar</div> <div> <img ng-src=\\\"{{appState.user.avatar || appState.noAvatar }}\\\"> </div> <div ng-if=\\\"showUploadField && !uploads\\\"> <input type=file accept=image/* itt-files-handler on-selected=uploadAvatar(files)> </div> <button class=button ng-click=toggleUploadAvatar()>{{showUploadField ? 'cancel' : 'replace'}}</button> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/user.html\n// module id = VUBB\n// module chunks = 0","module.exports = __webpack_public_path__ + \"images/autoscroll.417c83d1f0b2eb6bceb7e048e66ede9d.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/images/autoscroll.svg\n// module id = WeeJ\n// module chunks = 0","var path = 'templates/producer/inputtime.html';\nvar html = \"<span class=floaterContainer> <input class=inputfield ng-model=model name=time ng-focus=showTools(true) ng-blur=showTools(false) ng-model-options=\\\"{ updateOn: 'blur' }\\\" style=max-width:150px ng-class=\\\"{invalid: (fieldname == 'end_time' && item.invalid_end_time)}\\\"> <div class=floater ng-if=tooltip> <ul style=list-style:none;white-space:nowrap> <li style=text-align:center;font-size:150%> <a ng-click=nudge(-5)>«</a> <a ng-click=nudge(-1)>‹</a> <span> &nbsp;&nbsp; </span> <a ng-click=nudge(1)>›</a> <a ng-click=nudge(5)>»</a> </li> <li ng-click=\\\"setTime(playbackService.getMetaProp('time'))\\\"> <a>Set to current time ({{::format(playbackService.getMetaProp('time'))}})</a> </li> <span ng-if=\\\"item._type != 'Scene' && scene().start_time > 0\\\"> <li ng-if=\\\"fieldname=='start_time'\\\" ng-click=setTime(scene().start_time)> <a>Beginning of layout ({{format(scene().start_time)}})</a> </li> <li ng-if=\\\"fieldname=='end_time'\\\" ng-click=setTime(scene().end_time)> <a>End of layout ({{format(scene().end_time)}})</a> </li> <li ng-if=\\\"fieldname=='end_time' && isTranscript()\\\" ng-click=TODO> <a>Auto (TODO)</a> </li> </span> </ul> </div> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/inputtime.html\n// module id = X9vo\n// module chunks = 0","var path = 'templates/item/review-all.html';\nvar html = \" <span ng-switch=\\\"(item._type == 'Annotation' && item.templateUrl != 'templates/item/text-transmedia.html' && item.templateUrl != 'templates/item/text-definition.html')\\\"> <span ng-switch-when=true> <div ng-include=\\\"'templates/item/review-annotation.html'\\\"></div> </span> <span ng-switch-default> <div ng-include=\\\"'templates/item/review-transmedia.html'\\\"></div> </span> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/review-all.html\n// module id = XOLC\n// module chunks = 0","var path = 'templates/video.html';\nvar html = \" <div class=np-video ng-if=\\\"$ctrl.mediaSrcArr.length > 0\\\" ng-class=\\\"{'np--embed': $ctrl.mainPlayer === false}\\\"> <div class=np-video__overlay-ui ng-if=$ctrl.showMask() ng-class=$ctrl.setCssClass() ng-click=$ctrl.videoClick()> </div> <div class=np-video__wrapper> <div class=np-video__element ng-bind-html=::$ctrl.playerElement></div> </div> <div class=\\\"poster overlay fill\\\" ng-if=\\\"$ctrl.poster && $ctrl.playbackService.getMetaProp('time') === 0\\\" ng-style=\\\"{backgroundImage:'url('+$ctrl.poster.url+')'}\\\"> </div> </div> <div ng-if=\\\"$ctrl.mediaSrcArr.length < 1\\\" class=np-video__empty> <div ng-if=\\\"$ctrl.isTranscoded === false\\\"> <h3>Video is currently transcoding.</h3> <p>The page will refresh when the transcode is complete!</p> </div> <h1 ng-if=\\\"$ctrl.isTranscoded === true\\\"> No video source available... </h1> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/video.html\n// module id = XP8H\n// module chunks = 0","var path = 'templates/item/text-h1.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=\\\"itemTemplate headerItem\\\"> <div class=category></div> <div class=\\\"item__text item__text--h1\\\"> <h1 ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></h1> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/text-h1.html\n// module id = Y+RF\n// module chunks = 0","var path = 'templates/item/question-mc.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text item__text--question-mc\\\"> <div class=\\\"title item__title item__title--question-mc\\\" ng-if=\\\"item.display_title | highlightSubstring: appState.searchText\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div ng-if=item.asset.url class=touchable style=float:right;max-width:50%;padding-right:.5em> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> <itt-mc-question show-chart=\\\"item.data._plugin.questiontype == 'mc-poll'\\\" choices=item.data._plugin.distractors on-choice=save data=item.data._plugin qid=item._id></itt-mc-question> <div class=clear></div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/question-mc.html\n// module id = YALA\n// module chunks = 0","var path = 'templates/item/image-plain.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=touchable> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/image-plain.html\n// module id = Youv\n// module chunks = 0","var path = 'templates/scene/centerVV-mondrial.backup.html';\nvar html = \" <div class=\\\"scene centerVV-mondrian\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=col> <div class=\\\"pane altPane stretchToViewport\\\"> <div class=\\\"fill bgLayer bg-alt\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (altContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (altContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: altContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: altContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: altContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate mondrian\\\" ng-repeat=\\\"item in showCurrent ? (altContentItems | isCurrent) : altContentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in altFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> <div class=col> <div class=\\\"fill bgLayer bg-main\\\"> <div ng-if=\\\"currentMainBgItems.length > 0\\\" class=\\\"item animate\\\" ng-repeat=\\\"item in currentMainBgItems = (mainBgItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div ng-if=\\\"currentMainBgItems.length === 0\\\"> <div class=static-bg__main--mondrian></div> </div> </div> <div itt-magnet class=videoMagnet> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \"> </div> <div class=\\\"pane mainPane\\\"> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{isNarrow: isNarrow, isEmpty: mainContentItems.length == 0}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainItems = (mainContentItems | isCurrent | filter:byPullquoteOrH2 )\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/scene/centerVV-mondrial.backup.html\n// module id = Ypjs\n// module chunks = 0","var path = 'templates/scene/centerVV-Mondrian.html';\nvar html = \" <div class=\\\"scene centerVV-mondrian\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=col> <div class=static-bg__alt ng-style=\\\"setBgImgUrl(scene.items, 'mainCol')\\\"></div> <div itt-magnet class=videoMagnet> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \"> </div> <div class=\\\"pane altPane stretchToViewport\\\"> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{singleitem: mainContentItems.length==1, isNarrow: isNarrow, isEmpty: mainContentItems.length == 0}\\\" itt-width-watch> <div class=\\\"item animate centerVV-h2\\\" ng-repeat=\\\"item in mainItems = (mainContentItems | isCurrent | filter:byPullquoteOrH2)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> </div> </div> <div class=col> <div class=static-bg__main ng-style=\\\"setBgImgUrl(scene.items, 'altCol')\\\"></div> <div class=\\\"pane mainPane\\\"> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (altContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (altContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: altContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: altContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: altContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in showCurrent ? (altContentItems | isCurrent) : altContentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/scene/centerVV-Mondrian.html\n// module id = YxFl\n// module chunks = 0","var map = {\n\t\"./auth.html\": \"JtGx\",\n\t\"./container.html\": \"w5Vi\",\n\t\"./copyright.html\": \"HyaP\",\n\t\"./error-404.html\": \"eSLu\",\n\t\"./error.html\": \"GUWn\",\n\t\"./iframe.html\": \"iEyP\",\n\t\"./item/caption.html\": \"2/3b\",\n\t\"./item/debug.html\": \"GGxq\",\n\t\"./item/file-withimage.html\": \"FFkw\",\n\t\"./item/file.html\": \"SwK8\",\n\t\"./item/image-caption-sliding.html\": \"OCYu\",\n\t\"./item/image-caption.html\": \"rdiM\",\n\t\"./item/image-fill.html\": \"O4Bc\",\n\t\"./item/image-inline-withtext.html\": \"asq8\",\n\t\"./item/image-linkonly.html\": \"qpRi\",\n\t\"./item/image-plain.html\": \"Youv\",\n\t\"./item/image-thumbnail.html\": \"7XCA\",\n\t\"./item/image.html\": \"CVkk\",\n\t\"./item/link-descriptionfirst.html\": \"IL3w\",\n\t\"./item/link-embed.html\": \"Jetm\",\n\t\"./item/link-modal-thumb.html\": \"JnVu\",\n\t\"./item/link-withimage-notitle.html\": \"un+J\",\n\t\"./item/link.html\": \"zuiT\",\n\t\"./item/modal.html\": \"+o/S\",\n\t\"./item/pullquote-noattrib.html\": \"wXer\",\n\t\"./item/pullquote.html\": \"84qX\",\n\t\"./item/question-mc-inner.html\": \"0ePo\",\n\t\"./item/question-mc.html\": \"YALA\",\n\t\"./item/review-all.html\": \"XOLC\",\n\t\"./item/review-annotation.html\": \"G4Wk\",\n\t\"./item/review-transmedia.html\": \"phYv\",\n\t\"./item/review-windowfg.html\": \"eQIm\",\n\t\"./item/searchresults-all.html\": \"55GB\",\n\t\"./item/searchresults.html\": \"JkHQ\",\n\t\"./item/sxs-annotation.html\": \"2+b9\",\n\t\"./item/sxs-file.html\": \"TEP0\",\n\t\"./item/sxs-image.html\": \"vxq4\",\n\t\"./item/sxs-link.html\": \"KP/u\",\n\t\"./item/sxs-question.html\": \"gr72\",\n\t\"./item/sxs-video.html\": \"q06B\",\n\t\"./item/text-definition.html\": \"AZay\",\n\t\"./item/text-h1.html\": \"Y+RF\",\n\t\"./item/text-h2.html\": \"kvzn\",\n\t\"./item/text-transmedia.html\": \"3gcz\",\n\t\"./item/transcript-withthumbnail.html\": \"UW+C\",\n\t\"./item/transcript.html\": \"7GUz\",\n\t\"./item/usc-badges-inner.html\": \"nd4G\",\n\t\"./item/usc-badges.html\": \"dt7p\",\n\t\"./narrative/default.html\": \"6ze8\",\n\t\"./narrativelist.html\": \"4bbU\",\n\t\"./navpanel.html\": \"Of5n\",\n\t\"./player-timeline.html\": \"x+pf\",\n\t\"./player.html\": \"p3P+\",\n\t\"./producer/addcontent.html\": \"V8p6\",\n\t\"./producer/annotator-autocomplete.html\": \"EDO7\",\n\t\"./producer/asset-uploader.html\": \"emMF\",\n\t\"./producer/container-assets.html\": \"rLXe\",\n\t\"./producer/episode.html\": \"cBzx\",\n\t\"./producer/inputi18n.html\": \"LSM6\",\n\t\"./producer/inputtime.html\": \"X9vo\",\n\t\"./producer/item.html\": \"p2SB\",\n\t\"./producer/item/sxs-annotation.html\": \"N29+\",\n\t\"./producer/item/sxs-file.html\": \"cWz7\",\n\t\"./producer/item/sxs-image.html\": \"RMtA\",\n\t\"./producer/item/sxs-link.html\": \"rGHM\",\n\t\"./producer/item/sxs-question.html\": \"NnMI\",\n\t\"./producer/item/sxs-video.html\": \"K96E\",\n\t\"./producer/questionauthoring.html\": \"AiEB\",\n\t\"./producer/upload-masterasset.html\": \"AeV0\",\n\t\"./producer/upload-poster.html\": \"gJY5\",\n\t\"./producer/upload-producer.html\": \"GeQP\",\n\t\"./producer/upload-sxs.html\": \"fJsy\",\n\t\"./root.html\": \"CQGL\",\n\t\"./scene/1col.html\": \"rfeV\",\n\t\"./scene/centerVV-Mondrian.html\": \"YxFl\",\n\t\"./scene/centerVV-mondrial.backup.html\": \"Ypjs\",\n\t\"./scene/centerVV.html\": \"cm1R\",\n\t\"./scene/centered.html\": \"mbIM\",\n\t\"./scene/centeredPro.html\": \"qZRx\",\n\t\"./scene/cornerH.html\": \"GoGc\",\n\t\"./scene/cornerV.html\": \"JTcP\",\n\t\"./scene/debug.html\": \"mNIM\",\n\t\"./scene/endingscreen.html\": \"liE5\",\n\t\"./scene/landingscreen.html\": \"D/IP\",\n\t\"./scene/mirrored-twocol.html\": \"F5VT\",\n\t\"./scene/pip.html\": \"uFtN\",\n\t\"./searchpanel.html\": \"sGzq\",\n\t\"./testbed-event.html\": \"888c\",\n\t\"./timeline-story.html\": \"9ij1\",\n\t\"./toolbar-story.html\": \"1Wv5\",\n\t\"./user.html\": \"VUBB\",\n\t\"./video.html\": \"XP8H\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"ZcPu\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates \\.html$\n// module id = ZcPu\n// module chunks = 0","var path = 'templates/item/image-inline-withtext.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text\\\"> <div class=\\\"title item__title item__title--image-inline-with-text\\\" ng-if=\\\"item.display_title | highlightSubstring: appState.searchText\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div class=touchable> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> <div class=\\\"item__text item__text--image text--inline-with-text\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> <div class=clear></div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/image-inline-withtext.html\n// module id = asq8\n// module chunks = 0","var map = {\n\t\"./discover-mode/discovermode.html\": \"vjhS\",\n\t\"./review-mode-scenes/reviewmode-scenes.html\": \"hs0e\",\n\t\"./review-mode/reviewmode.html\": \"mrOr\",\n\t\"./video/video.html\": \"Qi2g\",\n\t\"./watch-mode/watchmode.html\": \"AxNG\",\n\t\"./windowfg/windowfg.html\": \"lVoZ\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"bKzE\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/view-modes \\.html$\n// module id = bKzE\n// module chunks = 0","var path = 'templates/producer/episode.html';\nvar html = \"<div class=\\\"itemEdit authoringForm\\\"> <form name=ittEpisodeForm class=doValidate> <div ng-if=\\\"appState.product == 'producer'\\\"> <div class=ittTabs itt-tabs> <div class=ittTab itt-tab title=Episode> <div class=field ng-hide=\\\"!userHasRole('admin')\\\"> <div class=label>Master asset type</div> <div class=input> <select size=1 ng-model=masterAssetType> <option value=Video>Native Video</option> <option value=WebUrl>Youtube / Kaltura / Wistia</option> </select> </div> </div> <div class=field ng-if=\\\"masterAssetType == 'Video' && userHasRole('admin')\\\"> <div class=label>Video</div> <div class=input ng-include=\\\"'templates/producer/upload-masterasset.html'\\\"></div> </div> <np-url-field label=\\\"Video URL\\\" ng-if=\\\"masterAssetType === 'WebUrl'\\\" data=::masterAsset.mediaSrcArr[0] context=episode on-attach=attachMediaSrc($url)> </np-url-field> <div class=field ng-if=showmessage> <div class=input ng-bind-html=showmessage></div> </div> <itt-title-field data=episode model-opts=\\\"{ debounce: 500 }\\\" do-validate=true itt-item-form=ittEpisodeForm></itt-title-field> <itt-description-field data=episode model-opts=\\\"{debounce: 50}\\\"></itt-description-field> <div class=field ng-if=\\\"userHasRole('admin')\\\"> <div class=label>Poster image </div> <div class=input ng-include=\\\"'templates/producer/upload-poster.html'\\\"> </div> </div> <div class=field> <div class=label>Status</div> <div class=input> <select size=1 ng-model=episode.status> <option value=Published>Published</option> <option value=Unpublished>Unpublished</option> </select> </div> </div> <itt-language-flags></itt-language-flags> <itt-language-select ng-if=\\\"languageCount > 1\\\" data=episode lang-form=langForm> </itt-language-select> <div class=field ng-if=\\\"episode.languages.length > 1\\\"> <div class=label>Current Language</div> <div class=input> <select size=1 ng-model=appState.lang ng-change=forcePreview() ng-options=\\\"language.code as ('['+language.code.toUpperCase()+']') for language in episode.languages\\\"> </select> </div> </div> <div class=field ng-if=\\\"userHasRole('admin') && episode.languages.length > 1\\\"> <div class=label>Translations</div> <div class=input ng-if=\\\"doCheckForTranslations == null\\\"> {{translationMessage(episode.languages)}} <button ng-click=beginBackgroundTranslations(episode._id)>Begin translation</button> </div> <div ng-if=\\\"doCheckForTranslations === true\\\"> {{afterTranslationAttempt}} </div> </div> <itt-upload-transcripts ng-if=\\\"episode.master_asset_id && !episode._master_asset_was_changed  && (userHasRole('admin') || userHasRole('customer admin'))\\\" episode-id={{episode._id}}> </itt-upload-transcripts> </div> <div class=ittTab itt-tab title=Style> <np-template-select data=episode on-episode-edit=updateEpisodeTemplate($data)></np-template-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> </div> </div> <div class=ittTabFoot> <a ng-click=cancelEdit()>Cancel</a> &nbsp; &nbsp; <button ng-click=saveEpisode() ng-disabled=\\\"blockDoubleClicks || ittEpisodeForm.$invalid\\\">Save</button> </div> </form> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/episode.html\n// module id = cBzx\n// module chunks = 0","var path = 'templates/producer/item/sxs-file.html';\nvar html = \"<span class=\\\"eventIcon icon-file\\\"></span> <div class=field> <div class=label>Title </div> <div class=input> <input type=text ng-model=item.title.en autofocus> </div> </div> <div class=field> <div class=label>File </div> <div class=input ng-include=\\\"'templates/producer/upload-sxs.html'\\\"> </div> </div> <div class=field> <div class=label>Description </div> <div class=input sxs-input-i18n=item.description x-inputtype=\\\"'textarea'\\\"></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/item/sxs-file.html\n// module id = cWz7\n// module chunks = 0","var path = 'templates/scene/centerVV.html';\nvar html = \" <div class=\\\"scene centerVV\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=col> <div class=static-bg__main ng-style=\\\"setBgImgUrl(scene.items, 'mainCol')\\\"></div> <div itt-magnet class=videoMagnet> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \"> </div> <div class=\\\"pane mainPane\\\"> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{singleitem: mainContentItems.length==1, isNarrow: isNarrow, isEmpty: mainContentItems.length == 0}\\\" itt-width-watch> <div class=\\\"item animate centerVV-h2\\\" ng-repeat=\\\"item in mainItems = (mainContentItems | isCurrent | filter:byPullquoteOrH2)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> </div> </div> <div class=col> <div class=static-bg__alt ng-style=\\\"setBgImgUrl(scene.items, 'altCol')\\\"></div> <div class=\\\"pane altPane stretchToViewport\\\"> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (altContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (altContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: altContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: altContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: altContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in showCurrent ? (altContentItems | isCurrent) : altContentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/scene/centerVV.html\n// module id = cm1R\n// module chunks = 0","var path = 'templates/item/usc-badges.html';\nvar html = \"<div class=\\\"itemTemplate uscBadges\\\"> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> </div> <span ng-include=\\\"'templates/item/usc-badges-inner.html'\\\"></span> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/usc-badges.html\n// module id = dt7p\n// module chunks = 0","var path = 'templates/item/review-windowfg.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=text> <div class=title> <a tabindex=0 ng-click=seek(item.start_time) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <div class=text ng-if=\\\"item.data._plugin._type == 'question'\\\"> You have <span ng-if=!item.data._plugin.hasBeenAnswered> not yet </span> answered this <span ng-if=\\\"item.data._plugin.questiontype == 'mc-poll'\\\"> poll </span> question. </div> <div class=text ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> <div class=clear></div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/review-windowfg.html\n// module id = eQIm\n// module chunks = 0","var path = 'templates/error-404.html';\nvar html = \"<div class=errors> <div class=error> <h3>Error: no such route</h3> <p><i>404. File not found. Sorry!</i></p> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/error-404.html\n// module id = eSLu\n// module chunks = 0","var path = 'templates/producer/asset-uploader.html';\nvar html = \"<div class=assetUploader> <div ng-if=$ctrl.uploads.length> <div class=uploadList ng-repeat=\\\"upload in $ctrl.uploads\\\"> <span class=uploadName> {{$ctrl.uploadStatus[$index].name}}: </span> <span class=uploadProgress> <span ng-if=$ctrl.uploadStatus[$index].done>Upload complete</span> <div ng-if=$ctrl.uploadStatus[$index].error>Error</div> <span ng-if=\\\"!$ctrl.uploadStatus[$index].done && !$ctrl.uploadStatus[$index].error\\\"> <progress ng-attr-max={{$ctrl.uploadStatus[$index].bytesTotal}} ng-attr-value={{$ctrl.uploadStatus[$index].bytesSent}}> </progress> <span ng-switch=$ctrl.uploadStatus[$index].percent> <span ng-switch-when=100>...</span> <span ng-switch-default>{{$ctrl.uploadStatus[$index].percent}}%</span> </span> </span> </span> <div ng-if=$ctrl.uploadStatus[$index].error>{{$ctrl.uploadStatus[$index].error}}</div> </div> <span ng-if=\\\"$ctrl.uploadsinprogress > 0\\\">{{$ctrl.uploadsinprogress}} files remaining <button ng-if=!$ctrl.paused ng-click=$ctrl.pauseUpload()>Pause</button> <button ng-if=$ctrl.paused ng-click=$ctrl.resumeUpload()>Resume</button> <button ng-click=$ctrl.cancelUpload()>Cancel</button> </span> </div> <div ng-if=$ctrl.errormessage class=error-red ng-bind-html=$ctrl.errormessage></div> <div class=uploadDropTarget> <a style=float:right ng-click=\\\"$ctrl.showInstructions = !$ctrl.showInstructions\\\">(?)</a> Drag and drop <span ng-if=$ctrl.multiple>files</span> <span ng-if=!$ctrl.multiple>a file</span> here <br> <small> or choose <span ng-if=$ctrl.multiple>files</span> <span ng-if=!$ctrl.multiple>a file</span> to upload: <input class=uploadFileInput type=file multiple=true itt-files-handler on-selected=$ctrl.handleUploads(files)> </small> <div ng-if=$ctrl.showInstructions style=text-align:left> <small>{{$ctrl.manPage}}</small> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/asset-uploader.html\n// module id = emMF\n// module chunks = 0","var path = 'templates/producer/upload-sxs.html';\nvar html = \" <div> <div ng-if=\\\"(item.asset) && !showUploadButtons\\\"> {{item.asset.display_name}} <button class=button ng-click=replaceAsset(item.asset._id)> Replace this asset </button> </div> <div ng-if=\\\"showUploadButtons || !(item.asset)\\\"> <itt-asset-uploader ng-if=\\\"item.producerItemType === 'image'\\\" callback=assetUploaded(data)></itt-asset-uploader> <itt-asset-uploader ng-if=\\\"item.producerItemType === 'file'\\\" callback=assetUploaded(data) mime-types=\\\"application/*, text/*, audio/*, model/*\\\" instructions=\\\"We currently accept all non-image or non-video files.\\\" error-text=\\\"Please make sure you are not trying to upload an image or video file.\\\"> </itt-asset-uploader> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/upload-sxs.html\n// module id = fJsy\n// module chunks = 0","var path = 'templates/producer/upload-poster.html';\nvar html = \" <div ng-if=showAssetPicker class=floatAssetPicker> <div class=scrollContainer> <sxs-container-assets container-id={{episodeContainerId}}></sxs-container-assets> </div> <div class=controlsContainer> <button ng-click=endChooseAsset();>Cancel</button> </div> </div> <div> <div ng-if=\\\"episode.poster && !showUploadButtonsPoster\\\"> {{episode.poster.display_name}} <button class=button ng-click=\\\"replaceAsset('Poster')\\\">Replace this</button> </div> <div ng-if=\\\"showUploadButtonsPoster || !episode.poster\\\"> <span ng-if=showUploadFieldPoster> <itt-asset-uploader container-id={{episodeContainerId}} callback=posterUploaded(data)></itt-asset-uploader> </span> <span ng-if=!showUploadFieldPoster> <button class=button ng-click=\\\"chooseAsset('Poster')\\\">Browse uploaded</button> <button class=button ng-click=\\\"toggleUpload('Poster')\\\">Upload new</button> </span> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/upload-poster.html\n// module id = gJY5\n// module chunks = 0","var path = 'templates/item/sxs-question.html';\nvar html = \"<div class=\\\"itemTemplate sxs-item\\\"> <a class=edit-event ng-click=editItem() ng-if=item.editableByThisUser> <span>Edit item</span> </a> <div class=avatar> <img ng-src=\\\"{{item.avatar.url || appState.noAvatar }}\\\"> </div> <div class=itemHead> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <div class=text> <div class=title ng-if=\\\"item.display_title | highlightSubstring: appState.searchText\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div ng-if=item.asset.url class=touchable style=float:right;max-width:50%;padding-right:.5em> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> <itt-mc-question show-chart=\\\"item.data._plugin.questiontype == 'mc-poll'\\\" choices=item.data._plugin.distractors on-choice=save data=item.data._plugin qid=item._id> <div class=clear></div> </itt-mc-question></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/sxs-question.html\n// module id = gr72\n// module chunks = 0","var path = 'view-modes/review-mode-scenes/reviewmode-scenes.html';\nvar html = \"<div class=\\\"scene animate transitionFade\\\" ng-class=\\\"{navigable: scene.display_title}\\\" ng-repeat=\\\"scene in scenes\\\" ng-if=!scene._internal> <div class=\\\"pane mainPane\\\"> <div class=\\\"content allowHighlights\\\" ng-class=\\\"{isNarrow: isNarrow}\\\" itt-width-watch> <h1 class=sceneTitle ng-if=scene.display_title ng-bind-html=scene.display_title></h1> <div ng-if=\\\"appState.windowWidth < 480\\\" class=\\\"item animate\\\" ng-repeat=\\\"item in scene.items| reviewMode | orderBy:'start_time'\\\" ng-class=\\\"item.state + ' ' + item.uscReviewModeHack\\\" itt-item=item forcetemplate=review-all></div> <div ng-if=\\\"appState.windowWidth >= 480\\\" class=\\\"item animate\\\" ng-repeat=\\\"item in scene.items | reviewMode | annotation | orderBy:'start_time'\\\" ng-class=item.state itt-item=item forcetemplate=review-annotation></div> </div> </div> <div ng-if=\\\"appState.windowWidth >= 480\\\" class=\\\"pane altPane\\\"> <div class=\\\"content allowHighlights\\\" ng-class=\\\"{isNarrow: isNarrow}\\\" itt-width-watch> <img ng-if=\\\"$index==1\\\" src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \" class=videoPadding> <div class=\\\"item animate\\\" ng-repeat=\\\"item in scene.items | reviewMode | transmedia\\\" ng-class=\\\"item.state + ' ' + item.uscReviewModeHack\\\" itt-item=item forcetemplate=review-transmedia> </div> </div> </div> </div> <np-loading ng-if=isLoading></np-loading> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/view-modes/review-mode-scenes/reviewmode-scenes.html\n// module id = hs0e\n// module chunks = 0","var path = 'templates/iframe.html';\nvar html = \"<div class=iframeContainer> <np-loading ng-if=$ctrl.isLoading></np-loading> <iframe ng-if=!ctrl.isLoading ng-src={{$ctrl.src}} ng-attr-scrolling={{$ctrl.iOSScroll}} ng-style=$ctrl.styles ng-attr-sandbox={{$ctrl.sandbox}}> </iframe> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/iframe.html\n// module id = iEyP\n// module chunks = 0","var path = 'templates/item/text-h2.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=\\\"itemTemplate headerItem\\\"> <div class=category></div> <div class=\\\"item__text item__text--h2\\\"> <h2 ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></h2> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/text-h2.html\n// module id = kvzn\n// module chunks = 0","var path = 'view-modes/windowfg/windowfg.html';\nvar html = \"<div ng-if=\\\"(episode.items | isCurrent | itemLayout:'windowFg').length > 0\\\" class=\\\"overlay windowFg fgLayer animate transitionFade\\\"> <div class=\\\"content w-modal\\\"> <div ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item class=\\\"item animate timestampNone\\\" ng-repeat=\\\"item in episode.items | isCurrent | itemLayout:'windowFg'\\\"> </div> <a ng-if=!appState.editEvent class=button-continue ng-click=continue()> <span>Continue</span> </a> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/view-modes/windowfg/windowfg.html\n// module id = lVoZ\n// module chunks = 0","var path = 'templates/scene/endingscreen.html';\nvar html = \"<div class=\\\"endingscreen stretchToViewport\\\"> <div class=\\\"pane introtext\\\"> <p>Thanks for watching:&nbsp; <span ng-bind-html=episode.display_title></span> </p> <br> </div> <div itt-magnet class=videoMagnet> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \"> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/scene/endingscreen.html\n// module id = liE5\n// module chunks = 0","/**\n * Created by githop on 3/30/17.\n */\n\nContainerAssetsTestController.$inject = ['$scope', '$routeParams', 'authSvc'];\n\nexport default function ContainerAssetsTestController($scope, $routeParams, authSvc) {\n  $scope.logout = authSvc.logout;\n  $scope.containerId = $routeParams.containerId;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/controllers/ContainerAssetsTestController.ts","import { IAnnotators, ILangForm, ILangformKeys } from './interfaces';\n\n\nimport { TSocialTagTypes } from './constants';\n/**\n * Created by githop on 5/1/17.\n */\n\nabstract class UIAsset {\n  id: string;\n  css_name: string;\n  display_name: string;\n  description?: string;\n  created_at?: Date;\n  updated_at?: Date;\n}\n\nexport class IStyle extends UIAsset { }\nexport class ILayout extends UIAsset { }\n\nexport class ITemplateImage {\n  src: string;\n  alt_text?: string;\n  css_class?: string;\n  url?: string;\n}\n\nexport class ICssConfiguration {\n  _id: string;\n  fill_class?: string;\n  font_configurations: { fallback: string, font_id: string, variant: string, _id: string }[];\n  legacy_logos: ITemplateImage[];\n  legacy_banner_logo: ITemplateImage;\n}\n\nexport class IFont {\n  _id: string;\n  google: { families: string[] };\n}\n\nexport abstract class ITemplate {\n  id: string;\n  name: string;\n  displayName: string;\n  event_types: string[];\n  pro_episode_template?: boolean;\n  applies_to_episodes?: boolean;\n  applies_to_narratives?: boolean;\n  created_at: Date;\n}\n\nexport class IEpisodeTemplate extends ITemplate {\n  type: 'Episode';\n  css?: string;\n  css_configuration?: ICssConfiguration;\n  customer_ids?: string[];\n  fonts?: IFont;\n}\n\nexport class IItemTemplate extends ITemplate {\n  type: 'Annotation' | 'Upload' | 'Link' | 'Plugin';\n  url: string;\n}\n\nexport class ILayoutTemplate extends ITemplate {\n  type: 'Scene';\n  url: string;\n}\n\nexport class IEpisode {\n  _id: string;\n  annotators: IAnnotators;\n  chapters: IChapter[];\n  children: any[];\n  container_id: string;\n  created_at: Date;\n  defaultLanguage: ILangformKeys;\n  description: ILangForm;\n  display_description: string;\n  display_title: string;\n  items: NEvent[];\n  languages: {code: string, default: boolean}[];\n  masterAsset: IAsset;\n  master_asset_id: string;\n  parent_id: string;\n  scenes: IScene[];\n  status: string;\n  styleCss: string;\n  templateCss?: string;\n  style_id: string[];\n  styles: string[];\n  // templateUrl: string;\n  template_id: string;\n  template?: IEpisodeTemplate;\n  title: ILangForm;\n  updated_at: Date;\n  producerItemType?: string;\n\n  setCurrentScene(scene: IScene): void {\n    if (this.scenes && this.scenes.length) {\n      const ci = this.scenes.indexOf(scene);\n      const pre = this.scenes.slice(0, ci);\n      const post = this.scenes.slice(ci + 1);\n\n      scene.setCurrent();\n\n      if (pre.length > 0) {\n        pre.forEach(s => s.setPast());\n      }\n\n      if (post.length > 0) {\n        post.forEach(s => s.setFuture());\n      }\n\n      this.scenes = [...pre, scene, ...post];\n    }\n  }\n}\n\nexport class IContainer {\n  _id: string;\n  children: IContainer[];\n  customer_id: string;\n  display_name: string;\n  episodes: IEpisode[];\n  evenOdd?: boolean;\n  haveNotLoadedChildData?: boolean;\n  wasClicked?: boolean;\n  isActive?: boolean;\n  keywords: ILangForm;\n  loadedChildData?: boolean;\n  name: ILangForm;\n  parent_id: string;\n  sort_order: number;\n  editingContainer?: boolean;\n  newContainerTitle?: string;\n  newContainerName?: string;\n  addingContainer?: boolean;\n  showChildren?: boolean;\n}\n\nexport class ITimeline {\n  _id?: string;\n  name: ILangForm;\n  description: ILangForm;\n  hidden: boolean;\n  sort_order: number;\n  path_slug: ILangForm;\n  episode_segments: any[];\n  timeline_image_ids: string[] = [];\n  parent_episode?: IEpisode;\n  duration: number;\n}\n\nexport class ITempTimeline extends ITimeline {\n  social_image_square?: any;\n  social_image_wide?: any;\n  isTemp: boolean;\n  index: number;\n}\n\nexport class ICustomer {\n  _id: string;\n  name: ILangForm;\n  domains: string[];\n  active: boolean;\n  guest_access_allowed: boolean;\n  create_s3_transcodes: boolean;\n  youtube_allowed: boolean;\n  login_url: boolean;\n  login_via_top_window_only: boolean;\n  track_user_event_actions: boolean;\n  track_user_episode_metrics: boolean;\n  oauth2_message: ILangForm;\n  oauth2_providers: string[];\n  root_container_id: string;\n  narratives?: INarrative[];\n  isActive?: boolean;\n  showNarratives?: boolean;\n  evenOdd?: boolean;\n}\n\nexport class INarrative {\n  _id: string;\n  name: ILangForm;\n  description: ILangForm;\n  guest_access_allowed: boolean;\n  authenticated_access_allowed: boolean;\n  customer_id: string;\n  disable_navigation: boolean;\n  disable_new_window: boolean;\n  enable_social_sharing: boolean;\n  path_slug: ILangForm;\n  support_url: string;\n  narrative_subdomain?: string;\n  timelines?: ITimeline[];\n  narrative_image_ids: string[] = [];\n  disableSocialshare?: boolean;\n  social_image_square?: { file: FileList };\n  social_image_wide?: { file: FileList };\n  evenOdd?: boolean;\n  error?: string;\n}\n\nexport class IAsset {\n  _id: string;\n  _type: string;\n  status: string;\n  upload: any;\n  url: string;\n  cssBgUrl?: string;\n  filename: string;\n  original_filename: string;\n  content_type: string;\n  extension: string;\n  size: number;\n  name: ILangForm;\n  description: ILangForm;\n  tags: TSocialTagTypes[];\n  episodes_count: number;\n  episode_poster_frames_count: number;\n  links_count: number;\n  annotations_count: number;\n  narratives_count: number;\n  timelines_count: number;\n  uploads_count: number;\n  plugins_count: number;\n  container_id: string;\n  user_id: string;\n  duration?: number;\n}\n\ntype TEventTypes = 'Annotation'\n  | 'Bookmark'\n  | 'File'\n  | 'Image'\n  | 'Link'\n  | 'Plugin'\n  | 'Scene'\n  | 'Chapter'\n  | 'Text'\n  | 'Upload';\n\nexport class IEvent {\n  //props\n  _id: string;\n  start_time: number;\n  type: TEventTypes;\n  _type: string;\n  end_time: number;\n  title: ILangForm;\n  description: ILangForm;\n  cosmetic: boolean;\n  stop: boolean;\n//props not in any schema but added dynamically either on the backend somewhere client-side;\n  state?: 'isCurrent' | 'isPast' | 'isFuture';\n  isCurrent?: boolean;\n  avatar_id: string;\n  templateOpts?: any[];\n  //relations\n  episode_id: string;\n  user_id: string;\n  template_id: string;\n  layout_id: string;\n  style_id: string;\n  layouts: string[] = ['inline'];\n  templateUrl?: string;\n  producerItemType?: string;\n  //group ??\n  //event_category ??\n\n  setFuture(): void {\n    this.state = 'isFuture';\n    this.isCurrent = false;\n  }\n\n  setPast(): void {\n    this.state = 'isPast';\n    this.isCurrent = false;\n  }\n\n  setCurrent(): void {\n    this.isCurrent = true;\n    this.state = 'isCurrent';\n  }\n}\n\nexport class ILinkStatus {\n  content_security_policy: string | null;\n  x_frame_options: string | null;\n  response_code: number;\n  err: string;\n  _id?: string;\n  status?: string;\n  location?: string;\n  updated_at?: Date;\n}\n\nexport class ILink extends IEvent {\n  type: 'Link';\n  _type: 'Link';\n  target: '_blank' | '_self';\n  url: string;\n  display_title?: string;\n  display_description?: string;\n  styles?: string[];\n  showInlineDetail?: boolean;\n  //relations\n  link_image_id: string;\n  url_status?: ILinkStatus;\n  isVideoUrl: boolean;\n  mixedContent?: boolean;\n}\n\nexport class IAnnotation extends IEvent {\n  type: 'Annotation';\n  _type: 'Annotation';\n  annotator: ILangForm;\n  annotation: ILangForm;\n  chapter_marker: boolean = false;\n  //belongs_to annotation image;\n  annotation_image_id: string;\n}\n\nexport class IBookmark extends IEvent {\n  type: 'Bookmark';\n  _type: 'Bookmark';\n}\n\nexport class IChapter extends IEvent {\n  type: 'Chapter';\n  _type: 'Chapter';\n}\n\nexport class IImage extends IEvent {\n  type: 'Image';\n  _type: 'Image';\n  templateUrl?: string;\n}\n\nclass IPluginData {\n  correctFeedback: ILangForm;\n  distractors: { index: number, text: string }[];\n  incorrectFeedback: ILangForm;\n  questionText: ILangForm;\n  questionType: string;\n}\n\nexport class IPlugin extends IEvent {\n  type: 'Plugin';\n  _type: 'Plugin';\n  data: {\n    _id: string,\n    _pluginType: string,\n    _version: number\n    _plugin: IPluginData;\n  };\n}\n\nexport class IScene extends IEvent {\n  type: 'Scene';\n  _type: 'Scene';\n  _internal?: boolean; //client only\n  cur_episode_id: string;\n  scene_id: string;\n}\n\nexport class IText extends IEvent {\n  type: 'Text';\n  _type: 'Text';\n}\n\nexport class IUpload extends IEvent {\n  type: 'Upload';\n  _type: 'Upload';\n  asset_id: string;\n}\n\ntype TInstance =\n  'Link'\n  | 'Annotation'\n  | 'Bookmark'\n  | 'Chapter'\n  | 'Image'\n  | 'Plugin'\n  | 'Scene'\n  | 'Text'\n  | 'Upload'\n  | 'Narrative'\n  | 'Asset'\n  | 'Customer'\n  | 'Timeline'\n  | 'Episode'\n  | 'Container'\n  | 'EpisodeTemplate'\n  | 'LayoutTemplate'\n  | 'ItemTemplate'\n  | 'Layout'\n  | 'Style';\nexport function createInstance<T>(type: TInstance, data: any): T {\n  let model;\n  switch (type) {\n    case 'Link':\n      model = new ILink();\n      break;\n    case 'Annotation':\n      model = new IAnnotation();\n      break;\n    case 'Bookmark':\n      model = new IBookmark();\n      break;\n    case 'Chapter':\n      model = new IChapter();\n      break;\n    case 'Image':\n      model = new IImage();\n      break;\n    case 'Plugin':\n      model = new IPlugin();\n      break;\n    case 'Scene':\n      model = new IScene();\n      break;\n    case 'Text':\n      model = new IText();\n      break;\n    case 'Upload':\n      model = new IUpload();\n      break;\n    case 'Narrative':\n      model = new INarrative();\n      break;\n    case 'Asset':\n      model = new IAsset();\n      break;\n    case 'Customer':\n      model = new ICustomer();\n      break;\n    case 'Timeline':\n      model = new ITimeline();\n      break;\n    case 'Episode':\n      model = new IEpisode();\n      break;\n    case 'Container':\n      model = new IContainer();\n      break;\n    case 'LayoutTemplate':\n      model = new ILayoutTemplate();\n      break;\n    case 'ItemTemplate':\n      model = new IItemTemplate();\n      break;\n    case 'EpisodeTemplate':\n      model = new IEpisodeTemplate();\n      Object.assign(model, data);\n      //handle any 'relations'\n      if (data.css_configuration) {\n        model.css_configuration = Object.assign(new ICssConfiguration(), data.css_configuration);\n      }\n\n      if (data.fonts) {\n        model.fonts = Object.assign(new IFont(), data.fonts);\n      }\n      return model;\n    case 'Layout':\n      model = new ILayout();\n      break;\n    case 'Style':\n      model = new IStyle();\n      break;\n  }\n  Object.assign(model, data);\n  return model;\n}\n\n//union type to provide type checking\nexport type NEvent =\n  ILink |\n  IAnnotation |\n  IBookmark |\n  IChapter |\n  IImage |\n  IPlugin |\n  IScene |\n  IText |\n  IUpload;\n\nexport type NRecord =\n  NEvent |\n  INarrative |\n  IAsset |\n  ICustomer |\n  ITimeline |\n  IEpisode |\n  IContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/models.ts","'use strict';\nimport { createInstance, IEpisode } from '../models';\nimport { IEpisodeTheme, IEpisodeEditService, IModelSvc, IDataSvc, ITimelineSvc } from '../interfaces';\n\nEditController.$inject = [\n  '$scope',\n  '$rootScope',\n  '$timeout',\n  '$window',\n  'selectService',\n  'appState',\n  'dataSvc',\n  'modelSvc',\n  'timelineSvc',\n  'authSvc',\n  'MIMES',\n  'playbackService',\n  'episodeTheme',\n  'episodeEdit'\n];\n\nexport default function EditController(\n  $scope: ng.IScope,\n  $rootScope: ng.IRootScopeService,\n  $timeout: ng.ITimeoutService,\n  $window,\n  selectService,\n  appState,\n  dataSvc: IDataSvc,\n  modelSvc: IModelSvc,\n  timelineSvc: ITimelineSvc,\n  authSvc,\n  MIMES,\n  playbackService,\n  episodeTheme: IEpisodeTheme,\n  episodeEdit: IEpisodeEditService) {\n  $scope.uneditedScene = angular.copy($scope.item); // to help with diff of original scenes\n\n  // HACK assetType below is optional, only needed when there is more than one asset to manage for a single object (for now, episode poster + master asset)\n  // Poor encapsulation of the upload controls. Sorry about that.\n  $scope.userHasRole = authSvc.userHasRole;\n  $scope.canAccess = authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin');\n  $scope.selectService = selectService;\n\n  if ($scope.item && MIMES[$scope.item.producerItemType]) {\n    $scope.mimes = MIMES[$scope.item.producerItemType];\n  } else {\n    $scope.mimes = MIMES.default;\n  }\n\n  $scope.chooseAsset = function (assetType) {\n    assetType = assetType || '';\n    $scope.showAssetPicker = true;\n    $scope.w1 = $rootScope.$on('UserSelectedAsset', function (e, id) {\n      if (assetType === 'Poster') {\n        $scope.attachPosterAsset(id); // in ittEpisodeEditor\n      } else {\n        $scope.attachChosenAsset(id); // in ittItemEditor or ittEpisodeEditor\n      }\n      $scope[\"showUploadButtons\" + assetType] = false;\n      $scope.endChooseAsset();\n    });\n    $scope.w2 = $rootScope.$on('userKeypress.ESC', $scope.endChooseAsset);\n  };\n  $scope.endChooseAsset = function () {\n    $scope.w1();\n    $scope.w2();\n    $scope.showAssetPicker = false;\n  };\n\n  $scope.toggleUpload = function (assetType) {\n    assetType = assetType || '';\n    $scope[\"showUploadField\" + assetType] = !$scope[\"showUploadField\" + assetType];\n  };\n\n  $scope.addDistractor = function () {\n    $scope.item.data._plugin.distractors.push({\n      text: \"\",\n      index: ($scope.item.data._plugin.distractors.length + 1)\n    });\n  };\n\n\n  $scope.onFormativeChecked = onFormativeChecked;\n  function onFormativeChecked(distractor) {\n    angular.forEach($scope.item.data._plugin.distractors, function (_distractor) {\n      if (_distractor !== distractor) {\n        _distractor.correct = undefined;\n      }\n    });\n  }\n\n\n\n  $scope.addEvent = function (producerItemType) {\n    if (producerItemType === 'scene') {\n      var t = Math.round(playbackService.getMetaProp('time') * 100) / 100;\n      if (modelSvc.isOnExistingSceneStart(t)) {\n        return $scope.editCurrentScene(t);\n      }\n    }\n    // console.log(\"itemEditController.addEvent\");\n    var newEvent = generateEmptyItem(producerItemType);\n\n\n    newEvent.cur_episode_id = appState.episodeId;\n    newEvent.episode_id = appState.episodeId;\n    if (appState.user && appState.user.avatar_id) {\n      newEvent.avatar_id = appState.user.avatar_id;\n    }\n    modelSvc.cache(\"event\", newEvent);\n\n    appState.editEvent = modelSvc.events[\"internal:editing\"];\n    appState.videoControlsActive = true; // TODO see playerController showControls; this may not be sufficient on touchscreens\n    appState.videoControlsLocked = true;\n\n    modelSvc.resolveEpisodeEvents(appState.episodeId);\n    timelineSvc.injectEvents([modelSvc.events[\"internal:editing\"]]);\n    if (producerItemType === 'scene') {\n      //to set the defaults on the first pass\n      selectService.onSelectChange(appState.editEvent);\n      timelineSvc.updateSceneTimes(appState.episodeId);\n    }\n    $rootScope.$emit('searchReindexNeeded'); // HACK\n  };\n\n  var isTranscript = function (item) {\n    if (item._type === 'Annotation' && item.templateUrl.match(/transcript/)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  var getTranscriptItems = function () {\n    var episode = modelSvc.episodes[appState.episodeId];\n    var allItems = angular.copy(episode.items);\n    return allItems.filter(isTranscript);\n  };\n  var getItemIndex = function (items, item) {\n    var centerIndex = 0;\n    for (var i = 0, len = items.length; i < len; i++) {\n      if (items[i]._id === item._id) {\n        centerIndex = i;\n        break;\n      }\n    }\n    return centerIndex;\n  };\n  var filterToItemBefore = function (items, centerItem) {\n    items = items.sort(sortByStartTime);\n    var centerIndex = getItemIndex(items, centerItem);\n    var itemBefore = [];\n    if (centerIndex === 0) {\n      return itemBefore;\n    } else {\n      if (centerIndex < items.length - 1) {\n        if (centerIndex >= 1) {\n          if (!isInternal(items[centerIndex - 1])) {\n            itemBefore.push(items[centerIndex - 1]);\n          }\n        }\n      }\n    }\n    return itemBefore;\n  };\n\n  var filterToBookends = function (items, centerItem) {\n    items = items.sort(sortByStartTime);\n    var centerIndex = getItemIndex(items, centerItem);\n    var itemsBeforeAndAfter = [];\n\n    if (centerIndex === 0) {\n      if (centerIndex < items.length - 1) {\n        if (!isInternal(items[centerIndex + 1])) {\n          itemsBeforeAndAfter.push(items[centerIndex + 1]);\n        }\n      }\n    } else {\n      if (centerIndex < items.length - 1) {\n        if (!isInternal(items[centerIndex + 1])) {\n          itemsBeforeAndAfter.push(items[centerIndex + 1]);\n        }\n        if (centerIndex >= 1) {\n          if (!isInternal(items[centerIndex - 1])) {\n            itemsBeforeAndAfter.push(items[centerIndex - 1]);\n          }\n        }\n      }\n    }\n    return itemsBeforeAndAfter;\n  };\n\n  // Editing some events has side effects on other events; this stores those side effects.\n  // assuming that this is called after a resolve and that we are dealing with events that have been adjusted already\n  var saveAdjustedEvents = function (item, operation, original) {\n    if (isTranscript(item)) {\n      var itemsToSave = [];\n      var transcriptItems = getTranscriptItems();\n      switch (operation) {\n        case \"create\":\n          itemsToSave = filterToBookends(transcriptItems, item);\n          console.log('adjust for create');\n          break;\n        case \"delete\":\n          itemsToSave = filterToItemBefore(transcriptItems, item);\n          console.log('adjust for delete');\n          break;\n        case \"update\":\n          // TODO this should be updating the adjusted events, not delete-and-create.\n          if (original) {\n            saveAdjustedEvents(original, \"delete\");\n          }\n          saveAdjustedEvents(item, \"create\");\n          console.log('adjust for update');\n          break;\n      }\n      angular.forEach(itemsToSave, function (item) {\n        dataSvc.storeItem(item)\n          .then(function () {\n            console.log('updated transcript item', item);\n          }, function (data) {\n            console.error(\"FAILED TO STORE EVENT\", data);\n          });\n      });\n    }\n  };\n\n  $scope.saveEvent = function () {\n    var toSave = angular.copy(appState.editEvent);\n    $scope.blockDoubleClicks = true;\n    //assign current episode_id\n    toSave.cur_episode_id = appState.episodeId;\n    if (toSave._type === 'Scene') {\n      var adjusted = adjustScenes(toSave);\n      angular.forEach(adjusted, function (scene) {\n        dataSvc.storeItem(scene)\n          .then(function () {\n            // console.log(\"scene end_time updated\");\n          }, function (data) {\n            console.error(\"FAILED TO STORE EVENT\", data);\n          });\n      });\n    }\n\n    dataSvc.storeItem(toSave)\n      .then(function (data) {\n        data.cur_episode_id = appState.episodeId;\n\n        var saveOperation = 'update';\n        if (appState.editEvent._id === 'internal:editing') {\n          // update the new item with its real ID (and remove the temp version)\n          timelineSvc.removeEvent(\"internal:editing\");\n          delete(modelSvc.events[\"internal:editing\"]);\n          modelSvc.cache(\"event\", dataSvc.resolveIDs(data));\n          modelSvc.resolveEpisodeEvents(appState.episodeId);\n          saveOperation = 'create';\n          var assetId = data.asset_id || data.link_image_id || data.annotation_image_id;\n          if (assetId && toSave.asset && toSave.asset._id === assetId) {\n            modelSvc.assocEventWithAsset(data._id, assetId);\n          }\n        }\n\n        if (data._type === 'Scene') {\n          timelineSvc.timelineEvents = [];\n          timelineSvc.injectEvents(modelSvc.episodeEvents(appState.episodeId), 0);\n          // sometimes the scene prior to the new onne being created is set to be the current scene\n          modelSvc.episodes[appState.episodeId].setCurrentScene(modelSvc.events[data._id]);\n        } else {\n          modelSvc.resolveEpisodeEvents(appState.episodeId);\n          timelineSvc.updateEventTimes(modelSvc.events[data._id]);\n        }\n\n        // currently only runs on transcript items\n        saveAdjustedEvents(data, saveOperation);\n\n        // Delete attached asset(s)  (this should only occur for sxs items, for now)\n        // yes we could combine these into one call I suppose but there will almost always only be one\n        // unless the user was very indecisive and uploaded/detached a bunch of assets to the same event.\n        // It was probably already a premature optimization to use an array here in the first place\n\n        // see ittItemEditor to see where toSave.removedAssets is setup as below is the only\n        // reference in this file.\n        angular.forEach(toSave.removedAssets, function (id) {\n          dataSvc.deleteAsset(id);\n        });\n        appState.editEvent = false;\n        $rootScope.$emit('searchReindexNeeded'); // HACK\n      }, function (data) {\n        console.error(\"FAILED TO STORE EVENT\", data);\n      });\n  };\n\n  var getScenes = modelSvc.getEpisodeScenes;\n\n  var isInternal = function (item) {\n    return (item._id && item._id.match(/internal/));\n  };\n\n  $scope.getItemsAfter = function (items, after) {\n    var itemsAfter = [];\n    for (var i = 0, len = items.length; i < len; i++) {\n      if (!isInternal(items[i])) {\n        if (after < items[i].start_time || after < items[i].end_time) {\n          itemsAfter.push(items[i]);\n        }\n      }\n    }\n    return itemsAfter;\n  };\n\n  var resetScenes = function (updatedScenes, originalScene) {\n    for (var i = 0; i < updatedScenes.length; i++) {\n      if (typeof (updatedScenes[i]._id) === 'undefined' || updatedScenes[i]._id === 'internal:editing') {\n        updatedScenes.splice(i, 1);\n        break;\n      }\n      if (originalScene) {\n        if (updatedScenes[i]._id === originalScene._id) {\n          updatedScenes[i] = originalScene;\n          break;\n        }\n      }\n    }\n    return updatedScenes;\n  };\n\n  var fixEndTimes = function (scenes, duration) {\n    for (var i = 1, len = scenes.length; i < len; i++) {\n      if (i === len - 1) {\n        scenes[i].end_time = duration;\n      } else {\n        if (scenes[i].end_time !== scenes[i + 1].start_time) {\n          scenes[i].end_time = scenes[i + 1].start_time;\n        }\n      }\n    }\n  };\n  var pushScene = function (scenes, scene) {\n    var exists = false;\n    for (var i = 0, len = scenes.length; i < len; i++) {\n      if (scenes[i]._id === scene._id) {\n        exists = true;\n        //do nothing, as already exists\n        break;\n      }\n    }\n    if (!exists) {\n      scenes.push(scene);\n    }\n  };\n  var removeScene = function (scenes, id) {\n    for (var i = 0, len = scenes.length; i < len; i++) {\n      if (scenes[i]._id === id) {\n        scenes.splice(i, 1);\n        break;\n      }\n    }\n  };\n  var sortByStartTime = function (a, b) {\n    return a.start_time - b.start_time;\n  };\n\n  var adjustScenes = function (modifiedScene, isDelete) {\n    var duration = playbackService.getMetaProp('duration');\n    var scenes = angular.copy(getScenes());\n    var adjusted = [];\n    // get scenes back into original state (before editing,adding,deleting)\n    if (isDelete) {\n      pushScene(scenes, $scope.uneditedScene);\n    } else {\n      resetScenes(scenes, $scope.uneditedScene);\n    }\n    scenes = scenes.sort(sortByStartTime);\n    fixEndTimes(scenes, duration);\n\n    // now scenes is back to pre edit state.  let's drop in our new scene and then see what is impacted (and needs updating)\n    removeScene(scenes, modifiedScene._id);\n    if (!isDelete) {\n      scenes.push(modifiedScene);\n    }\n    scenes = scenes.sort(sortByStartTime);\n\n    for (var i = 1, len = scenes.length; i < len; i++) {\n      if (i === len - 1) {\n        if (scenes[i].end_time !== duration) {\n          scenes[i].end_time = duration;\n          adjusted.push(scenes[i]);\n        }\n      } else {\n        if (scenes[i].end_time !== scenes[i + 1].start_time) {\n          scenes[i].end_time = scenes[i + 1].start_time;\n          adjusted.push(scenes[i]);\n        }\n      }\n\n    }\n    return adjusted;\n  };\n\n  $scope.editCurrentScene = function (t) {\n    var scene = modelSvc.sceneAtEpisodeTime(appState.episodeId, t);\n    appState.editEvent = modelSvc.events[scene._id];\n    appState.editEvent.templateOpts = selectService.getTemplates('scene');\n    appState.editEvent.cur_episode_id = appState.episodeId;\n    appState.editEvent.episode_id = appState.episodeId;\n    appState.editEvent.producerItemType = 'scene';\n    appState.videoControlsActive = true; // TODO see playerController showControls; this may not be sufficient on touchscreens\n    appState.videoControlsLocked = true;\n    selectService.onSelectChange(appState.editEvent);\n  };\n\n  $scope.editEpisode = function () {\n    episodeEdit.setEpisodeToEdit();\n  };\n\n  $scope.deleteEvent = function (eventId) {\n    if (window.confirm(\"Are you sure you wish to delete this item?\")) {\n      //fabricate scene event\n      var event = {};\n      event._id = eventId;\n      var eventType = modelSvc.events[eventId]._type;\n      if (eventType === 'Scene') {\n        var adjusted = adjustScenes(event, true);\n        angular.forEach(adjusted, function (scene) {\n          dataSvc.storeItem(scene)\n            .then(function () {\n              // console.log(\"scene end_time updated\");\n            }, function (data) {\n              console.error(\"FAILED TO STORE EVENT\", data);\n            });\n        });\n      }\n\n      dataSvc.deleteItem(eventId)\n        .then(function () {\n          if (appState.product === 'sxs' && modelSvc.events[eventId].asset) {\n            dataSvc.deleteAsset(modelSvc.events[eventId].asset._id);\n          }\n          timelineSvc.removeEvent(eventId);\n          delete modelSvc.events[eventId];\n          modelSvc.resolveEpisodeEvents(appState.episodeId);\n\n          if (eventType === 'Scene' || eventType === 'Chapter') {\n            timelineSvc.updateSceneTimes(appState.episodeId);\n          }\n          saveAdjustedEvents(event, \"delete\");\n          appState.editEvent = false;\n          appState.videoControlsLocked = false;\n        }, function (data) {\n          console.warn(\"failed to delete:\", data);\n        });\n    }\n  };\n\n  $scope.cancelEventEdit = function (originalEvent) {\n    var episodeId = originalEvent.cur_episode_id ? originalEvent.cur_episode_id : originalEvent.episode_id;\n    if (appState.editEvent._id === 'internal:editing') {\n      delete(modelSvc.events['internal:editing']);\n      timelineSvc.removeEvent(\"internal:editing\");\n    } else {\n      modelSvc.events[appState.editEvent._id] = originalEvent;\n    }\n    modelSvc.resolveEpisodeEvents(episodeId);\n\n    if (originalEvent._type === 'Scene') {\n      timelineSvc.updateSceneTimes(episodeId);\n    } else {\n      timelineSvc.updateEventTimes(originalEvent);\n    }\n\n    appState.editEvent = false;\n    appState.videoControlsLocked = false;\n  };\n\n  $scope.cancelEpisodeEdit = function (originalEvent: IEpisode) {\n\n    modelSvc.episodes[appState.episodeId] = originalEvent;\n\n    modelSvc.deriveEpisode(modelSvc.episodes[originalEvent._id]);\n    modelSvc.resolveEpisodeContainers(originalEvent._id); // only needed for navigation_depth changes\n    modelSvc.resolveEpisodeEvents(originalEvent._id); // needed for template or style changes\n    // console.log(\"Episode StyleCss is now \", modelSvc.episodes[originalEvent._id].styleCss);\n    episodeTheme.setTheme(originalEvent.template);\n    appState.editEpisode = false;\n    appState.videoControlsLocked = false;\n  };\n\n  var generateEmptyItem = function (type) {\n    var base = {\n      \"_id\": \"internal:editing\",\n      \"start_time\": playbackService.getMetaProp('time'),\n      \"episode_id\": appState.episodeId,\n      // \"type\": type,  <-- NOPE that's a bug.  Confusing, so I'm leaving in this comment:  API types are Plugin, Scene, Upload, Link; these producer item types are different\n      \"isCurrent\": true,\n      \"producerItemType\": type,\n      \"layouts\": [\"inline\"],\n      \"styles\": []\n    };\n    /*\n     Item types:\n\n     producer only\n     scene\n     transcript\n     annotation\n\n     sxs only\n     comment\n\n     sxs and producer\n     image\n     file\n     link\n     question\n     video (injected episode) TODO\n     */\n\n    var stub = Object.create(null);\n    if (type === 'scene') {\n      stub = {\n        \"_type\": \"Scene\",\n        \"title\": {},\n        \"description\": {}\n      };\n    }\n    if (type === 'chapter') {\n      stub = {\n        '_type': 'Chapter',\n        'title': {},\n        'description': {}\n      };\n    }\n    if (type === 'video') {\n      // TODO: this should be an injected episode with the linked/uploaded video as its master asset.\n      // For now we're faking it as a link item.\n      stub = {\n        \"_type\": \"Link\",\n        \"link_image_id\": \"\",\n        \"url\": \"\",\n        \"title\": {},\n        \"description\": {}\n      };\n    }\n\n    if (type === 'comment' || type === 'transcript' || type === 'annotation') {\n      stub = {\n        \"_type\": \"Annotation\",\n        \"annotation\": {},\n        \"annotator\": {},\n        \"annotation_image_id\": \"\"\n      };\n    }\n\n    if (type === 'file' || type === 'image') {\n      stub = {\n        \"_type\": \"Upload\",\n        \"asset_id\": \"\",\n        \"title\": {},\n        \"description\": {}\n      };\n    }\n\n    if (type === 'link') {\n      stub = {\n        \"_type\": \"Link\",\n        \"link_image_id\": \"\",\n        \"url\": \"https://\",\n        \"title\": {},\n        \"target\": \"_self\",\n        \"description\": {},\n        \"url_status\": {}\n      };\n    }\n\n    if (type === 'question') {\n      // TODO i18n\n      stub = {\n        \"_type\": \"Plugin\",\n        \"title\": {},\n        \"data\": {\n          \"_pluginType\": \"question\",\n          \"_version\": 2,\n          \"_plugin\": {\n            \"questiontext\": \"\",\n            \"questiontype\": \"mc-formative\",\n            \"distractors\": [{\n              \"index\": 1,\n              \"text\": \"\"\n            }, {\n              \"index\": 2,\n              \"text\": \"\"\n            }, {\n              \"index\": 3,\n              \"text\": \"\"\n            }, {\n              \"index\": 4,\n              \"text\": \"\"\n            }],\n            \"correctfeedback\": \"\",\n            \"incorrectfeedback\": \"\"\n          }\n        }\n      };\n      stub.plugin = stub.data._plugin;\n    }\n\n    if (appState.product === 'sxs') {\n      // SxS overrides a lot of the item options:\n      stub.sxs = true; // temporary?\n      stub.annotator = {\n        en: appState.user.name\n      };\n      stub.layouts = [\"windowFg\"];\n      stub.end_time = appState.time;\n      stub.stop = true;\n      stub.templateUrl = 'templates/item/sxs-' + type + '.html';\n    } else {\n      var defaultTemplateUrls = {\n        \"scene\": \"templates/scene/centered.html\",\n        \"transcript\": \"templates/item/transcript.html\",\n        \"annotation\": \"templates/item/text-h2.html\",\n        \"link\": \"templates/item/link.html\",\n        \"image\": \"templates/item/image-plain.html\",\n        \"file\": \"templates/item/file.html\",\n        \"question\": \"templates/item/question-mc.html\",\n        \"video\": \"TODO:VIDEO\"\n      };\n\n      stub.templateOpts = selectService.getTemplates(type);\n      stub.templateUrl = defaultTemplateUrls[type];\n    }\n    angular.extend(base, stub);\n    return createInstance(stub._type, base);\n  };\n\n  $scope.updateEpisodeTemplate = updateEpisodeTemplate;\n  function updateEpisodeTemplate($data: { episode: IEpisode, templateId: string }) {\n    episodeEdit.updateEpisodeTemplate($data.episode, $data.templateId)\n      .then((episode: IEpisode) => $scope.episode = episode);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/controllers/EditController.ts","\nErrorController.$inject = ['$scope', 'errorSvc', 'appState', 'authSvc'];\n\nexport default function ErrorController($scope, errorSvc, appState, authSvc) {\n  // console.log(\"errorController\", $scope);\n\n  $scope.errorSvc = errorSvc;\n  $scope.logout = authSvc.logout;\n  $scope.user = appState.user;\n\n  // probably should split this into separate functions for errors and notifications, but good enough for now\n  $scope.dismiss = function (cur) {\n    // this use of splice to remove items from the middle of the array in place works here\n    // only because we're only removing a single item.  For multiple removes in one pass, will need to  scan backwards through the array\n    for (var i = 0; i < errorSvc.errors.length; i++) {\n      if (errorSvc.errors[i] === cur) {\n        errorSvc.errors.splice(i, 1);\n        i = errorSvc.errors.length; // break loop since we already removed our item\n      }\n    }\n    for (i = 0; i < errorSvc.notifications.length; i++) {\n      if (errorSvc.notifications[i] === cur) {\n        errorSvc.notifications.splice(i, 1);\n        i = errorSvc.notifications.length;\n      }\n    }\n  };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/controllers/ErrorController.ts","\nEventTestController.$inject = ['$scope', '$routeParams', 'mockSvc', 'modelSvc', 'appState'];\n\nexport default function EventTestController($scope, $routeParams, mockSvc, modelSvc, appState) {\n  // console.log('EventTestContrller');\n\n  mockSvc.mockEpisode(\"ep1\");\n  appState.episodeId = \"ep1\";\n\n  appState.product = 'producer';\n  appState.lang = \"en\";\n\n  // $scope.itemId = $routeParams[\"eventId\"];\n\n  $scope.item = modelSvc.events[$routeParams.eventId];\n\n  console.log(modelSvc);\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/controllers/EventTestController.ts","\nItemController.$inject = ['$scope', 'timelineSvc'];\n\nexport default function ItemController($scope, timelineSvc) {\n  $scope.seek = function (t) {\n    timelineSvc.seek(t, \"clickedOnItem\", $scope.item._id);\n  };\n  var KeyCodes = {\n    ENTER: 13,\n    SPACE: 32\n  };\n\n  $scope.seekOnKeyPress = function (t, $event) {\n    var e = $event;\n    var passThrough = true;\n    switch (e.keyCode) {\n      case KeyCodes.ENTER:\n        $scope.seek(t);\n        passThrough = false;\n        break;\n      case KeyCodes.SPACE:\n        $scope.seek(t);\n        passThrough = false;\n        break;\n      default:\n        passThrough = true;\n        break;\n    }\n    if (!passThrough) {\n      $event.stopPropagation();\n      $event.preventDefault();\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/controllers/ItemController.ts","//TODO Some of this could be split into separate controllers (though that may not confer any advantage other than keeping this file small...)\n\nimport {IModelSvc, IDataSvc} from '../interfaces';\nimport { UPDATE_MAGNET } from '../constants';\nPlayerController.$inject = ['$scope', '$location', '$rootScope', '$routeParams', '$timeout', '$interval', 'config', 'appState', 'dataSvc', 'modelSvc', 'timelineSvc', 'analyticsSvc', 'authSvc', 'selectService', 'playbackService', 'episodeTheme'];\n\nexport default function PlayerController($scope, $location, $rootScope, $routeParams, $timeout, $interval, config, appState, dataSvc: IDataSvc, modelSvc: IModelSvc, timelineSvc, analyticsSvc, authSvc, selectService, playbackService, episodeTheme) {\n  // console.log(\"playerController\", $scope);\n\n  $scope.episodeTheme = episodeTheme;\n  $scope.viewMode = function (newMode) {\n    appState.viewMode = newMode;\n    analyticsSvc.captureEpisodeActivity(\"modeChange\", {\n      \"mode\": newMode\n    });\n\n    appState.producerEditLayer = 0;\n\n    if (newMode === 'review') {\n      // magnet animation looks too choppy when loading review mode; skip it:\n      $timeout(function () {\n        $rootScope.$emit(UPDATE_MAGNET);\n      });\n      appState.autoscroll = true;\n      appState.autoscrollBlocked = false;\n      startScrollWatcher();\n      $timeout(handleAutoscroll); // timeout is for edge case where user loads review mode first, before handleAutoscroll is defined below...\n    } else {\n      appState.autoscroll = false;\n      // appState.autoscrollBlocked = true;\n    }\n\n    if (newMode === 'watch') {\n      $scope.endSearch();\n    }\n\n    $timeout(function () {\n      $(window)\n        .trigger('resize'); // possible fix for unreproducible-by-me layout issue in review mode\n    });\n  };\n\n  if ($routeParams.viewMode) {\n    $timeout(function () {\n      $scope.viewMode($routeParams.viewMode);\n    });\n  }\n\n\n  // $scope.changeProducerEditLayer = function (newLayer) {\n  // \tappState.producerEditLayer = appState.producerEditLayer + newLayer;\n  // \t// I'm sure there's a fancier way to do this but\n  // \tif (appState.producerEditLayer === 2) {\n  // \t\tappState.producerEditLayer = 1;\n  // \t}\n  // \tif (appState.producerEditLayer === -2) {\n  // \t\tappState.producerEditLayer = -1;\n  // \t}\n  // };\n\n  $scope.toggleProducerPreview = function () {\n    appState.product = (appState.product === 'producer') ? 'player' : 'producer';\n  };\n\n  /* LOAD EPISODE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */\n\n  if ($routeParams.epId) { // if this is missing we're in a narrative, which will init appstate and episodeID for us\n    appState.init();\n    appState.episodeId = $routeParams.epId;\n  } else {\n    $scope.narrativeId = $routeParams.narrativeId;\n  }\n\n  if (appState.isFramed) {\n    /*\n     workaround for when instructure canvas fails to size our iframe correctly\n     This will be harmless in other platforms:\n     */\n    if (Math.max(document.documentElement.clientHeight, window.innerHeight || 0) < 151) {\n      window.parent.postMessage(JSON.stringify({\n        subject: 'lti.frameResize',\n        height: \"650px\"\n      }), '*');\n    }\n  }\n\n  var wileyNag = function () {\n    // HACK design-by-committee TS-829 for framed Wiley episodes.\n    // (If localStorage is blocked, default to not showing the overlay to avoid annoying them with repeats.)\n    if (!appState.isFramed || (modelSvc.episodes[appState.episodeId].template.displayName.indexOf('Wiley') === -1)) {\n      return;\n    }\n    var localStorageAllowed = true;\n    try {\n      localStorage.setItem(\"iCanHazStorage\", 1);\n    } catch (e) {\n      localStorageAllowed = false;\n    }\n    if (localStorageAllowed) {\n      localStorage.removeItem(\"iCanHazStorage\");\n    }\n    if (localStorageAllowed && !(localStorage.getItem(\"noWileyNag\"))) {\n      appState.show.wileyNag = true;\n      var nagWatch = $scope.$watch(function () {\n        return playbackService.getMetaProp('time');\n      }, function (n) {\n        if (n) {\n          appState.show.wileyNag = false;\n          nagWatch();\n        }\n      });\n    }\n    $scope.noWileyNag = function () {\n      appState.show.wileyNag = false;\n      localStorage.setItem(\"noWileyNag\", \"1\");\n    };\n    // END WILEY HACK\n  };\n\n  var getEpisodeWatcher = $rootScope.$on(\"dataSvc.getEpisode.done\", function () {\n    // getEpisodeWatcher();\n    // Wait until we have both the master asset and the episode's items; update the timeline and current language when found\n    appState.lang = ($routeParams.lang) ? $routeParams.lang.toLowerCase() : modelSvc.episodes[appState.episodeId].defaultLanguage;\n\n    //need to set narrative on scope for disable_new_window feature for narratives\n    //this used to happen in ittNarrativeTimelineJs, but has been deprecated\n    modelSvc.setLanguageStrings();\n    wileyNag(); // HACK\n    document.title = modelSvc.episodes[appState.episodeId].display_title; // TODO: update this on language change\n    // console.log(\"getEpisode.done fired\", modelSvc.episodes[appState.episodeId]);\n    // producer needs the episode container:\n    const containerId = modelSvc.episodes[appState.episodeId].container_id\n    dataSvc.getContainer(containerId, appState.episodeId).then(function () {\n      if (modelSvc.episodes[appState.episodeId].master_asset_id) {\n        // watch for the master asset to exist, so we know duration; then call addEndingScreen and timelineSvc.init.\n        // HACK this is a weird place for this.\n        var watch = $scope.$watch(function () {\n          return modelSvc.assets[modelSvc.episodes[appState.episodeId].master_asset_id];\n        }, function (masterAsset) {\n          if (masterAsset && Object.keys(masterAsset).length > 1) {\n            watch();\n            modelSvc.addEndingScreen(appState.episodeId); // needs master asset to exist so we can get duration\n            timelineSvc.init(appState.episodeId);\n            $scope.loading = false;\n            $rootScope.$emit(UPDATE_MAGNET);\n          }\n        });\n      } else {\n        // Episode has no master asset\n        console.log('episode has no master asset!');\n        $scope.loading = false;\n        // TODO add help screen for new users. For now, just pop the 'edit episode' pane:\n        if (appState.product === 'producer') {\n          appState.editEpisode = modelSvc.episodes[appState.episodeId];\n          const custId = modelSvc.containers[containerId].customer_id;\n          appState.editEpisode.templateOpts = selectService.getTemplates('episode', [custId]);\n        }\n        appState.videoControlsActive = true; // TODO see playerController showControls; this may not be sufficient on touchscreens\n        appState.videoControlsLocked = true;\n      }\n\n      if (appState.productLoadedAs === 'producer' && !(authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin'))) {\n        // TODO redirect instead?\n        appState.product = 'player';\n        appState.productLoadedAs = 'player';\n      }\n\n    });\n  });\n\n  if (modelSvc.episodes[appState.episodeId]) {\n    // recycle existing episode data.   TODO: DRY the repeated code below from inside getEpisodeWatcher\n    appState.lang = ($routeParams.lang) ? $routeParams.lang.toLowerCase() : modelSvc.episodes[appState.episodeId].defaultLanguage;\n    document.title = modelSvc.episodes[appState.episodeId].display_title; // TODO: update this on language change\n    if (modelSvc.episodes[appState.episodeId].master_asset_id) {\n      timelineSvc.init(appState.episodeId);\n    } else {\n      // TODO add help screen for new users. For now, just pop the 'edit episode' pane:\n      if (appState.product === 'producer') {\n        appState.editEpisode = modelSvc.episodes[appState.episodeId];\n      }\n      appState.videoControlsActive = true; // TODO see playerController showControls; this may not be sufficient on touchscreens\n      appState.videoControlsLocked = true;\n    }\n    if (appState.productLoadedAs === 'producer' && !(authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin'))) {\n      // TODO redirect instead?\n      appState.product = 'player';\n      appState.productLoadedAs = 'player';\n    }\n  } else {\n    $scope.loading = true;\n    modelSvc.addLandingScreen(appState.episodeId);\n    dataSvc.getEpisode(appState.episodeId, appState.episodeSegmentId);\n  }\n\n  $scope.appState = appState;\n  $scope.playbackService = playbackService;\n  $scope.show = appState.show; // yes, slightly redundant, but makes templates a bit easier to read\n  $scope.now = new Date();\n\n  // $scope.newWindowUrl = config.apiDataBaseUrl + \"/v1/new_window\";\n  // if (appState.narrativeId) {\n  //   $scope.newWindowUrl = $scope.newWindowUrl + \"?narrative=\" + appState.narrativeId + \"&timeline=\" + appState.timelineId;\n  // } else {\n  //   $scope.newWindowUrl = $scope.newWindowUrl + \"?episode=\" + appState.episodeId;\n  // }\n\n  $scope.showIframeIOSOverlay = appState.isIframedIOS();\n  $scope.iframeIOSOverlayHandler = iframeIOSOverlayHandler;\n  $scope.calcNewWindowUrl = calcNewWindowUrl;\n\n  function calcNewWindowUrl() {\n    const entityId = appState.narrativeId || appState.episodeId;\n    const timelineId = appState.timelineId;\n    return modelSvc.mainVideoNewWindowUrl(\n      appState.user.access_token,\n      entityId,\n      timelineId,\n      playbackService.getMetaProp('time')\n    );\n  }\n\n  function iframeIOSOverlayHandler() {\n    window.open(calcNewWindowUrl());\n  }\n  // put this in template instead\n  // if (appState.user.access_token) {\n  // \t$scope.newWindowUrl = $scope.newWindowUrl + \"&access_token=\" + appState.user.access_token;\n  // } else {\n  // \t// HACK wait for user info to finish loading\n  // \t$timeout(function () {\n  // \t\t$scope.newWindowUrl = $scope.newWindowUrl + \"&access_token=\" + appState.user.access_token;\n  // \t}, 500);\n  // }\n\n  /* END LOAD EPISODE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */\n\n  /* BEGIN TOOLBAR HIDE/REVEAL- - - - - - - - - - - - - - - - - - - - - - - - - - - - - */\n  // TODO put this in own controller\n\n  // Bottom toolbar starts out hidden.  5s after using a control or leaving the pane, fade out controls.\n  //   If mouse re-enters pane, keep the controls visible.\n\n  appState.videoControlsActive = false;\n  var controlTimer;\n  var keepControls;\n\n  var videoControlsWatcher = $scope.$watch(function () {\n    return appState.videoControlsActive;\n  }, function (isActive) {\n    if (isActive) {\n      $timeout.cancel(controlTimer);\n      controlTimer = $timeout(function () {\n        if (!keepControls) { // <-- this is why we're not just calling allowControlsExit here\n          appState.videoControlsActive = false;\n        }\n      }, 5000);\n    }\n  });\n\n  $scope.showControls = function () {\n    // console.log(\"showControls\");\n    $timeout.cancel(controlTimer);\n    appState.videoControlsActive = true;\n    if (appState.isTouchDevice) {\n      $scope.allowControlsExit(); // otherwise it sticks permanently on touchscreens. TODO find a better way\n    }\n  };\n\n  // $scope.keepControls = function () {\n  // \tconsole.log(\"keepControls\");\n  // \tappState.videoControlsLocked = true;\n  // };\n\n  $scope.allowControlsExit = function () {\n    // console.log(\"allowControlsExit. Locked state is \", appState.videoControlsLocked);\n    // appState.videoControlsLocked = false;\n    $timeout.cancel(controlTimer);\n    controlTimer = $timeout(function () {\n      if (!appState.videoControlsLocked) {\n        appState.videoControlsActive = false;\n      }\n    }, 5000);\n  };\n\n  /* END TOOLBAR HIDE/REVEAL- - - - - - - - - - - - - - - - - - - - - - - - - - - - - */\n\n  // Misc toolbars too small to rate their own controllers\n  $scope.toggleSearchPanel = function () {\n    appState.show.searchPanel = !appState.show.searchPanel;\n    console.log('toggle search pane!', appState.show.searchPanel);\n    if (appState.windowWidth < 480) {\n      $scope.viewMode('review');\n    } else {\n      $scope.viewMode(appState.show.searchPanel ? 'review' : 'discover');\n    }\n\n    appState.searchText = '';\n    if (appState.show.searchPanel) {\n      $timeout(function () {\n        document.getElementById('searchtext').focus();\n      });\n    }\n  };\n\n  $scope.endSearch = function () {\n    appState.searchText = '';\n    appState.show.searchPanel = false;\n  };\n\n  $scope.toggleNavPanel = function () {\n    // console.log(\"toggleNavPanel\");\n    timelineSvc.pause();\n    appState.show.navPanel = !appState.show.navPanel;\n  };\n\n  $scope.seek = function (t) {\n    // triggered by nav panel\n    timelineSvc.seek(t, \"sceneMenu\");\n    appState.show.navPanel = false;\n  };\n\n  $scope.pause = function () {\n    timelineSvc.pause();\n  };\n\n  // Intercepts the first play of the video and decides whether to show the help panel beforehand.\n  // Disabling this,since we're not showing a help panel anymore, but keeping it in case we change our minds on that\n  var firstplayWatcher = $rootScope.$on(\"video.firstPlay\", function () {\n    // if (localStorageAllowed && appState.time === 0 && !(localStorage.getItem(\"noMoreHelp\"))) {\n    // \t// appState.show.helpPanel = true;\n    // } else {\n    timelineSvc.play();\n    // }\n  });\n\n  $scope.hidePanel = function (panel) {\n    // console.log(\"hidePanel\", panel);\n    appState.show[panel] = false;\n    // console.log(appState);\n  };\n\n  $scope.hidePanels = function () {\n    // dismiss ALL THE THINGS\n    appState.show.navPanel = false;\n    appState.show.profilePanel = false;\n    appState.itemDetail = false;\n    $rootScope.$emit(\"player.dismissAllPanels\");\n  };\n\n  $scope.play = function () {\n    console.log('PlayerController#play');\n    timelineSvc.play();\n  };\n\n  $scope.continue = function () {\n    // console.log(\"continue\", modelSvc.episodes[appState.episodeId].masterAsset.duration, appState.time);\n    // If we're close to the end, jsut move to the ending screen and stop.\n    if (modelSvc.episodes[appState.episodeId].masterAsset.duration - playbackService.getMetaProp('time') < 0.2) {\n      timelineSvc.pause();\n      timelineSvc.seek(modelSvc.episodes[appState.episodeId].masterAsset.duration - 0.01);\n    } else {\n      timelineSvc.play();\n    }\n  };\n\n  $scope.userHasRole = authSvc.userHasRole;\n  $scope.logout = authSvc.logout;\n  $scope.isTrueGuest = authSvc.isTrueGuest;\n\n  // - - - - - - - - -  - - - - - - - - - - - - - - -\n  // Autoscroll\n  // Some jQuery dependencies here (namespaced bindings, animated scroll)\n\n  // appstate.autoscroll = we are in a mode which wants autoscroll\n  // appstate.autoscrollBlocked = user has disabled autoscroll (by scrolling manually)\n  // (Those are in modelSvc instead of $scope becuase in future we'll want scenes to be able to autoscroll too)\n\n  // isn't it weird how we read the scrollTop from (window), but have to animate it on (body,html)?\n\n  // NOTE: When we had the #CONTAINER position:fixed hack for fullscreen safari, this needed to be configurable to point to\n  // #CONTAINER instead of window.  Have removed that, but leaving this here in case we bring it back:\n\n  //console.log(\"AppState scroll stuff\", \"scroll:\", appState.autoscroll, \"blocked:\", appState.autoscrollBlocked, appState.isTouchDevice);\n\n  if (appState.isTouchDevice && appState.viewMode === 'review') {\n    appState.autoscroll = true;\n  }\n\n  var autoscrollableNode = $(window);\n  var animatableScrollNode = $('html,body');\n  var autoscrollTimer = false;\n\n  var startScrollWatcher = function () {\n    //console.log(\"startScrollWatcher\");\n    if (autoscrollTimer) {\n      return;\n    }\n    autoscrollTimer = $interval(handleAutoscroll, 400);\n    autoscrollableNode.bind(\"scroll\", function () {\n      // User-initiated scrolling should block autoscroll.\n      // console.log(\"user scrolled\");\n      animatableScrollNode.stop();\n      stopScrollWatcher();\n      appState.autoscrollBlocked = true;\n    });\n    // handleAutoscroll();\n  };\n\n  var stopScrollWatcher = function () {\n    console.log(\"stopScrollWatcher\");\n    autoscrollableNode.unbind(\"scroll\");\n    $interval.cancel(autoscrollTimer);\n    autoscrollTimer = false;\n\n  };\n\n  $scope.enableAutoscroll = function () {\n    // console.log(\"Enabling autoscroll\");\n    if (appState.autoscrollBlocked) {\n      appState.autoscrollBlocked = false;\n      startScrollWatcher();\n    }\n  };\n\n  // TODO this is a relatively expensive watch.  Could greatly increase its $interval if we\n  // support directly triggering it from timeline on seek()...\n  var handleAutoscroll = function () {\n    //console.log(\"handleAutoscroll\", \"scroll:\", appState.autoscroll, \"blocked:\", appState.autoscrollBlocked);\n    // if autoscroll is true and autoscrollBlocked is false,\n    // find the topmost visible current item and scroll to put it in the viewport.\n    // WARNING this may break if item is inside scrollable elements other than #CONTAINER\n    if (appState.autoscrollBlocked || !appState.autoscroll) {\n      return;\n    }\n\n    // find topmost visible current items.\n    // Limiting search to .reviewMode for now, because it was matching and trying to scroll to modals;\n    // when we add more generalized autoscroll support within scenes that will need to change of course\n    var top = Infinity;\n    var curScroll = autoscrollableNode.scrollTop();\n\n    // HACK. Need to limit this to search within a pane\n    angular.forEach($('.isCurrent:visible'), function (item) {\n      var t = item.getBoundingClientRect()\n          .top + curScroll;\n      if (t < top) {\n        top = t;\n      }\n    });\n    if (top === Infinity) {\n      return;\n    }\n\n    // There's a visible current item; is it within the viewport?\n    var slop = 180;\n    if (\n      (top > curScroll + slop) && // below top of viewport\n      ((top - curScroll) < (document.documentElement.clientHeight - slop)) // above bottom of viewport\n    ) {\n      return;\n    }\n    if (top < slop && curScroll < slop) {\n      return; // too close to top of window to bother\n    }\n\n    // Okay, we got past all those returns; it must be time to scroll\n    // console.log(\"handleAutoscroll triggering a scroll\");\n    stopScrollWatcher();\n    animatableScrollNode.animate({\n      \"scrollTop\": top - slop\n    }, 1500);\n\n    // Don't use jQuery's animation callback; this would get called twice because animatableScrollNode is two nodes...\n    $timeout(function () {\n      startScrollWatcher();\n    }, 1750); // allow extra time; iPad was still capturing the tail end of the animated scroll\n\n  };\n\n  startScrollWatcher();\n\n  // - - - - - - - - -  - - - - - - - - - - - - - - -\n\n  var escWatcher = $rootScope.$on(\"userKeypress.ESC\", $scope.hidePanels);\n\n  $scope.$on('$destroy', function () {\n    videoControlsWatcher();\n    getEpisodeWatcher();\n    firstplayWatcher();\n    escWatcher();\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/controllers/PlayerController.ts","SceneController.$inject = ['$scope', '$filter', 'ittUtils'];\n\nexport default function SceneController($scope, $filter, ittUtils) {\n  $scope.byPullquoteOrH2 = byPullquoteOrH2;\n  $scope.centeredProTransmedia = centeredProTransmedia;\n  $scope.setBgImgUrl = setBgImgUrl;\n  $scope.precalculateSceneValues = precalculateSceneValues;\n\n  function precalculateSceneValues() {\n    // console.log(\"precalcSceneValues\");\n\n    // clear out old calculations in case we're re-precalculating\n    delete $scope.mainContentHasLeftSidebar;\n    delete $scope.mainContentHasRightSidebar;\n    delete $scope.mainContentHasBothSidebars;\n    delete $scope.altContentHasLeftSidebar;\n    delete $scope.altContentHasRightSidebar;\n    delete $scope.altContentHasBothSidebars;\n\n    // some scene templates let you specify showCurrent for one or more columns; others do it automatically (that will be in the template)\n    $scope.showCurrent = ($.inArray(\"showCurrent\", $scope.scene.layouts) > -1);\n\n    // Precalculate each fg, bg, and content pane on scene creation for performance.\n    $scope.contentItems = $filter(\"isContent\")($scope.scene.items);\n    $scope.mainFgItems = $filter(\"itemLayout\")($scope.scene.items, \"mainFg\");\n    $scope.mainBgItems = $filter(\"itemLayout\")($scope.scene.items, \"mainBg\");\n    $scope.altFgItems = $filter(\"itemLayout\")($scope.scene.items, \"altFg\");\n    $scope.altBgItems = $filter(\"itemLayout\")($scope.scene.items, \"altBg\");\n    // Content is a little trickier:\n    // * splitRequired:\n    //   main = transcript + optional   / alt=required - transcript\n    // * splitOptional:\n    //   main=transcript + required / alt=optional - transcript\n    // * splitTransmedia (default):\n    //   main=annotation except text-transmedia or text-definition, alt=inverse\n\n    // (Note splitRequired and splitOptional are legacy)\n\n    // Main content pane:\n    if ($.inArray(\"splitRequired\", $scope.scene.layouts) > -1) {\n      $scope.mainContentItems = $filter(\"transcriptandoptional\")($scope.contentItems);\n    } else if ($.inArray(\"splitOptional\", $scope.scene.layouts) > -1) {\n      $scope.mainContentItems = $filter(\"transcriptandrequired\")($scope.contentItems);\n    } else {\n      $scope.mainContentItems = $filter(\"annotation\")($scope.contentItems);\n    }\n\n    // alt content pane is inverse of main:\n    if ($.inArray(\"splitRequired\", $scope.scene.layouts) > -1) {\n      $scope.altContentItems = $filter(\"required\")($scope.contentItems);\n    } else if ($.inArray(\"splitOptional\", $scope.scene.layouts) > -1) {\n      $scope.altContentItems = $filter(\"optional\")($scope.contentItems);\n    } else {\n      $scope.altContentItems = $filter(\"transmedia\")($scope.contentItems);\n    }\n\n    // Check for left and right sidebars\n    for (var i = 0; i < $scope.mainContentItems.length; i++) {\n      if ($.inArray(\"burstL\", $scope.mainContentItems[i].layouts) > -1 ||\n        $.inArray(\"sidebarL\", $scope.mainContentItems[i].layouts) > -1 ||\n        $.inArray(\"burst\", $scope.mainContentItems[i].layouts) > -1) {\n        $scope.mainContentHasLeftSidebar = true;\n      }\n      if ($.inArray(\"burstR\", $scope.mainContentItems[i].layouts) > -1 ||\n        $.inArray(\"sidebarR\", $scope.mainContentItems[i].layouts) > -1 ||\n        $.inArray(\"burst\", $scope.mainContentItems[i].layouts) > -1) {\n        $scope.mainContentHasRightSidebar = true;\n      }\n      if ($scope.mainContentHasLeftSidebar && $scope.mainContentHasRightSidebar) {\n        $scope.mainContentHasBothSidebars = true;\n        i = $scope.mainContentItems.length; // no need to keep checking the rest\n      }\n    }\n\n    for (i = 0; i < $scope.altContentItems.length; i++) {\n      if ($.inArray(\"burstL\", $scope.altContentItems[i].layouts) > -1 ||\n        $.inArray(\"sidebarL\", $scope.altContentItems[i].layouts) > -1 ||\n        $.inArray(\"burst\", $scope.altContentItems[i].layouts) > -1) {\n        $scope.altContentHasLeftSidebar = true;\n      }\n      if ($.inArray(\"burstR\", $scope.altContentItems[i].layouts) > -1 ||\n        $.inArray(\"sidebarR\", $scope.altContentItems[i].layouts) > -1 ||\n        $.inArray(\"burst\", $scope.altContentItems[i].layouts) > -1) {\n        $scope.altContentHasRightSidebar = true;\n      }\n      if ($scope.altContentHasLeftSidebar && $scope.altContentHasRightSidebar) {\n        $scope.altContentHasBothSidebars = true;\n        i = $scope.altContentItems.length; // no need to keep checking the rest\n      }\n    }\n  }\n\n  function centeredProTransmedia(item) {\n    var isPullQuote = item.templateUrl === 'templates/item/pullquote.html';\n    var isH2 = item.templateUrl === 'templates/item/text-h2.html';\n    var isLongTxt = item.templateUrl === 'templates/item/text-transmedia.html';\n    var isDef = item.templateUrl === 'templates/item/text-definition.html';\n    return (isPullQuote || isH2 || isLongTxt || isDef ) ? item : false;\n  }\n\n  function byPullquoteOrH2(item) {\n    var isPullQuote = item.templateUrl === 'templates/item/pullquote.html';\n    var isH2 = item.templateUrl === 'templates/item/text-h2.html';\n    return (isPullQuote || isH2) ? item : false;\n  }\n\n  function setBgImgUrl(items, col) {\n    var currItems = $filter('isCurrent')(items);\n    var mainColBgOrFg = $filter(col)(currItems);\n    var bgStyle;\n    var opacity = 1;\n    var bgSize;\n    var bgPosition;\n    var bgUrl;\n\n    if (mainColBgOrFg.length > 0 && ittUtils.existy(mainColBgOrFg[0].asset)) {\n      bgUrl = 'url(' + mainColBgOrFg[0].asset.cssBgUrl + ')';\n      if (/Bg/.test(mainColBgOrFg[0].layoutCss)) {\n        opacity = 0.25;\n      }\n      bgStyle = mainColBgOrFg[0].styles[0];\n      //fill and stretch = background-size: 100% 100%, background-position: 50% 50%\n      switch (bgStyle) {\n        case 'cover':\n          bgSize = 'cover';\n          return {'background-image': bgUrl, 'background-size': bgSize, 'opacity': opacity};\n        case 'contain':\n          bgSize = 'contain';\n          bgPosition = 'center';\n          return {\n            'background-image': bgUrl,\n            'background-size': bgSize,\n            'opacity': opacity,\n            'background-position': bgPosition\n          };\n        case 'fill':\n          bgSize = '100% 100%';\n          bgPosition = '50% 50%';\n          return {\n            'background-image': bgUrl,\n            'background-size': bgSize,\n            'opacity': opacity,\n            'background-position': bgPosition\n          };\n        case 'tl':\n          bgSize = 'auto';\n          bgPosition = 'top left';\n          return {\n            'background-image': bgUrl,\n            'background-size': bgSize,\n            'opacity': opacity,\n            'background-position': bgPosition\n          };\n        case 'tr':\n          bgSize = 'auto';\n          bgPosition = 'top right';\n          return {\n            'background-image': bgUrl,\n            'background-size': bgSize,\n            'opacity': opacity,\n            'background-position': bgPosition\n          };\n        case 'bl':\n          bgSize = 'auto';\n          bgPosition = 'bottom left';\n          return {\n            'background-image': bgUrl,\n            'background-size': bgSize,\n            'opacity': opacity,\n            'background-position': bgPosition\n          };\n        case 'br':\n          bgSize = 'auto';\n          bgPosition = 'bottom right';\n          return {\n            'background-image': bgUrl,\n            'background-size': bgSize,\n            'opacity': opacity,\n            'background-position': bgPosition\n          };\n      }\n      //do nothing\n      return '';\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/controllers/SceneController.ts","SearchPanelController.$inject = ['$scope', '$rootScope', '$timeout', 'appState'];\n\nexport default function SearchPanelController($scope, $rootScope, $timeout, appState) {\n\n  // Events searchableText is:\n  // (event.display_annotation || event.display_description) + \" \" + (event.display_title || event.display_annotator)\n\n  // default sort order\n  $scope.sortBy = \"startTime\";\n\n  $scope.toggleSortBy = function (sortedBy) {\n    $scope.sortBy = getFlippedSortValue(sortedBy);\n    appState.autoscroll = ($scope.sortBy === 'startTime'); // autoscroll only when sorted by time\n  };\n\n  $scope.getToggledValue = function (currentSortBy) {\n    return getFlippedSortValue(currentSortBy);\n  };\n\n  var getFlippedSortValue = function (current) {\n    if (current === \"startTime\") {\n      return \"type\";\n    } else {\n      return \"startTime\";\n    }\n  };\n\n  $scope.getFriendlySortText = function (sortBy) {\n    if (sortBy === \"startTime\") {\n      return \"time\";\n    } else {\n      return \"type\";\n    }\n  };\n\n  // generate searchable text for the episode (on demand).\n  // TODO need to handle multi-episode timelines.\n\n  $scope.indexed = false;\n\n  $scope.indexEvents = function () {\n    if (!$scope.episode.items) {\n      $timeout(function () { // HACK Sorry, future me\n        $scope.indexEvents();\n      }, 300);\n      return false;\n    }\n    $scope.indexed = true;\n    // map the increasingly-misnamed producerItemType to search categories.\n    // Array so we can control sort order in panel.\n    $scope.typeCategories = [\n      \"transcript\", \"annotation\", \"file\", \"image\", \"link\", \"video\", \"question\", \"other\"\n    ];\n\n    // map type literals to pretty/printable version.\n    $scope.showTypes = {\n      transcript: {\n        name: \"Transcript\",\n        items: []\n      },\n      annotation: {\n        name: \"Annotations\",\n        items: []\n      },\n      file: {\n        name: \"Files\",\n        items: []\n      },\n      image: {\n        name: \"Images\",\n        items: []\n      },\n      link: {\n        name: \"Links\",\n        items: []\n      },\n      video: {\n        name: \"Videos\",\n        items: []\n      },\n      question: {\n        name: \"Questions\",\n        items: []\n      },\n      other: {\n        name: \"Other\",\n        items: []\n      }\n    };\n\n\n    angular.forEach($scope.episode.items, function (item) {\n      // include cosmetic items only in producer:\n      if (appState.product !== 'producer' && item.cosmetic) {\n        return;\n      }\n      if (item._type === 'Scene') {\n        return;\n      }\n\n      // build 'by type' arrays:\n      if (item.producerItemType && $scope.showTypes[item.producerItemType]) {\n        $scope.showTypes[item.producerItemType].items.push(item);\n      } else {\n        $scope.showTypes.other.items.push(item);\n      }\n\n      // control whether annotations are shown header-style:\n      if (item.producerItemType === 'annotation') {\n        // HACK template url dependency\n        item.showAsHeader = !(item.templateUrl.match(/(transmedia|definition)/));\n      }\n    });\n  };\n\n  $rootScope.$on('searchReindexNeeded', $scope.indexEvents); // HACK\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/controllers/SearchPanelController.ts","import { IModelSvc, IAnalyticsSvc } from '../interfaces';\n\nTimelineController.$inject = [\n  '$scope',\n  '$rootScope',\n  'timelineSvc',\n  'playbackService',\n  'analyticsSvc',\n  'appState',\n  'modelSvc'\n];\nexport default function TimelineController(\n  $scope,\n  $rootScope,\n  timelineSvc,\n  playbackService,\n  analyticsSvc: IAnalyticsSvc,\n  appState,\n  modelSvc: IModelSvc) {\n\n  $scope.playbackService = playbackService;\n\n  $scope.timelineBtnClick = timelineBtnClick;\n  $scope.setBtnClass = setBtnClass;\n\n  $rootScope.$on('userKeypress.SPACE', timelineBtnClick);\n\n  function setBtnClass() {\n    var state = _getTimelineState();\n    if (playbackService.allowPlayback(state) === true) {\n      $scope.controlText = 'play';\n      return 'button-play';\n    }\n    $scope.controlText = 'pause';\n    return 'button-pause';\n  }\n\n  function timelineBtnClick() {\n    playbackService.togglePlayback(\n      null,\n      timelineSvc.restartEpisode,\n      analyticsSvc.captureEpisodeActivity.bind(analyticsSvc)\n    );\n  }\n\n  function _getTimelineState() {\n    return playbackService.getTimelineState();\n  }\n\n  $scope.changeSpeed = function (n) {\n    // console.log(\"timelineController.changeSpeed\");\n    // Limit speed to between 0.5 and 2 inclusive\n    var newSpeed = playbackService.getMetaProp('timeMultiplier') + n;\n    if (newSpeed < 0.5) {\n      newSpeed = 0.5;\n    }\n    if (newSpeed > 2) {\n      newSpeed = 2;\n    }\n    timelineSvc.setSpeed(newSpeed);\n  };\n  $scope.resetSpeed = function () {\n    timelineSvc.setSpeed(1);\n  };\n\n  $scope.markerPercent = function (t) {\n    // console.log('marker %', t);\n    return (t === undefined ? 0 : t / playbackService.getMetaProp('duration') * 100);\n  };\n\n  // Yeah, this is a little odd.  Letting timelineSvc manage all video-related functions,\n  // including sound, so we can maintain state across multiple videos.\n  $scope.toggleMute = function () {\n    timelineSvc.toggleMute();\n  };\n  $scope.setVolume = function (volume) {\n    timelineSvc.setVolume(volume);\n  };\n\n  /* DEAD CODE\n   $scope.toggleFullscreen = function () {\n   if (isInFullscreenMode()) {\n   exitFullscreen();\n   } else {\n   enterFullscreen();\n   }\n   };\n\n   var isInFullscreenMode = function () {\n   return ((document.fullScreenElement && document.fullScreenElement !== null) || // alternative standard methods\n   document.mozFullScreen || document.webkitIsFullScreen); // current working methods\n   };\n\n   var fullscreenWatcher = $scope.$watch(function () {\n   return isInFullscreenMode();\n   }, function (newVal) {\n   appState.isInFullscreenMode = newVal;\n   });\n   $scope.$on('$destroy', function () {\n   fullscreenWatcher();\n   });\n\n   var exitFullscreen = function () {\n   if (document.exitFullscreen) {\n   document.exitFullscreen();\n   } else if (document.mozCancelFullScreen) {\n   document.mozCancelFullScreen();\n   } else if (document.webkitExitFullscreen) {\n   document.webkitExitFullscreen();\n   }\n   };\n\n   var enterFullscreen = function () {\n   var element = document.getElementById('CONTAINER');\n   if (element.requestFullScreen) {\n   element.requestFullScreen();\n   } else if (element.mozRequestFullScreen) {\n   element.mozRequestFullScreen();\n   } else if (element.webkitRequestFullScreen) {\n   element.webkitRequestFullScreen();\n   }\n   };\n   */\n\n  $scope.$on('$destroy', function () {\n    // Make sure that the clock and event timers are destroyed too\n    timelineSvc.pause();\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/controllers/TimelineController.ts","authSvc.$inject = ['config', '$routeParams', '$http', '$q', '$location', 'ittUtils', 'appState', 'modelSvc', 'errorSvc'];\n\nexport default function authSvc(config, $routeParams, $http, $q, $location, ittUtils, appState, modelSvc, errorSvc) {\n  // console.log('authSvc factory');\n  var svc = {};\n  var Roles = {\n    ADMINISTRATOR: \"admin\",\n    INSTRUCTOR: \"instructor\",\n    STUDENT: \"student\",\n    GUEST: \"guest\",\n    CUSTOMER_ADMINISTRATOR: 'customer admin'\n  };\n\n  var Resources = {\n    CUSTOMER: 'Customer'\n  };\n\n  svc.isTrueGuest = isTrueGuest;\n  function isTrueGuest() {\n    var _isGuest = true;\n    angular.forEach(appState.user.roles, function(r) {\n      if (r.role !== Roles.GUEST) {\n        _isGuest = false;\n      }\n    });\n\n    return _isGuest;\n  }\n\n  svc.userHasRole = function (role) {\n    if (appState.user && appState.user.roles) {\n      for (var i = 0; i < appState.user.roles.length; i++) {\n        if (appState.user.roles[i].role === role) {\n          if (!(role === Roles.ADMINISTRATOR && ittUtils.existy(appState.user.roles[i].resource_id))) {\n            return true;\n          }\n        } else if (role === Roles.CUSTOMER_ADMINISTRATOR && appState.user.roles[i].role === Roles.ADMINISTRATOR &&\n          ittUtils.existy(appState.user.roles[i].resource_id) &&\n          appState.user.roles[i].resource_type === Resources.CUSTOMER) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  svc.getCustomerIdsFromRoles = function () {\n    if (appState.user && appState.user.roles) {\n      return appState.user.roles.reduce(function(accm, i) {\n        if (i.role === Roles.ADMINISTRATOR &&\n          ittUtils.existy(i.resource_id) &&\n          i.resource_type === Resources.CUSTOMER) {\n          accm.push(i.resource_id);\n        }\n        return accm;\n      }, []);\n    }\n  };\n\n  svc.getRoleForNarrative = function (narrativeId, roles) {\n    roles = typeof roles !== 'undefined' ? roles : appState.user.roles;\n    var role = \"\";\n    var exitLoop = false;\n    if (roles) {\n      for (var i = 0; i < roles.length; i++) {\n        switch (roles[i].role) {\n          case Roles.ADMINISTRATOR:\n            if (roles[i].resource_id && roles[i].resource_id !== narrativeId) {\n              continue; // they are an admin, but not in this narrative, so let's keep going\n            } else {\n              role = \"admin\";\n              exitLoop = true; //if they are an admin, then we can just get out as it trumps\n            }\n            break;\n          case Roles.INSTRUCTOR:\n            if (roles[i].resource_id && roles[i].resource_id !== narrativeId) {\n              continue;\n            } else {\n              role = roles[i].role;\n            }\n            break;\n          case Roles.STUDENT:\n            if (roles[i].resource_id && roles[i].resource_id !== narrativeId) {\n              continue;\n            } else {\n              role = role === \"instructor\" ? role : roles[i].role;\n            }\n            break;\n          case Roles.GUEST:\n            if (roles[i].resource_id && roles[i].resource_id !== narrativeId) {\n              continue;\n            } else {\n              role = role === \"instructor\" || role === \"student\" ? role : roles[i].role;\n            }\n            break;\n        }\n        if (exitLoop) {\n          break;\n        }\n      }\n    }\n    return role;\n  };\n\n  svc.getDefaultProductForRole = function (role) {\n    /*\n     This was making it impossible for users with admin role to see editor or player interface.\n     For now, producer should be used only at the /#/episode urls, editor at the narrative urls\n     (producer only works with individual episodes atm anyway)\n     TODO later on we'll make this user-selectable within the product UI (and probably\n     eliminate appState.productLoadedAs and the /#/episode, /#/editor, etc routes)\n     */\n    var product = \"player\";\n    if (appState.productLoadedAs === 'narrative') {\n      if (role === Roles.ADMINISTRATOR || role === Roles.INSTRUCTOR) {\n        product = \"sxs\";\n      }\n    } else {\n      errorSvc.error({\n        data: \"authSvc.getDefaultProductForRole should only be used within narratives for now\"\n      });\n    }\n    return product;\n  };\n\n  svc.logout = function () {\n    // Clear these even if the logout call fails (which it will if the token in localStorage has expired).\n    // DO NOT clear the Authorization header yet (it's needed for the logout server call)\n    try {\n      localStorage.removeItem(config.localStorageKey);\n      document.cookie = 'XSRF-TOKEN=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n      document.cookie = '_tellit-api_session=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    } catch (e) {\n      // user disabled cookies, so no need to try to remove them...\n    }\n    appState.user = {};\n\n    $http({\n      method: 'GET',\n      url: config.apiDataBaseUrl + \"/logout\"\n    })\n      .success(function () {\n        delete $http.defaults.headers.common.Authorization; // now it's safe\n        $location.path('/')\n          .search({\n            logout: 1\n          });\n      })\n      .error(function () {\n        delete $http.defaults.headers.common.Authorization; // if it exists at all here, it's definitely invalid\n        $location.path('/')\n          .search({\n            logout: 1\n          });\n      });\n  };\n\n  svc.adminLogin = function (authKey, password) {\n    var defer = $q.defer();\n    $http({\n      method: 'POST',\n      url: config.apiDataBaseUrl + \"/auth/identity/callback\",\n      data: $.param({\n        \"auth_key\": authKey,\n        \"password\": password\n      }),\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    })\n      .success(function (data) {\n        $http.defaults.headers.common.Authorization = 'Token token=\"' + data.access_token + '\"';\n        resolveUserData(data);\n        svc.getCurrentUser()\n          .then(function () {\n            defer.resolve(data);\n          });\n\n      })\n      .error(function (data) {\n        defer.reject(data);\n      });\n    return defer.promise;\n  };\n\n  /*\n\n   authentication paths:\n   header + user data: resolve immediately\n   header + no user data: call show_user (this shouldn't be possible, but I coded it in at some point for some reason...)\n   key in url param: call get_nonce\n   token in localStorage: set header, call show_user\n   nothing: get_nonce\n\n   */\n\n  var authenticateDefer = $q.defer();\n  svc.authenticate = function (nonceParam) {\n    if ($http.defaults.headers.common.Authorization) {\n      //appState#init will initialize an empty object as the user property, which will always make\n      //appState.user truthy, thus need to check to see if we actually have a loaded user by looking for the id.\n      if (appState.user._id) {\n        // Have header and user; all done.\n        authenticateDefer.resolve();\n      } else {\n        // begin dubious code block\n        console.warn(\"Have auth header but no appState.user data. Not sure this should ever happen, TODO delete this from authSvc if it continues to not happen\");\n        svc.getCurrentUser()\n          .then(function () {\n            authenticateDefer.resolve();\n          }, function () {\n            return svc.authenticateViaNonce(nonceParam);\n          });\n        // end of dubious code block\n      }\n    } else if ($routeParams.key) {\n      // Have key in route\n      var nonce = $routeParams.key;\n      $location.search('key', null); // hide the param from the url.  reloadOnSearch must be turned off in $routeProvider!\n      return svc.getAccessToken(nonce);\n    } else {\n      var token = svc.getStoredToken();\n      if (token) {\n        // have localStorage token; try it\n        $http.defaults.headers.common.Authorization = 'Token token=\"' + token + '\"';\n        svc.getCurrentUser()\n          .then(function () {\n            // token worked\n            authenticateDefer.resolve();\n          }, function () {\n            // token expired; clear everything and start over\n\n            try {\n              localStorage.removeItem(config.localStorageKey);\n              document.cookie = 'XSRF-TOKEN=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n              document.cookie = '_tellit-api_session=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n            } catch (e) {\n              // user disabled cookies\n            }\n            appState.user = {};\n            return svc.authenticateViaNonce(nonceParam);\n          });\n      } else {\n        console.log('auth Via Nonce', nonceParam);\n        // no login info at all, start from scratch\n        return svc.authenticateViaNonce(nonceParam);\n      }\n    }\n    return authenticateDefer.promise;\n  };\n\n  svc.authenticateViaNonce = function (nonceParam) {\n    var defer = $q.defer();\n    svc.getNonce(nonceParam)\n      .then(function (nonce) {\n        svc.getAccessToken(nonce)\n          .then(function () {\n            defer.resolve();\n          });\n      });\n    return defer.promise;\n  };\n\n  svc.getStoredToken = function () {\n    var storedData = {};\n    try {\n      if (!localStorage) {\n        return false;\n      }\n      localStorage.getItem(config.localStorageKey);\n      storedData = angular.fromJson(localStorage.getItem(config.localStorageKey));\n      var currentCustomer = config.apiDataBaseUrl.match(/\\/\\/([^\\.]*)./)[1];\n      if (storedData.customer !== currentCustomer) {\n        console.log(\"deleting wrong-customer token: was \", storedData.customer, \" should be \", currentCustomer);\n        localStorage.removeItem(config.localStorageKey);\n        storedData = {};\n      }\n      return storedData.token || false;\n    } catch (e) {\n      return false;\n    }\n\n  };\n\n  svc.getCurrentUser = function () {\n    var defer = $q.defer();\n    $http({\n      method: 'GET',\n      url: config.apiDataBaseUrl + '/show_user'\n    })\n      .success(function (respData) {\n        resolveUserData(respData);\n        defer.resolve();\n      })\n      .error(function () {\n        defer.reject();\n      });\n    return defer.promise;\n  };\n\n  svc.updateUser = function (user) {\n    var defer = $q.defer();\n    $http({\n      method: 'PUT',\n      url: config.apiDataBaseUrl + '/users/' + user._id,\n      data: user\n    })\n      .success(function (respData) {\n        resolveUserData(respData);\n        defer.resolve();\n      })\n      .error(function () {\n        defer.reject();\n      });\n    return defer.promise;\n  };\n\n  var resolveUserData = function (data) {\n    // Modify the structure of the roles data if necessary.  This is a temporary fix and can be removed after the new roles system is in place.\n    if (data.roles !== null && data.roles !== undefined && data.roles.length > 0 && data.roles[0].constructor === String) {\n      var roles = [];\n      for (var i = 0; i < data.roles.length; i++) {\n        var role = {\n          role: data.roles[i]\n        };\n        roles.push(role);\n      }\n      data.roles = roles;\n    }\n\n    // updates appState.user and localStorage\n    var user = {\n      access_token: data.access_token || data.authentication_token,\n      customer: config.apiDataBaseUrl.match(/\\/\\/([^\\.]*)./)[1], // Access tokens are per-customer, which is based on subdomain.\n      //                                                            Logging in with one customer invalidates the key for any others for the same user,\n      //                                                            otherwise we'd just store separate ones per customer\n      roles: data.roles\n    };\n    angular.forEach([\"_id\", \"name\", \"email\", \"track_event_actions\", \"track_episode_metrics\", \"avatar_id\"], function (key) {\n      if (data[key]) {\n        user[key] = data[key];\n      }\n    });\n\n    var tok = svc.getStoredToken();\n    if (user.avatar_id && tok) {\n      // console.log('culprit identified', tok);\n      $http.defaults.headers.common.Authorization = 'Token token=\"' + tok + '\"';\n      // Load and cache avatar asset for current user\n      $http.get(config.apiDataBaseUrl + \"/v1/assets/\" + user.avatar_id).then(function (response) {\n        // console.log(\"GOT AVATAR\", response);\n        modelSvc.cache(\"asset\", response.data);\n        appState.user.avatar = response.data.url; // convenience for now, may be better to use modelSvc here\n      });\n    }\n\n    // API BUG workaround\n    if (data[\"track_episode_metrics:\"]) {\n      user.track_episode_metrics = true;\n    }\n    if (user.roles) {\n      user.role_description = getRoleDescription(user.roles[0]);\n    }\n    if (data.emails) {\n      user.email = data.emails[0];\n    }\n    appState.user = user;\n    try {\n      localStorage.setItem(config.localStorageKey, JSON.stringify({\n        token: user.access_token,\n        customer: user.customer\n      }));\n    } catch (e) {}\n  };\n\n  var getRoleDescription = function (roleKey) {\n    if (roleKey === undefined) {\n      return \"User\";\n    }\n    if (roleKey.role === 'admin') {\n      return \"Administrator\";\n    }\n    if (roleKey.role === undefined) {\n      return \"User\";\n    }\n    if (roleKey.role === \"guest\") {\n      return \"Guest user\";\n    }\n    if (roleKey.role.match(/student/i)) {\n      return \"Student\";\n    }\n    if (roleKey.role.match(/instructor/i)) {\n      return \"Instructor\";\n    }\n    return roleKey;\n  };\n\n  svc.getNonce = function (nonceParam) {\n    var defer = $q.defer();\n    var url = config.apiDataBaseUrl + \"/v1/get_nonce\";\n    if (nonceParam) {\n      url = url + \"?\" + nonceParam;\n    }\n    $http.get(url)\n      .success(function (data) {\n        if (data.nonce) {\n          defer.resolve(data.nonce);\n        } else {\n          // Guest access is not allowed\n          if (data.login_url && data.login_url !== null) {\n            if (data.login_via_top_window_only) {\n              window.top.location.href = data.login_url;\n            } else {\n              window.location.href = data.login_url;\n            }\n            defer.reject();\n          } else {\n            console.warn(\"get_nonce returned a null login_url\");\n            if (window.location.hash !== '#/') {\n              window.location.href = \"/#/\";\n            }\n            defer.reject();\n          }\n        }\n      })\n      .error(function () {\n        defer.reject();\n      });\n    return defer.promise;\n  };\n\n  svc.getAccessToken = function (nonce) {\n    var defer = $q.defer();\n    $http.get(config.apiDataBaseUrl + \"/v1/get_access_token/\" + nonce)\n      .success(function (data) {\n        resolveUserData(data);\n        $http.defaults.headers.common.Authorization = 'Token token=\"' + data.access_token + '\"';\n        svc.getCurrentUser()\n          .then(function () {\n            defer.resolve(data);\n          });\n      })\n      .error(function () {\n        // console.error(\"get_access_token failed:\", data, status);\n        defer.reject();\n      });\n    return defer.promise;\n  };\n\n  return svc;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/authSvc/authSvc.ts","\nawsSvc.$inject = ['$http', '$q', 'config'];\n\nexport default function awsSvc($http, $q, config) {\n  // console.log('awsSvc, user: ', appState.user);\n  var MAX_CHUNKS = 1000;\n  var MAX_RETRIES = 4;\n  var MAX_SIMUL_PARTS_UPLOADING = 3;\n  var REQUEST_TIMEOUT = 30000; //30 seconds (default is 2 minutes)\n  var PUBLIC_READ = \"public-read\";\n  var PENDING = \"pending\";\n  var UPLOADING = \"uploading\";\n  var FAILED = \"failed\";\n  var COMPLETE = \"complete\";\n  var svc = {};\n  var awsCache = {\n    s3: {}\n  };\n  var fiveMB = 1024 * 1024 * 5;\n  var chunkSize = 0;\n  var chunkCount = 0;\n  var chunksUploaded = 0;\n  var chunks = [];\n  var chunkSearchIndex = 0;\n  var files = [];\n  var fileMeta = {};\n  var fileIndex = 0;\n  var fileBeingUploaded;\n  var bytesUploaded = 0;\n  var multipartUpload;\n  var deferredUploads = [];\n  var deferredUpload;\n  var currentRequest;\n  var uploadPaused = false;\n\n  svc.awsCache = function () {\n    return awsCache;\n  };\n\n  svc.getBucketListing = function () {\n    var defer = $q.defer();\n    getUploadSession().then(function listObjects() {\n      awsCache.s3.listObjects(function (err, data) {\n        if (err) {\n          console.error(err, err.stack); // an error occurred\n          defer.reject();\n        } else {\n          // console.log('awsSvc, got bucket listing!', data);\n          defer.resolve(data); // successful response\n        }\n      });\n    });\n\n    return defer.promise;\n  };\n\n  /*\n   CRUFT asset creation endpoint is passed down through uploadFiles, startNextUpload, and createAsset.\n   TODO Refactor to create asset record outside of awsSvc, after returned promise from uploadFiles (meaning we could go back to a single svc.uploadFiles fn),\n   or at the very least to handle it within these next two functions instead of passing it all the way down the chain\n   */\n\n  svc.uploadContainerFiles = function (containerId, fileList, tag?) {\n    console.log('aws - upload container files', containerId, fileList);\n    return uploadFiles(\"/v1/containers/\" + containerId + \"/assets\", fileList, tag);\n  };\n  svc.uploadUserFiles = function (userId, fileList) {\n    return uploadFiles(\"/v1/users/\" + userId + \"/assets\", fileList);\n  };\n\n  //Pass in a FileList object and the container in which the files are to be placed\n  var uploadFiles = function (assetEndpoint, fileList, tag?) {\n    var deferredUploadsPromises = [];\n    // console.log('files: ', files);\n    for (var i = 0; i < fileList.length; i++) {\n      //can access this with regular array index\n      //https://developer.mozilla.org/en-US/docs/Web/API/FileList#Example\n      files.push(fileList[i]);\n      if (tag != null) {\n        fileMeta[fileList[i].name] = [tag];\n        console.log('adding meta stuff', fileMeta);\n      }\n      var deferred = $q.defer();\n      deferredUploads.push(deferred);\n      deferredUploadsPromises.push(deferred.promise);\n    }\n    startNextUpload(assetEndpoint);\n    // console.log('DEFERRED UPLOADS: ', deferredUploads);\n    return deferredUploadsPromises;\n  };\n\n  svc.pauseUpload = function () {\n    if (fileBeingUploaded && !uploadPaused) {\n      uploadPaused = true;\n      cancelCurrentUploadRequests();\n      if (isSmallUpload()) {\n        bytesUploaded = 0;\n      } else {\n        var chunkIndex = 0;\n        bytesUploaded = 0;\n        while (chunkIndex < chunkCount) {\n          var chunk = chunks[chunkIndex];\n          if (chunk.status === COMPLETE) {\n            bytesUploaded += chunk.uploaded;\n          }\n          chunkIndex++;\n        }\n      }\n      deferredUpload.notify({\n        bytesSent: bytesUploaded,\n        bytesTotal: fileBeingUploaded.size\n      });\n    }\n  };\n\n  svc.resumeUpload = function () {\n    if (fileBeingUploaded && uploadPaused) {\n      uploadPaused = false;\n      if (isSmallUpload()) {\n        putObject();\n      } else {\n        for (var i = 0; i < MAX_SIMUL_PARTS_UPLOADING; i++) {\n          startNextUploadPart();\n        }\n      }\n    }\n  };\n\n  svc.cancelUpload = function () {\n    if (fileBeingUploaded) {\n      uploadPaused = false;\n      bytesUploaded = 0;\n      cancelCurrentUploadRequests();\n      if (!isSmallUpload()) {\n        svc.cancelMultipartUpload(multipartUpload);\n        multipartUpload = null;\n      }\n      fileBeingUploaded = null;\n      // deferredUpload.notify({\n      // \tbytesSent: 0,\n      // \tbytesTotal: 0\n      // });\n      deferredUploads[fileIndex].reject(\"Canceled by user\");\n    }\n    // cancel pending uploads as well\n    for (var i = fileIndex + 1; i < files.length; i++) {\n      deferredUploads[i].reject(\"Canceled by user\");\n    }\n    fileIndex = files.length;\n\n  };\n\n  svc.networkError = function () {\n    if (fileBeingUploaded) {\n      cancelCurrentUploadRequests();\n    }\n  };\n\n  svc.deleteObject = function (bucketObject) {\n    var defer = $q.defer();\n    getUploadSession().then(function deleteObject() {\n      var params = {\n        Bucket: bucketObject.bucket,\n        Key: bucketObject.Key\n      };\n      awsCache.s3.deleteObject(params, function (err, data) {\n        if (err) {\n          console.error(err, err.stack); // an error occurred\n          defer.reject();\n        } else {\n          // console.log('awsSvc, deleted object!', data);\n          defer.resolve(data); // successful response\n        }\n      });\n    });\n\n    return defer.promise;\n  };\n\n  svc.getMultipartUploads = function () {\n    var defer = $q.defer();\n    getUploadSession().then(function listMultipartUploads() {\n      awsCache.s3.listMultipartUploads(function (err, data) {\n        if (err) {\n          console.error(err, err.stack); // an error occurred\n          defer.reject();\n        } else {\n          // console.log('awsSvc, got mulipart upload listing!', data);\n          defer.resolve(data); // successful response\n        }\n      });\n    });\n\n    return defer.promise;\n\n  };\n\n  svc.getMultipartUploadParts = function (index, multipartUpload) {\n    var defer = $q.defer();\n    getUploadSession().then(function listParts() {\n      var params = {\n        Bucket: multipartUpload.bucket,\n        Key: multipartUpload.Key,\n        UploadId: multipartUpload.UploadId\n      };\n      awsCache.s3.listParts(params, function (err, data) {\n        if (err) {\n          console.error(err, err.stack); // an error occurred\n          defer.reject();\n        } else {\n          // console.log('awsSvc, got mulipart upload listing!', data);\n          defer.resolve({\n            i: index,\n            parts: data\n          }); // successful response\n        }\n      });\n    });\n\n    return defer.promise;\n\n  };\n\n  svc.cancelMultipartUpload = function (multipartUpload) {\n    var defer = $q.defer();\n    getUploadSession().then(function abortMultipartUpload() {\n      var params = {\n        Bucket: multipartUpload.bucket,\n        Key: multipartUpload.Key,\n        UploadId: multipartUpload.UploadId\n      };\n      awsCache.s3.abortMultipartUpload(params, function (err, data) {\n        if (err) {\n          console.error(err, err.stack); // an error occurred\n          defer.reject();\n        } else {\n          // console.log('awsSvc, deleted mulipart upload!', data);\n          defer.resolve(data); // successful response\n        }\n      });\n    });\n\n    return defer.promise;\n  };\n\n  //Internal functions\n\n  var getUploadSession = function () {\n    if (awsCache.hasOwnProperty('sessionDeferred')) {\n      return awsCache.sessionDeferred.promise;\n    } else {\n      awsCache.sessionDeferred = $q.defer();\n    }\n    $http.get(config.apiDataBaseUrl + \"/v1/aws/s3/upload_session\")\n      .success(function (data) {\n        if (data.access_key_id) {\n          AWS.config.update({\n            accessKeyId: data.access_key_id,\n            secretAccessKey: data.secret_access_key,\n            sessionToken: data.session_token,\n            region: config.awsRegion\n          });\n          var params = {\n            maxRetries: 0,\n            httpOptions: {timeout: REQUEST_TIMEOUT},\n            params: {\n              Bucket: data.bucket,\n              Prefix: data.key_base\n            }\n          };\n          awsCache.s3 = new AWS.S3(params);\n          awsCache.sessionDeferred.resolve(data);\n        } else {\n          awsCache.sessionDeferred.reject();\n        }\n      })\n      .error(function () {\n        awsCache.sessionDeferred.reject();\n      });\n    return awsCache.sessionDeferred.promise;\n  };\n\n  var startNextUpload = function (assetEndpoint) {\n    // console.log('START NEXT UPLOAD: ', files.length, ', ', fileIndex, ', ', fileBeingUploaded);\n    if (files.length > fileIndex && !fileBeingUploaded) {\n      fileBeingUploaded = files[fileIndex];\n      if (fileBeingUploaded.type === \"\") {\n        // console.log('ABORTING UPLOAD, COULD NOT DETERMINE FILE TYPE FOR FILE:', fileBeingUploaded);\n        deferredUploads[fileIndex].reject('Could not determine file type for file \\'' + fileBeingUploaded.name + '\\'');\n        fileBeingUploaded = null;\n        fileIndex++;\n        startNextUpload(assetEndpoint);\n        return;\n      }\n      // console.log('files: ', files);\n      // console.log('awsSvc uploading file', fileBeingUploaded);\n      ensureUniqueFilename().then(function () {\n        var fileUploadPromise;\n        if (isSmallUpload()) {\n          fileUploadPromise = uploadSmallFile();\n        } else {\n          fileUploadPromise = uploadBigFile();\n        }\n        fileUploadPromise.then(function () {\n            createAsset(assetEndpoint);\n          },\n          function (reason) {\n            deferredUploads[fileIndex].reject(reason);\n          },\n          function (update) {\n            deferredUploads[fileIndex].notify(update);\n          });\n      });\n    }\n  };\n\n  var ensureUniqueFilename = function (deferred) {\n    deferred = deferred || $q.defer();\n    fileBeingUploaded.uniqueName = generateUUID();\n    getUploadSession().then(function () {\n      // console.log('awsSvc, ensureUniqueFilename: ', fileBeingUploaded.uniqueName);\n      //First check for an object with the same name\n      var params = {\n        Key: awsCache.s3.config.params.Prefix + fileBeingUploaded.uniqueName\n      };\n      awsCache.s3.headObject(params, function (err) {\n        if (err) {\n          if (err.statusCode !== 404) {\n            console.error(err, err.stack); // an error occurred\n            deferred.reject(err);\n          } else {\n            // Then, if this is going to be a multipart upload, make sure there isn't already a multipart upload with the same name\n            if (isSmallUpload()) {\n              deferred.resolve();\n            } else {\n              svc.getMultipartUploads().then(function (data) {\n\n                var findUnique = function (name) {\n                  // console.log(\"Looking for a unique name\", name);\n                  for (var i = 0; i < data.Uploads.length; i++) {\n                    // console.log(\"trying \", data.Uploads[i].Key);\n                    if (data.Uploads[i].Key === awsCache.s3.config.params.Prefix + name) {\n                      // console.log(\"Not unique; try again\");\n                      return findUnique(generateUUID());\n                    }\n                  }\n                  return name;\n                };\n\n                fileBeingUploaded.uniqueName = findUnique(fileBeingUploaded.uniqueName);\n                deferred.resolve();\n              });\n            }\n          }\n        } else {\n          //Had a filename collision, try again\n          fileBeingUploaded.uniqueName = generateUUID();\n          ensureUniqueFilename(deferred);\n        }\n      });\n    });\n\n    return deferred.promise;\n  };\n\n  var generateUUID = function () {\n    var d = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n    });\n    return uuid;\n  };\n\n  //var generateUniqueFilename = function(filename) {\n  //    var parts = filename.split('.');\n  //    var fileExt = \"\";\n  //    if(parts.length > 1) {\n  //\tfileExt = \".\"+parts.pop();\n  //    }\n  //    var basename = parts.join('.');\n  //    var date = new Date();\n  //    return basename+\"_\"+date.getTime()+fileExt;\n  //};\n\n  var isSmallUpload = function () {\n    if (fileBeingUploaded.size <= fiveMB) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  var uploadSmallFile = function () {\n    // console.log('awsSvc uploading small file');\n    deferredUpload = $q.defer();\n    putObject().then(function (data) {\n      console.log('UPLOAD SMALL FILE COMPLETE', data);\n    }, function (reason) {\n      console.error('UPLOAD SMALL FILE FAILED: ', reason);\n    }, function (update) {\n      console.log('UPLOAD SMALL FILE UPDATE: ', update);\n    });\n    return deferredUpload.promise;\n  };\n\n  var putObject = function () {\n    var defer = $q.defer();\n    getUploadSession().then(function putObject() {\n      // console.log('awsSvc, putting object with key: ', awsCache.s3.config.params.Prefix + fileBeingUploaded.uniqueName);\n      getMD5ForFileOrBlob(fileBeingUploaded, 'base64').then(function (md5) {\n        var params = {\n          Key: awsCache.s3.config.params.Prefix + fileBeingUploaded.uniqueName,\n          ContentType: fileBeingUploaded.type,\n          Body: fileBeingUploaded,\n          ContentMD5: md5,\n          ACL: PUBLIC_READ\n        };\n\n        currentRequest = awsCache.s3.putObject(params, function (err, data) {\n          if (err) {\n            console.error(err, err.stack); // an error occurred\n            deferredUpload.reject();\n          } else {\n            // console.log('awsSvc, uploaded file!', data);\n            deferredUpload.resolve(data); // successful response\n          }\n        });\n        currentRequest.on('httpUploadProgress', function (progress) {\n          deferredUpload.notify({\n            bytesSent: progress.loaded,\n            bytesTotal: progress.total\n          });\n        }).on('error', function (err, response) {\n          console.error('error: ', err, response);\n          deferredUpload.reject(\"An error occured while uploading the file, please try again.\");\n        });\n      });\n    }, function (reason) {\n      console.error('PUT OBJECT FAILED: ', reason);\n    }, function (update) {\n      console.log('PUT OBJECT UPDATE: ', update);\n    });\n    return defer.promise;\n  };\n\n  var uploadBigFile = function () {\n    // console.log('awsSvc uploading big file');\n    deferredUpload = $q.defer();\n    createMultipartUpload().then(prepareUploadParts).then(function startUpload() {\n      for (var i = 0; i < MAX_SIMUL_PARTS_UPLOADING; i++) {\n        startNextUploadPart();\n      }\n    });\n    return deferredUpload.promise;\n  };\n\n  var createMultipartUpload = function () {\n    var defer = $q.defer();\n    getUploadSession().then(function createMultipartUpload() {\n      var params = {\n        Key: awsCache.s3.config.params.Prefix + fileBeingUploaded.uniqueName,\n        ContentType: fileBeingUploaded.type,\n        ACL: PUBLIC_READ\n      };\n      awsCache.s3.createMultipartUpload(params, function (err, data) {\n        if (err) {\n          console.error(err, err.stack); // an error occurred\n          defer.reject();\n        } else {\n          // console.log('awsSvc, created multipart upload!', data);\n          defer.resolve(data); // successful response\n        }\n      });\n    });\n    return defer.promise;\n  };\n\n  var prepareUploadParts = function (awsMultipartUpload) {\n    var defer = $q.defer();\n    multipartUpload = awsMultipartUpload;\n    chunks = [];\n    chunkCount = 0;\n    chunksUploaded = 0;\n    chunkSearchIndex = 0;\n    chunkSize = fiveMB;\n    bytesUploaded = 0;\n    if (fileBeingUploaded.size > chunkSize * MAX_CHUNKS) {\n      chunkSize = Math.ceil(fileBeingUploaded.size / MAX_CHUNKS);\n    }\n    chunkCount = Math.ceil(fileBeingUploaded.size / chunkSize);\n    for (var i = 0; i < chunkCount; i++) {\n      var chunk = {};\n      chunk.start = i * chunkSize;\n      chunk.end = chunk.start + chunkSize;\n      chunk.uploaded = 0;\n      if (chunk.end > fileBeingUploaded.size) {\n        chunk.end = fileBeingUploaded.size;\n      }\n      chunk.status = PENDING;\n      chunk.retries = 0;\n\n      chunks.push(chunk);\n    }\n    defer.resolve();\n    return defer.promise;\n  };\n\n  var startNextUploadPart = function () {\n    var defer = $q.defer();\n    var chunkIndex = chunkSearchIndex;\n    var foundNextChunk = false;\n    if (!uploadPaused) {\n      while (!foundNextChunk && chunkIndex < chunkCount) {\n        var chunk = chunks[chunkIndex];\n        if (chunk.status === PENDING) {\n          foundNextChunk = true;\n          chunk.status = UPLOADING;\n          var blob = fileBeingUploaded.slice(chunk.start, chunk.end);\n          chunk.cancel = function () {\n            chunk.request.abort();\n            chunk.status = PENDING;\n            chunk.uploaded = 0;\n          };\n          // use $q.all to pass along the part number parameter\n          $q.all({\n            partNumber: $q.when(chunkIndex + 1),\n            eTag: uploadPart(chunkIndex + 1, blob)\n          }).then(completePart, handleFailedPart).then(function (data) {\n            defer.resolve(data);\n          }, function (reason) {\n            console.error(\"UPLOAD PART FAILED: \", reason);\n            defer.reject(reason);\n          }, function (update) {\n            defer.update(update);\n          });\n        } else if (chunk.status === COMPLETE && chunkIndex === chunkSearchIndex) {\n          chunkSearchIndex++;\n        }\n        chunkIndex++;\n      }\n      if (!foundNextChunk) {\n        defer.reject(\"All chunks uploaded\");\n      }\n    } else {\n      defer.reject(\"Upload paused\");\n    }\n\n    return defer.promise;\n  };\n\n  var getMD5ForFileOrBlob = function (fileOrBlob, hashType) {\n    var defer = $q.defer();\n    var reader = new FileReader();\n    reader.onload = function () {\n      var data = reader.result;\n      defer.resolve(AWS.util.crypto.md5(new Uint8Array(data), hashType));\n    };\n    reader.readAsArrayBuffer(fileOrBlob);\n    return defer.promise;\n  };\n\n  var uploadPart = function (partNumber, blob, defer) {\n    // console.log('awsSvc, Uploading part: ', partNumber);\n    if (!defer) {\n      defer = $q.defer();\n    }\n    getUploadSession().then(function () {\n      getMD5ForFileOrBlob(blob, 'base64').then(function (md5) {\n        //console.log(\"MD5 for part '\", partNumber, \"' of size '\", blob.size,\"' is \", md5);\n        var params = {\n          Bucket: multipartUpload.Bucket,\n          Key: multipartUpload.Key,\n          UploadId: multipartUpload.UploadId,\n          PartNumber: partNumber,\n          ContentMD5: md5,\n          Body: blob\n        };\n        chunks[partNumber - 1].request = awsCache.s3.uploadPart(params, function (err, data) {\n          if (err) {\n            if (chunks[partNumber - 1].retries < MAX_RETRIES) {\n              console.error(\"RETRYING PART UPLOAD FOR CHUNK \", partNumber);\n              chunks[partNumber - 1].request.abort();\n              chunks[partNumber - 1].retries++;\n              uploadPart(partNumber, blob, defer);\n            } else {\n              console.error(\"PART UPLOAD FAILED FOR CHUNK \", partNumber, err, err.stack); // an error occurred\n              chunks[partNumber - 1].status = FAILED;\n              defer.reject(err);\n            }\n          } else {\n            //console.log('awsSvc, uploadedPart! data.ETag:', data.ETag);\n            defer.resolve(data.ETag); // successful response\n          }\n        });\n        chunks[partNumber - 1].request.on('httpUploadProgress', function (progress) {\n          bytesUploaded += progress.loaded - chunks[partNumber - 1].uploaded;\n          chunks[partNumber - 1].uploaded = progress.loaded;\n          deferredUpload.notify({\n            bytesSent: bytesUploaded,\n            bytesTotal: fileBeingUploaded.size\n          });\n        }).on('error', function (err, response) {\n          console.log('PART UPLOAD FAILED ON UPDATE: ', err, response);\n          //defer.reject(err);\n          //}).on('httpError', function (err, response) {\n          //\tconsole.log('HTTP ERROR: ', err, response);\n          //}).on('httpDone', function (response) {\n          //\tconsole.log('HTTP DONE: ', response);\n        });\n      });\n    });\n    return defer.promise;\n  };\n\n  var completePart = function (data) {\n    var defer = $q.defer();\n    chunks[data.partNumber - 1].status = COMPLETE;\n    chunks[data.partNumber - 1].part = {\n      ETag: data.eTag,\n      PartNumber: data.partNumber\n    };\n    chunksUploaded++;\n    if (chunksUploaded === chunkCount) {\n      var parts = [];\n      for (var i = 0; i < chunkCount; i++) {\n        parts.push(chunks[i].part);\n      }\n      var params = {\n        Bucket: multipartUpload.Bucket,\n        Key: multipartUpload.Key,\n        UploadId: multipartUpload.UploadId,\n        MultipartUpload: {\n          Parts: parts\n        }\n      };\n      awsCache.s3.completeMultipartUpload(params, function (err, data) {\n        if (err) {\n          console.error(err, err.stack); // an error occurred\n          deferredUpload.reject(err);\n          defer.reject(err);\n        } else {\n          deferredUpload.resolve(data);\n          defer.resolve(data);\n        }\n      });\n\n    } else {\n      startNextUploadPart();\n    }\n\n    return defer.promise;\n  };\n\n  var handleFailedPart = function (err) {\n    console.error(\"PART OF MULTIPART UPLOAD FAILED, CANCELLING UPLOAD\", err);\n    svc.cancelMultipartUpload(multipartUpload);\n    deferredUpload.reject(err);\n  };\n\n  var cancelCurrentUploadRequests = function () {\n    if (isSmallUpload()) {\n      currentRequest.abort();\n    } else {\n      var chunkIndex = chunkSearchIndex;\n      var foundAllUploadingChunks = false;\n      while (!foundAllUploadingChunks && chunkIndex < chunkCount) {\n        var chunk = chunks[chunkIndex];\n        if (chunk.status === UPLOADING) {\n          // console.log('awsSvc, Cancelling upload of chunk: ', chunkIndex);\n          chunk.cancel();\n        } else if (chunk.status === PENDING) {\n          foundAllUploadingChunks = true;\n        }\n        chunkIndex++;\n      }\n    }\n  };\n\n  var createAsset = function (assetEndpoint) {\n    var deferred = $q.defer();\n    var assetData = {\n      'url': 'https://s3.amazonaws.com/' + awsCache.s3.config.params.Bucket + '/' + awsCache.s3.config.params.Prefix + fileBeingUploaded.uniqueName,\n      'type': fileBeingUploaded.type,\n      'size': fileBeingUploaded.size,\n      'original_filename': fileBeingUploaded.name\n    };\n    //add tag if necessary\n    if (fileMeta[fileBeingUploaded.name]) {\n      Object.assign(assetData, {tags: fileMeta[fileBeingUploaded.name]});\n      fileMeta[fileBeingUploaded.name] = null;\n    }\n\n    $http.post(config.apiDataBaseUrl + assetEndpoint, assetData)\n      .success(function (data) {\n        deferredUploads[fileIndex].resolve(data);\n        fileBeingUploaded = null;\n        fileIndex++;\n        startNextUpload(assetEndpoint);\n      })\n      .error(function () {\n        deferredUploads[fileIndex].reject();\n        fileBeingUploaded = null;\n        fileIndex++;\n        startNextUpload(assetEndpoint);\n      });\n    return deferred.promise;\n  };\n\n  return svc;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/awsSvc.ts","\n\nconfig.$inject = [];\n\nexport default function config() {\n  var config = window.config ? window.config : {};\n\n  // Find out the API data url, if not specified:\n  if (!config.apiDataBaseUrl) {\n    config.apiDataBaseUrl = \"//\" + window.location.host;\n  }\n\n  if (!config.localStorageKey) {\n    config.localStorageKey = \"storyToken\";\n  }\n\n  if (!config.youtube) {\n    config.youtube = {\n      domain: \"//gdata.youtube.com/\",\n      timeout: 5000\n    };\n  }\n\n  return config;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/config.ts","/**\n * Created by githop on 4/22/16.\n */\nimport { Pick } from '../interfaces';\n\nittUtils.$inject = ['$timeout'];\nexport function ittUtils($timeout) {\n  return {\n    getSubdomain: getSubdomain,\n    existy: existy,\n    truthy: truthy,\n    generateUUID: generateUUID,\n    isValidURL: isValidURL,\n    stripHtmlTags: stripHtmlTags,\n    pick: pick,\n    bitwiseCeil: bitwiseCeil,\n    setNgOpts: setNgOpts,\n    intersection: intersection,\n    parseTime: parseTime,\n    renameKey: renameKey,\n    ngTimeout: ngTimeout,\n    cancelNgTimeout: cancelNgTimeout,\n    capitalize: capitalize,\n    slugify: slugify\n  };\n\n  function ngTimeout(fn, duration) {\n    return $timeout(fn, duration || 0);\n  }\n\n  function cancelNgTimeout(fn) {\n    $timeout.cancel(fn);\n  }\n}\n\nexport function capitalize(str) {\n  if (existy(str)) {\n    return str.slice(0, 1).toUpperCase() + str.slice(1);\n  }\n}\n\n//using bitwise operators up to 20% faster than Math.ceil (js hint not a fan of bitwise operators)\nexport function bitwiseCeil(n) {\n  return n + (n < 0 ? 0 : 1) >> 0; // jshint ignore:line\n}\n\nexport function pick<T, K extends keyof T>(obj: T, keys: K[]): Pick<T, K> {\n  return keys.reduce(\n    (accm, field) => {\n      if (existy(obj[field])) {\n        accm[field] = angular.copy(obj[field]);\n      }\n      return accm;\n    },\n    {} as any\n  );\n}\n\nexport function omit(obj, ...keys) {\n  return Object.keys(obj).reduce(\n    (result, prop) => {\n      if (keys.indexOf(prop) === -1) {\n        result[prop] = obj[prop];\n      }\n      return result;\n    },\n    {}\n  );\n}\n\nexport function stripHtmlTags(str) {\n  return String(str).replace(/<\\/?[^>]*>/gm, '');\n}\n\nexport function getSubdomain(host) {\n  if (host.indexOf('.') < 0) {\n    return null;\n  } else {\n    return host.split('.')[0];\n  }\n}\n\nexport function existy(x) {\n  return x != null;\n}\n\n/*\n e.g. [null, undefined, '', 0, 1, false true].map(truthy)\n -> [false, false, false, false, true, false, true]\n */\nexport function truthy(x) {\n  return (x != false) && existy(x);\n}\n\nexport function generateUUID() {\n  //js hint does not like the bitwise operators in use below.\n  /* jshint ignore:start */\n  var d = new Date().getTime();\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n  });\n  return uuid;\n  /* jshint ignore:end */\n}\n\nexport function isValidURL(url) {\n  var URL_REGEXP = /^(((?:http)s?:\\/\\/)|(?:\\/\\/))(?:(?:[A-Z0-9](?:[A-Z0-9-]{0,61}[A-Z0-9])?\\.)+(?:[A-Z]{2,6}\\.?|[A-Z0-9-]{2,}\\.?)|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})(?::\\d+)?(?:\\/?|[\\/?]\\S+)$/i;\n  return URL_REGEXP.test(url);\n}\n\n//this function depends on selectSerivce, and getSelectOpts being defined on the\n//controller where used.\nexport function setNgOpts(type) {\n  return `option.value as option.name for option in $ctrl.getSelectOpts('${type}')`;\n}\n\nexport function intersection(x, y) {\n  var ret = [];\n  for (var i = 0; i < x.length; i++) {\n    for (var z = 0; z < y.length; z++) {\n      if (x[i] == y[z]) { // jshint ignore:line\n        ret.push(i);\n        break;\n      }\n    }\n  }\n  return ret;\n}\n\n// supports these formats: \"1:10\", 1m10s\", \"1m\", \"10s\", or a plain number (in seconds)\nexport function parseTime(t) {\n  if (!isNaN(parseFloat(t)) && isFinite(t)) {\n    return t;\n  }\n  var parse = t.match(/^(\\d+)[m:]([\\d\\.]+)s?$/);\n  if (parse) {\n    return (parseFloat(parse[1] * 60) + parseFloat(parse[2]));\n  }\n  parse = t.match(/^([\\d\\.]+)s$/);\n  if (parse) {\n    return parseFloat(parse[1]);\n  }\n  parse = t.match(/^([\\d\\.]+)m$/);\n  if (parse) {\n    return parseFloat(parse[1] * 60);\n  }\n  console.error(\"Tried to parse invalid time string: \", t);\n}\n\nexport function renameKey(oldName, newName, obj) {\n  if (obj.hasOwnProperty(oldName) && !obj.hasOwnProperty(newName) && oldName !== newName) {\n    obj[newName] = obj[oldName];\n    delete obj[oldName];\n  }\n}\n\nexport function slugify(str) {\n  return str.toLowerCase().replace(/ /g, '-').replace(/[^\\w-]/g, '');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/ittUtils.ts","// TODO: load and resolve categories\n\n\nimport {\n  createInstance, IAsset, IEpisode, IEpisodeTemplate, IEvent, IItemTemplate, ILayout, ILayoutTemplate, IStyle,\n  ITemplate\n} from '../../models';\nimport { IEmailFields, IEpisodeTheme, Partial } from '../../interfaces';\nimport { existy, intersection, pick } from '../ittUtils';\n/**\n * @ngdoc service\n * @name iTT.service:dataSvc\n * @description\n * Service for hitting API endpoints\n * prior code comments:\n * Cache here is for things we never need to expose to the rest of the app (style, layout, template IDs)\n * the rest gets passed to modelSvc\n * use PUT to update, POST to create new\n * for assets, DELETE then POST\n * to store -- must wrap events in 'event: {}'  same for other things?  template didn't seem to need it\n * @requires $q\n * @requires $http\n * @requires $routeParams\n * @requires $rootScope\n * @requires config\n * @requires authSvc\n * @requires appState\n * @requires modelSvc\n * @requires errorSvc\n * @requires mockSvc\n * @requires questionAnswersSvc\n */\n\ninterface ITemplateSelect {\n  id: string;\n  name: string;\n  customer_ids: string[];\n}\n\nexport interface IDataSvc {\n  beginBackgroundTranslations(episodeId: string): any;\n  batchUploadTranscripts(episodeId: string, formData: any, params: any): ng.IPromise<{}>;\n  generateNewNarrative(containerId, postData): ng.IPromise<{}>;\n  getNarrative(narrativeId): ng.IPromise<{}>;\n  getNarrativeOverview(narrativeId): ng.IPromise<{}>;\n  getNarrativeExportAsSpreadsheet(nId: string): void;\n  getCustomerLinkStatusReportSpreadsheet(customerId): void;\n  getUserNarratives(userId): ng.IPromise<{}>;\n  getCustomerList(): any;\n  getCustomer(customerId: string, retrieve: boolean): ng.IPromise<any>;\n  getEpisode(epId, segmentId): void;\n  getEpisodeOverview(epId): ng.IPromise<{}>;\n  getNarrativeList(customer): ng.IPromise<{}>;\n  createUserGroup(groupName): ng.IPromise<{}>;\n  createNarrative(narrativeData): ng.IPromise<{}>;\n  updateNarrative(narrativeData): ng.IPromise<{}>;\n  createChildEpisode(childData): ng.IPromise<{}>;\n  createEpisodeSegment(narrativeId, segmentData): ng.IPromise<{}>;\n  storeTimeline(narrativeId, origTimeline): ng.IPromise<{}>;\n  deleteTimeline(tlId): ng.IPromise<{}>;\n  getSingleAsset(assetId): ng.IPromise<IAsset>;\n  getCommon(): ng.IPromise<{}>;\n  cache(cacheType, dataList): void;\n  createTemplate(templateData): ng.IPromise<{}>;\n  resolveIDs(obj): object;\n  getAssetsByAssetIds(assetIds: string[]): ng.IPromise<IAsset[]>;\n  fetchAndCacheAssetsByIds(assetIds: string[]): ng.IPromise<IAsset[]>;\n  getContainerAncestry(containerId, episodeId, defer): ng.IPromise<{}>;\n  getContainerRoot(): string[];\n  getContainer(id, episodeId?): ng.IPromise<{}>;\n  getContainerAssets(containerId, episodeId?): ng.IPromise<{}>;\n  createContainer(container): ng.IPromise<{}>;\n  updateContainer(container): ng.IPromise<{}>;\n  deleteContainer(containerId): ng.IPromise<{}>;\n  createEpisode(episode): ng.IPromise<{}>;\n  storeEpisode(epData): ng.IPromise<{} | boolean>;\n  deleteItem(evtId): ng.IPromise<{}>;\n  createAsset(containerId, asset): ng.IPromise<{}>;\n  deleteAsset(assetId): ng.IPromise<{}>;\n  storeItem(evt: IEvent): ng.IPromise<IEvent | boolean>;\n  prepItemForStorage(evt): any;\n  detachEventAsset(evt, assetId): ng.IPromise<{}>;\n  detachMasterAsset(epData: IEpisode): ng.IPromise<void | boolean>;\n  readCache(cache, field, val): object | boolean;\n  getTemplates(): ITemplate[];\n  getTemplate(id: string): ITemplate;\n  sendSocialshareEmail(tlId:string, email: IEmailFields): ng.IPromise<void>;\n  fetchTemplates(): ng.IPromise<ITemplate[]>;\n  getEpisodeTemplatesAdmin(): ITemplateSelect[];\n  getEpisodeTemplatesByCustomerIds(custids: string[]): ITemplateSelect[];\n}\n\ndataSvc.$inject = ['$q', '$http', '$routeParams', '$rootScope', '$location', 'ittUtils', 'config', 'authSvc', 'appState', 'modelSvc', 'errorSvc', 'mockSvc', 'questionAnswersSvc', 'episodeTheme'];\nexport default function dataSvc($q, $http, $routeParams, $rootScope, $location, ittUtils, config, authSvc, appState, modelSvc, errorSvc, mockSvc, questionAnswersSvc, episodeTheme: IEpisodeTheme) {\n  var svc: IDataSvc = Object.create(null);\n\n  /* ------------------------------------------------------------------------------ */\n\n  svc.sendSocialshareEmail = sendSocialshareEmail;\n  function sendSocialshareEmail(tlId: string, email: IEmailFields): ng.IPromise<void> {\n    return SANE_POST(`/v3/timelines/${tlId}/share_via_email`, email);\n  }\n\n  svc.beginBackgroundTranslations = beginBackgroundTranslations;\n  function beginBackgroundTranslations(episodeId) {\n    return SANE_GET('/v3/episodes/' + episodeId + '/update_translations');\n  }\n  //NEED to find impl with params arg\n  svc.batchUploadTranscripts = batchUploadTranscripts;\n  function batchUploadTranscripts(episodeId, formData, params) {\n    var config = {\n      transformRequest: angular.identity,\n      headers: {'Content-type': undefined}\n    };\n\n    if (ittUtils.existy(params) && Object.keys(params).length > 0) {\n      Object.assign(config, {params:params});\n    }\n\n    // return $q(function(resolve){return resolve(formData)});\n    return SANE_POST('/v3/episodes/' + episodeId + '/events/import_subtitles', formData, config);\n  }\n\n  //used in ittContainer\n  svc.generateNewNarrative = generateNewNarrative;\n  function generateNewNarrative(containerId, postData) {\n    return SANE_POST('/v3/containers/' + containerId + '/narratives', postData)\n      .then(function (resp) {\n        return resp.data;\n      })\n      .catch(function (e) {\n        console.error('Error generating new narrative:', e);\n      });\n  }\n\n  // WARN ittNarrative and ittNarrativeTimeline call dataSvc directly, bad practice. At least put modelSvc in between\n  svc.getNarrative = function (narrativeId) {\n    // Special case here, since it needs to call getNonce differently:\n    var defer = $q.defer();\n    var cachedNarrative = modelSvc.narratives[narrativeId];\n    var subdomain = ittUtils.getSubdomain($location.host());\n    var urlParams = '';\n\n    if (ittUtils.existy(cachedNarrative) && ittUtils.existy(cachedNarrative.narrative_subdomain) && subdomain !== cachedNarrative.narrative_subdomain) {\n      urlParams = '?customer=' + cachedNarrative.narrative_subdomain;\n    }\n\n    authSvc.authenticate('narrative=' + narrativeId).then(function () {\n      $http.get(config.apiDataBaseUrl + '/v3/narratives/' + narrativeId + '/resolve' + urlParams)\n        .then(function (response) {\n\n          response.data.timelines.sort(function (a, b) {\n            return a.sort_order - b.sort_order;\n          });\n          modelSvc.cache('narrative', svc.resolveIDs(response.data));\n          defer.resolve(modelSvc.narratives[response.data._id]);\n        });\n    });\n    return defer.promise;\n  };\n\n  svc.getNarrativeOverview = function (narrativeId) {\n    return GET('/v3/narratives/' + narrativeId);\n  };\n\n  svc.getNarrativeExportAsSpreadsheet = function (nId) {\n    var url = '/v3/narratives/' + nId + '.xlsx';\n    window.open(url);\n  };\n\n  svc.getCustomerLinkStatusReportSpreadsheet = getCustomerLinkStatusReportSpreadsheet;\n  function getCustomerLinkStatusReportSpreadsheet(customerId) {\n    var url = '/v3/customers/' + customerId + '/link_status.xlsx';\n    window.open(url);\n  }\n\n  var cachedPurchases = false;\n  svc.getUserNarratives = function (userId) {\n    if (cachedPurchases) {\n      var defer = $q.defer();\n      defer.resolve(cachedPurchases);\n      return defer.promise;\n    } else {\n      return GET('/v3/users/' + userId + '/narrative_purchases', function (data) {\n        cachedPurchases = data;\n        return data;\n      });\n\n    }\n  };\n\n  svc.getCustomerList = function () {\n    return GET('/v3/customers/', function (customers) {\n      angular.forEach(customers, function (customer) {\n        modelSvc.cache('customer', customer);\n      });\n      return customers;\n    });\n\n  };\n\n  svc.getCustomer = function (customerId, retrieve) {\n    if (!(authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin'))) {\n      return $q(function (resolve) {\n        resolve({});\n      });\n    }\n    if (modelSvc.customers[customerId]) {\n\n      if (retrieve) {\n        return $q(function (resolve) {\n          resolve(modelSvc.customers[customerId]);\n        });\n      }\n      // have it already, or at least already getting it\n    } else {\n      return SANE_GET('/v3/customers/' + customerId)\n        .then(customer => {\n          modelSvc.cache('customer', customer); // the real thing\n          return modelSvc.customers[customer._id];\n        })\n        .catch(e => console.log('wtf mate?', e));\n    }\n  };\n\n  // getEpisode just needs to retrieve all episode data from the API, and pass it on\n  // to modelSvc.  No promises needed, let the $digest do the work\n  svc.getEpisode = function (epId, segmentId) {\n    if (!epId) {\n      throw ('no episode ID supplied to dataSvc.getEpisode');\n    }\n\n    // Removing this as it caused race conditions: sometimes the asset and event data has already been loaded, sometimes not.\n    // This will cause epsiode data to be requested from the api every time the page loads, instead of trying to recycle the cache, but that's probably safer anyway\n    // if (modelSvc.episodes[epId]) {\n    // \tconsole.log(\"have episode: \", modelSvc.episodes[epId]);\n    // \t$rootScope.$emit(\"dataSvc.getEpisode.done\");\n    // \treturn; // already requested\n    // }\n    modelSvc.cache('episode', {\n      _id: epId\n    }); // init with empty object to be filled by asynch process\n\n    if ($routeParams.local) {\n      mockSvc.mockEpisode(epId);\n      // console.log(\"Got all events\");\n      $rootScope.$emit('dataSvc.getEpisode.done');\n    } else {\n      authSvc.authenticate()\n        .then(function () {\n          return getCommon();\n        })\n        .then(function () {\n          return getEpisode(epId, segmentId);\n        });\n    }\n  };\n  svc.getEpisodeOverview = function (epId) {\n    return GET('/v3/episodes/' + epId);\n  };\n\n  svc.getNarrativeList = function (customer) {\n    if (!ittUtils.existy(customer)) {\n      return GET('/v3/narratives/');\n    }\n\n    return GET('/v3/narratives?customer_id=' + customer._id)\n      .then(function (narratives) {\n        modelSvc.assocNarrativesWithCustomer(customer, narratives);\n      });\n  };\n\n  svc.createUserGroup = function (groupName) {\n    return POST('/v3/groups', {\n      'group': {\n        'name': groupName\n      }\n    });\n  };\n\n  svc.createNarrative = function (narrativeData) {\n    delete narrativeData.templateUrl;\n    return SANE_POST('/v3/narratives', narrativeData);\n  };\n  svc.updateNarrative = function (narrativeData) {\n    delete narrativeData.templateUrl;\n    return SANE_PUT('/v3/narratives/' + narrativeData._id, narrativeData);\n  };\n\n  svc.createChildEpisode = function (childData) {\n    // console.log(\"about to create child epsiode\", childData);\n    return POST('/v3/episodes', {\n      'episode': childData\n    });\n  };\n\n  svc.createEpisodeSegment = function (narrativeId, segmentData) {\n    return POST('/v3/timelines/' + narrativeId + '/episode_segments', segmentData);\n  };\n\n  svc.storeTimeline = function (narrativeId, origTimeline) {\n\n    var permitted = [\n      'sort_order',\n      'path_slug',\n      'name',\n      'description',\n      'hidden',\n      'timeline_image_ids',\n      'narrative_id',\n      '_id'\n    ];\n    var timeline = ittUtils.pick(origTimeline, permitted);\n\n    if (timeline._id) {\n      return PUT('/v3/timelines/' + timeline._id, timeline, function (ret) {\n        // TEMPORARY until api stops doing this\n        if (typeof ret.name === 'string') {\n          ret.name = {\n            en: ret.name\n          };\n        }\n        if (typeof ret.description === 'string') {\n          ret.description = {\n            en: ret.description\n          };\n        }\n        return ret;\n      });\n    } else {\n      return POST('/v3/narratives/' + narrativeId + '/timelines', timeline, function (ret) {\n        // TEMPORARY until api stops doing this\n        if (typeof ret.name === 'string') {\n          ret.name = {\n            en: ret.name\n          };\n        }\n        if (typeof ret.description === 'string') {\n          ret.description = {\n            en: ret.description\n          };\n        }\n        return ret;\n      });\n    }\n  };\n\n  // /v3/timelines/:id\n  svc.deleteTimeline = function (tlId) {\n    return PDELETE('/v3/timelines/' + tlId).then(function (resp) {\n      return resp;\n    });\n  };\n\n  svc.getSingleAsset = function (assetId: string): ng.IPromise<IAsset> {\n    if (assetId) {\n      return GET('/v1/assets/' + assetId);\n    } else {\n      return $q(function (resolve) {\n        resolve(undefined);\n      });\n    }\n  };\n\n  var dataCache = {\n    template: {},\n    layout: {},\n    style: {}\n  };\n\n  // Gets all layouts, styles, and templates\n  var gettingCommon = false;\n  var getCommonDefer = $q.defer();\n  var getCommon = function () {\n    // console.log(\"dataSvc.getCommon\");\n    if (gettingCommon) {\n      return getCommonDefer.promise;\n\n    } else {\n      gettingCommon = true;\n      $q.all([\n        $http.get(config.apiDataBaseUrl + '/v1/templates'),\n        $http.get(config.apiDataBaseUrl + '/v1/layouts'),\n        $http.get(config.apiDataBaseUrl + '/v1/styles')\n      ])\n        .then(function (responses) {\n          svc.cache('templates', responses[0].data);\n          svc.cache('layouts', responses[1].data);\n          svc.cache('styles', responses[2].data);\n\n          gettingCommon = true;\n          getCommonDefer.resolve();\n        }, function () {\n          // console.error(\"getCommon failed\", failure);\n          gettingCommon = false;\n          getCommonDefer.reject();\n        });\n    }\n    return getCommonDefer.promise;\n  };\n\n  svc.getCommon = getCommon; // TEMPORARY for ittContainer, so it can get the scene template ID.  After template refactor none of this id stuff will be necessary\n\n  svc.cache = function (cacheType, dataList) {\n    // console.log(\"dataSvc.cache\", cacheType, dataList);\n    angular.forEach(dataList, function (item) {\n      if (cacheType === 'templates') {\n        /* API format:\n         _id\t\t\t\t\t\t\t\t\t\"528d17ebba4f65e578000007\"\n         applies_to_episodes\tfalse  (if true, event_types is empty)\n         created_at\t\t\t\t\t\"2013-11-20T20:13:31Z\"\n         event_types\t\t\t\t\t[\"Scene\"]    (or Annotation, Link, Upload)\n         name\t\t\t\t\t\t\t\t\"Scene 2 columns right\"\n         updated_at\t\t\t\t\t\"2013-11-20T20:13:31Z\"\n         url\t\t\t\t\t\t\t\t\t\"templates/scene-centered.html\"\n         type: string\n         */\n\n        if (item.applies_to_episodes) {\n          dataCache.template[item._id] = createInstance('EpisodeTemplate', {\n            id: item._id,\n            url: item.url,\n            type: 'Episode',\n            displayName: item.name,\n            customer_ids: item.customer_ids,\n            css_configuration: item.css_configuration,\n            fonts: item.fonts,\n            pro_episode_template: item.pro_episode_template\n          });\n        } else if (item.event_types && item.event_types && item.event_types[0] === 'Scene') {\n          dataCache.template[item._id] = createInstance('LayoutTemplate', {\n            id: item._id,\n            url: item.url,\n            type: 'Scene',\n            displayName: item.name\n          });\n        } else {\n          dataCache.template[item._id] = createInstance('ItemTemplate', {\n            id: item._id,\n            url: item.url,\n            type: item.event_types && item.event_types[0],\n            displayName: item.name\n          });\n        }\n        // console.log('template?', dataCache.template[item._id]);\n      } else if (cacheType === 'layouts') {\n        /* API format:\n         _id\t\t\t\t\t\t\t\t\t\"528d17ebba4f65e57800000a\"\n         created_at\t\t\t\t\t\"2013-11-20T20:13:31Z\"\n         css_name\t\t\t\t\t\t\"videoLeft\"\n         description\t\t\t\t\t\"The video is on the left\"\n         display_name\t\t\t\t\"Video Left\"\n         updated_at\t\t\t\t\t\"2013-11-20T20:13:31Z\"\n         */\n        dataCache.layout[item._id] = createInstance('Layout', {\n          id: item._id,\n          css_name: item.css_name,\n          displayName: item.display_name\n        });\n\n      } else if (cacheType === 'styles') {\n        /* API format:\n         _id\t\t\t\t\t\t\"528d17f1ba4f65e578000036\"\n         created_at\t\t\"2013-11-20T20:13:37Z\"\n         css_name\t\t\t\"typographySerif\"\n         description\t\t\"Controls the fonts and relative text sizes\"\n         display_name\t\"Typography Serif\"\n         updated_at\t\t\"2013-11-20T20:13:37Z\"\n         */\n        dataCache.style[item._id] = createInstance('Style', {\n          id: item._id,\n          css_name: item.css_name,\n          displayName: item.display_name\n        });\n      }\n    });\n  };\n\n  // TODO more template management: add/delete/edit\n  svc.createTemplate = function (templateData) {\n    // TEMPORARY.  Doesn't check to see if it's adding a duplicate, or do any other sort of data prophylaxis\n    /*  sample:\n     {\n     url: 'templates/item/foo.html',\n     name: 'foo',\n     event_types: ['Upload'], // Upload, Scene, Plugin, Annotation, Link\n     applies_to_episode: false,\n     applies_to_narrative: false\n     }\n     */\n    return POST('/v1/templates', templateData);\n  };\n  // svc.createStyle = function (styleData) {\n  // \t// ALSO TEMPORARY, UNSAFE\n  // \treturn POST(\"/v1/styles\", styleData);\n  // };\n\n  // transform API common IDs into real values\n  svc.resolveIDs = function (obj) {\n    // console.log(\"resolving IDs\", obj);\n\n    // temporary:\n    // if (obj.everyone_group && !obj.template_id) {\n    //   obj.templateUrl = 'templates/narrative/default.html';\n    // }\n    if (obj.template_id) {\n      if (dataCache.template[obj.template_id]) {\n        if (obj.master_asset_id == null) {\n          obj.templateUrl = dataCache.template[obj.template_id].url;\n        }\n      } else {\n        errorSvc.error({\n          data: 'Couldn\\'t get templateUrl for id ' + obj.template_id\n        });\n      }\n    }\n    if (obj.layout_id) {\n      var layouts = [];\n      if (obj.type === 'Scene') {\n        layouts = ['', ''];\n      }\n      angular.forEach(obj.layout_id, function (id) {\n        if (dataCache.layout[id]) {\n          if (obj.type === 'Scene') {\n            //conditions outside of 'showCurrent' necessary for USC scholar\n            if (dataCache.layout[id].css_name === 'showCurrent') {\n              layouts[1] = dataCache.layout[id].css_name;\n            } else if (dataCache.layout[id].css_name === 'splitRequired') {\n              layouts[2] = dataCache.layout[id].css_name;\n            } else {\n              layouts[0] = dataCache.layout[id].css_name;\n            }\n          } else {\n            layouts.push(dataCache.layout[id].css_name);\n          }\n        } else {\n          errorSvc.error({\n            data: 'Couldn\\'t get layout for id ' + id\n          });\n        }\n      });\n      if (layouts.length > 0) {\n        obj.layouts = layouts;\n      }\n      //delete obj.layout_id;\n    }\n    if (obj.style_id) {\n      var styles = [];\n      angular.forEach(obj.style_id, function (id) {\n        if (dataCache.style[id]) {\n          styles.push(dataCache.style[id].css_name);\n        } else {\n          errorSvc.error({\n            data: 'Couldn\\'t get style for id ' + id\n          });\n        }\n      });\n      if (styles.length > 0) {\n        obj.styles = styles;\n      }\n      //delete obj.style_id;\n    }\n    return obj;\n  };\n\n  var getAssetIdFromEvent = function (event) {\n    if (event.hasOwnProperty('asset_id')) {\n      if (event.asset_id) {\n        return event.asset_id;\n      }\n    }\n    if (event.hasOwnProperty('annotation_image_id')) {\n      if (event.annotation_image_id) {\n        return event.annotation_image_id;\n      }\n    }\n    if (event.hasOwnProperty('link_image_id')) {\n      if (event.link_image_id) {\n        return event.link_image_id;\n      }\n    }\n    if (event.hasOwnProperty('avatar_id')) {\n      if (event.avatar_id) {\n        return event.avatar_id;\n      }\n    }\n  };\n\n  var getAssetIdsFromEvents = function (events) {\n    //asset_id,\n    //annotation_image_id\n    //link_image_id\n    var idsobject = {}; //object is way faster to prevent duplicates\n    for (var i = 0, length = events.length; i < length; i++) {\n      var id = getAssetIdFromEvent(events[i]);\n      if (id) {\n        if (!(id in idsobject)) {\n          idsobject[id] = 0;\n        }\n      }\n    }\n    //now make an array instead of an object\n    var ids = Object.keys(idsobject);\n    return ids;\n  };\n\n  svc.getAssetsByAssetIds = getAssetsByAssetIds;\n  function getAssetsByAssetIds(assetIds: string[]): ng.IPromise<IAsset[]> {\n    const assetIdsObj = Object.create(null);\n    assetIdsObj.asset_ids = assetIds;\n    return SANE_POST('/v1/assets', assetIdsObj)\n      .then(resp => resp.data.files);\n  }\n\n  svc.fetchAndCacheAssetsByIds = fetchAndCacheAssetsByIds;\n  function fetchAndCacheAssetsByIds(assetIds: string[]): ng.IPromise<IAsset[]> {\n    return getAssetsByAssetIds(assetIds)\n      .then((assets: IAsset[]) => {\n        assets.forEach((asset) => {\n          modelSvc.cache('asset', asset);\n        });\n        //return cached assets\n        return assetIds.reduce((asx, id) => {\n            asx.push(modelSvc.assets[id]);\n            return asx;\n        }, []);\n\n      });\n  }\n\n  // auth and common are already done before this is called.  Batches all necessary API calls to construct an episode\n  var getEpisode = function (epId, segmentId) {\n    // The url and return data differ depending on whether we're getting a (resolved) segment or a normal episode:\n    // console.log(\"dataSvc.getEpisode\");\n    var url = (segmentId) ? '/v3/episode_segments/' + segmentId + '/resolve' : '/v3/episodes/' + epId;\n    $http.get(config.apiDataBaseUrl + url)\n      .success(function (ret) {\n        var episodeData = Object.create(null);\n        if (ret) {\n          episodeData = (ret.episode ? ret.episode : ret); // segment has the episode data in ret.episode; that's all we care about at this point\n        }\n        if (episodeData.status === 'Published' || authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin')) {\n          const episodeTemplate = dataCache.template[episodeData.template_id];\n          episodeData.template = episodeTemplate;\n          modelSvc.cache('episode', svc.resolveIDs(episodeData));\n          if (episodeTemplate) {\n            episodeTheme.setTheme(episodeTemplate);\n          }\n\n          getEvents(epId, segmentId)\n            .success(function (events) {\n              events = events || [];\n              getEventActivityDataForUser(events, 'Plugin', epId);\n              angular.forEach(events, function (eventData) {\n                eventData.cur_episode_id = epId; // So the player doesn't need to care whether it's a child or parent episode\n                modelSvc.cache('event', svc.resolveIDs(eventData));\n              });\n              modelSvc.resolveEpisodeEvents(epId);\n              const assetIds = getAssetIdsFromEvents(events);\n              assetIds = (typeof assetIds !== 'undefined' && assetIds.length > 0) ? assetIds : [];\n              // we need to also get the master asset and poster, while we are at it\n              assetIds.push(episodeData.master_asset_id);\n              //add template assets - more to come.\n\n              if (episodeData.poster_frame_id) {\n                assetIds.push(episodeData.poster_frame_id);\n              }\n\n              //add template assets\n              // if (episodeTemplate.css_configuration) {\n              //   const templateLogoImgId = episodeTemplate.css_configuration.image_logo_bottom_right_id;\n              //   assetIds.push(templateLogoImgId);\n              // }\n\n              //batch get assets\n              getAssetsByAssetIds(assetIds)\n                .then((assets: IAsset[]) => {\n                  assets.forEach((asset) => {\n                    modelSvc.cache('asset', asset);\n                  });\n                  modelSvc.resolveEpisodeAssets(epId);\n                  $rootScope.$emit('dataSvc.getEpisode.done');\n                });\n            })\n            .error(function () {\n              errorSvc.error({\n                data: 'API call to get events failed.'\n              });\n            });\n\n        } else {\n          errorSvc.error({\n            data: 'This episode has not yet been published.'\n          });\n        }\n      })\n      .error(function () {\n        errorSvc.error({\n          data: 'API call to /v3/episodes/' + epId + ' failed (bad episode ID?)'\n        });\n      });\n  };\n\n  // calls getContainer, iterates to all parents before finally resolving\n  svc.getContainerAncestry = function (containerId, episodeId, defer) {\n    defer = defer || $q.defer();\n    svc.getContainer(containerId, episodeId)\n      .then(function (id) {\n        var container = modelSvc.containers[id];\n        if (container.parent_id) {\n          svc.getContainerAncestry(container.parent_id, episodeId, defer);\n        } else {\n          defer.resolve(id);\n        }\n      });\n    return defer.promise;\n  };\n\n  //getEvents returns the data via a promise, instead of just setting modelSvc\n  var getEvents = function (epId, segmentId) {\n    var endpoint = (segmentId) ? '/v3/episode_segments/' + segmentId + '/events' : '/v3/episodes/' + epId + '/events';\n    return $http.get(config.apiDataBaseUrl + endpoint);\n  };\n\n  var getEventActivityDataForUser = function (events, activityType, epId) {\n    angular.forEach(events, function (eventData) {\n      if (eventData.type === 'Plugin') {\n        (function (evData) {\n          questionAnswersSvc.getUserAnswer(evData._id, appState.user._id)\n            .then(function (userAnswer) {\n\n              if (userAnswer.data) {\n                evData.data._plugin.hasBeenAnswered = true;\n                var i = 0;\n                var angularContinue = true;\n                angular.forEach(evData.data._plugin.distractors, function (distractor) {\n                  if (angularContinue) {\n                    if (distractor.index === userAnswer.data.index) {\n                      distractor.selected = true;\n                      evData.data._plugin.selectedDistractor = distractor.index;\n                      angularContinue = false;\n                    }\n                    i++;\n                  }\n                });\n                modelSvc.cache('event', svc.resolveIDs(evData));\n              } else {\n                console.error('Got no user data from getUserAnswer:', userAnswer);\n              }\n            });\n        }(eventData));\n      }\n    });\n    modelSvc.resolveEpisodeEvents(epId);\n  };\n\n  /* ------------------------------------------------------------------------------ */\n\n  // PRODUCER\n  // a different idiom here, let's see if this is easier to conceptualize.\n\n  // to use GET(), pass in the API endpoint, and an optional callback for post-processing of the results\n  var GET = function (path, postprocessCallback?) {\n    // console.log(\"GET\", path);\n    var defer = $q.defer();\n    authSvc.authenticate()\n      .then(function () {\n        $http.get(config.apiDataBaseUrl + path)\n          .then(function (response) {\n            var ret = response.data;\n            if (postprocessCallback) {\n              ret = postprocessCallback(ret);\n            }\n            return defer.resolve(ret);\n          });\n      });\n    return defer.promise;\n  };\n\n  var SANE_GET = function (path) {\n    //wrapping a method in a promises that is already using functions that return promises\n    //is an anti-pattern.\n    //simply return this promise\n    return authSvc.authenticate()\n      .then(function () {\n        //then return this promise\n        return $http.get(config.apiDataBaseUrl + path)\n          .then(function (resp) {\n            //SANE_GET will resolve to this\n            return resp.data;\n          });\n      });\n  };\n\n  var SANE_POST = function (path, data, config?) {\n    if (config) {\n      return $http.post(path, data, config);\n    }\n    return $http.post(path, data);\n  };\n\n  var SANE_PUT = function (path, data) {\n    return $http.put(config.apiDataBaseUrl + path, data);\n  };\n\n  var PUT = function (path, putData, postprocessCallback?) {\n    var defer = $q.defer();\n    $http({\n      method: 'PUT',\n      url: config.apiDataBaseUrl + path,\n      data: putData\n    })\n      .success(function (response) {\n        var ret = response;\n        if (postprocessCallback) {\n          ret = postprocessCallback(ret);\n        }\n        defer.resolve(ret);\n      });\n    return defer.promise;\n  };\n\n  var POST = function (path, postData, postprocessCallback?) {\n    var defer = $q.defer();\n    $http({\n      method: 'POST',\n      url: config.apiDataBaseUrl + path,\n      data: postData\n    })\n      .success(function (response) {\n        var ret = response;\n        if (postprocessCallback) {\n          ret = postprocessCallback(ret);\n        }\n        defer.resolve(ret);\n      });\n    return defer.promise;\n  };\n\n  var DELETE = function (path) {\n    var defer = $q.defer();\n    $http({\n      method: 'DELETE',\n      url: config.apiDataBaseUrl + path,\n    })\n      .success(function (data) {\n        // console.log(\"Deleted:\", data);\n        return defer.resolve(data);\n      });\n    return defer.promise;\n  };\n\n  const PDELETE = (path: string): ng.IPromise<any> => {\n    return $http({\n      method: 'DELETE',\n      url: config.apiDataBaseUrl + path\n    }).then((resp) => {\n      return resp;\n    });\n  };\n\n  /*\n   Circumstances in which we need containers:\n   - start at root, climb down on demand\n   - start at episode, need all ancestors\n\n   loading any container should\n   - cache its own (complete) data\n   - cache its (incomplete) children\n   load all of its ancestors if not already present (datasvc will need to keep a list of container_ids it's already requested, to avoid circular refs to modelSvc)\n\n   */\n\n  svc.getContainerRoot = function () {\n    // This is only used by episodelist.  Loads root container, returns a list of root-level container IDs\n    return GET('/v3/containers', function (containers) {\n      var customerIDs = [];\n      angular.forEach(containers, function (customer) {\n        // cache the customer data:\n        modelSvc.cache('container', customer);\n        customerIDs.push(customer._id);\n      });\n      return customerIDs;\n    });\n  };\n\n  svc.getContainer = function (id, episodeId?) {\n    return GET('/v3/containers/' + id, function (containers) {\n      modelSvc.cache('container', containers[0]);\n      var container = modelSvc.containers[containers[0]._id];\n\n      // Get the container' asset list:\n      svc.getContainerAssets(id, episodeId);\n\n      // Ensure container.children refers to items in modelSvc cache:\n      if (container.children) {\n        for (var i = 0; i < container.children.length; i++) {\n          container.children[i] = modelSvc.containers[container.children[i]._id];\n        }\n\n        // QUICK HACK to get episode status for inter-episode nav; stuffing it into the container data\n        // Wasteful of API calls, discards useful data\n        var getSiblings = false;\n        if (!episodeId) {\n          getSiblings = true; // we're in a container list\n        }\n        // if (episodeId && modelSvc.episodes[episodeId].navigation_depth > 0) {\n        // \tgetSiblings = true;\n        // }\n        if (getSiblings) {\n          angular.forEach(container.children, function (child) {\n            if (child.episodes[0]) {\n              svc.getEpisodeOverview(child.episodes[0])\n                .then(function (overview) {\n                  if (overview) {\n                    child.status = overview.status;\n                    child.title = overview.title; // name == container, title == episode\n                    modelSvc.cache('container', child); // trigger setLang\n                  } else {\n                    // This shouldn't ever happen, but apparently it does.\n                    // (Is this a permissions error? adding warning to help track it down)\n                    console.error('Got no episode data for ', child.episodes[0]);\n                  }\n                });\n            }\n          });\n\n        }\n      }\n      return containers[0]._id;\n    });\n\n  };\n\n  svc.getContainerAssets = function (containerId, episodeId?) {\n    return $http.get(config.apiDataBaseUrl + '/v1/containers/' + containerId + '/assets')\n      .success(function (containerAssets) {\n        modelSvc.containers[containerId].assetsHaveLoaded = true;\n        angular.forEach(containerAssets.files, function (asset) {\n          modelSvc.cache('asset', asset);\n        });\n        modelSvc.resolveEpisodeAssets(episodeId);\n      });\n  };\n\n  svc.createContainer = function (container) {\n    var defer = $q.defer();\n\n    // TODO sanitize\n    var newContainer = {\n      container: {\n        customer_id: container.customer_id,\n        name: container.name,\n        parent_id: container.parent_id\n        // keywords: [] // for now\n      }\n    };\n    // store in API and resolve with results instead of container\n\n    POST('/v3/containers', newContainer)\n      .then(function (data) {\n        // console.log(\"CREATED CONTAINER\", data);\n        modelSvc.cache('container', data);\n        const newContainer = modelSvc.containers[data._id];\n        const parentId = newContainer.parent_id;\n\n        // add it to the parent's child list (WARN I'm mucking around in modelSvc inappropriately here I think)\n        // console.log(modelSvc.containers[parentId]);\n        modelSvc.containers[parentId].children.push(newContainer);\n\n        defer.resolve(newContainer);\n      });\n    return defer.promise;\n  };\n\n  svc.updateContainer = function (container) {\n    //TODO sanitize\n    var defer = $q.defer();\n    if (!container._id) {\n      console.error('Tried to update a container with no id', container);\n      defer.reject();\n    }\n    PUT('/v3/containers/' + container._id, container, function (data) {\n      modelSvc.cache('container', data);\n      defer.resolve(data);\n    });\n    return defer.promise;\n  };\n\n  svc.deleteContainer = deleteContainer;\n  function deleteContainer(containerId: string): ng.IPromise<any> {\n    // DANGER WILL ROBINSON incomplete and unsafe.\n    // only for deleting test data for now, don't expose this to the production team.\n    return PDELETE('/v3/containers/' + containerId);\n  }\n\n  // Create new episodes, c.f. storeEpisode.   TODO mild cruft\n  svc.createEpisode = function (episode) {\n\n    //Default the status of the episode to 'Unpublished'\n    episode.status = 'Unpublished';\n\n    var defer = $q.defer();\n    // console.log(\"Attempting to create \", episode);\n    POST('/v3/episodes', episode)\n      .then(function (data) {\n        // console.log(\"Created episode: \", data);\n        // muck around in modelSvc.containers again:\n        modelSvc.containers[data.container_id].episodes = [data._id];\n        modelSvc.containers[data.container_id].status = data.status;\n        defer.resolve(data);\n      });\n    return defer.promise;\n  };\n\n  // Update existing episodes, c.f. createEpisode TODO mild cruft\n  svc.storeEpisode = function (epData) {\n    const preppedData = prepEpisodeForStorage(epData);\n    console.log('prepped for storage:', preppedData);\n    if (preppedData != null) {\n      return PUT('/v3/episodes/' + preppedData._id, preppedData);\n    } else {\n      return $q.reject(false);\n    }\n  };\n\n  svc.deleteItem = function (evtId) {\n    return DELETE('/v3/events/' + evtId);\n  };\n  svc.createAsset = function (containerId, asset) {\n    var createAssetDefer = $q.defer();\n\n    asset.container_id = containerId;\n    if (asset._id && asset._id.match(/internal/)) {\n      delete asset._id;\n    }\n\n    asset = modelSvc.deriveAsset(asset);\n    console.log('Attempting to create asset ', asset);\n    POST('/v1/containers/' + containerId + '/assets', asset)\n      .then(function (data) {\n        modelSvc.containers[data.file.container_id].episodes = [data.file._id];\n        modelSvc.cache('asset', data.file);\n        createAssetDefer.resolve(data.file);\n        //modelSvc.resolveEpisodeAssets(episodeId);\n      });\n    return createAssetDefer.promise;\n  };\n\n  svc.deleteAsset = function (assetId) {\n    return DELETE('/v1/assets/' + assetId);\n  };\n\n  // TODO need safety checking here\n  svc.storeItem = function (evt: IEvent): ng.IPromise<IEvent> {\n    evt = prepItemForStorage(evt) as IEvent;\n    if (!evt) {\n      return $q.reject({});\n    }\n    if (evt && evt._id && !evt._id.match(/internal/)) {\n      // update\n      return PUT('/v3/events/' + evt._id, {\n        event: evt\n      });\n    } else {\n      // create\n      return POST('/v3/episodes/' + evt.episode_id + '/events', {\n        event: evt\n      });\n    }\n  };\n\n  var prepItemForStorage = function (evt): IEvent | false {\n    // Events, that is\n    var prepped = {};\n    if (evt._id && evt._id.match(/internal/)) {\n      delete evt._id;\n    }\n\n    //  The data we want to store:\n    var fields = [\n      '_id',\n      //\t\t\t\t\"producerItemType\", // Nope\n      'start_time',\n      'end_time',\n      'episode_id',\n      'chapter_marker',\n      'template_id',\n      'templateUrl', // We should get this from template_id, but for now there's a dependency in editController on this existing. TODO remove that dependency\n      'stop',\n      'required',\n      'cosmetic',\n      'sxs', // for demos, for now\n      'title',\n      'url',\n      'target',\n      'url_status',\n      'annotator',\n      'annotation',\n      'description',\n      'data',\n      'asset_id',\n      'link_image_id',\n      'annotation_image_id',\n      'avatar_id'\n    ];\n\n    prepped.type = evt._type;\n    for (var i = 0; i < fields.length; i++) {\n      if (evt[fields[i]] !== undefined) {\n        prepped[fields[i]] = angular.copy(evt[fields[i]]);\n      }\n    }\n\n    // check that end_time is greater than start time\n    if (prepped.start_time && prepped.end_time) {\n      var startFloat = parseFloat(prepped.start_time);\n      var endFloat = parseFloat(prepped.end_time);\n      if (isNaN(startFloat) || isNaN(endFloat)) {\n        errorSvc.error({\n          data: 'Tried to store an invalid start_time or end_time.'\n        });\n        return false;\n      }\n      if (startFloat > endFloat) {\n        errorSvc.error({\n          data: 'Tried to store a start_time that is after the end_time.'\n        });\n        return false;\n      }\n    }\n\n    // clean up multiple choice question Plugin data\n    if (prepped.data) {\n      delete prepped.data._plugin.selectedDistractor;\n      delete prepped.data._plugin.hasBeenAnswered;\n      delete prepped.data._plugin._type;\n      if (prepped.data._plugin.distractors.length) {\n        for (i = 0; i < prepped.data._plugin.distractors.length; i++) {\n          delete prepped.data._plugin.distractors[i].selected;\n        }\n      }\n    }\n\n    // TODO if Credly badge events are ever authorable in producer we will have to do the same\n    // filtering of user data for those here.   Let's not\n\n    prepped.style_id = [];\n    prepped.layout_id = [];\n\n    // convert style/layout selections back into their IDs.\n    // trust evt.styles[] and evt.layouts[], DO NOT use styleCss (it contains the scene and episode data too!)\n    prepped.style_id = get_id_values('style', evt.styles);\n    prepped.layout_id = get_id_values('layout', evt.layouts);\n\n    if (evt._type === 'Chapter') {\n      return prepped;\n    }\n    const template = svc.readCache('template', 'url', evt.templateUrl) as ILayoutTemplate | IItemTemplate;\n    if (template) {\n      prepped.template_id = template.id;\n    }\n    if (prepped.template_id) {\n      return prepped;\n    } else {\n      errorSvc.error({\n        data: 'Tried to store a template with no ID: ' + evt.templateUrl\n      });\n      return false;\n    }\n  };\n  svc.prepItemForStorage = prepItemForStorage;\n\n  // No, we should not be storing episodes with no master asset halfway through editing\n  svc.detachMasterAsset = (epData: IEpisode): ng.IPromise<void | boolean> => {\n    const preppedData = prepEpisodeForStorage(epData);\n    preppedData.master_asset_id = null;\n    console.log('prepped sans master_asset_id for storage:', preppedData);\n    if (preppedData) {\n      return PUT('/v3/episodes/' + preppedData._id, preppedData);\n    } else {\n      return $q.reject(false);\n    }\n  };\n  svc.detachEventAsset = function (evt, assetId) {\n    evt = prepItemForStorage(evt);\n    if (!evt) {\n      return false;\n    }\n    if (evt.asset_id === assetId) {\n      evt.asset_id = null;\n    }\n    if (evt.link_image_id === assetId) {\n      evt.link_image_id = null;\n    }\n    if (evt.annotation_image_id === assetId) {\n      evt.annotation_image_id = null;\n    }\n    if (evt && evt._id && !evt._id.match(/internal/)) {\n      // update\n      return PUT('/v3/events/' + evt._id, {\n        event: evt\n      });\n    } else {\n      // create\n      return POST('/v3/episodes/' + evt.episode_id + '/events', {\n        event: evt\n      });\n    }\n  };\n\n  const prepEpisodeForStorage = function (epData): Partial<IEpisode> {\n\n    if (epData._id && epData._id.match(/internal/)) {\n      delete epData._id;\n    }\n\n    const fields = [\n      '_id',\n      'title',\n      'description',\n      'container_id',\n      'customer_id',\n      'master_asset_id',\n      'poster_frame_id',\n      'status',\n      'languages',\n      'template_id'\n      // \"navigation_depth\"\n      // (0 for no cross-episode nav, 1 for siblings only, 2 for course and session, 3 for customer/course/session)\n    ];\n\n    const prepped: Partial<IEpisode> = pick(epData, fields);\n    prepped.style_id = get_id_values('style', epData.styles);\n\n    const template = svc.readCache('template', 'id', epData.template_id) as ITemplate;\n    if (template && template.id) {\n      prepped.template_id = template.id;\n      return prepped;\n    } else {\n      errorSvc.error({\n        data: 'Tried to store a template with no ID: ' + epData.template_id\n      });\n      return null;\n    }\n  };\n\n  // careful to only use this for guaranteed unique fields (style and layout names, basically)\n  svc.readCache = function (cache, field, val) {\n    var found = false;\n    angular.forEach(dataCache[cache], function (item) {\n      if (item[field] === val) {\n        found = item;\n      }\n    });\n    if (found) {\n      return found;\n    }\n    return false;\n  };\n  if (config.debugInBrowser) {\n    // console.log(\"DataSvc:\", svc);\n    console.log('DataSvc cache:', dataCache);\n  }\n\n  svc.getTemplates = function () {\n    return Object.keys(dataCache.template).map(function (t) {\n      return dataCache.template[t];\n    });\n  };\n\n  svc.getEpisodeTemplatesAdmin = getEpisodeTemplatesAdmin;\n  function getEpisodeTemplatesAdmin(): ITemplateSelect[] {\n    if (!authSvc.userHasRole('admin')) {\n      return;\n    }\n    return svc.getTemplates()\n      .reduce(\n        (ts: ITemplateSelect[], t: ITemplate) => {\n          if (t instanceof IEpisodeTemplate) {\n            ts.push({\n              id: t.id,\n              name: t.displayName,\n              customer_ids: t.customer_ids\n            });\n          }\n          return ts;\n        },\n        []\n      );\n  }\n\n  svc.getEpisodeTemplatesByCustomerIds = getEpisodeTemplatesByCustomerIds;\n  function getEpisodeTemplatesByCustomerIds(custIds: string[]): ITemplateSelect[] {\n    return svc.getTemplates()\n      .reduce(\n        (ts: ITemplateSelect[], t: ITemplate) => {\n          if (t instanceof IEpisodeTemplate) {\n            const hasCustomer = intersection(custIds, t.customer_ids);\n            if (hasCustomer.length > 0) {\n              ts.push({\n                id: t.id,\n                name: t.displayName,\n                customer_ids: t.customer_ids\n              });\n            }\n          }\n          return ts;\n        },\n        []\n      );\n  }\n\n  svc.fetchTemplates = fetchTemplates;\n  function fetchTemplates(): ng.IPromise<ITemplate[]> {\n    return SANE_GET('/v1/templates')\n      .then((templates: ITemplate[]) => svc.cache('templates', templates))\n      .then(() => svc.getTemplates());\n  }\n\n\n  svc.getTemplate = getTemplate;\n  function getTemplate(id: string): ITemplate {\n    return dataCache.template[id];\n  }\n\n  /*\n   gets ID of Style Class when given the 'css_name'. 'css_name' is a attribute on the Style Class.\n   for example:\n   get_id_values('style', ['cover', '']) -> ['532708d8ed245331bd000007', '52e15b47c9b715cfbb00003f']\n   */\n  const get_id_values = function (cache, realNames): string[] {\n\n    // convert real styles and layouts back into id arrays. Not for templateUrls!\n    const ids = [];\n\n    angular.forEach(realNames, (realName) => {\n      if (realName) {\n        const cachedValue = svc.readCache(cache, 'css_name', realName) as IStyle | ILayout;\n        if (cachedValue) {\n          ids.push(cachedValue.id);\n        } else {\n          errorSvc.error({\n            data: 'Tried to store a ' + cache + ' with no ID: ' + realName\n          });\n          return false;\n        }\n      }\n    });\n    return ids;\n  };\n\n  return svc;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/dataSvc/dataSvc.ts","/*\n to throw explicit errors:\n errorSvc.error({data: \"This episode has not yet been published.\"});\n errorSvc.notify({data: \"This hovercraft is full of Monty Python quotes.\"});\n\n throw() or other js errors also get sent here by $exceptionHandler (though we're ignoring them for now)\n */\n\n\n\nerrorSvc.$inject = ['$location'];\n\nexport default function errorSvc($location) {\n  var svc = {};\n\n  // TODO This is a mess.  make the field names less ridiculously inconsistent.\n\n  svc.init = function () {\n    svc.errors = [];\n    svc.notifications = [];\n  };\n  svc.init();\n\n  svc.error = function (exception, cause) {\n    if (exception && (exception.status === 401 || exception.status === 403)) {\n      // \"unauthorized\" errors will clear login state for now.\n      // TODO in future there may be cases where this isn't desirable (i.e. when we support more roles,\n      // it may make sense to keep an existing role in place even if the user attempts to do something they're not allowed to?)\n      console.warn(exception.status, \" detected\");\n\n      // hacky special case for login page\n      if ($location.path() === '/') {\n        exception = undefined;\n      }\n    }\n    if (exception && exception.data) {\n      // API errors go here.\n\n      if (typeof exception.data === \"string\") {\n        // hide ruby stack trace:\n        exception.data = exception.data.replace(/\\n/g, '').replace(/==/g, '').replace(/-----.*/g, '');\n        svc.errors.push({\n          \"exception\": exception\n        });\n      } else {\n        svc.errors.push({\n          \"exception\": exception\n        });\n      }\n    } else {\n      // generic thrown javascript error.  TODO show these too, but only in dev environment (they're often not meaningful)\n      console.warn(\"ErrorSvc caught error: \", exception, cause);\n    }\n  };\n\n  svc.notify = function (note) {\n    svc.notifications.push({\n      'text': note\n    });\n  };\n\n  return svc;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/errorSvc.ts","/**\n *\n * Created by githop on 3/23/16.\n */\nimport {SOCIAL_IMAGE_SQUARE, SOCIAL_IMAGE_WIDE} from '../constants'\n\n/**\n * @ngdoc service\n * @name iTT.service:imageResize\n * @requires $q\n * @description\n * Resize images and convert File Objects into images. Used in practice to resize images client side prior\n * to uploading to AWS. Basic Idea is to resize images client side with HTML5 Canvas. The resized image\n * is converted back into a File object so it can be passed to the AWS service.\n * {@link https://github.com/InTheTelling/client/blob/master/app/scripts/services/imageResize.js source}\n */\nimageResize.$inject = ['$q'];\n\nexport interface IimageResize {\n  createFileFromDataURL(url: string, fileName: string): FileBlob;\n  readFileToDataURI(file: File): ng.IPromise<string>\n  readFileToImg(file: File): ng.IPromise<HTMLImageElement>;\n  resizeImg(img: HTMLImageElement, maxWidth: number, maxHeight: number, center:boolean): ng.IPromise<string>;\n  calcAspectRatio(w: number, h: number): number;\n  getImageTagType(w: number, h: number): 'social_image_square' | 'social_image_wide';\n}\n\n\n//When this module was authored, Safari did not support the use of File Objects. A workaround\n//is to coerce a Blob into a File by adding the missing properties\ninterface FileBlob extends Blob{\n  name?: string;\n  lastModifiedDate?: Date;\n}\n\nexport default function imageResize($q): IimageResize {\n  return {\n    calcAspectRatio,\n    createFileFromDataURL,\n    readFileToDataURI,\n    readFileToImg,\n    resizeImg,\n    getImageTagType\n  };\n  /**\n   * @ngdoc method\n   * @name #createFileFromDataURL\n   * @methodOf iTT.service:imageResize\n   * @description\n   * Creates a File object from a data url.\n   * @param {String} url base64 encoded string as url\n   * @param {String} fileName name of file\n   * @returns {Object} File object containing an image.\n   * @example\n   * <pre>\n   *     var file = imageResize.createFileFromDataURL(dataUrl);\n   * </pre>\n   */\n  function createFileFromDataURL(url, fileName): FileBlob {\n    let _blob = _dataURLToBlob(url);\n    _blob.name = 'resized' + fileName;\n    _blob.lastModifiedDate = new Date();\n    return _blob;\n  }\n\n  /**\n   * @ngdoc method\n   * @name #readFileToImg\n   * @methodOf iTT.service:imageResize\n   * @description\n   * Creates an Image from a File Object\n   * @param {Object} file File Object\n   * @returns {Object} Promise that resolves to an Image\n   * @example\n   * <pre>\n   *     imageResize.readFileToImg(file).then(function(file) {\n\t\t *     \t\t//do stuff with file\n\t\t *     }));\n   * </pre>\n   */\n  function readFileToImg(file: File): ng.IPromise<HTMLImageElement> {\n    const _img = new Image();\n    return readFileToDataURI(file).then((imgUrl) => {\n      _img.src = imgUrl;\n      return $q(function (resolve, reject) {\n        _img.onload = function () {\n          resolve(_img);\n        };\n        _img.onerror = function () {\n          reject('Error Loading Image');\n        };\n      }).then(function (img) {\n        return img;\n      });\n    });\n  }\n\n  function readFileToDataURI(file: File): ng.IPromise<string> {\n    const _reader = new FileReader();\n    return $q((resolve, reject) => {\n      _reader.onloadend = () => {\n        resolve(_reader.result);\n      };\n      _reader.onerror = () => {\n        reject(_reader.error);\n      };\n      _reader.readAsDataURL(file);\n    }).then(imgUrl => imgUrl);\n  }\n\n  /**\n   * @ngdoc method\n   * @name #resizeImg\n   * @methodOf iTT.service:imageResize\n   * @description\n   * Resize image by reducing width/height by factor of 2\n   * @param {Object} img Image to resize.\n   * @param {Number} maxWidth target with of image resize.\n   * @param {Number} maxHeight target height of image resize.\n   * @param {Boolean} center Toggle image centering\n   * @returns {String} Promise that resolves to a data url.\n   * @example\n   * <pre>\n   *     imageResize.resizeImg(img, 60, 60, true)\n   *     .then(function(resizedImg) {\n\t\t *     //do stuff with resizedImg\n\t\t *     });\n   * </pre>\n   */\n  function resizeImg(img, maxWidth, maxHeight, center) {\n    return $q(function (resolve) {\n      var _canvas = document.createElement('canvas');\n      var _ctx = _getContext(_canvas);\n      var _dx = 0, _dy = 0;\n\n      var _tmpCvsWidth = img.width,\n        _tmpCvsHeight = img.height;\n\n      _setCanvasWH(_canvas, _tmpCvsWidth, _tmpCvsHeight);\n\n      _ctx.drawImage(img, 0, 0, _tmpCvsWidth, _tmpCvsHeight);\n\n      //step down the image size by half for a smoother overall resize.\n      //break here because we want our final resize out of the loop\n      //to still be a down step.\n      while ((_tmpCvsWidth > maxWidth || _tmpCvsHeight > maxHeight) &&\n      !((_tmpCvsWidth * 0.5) < maxWidth || (_tmpCvsHeight * 0.5) < maxHeight)) {\n        img.width = img.width * 0.5;\n        img.height = img.height * 0.5;\n        _tmpCvsWidth = img.width;\n        _tmpCvsHeight = img.height;\n        _canvas = _resizeImgWithCanvas(_canvas, _tmpCvsWidth, _tmpCvsHeight);\n      }\n\n      var _finalWH = _calculateNewDimensions(_canvas.width, _canvas.height, maxWidth, maxHeight);\n\n      //handle centering of non-square resized images\n      if (center) {\n        //image is taller than it is wide\n        //center it vertically\n        if (_finalWH.height < maxHeight) {\n          _dy = (maxHeight - _finalWH.height) / 2;\n        }\n\n        //image is wider than it is tall\n        //center it horizontally\n        if (_finalWH.width < maxWidth) {\n          _dx = (maxWidth - _finalWH.width) / 2;\n        }\n      }\n\n      //console.log('final draw params: ', 'cvs', _canvas, 'finalWH', _finalWH, 'dx dy', _dx, _dy);\n      _canvas = _resizeImgWithCanvas(_canvas, _finalWH.width, _finalWH.height, maxWidth, maxHeight, _dx, _dy);\n      resolve(_canvas.toDataURL('image/png', 1.0));\n    });\n  }\n\n  function calcAspectRatio(w: number, h: number): number {\n    return w / h;\n  }\n\n  function getImageTagType(w: number, h: number): 'social_image_square' | 'social_image_wide' {\n    const aspectRatio = calcAspectRatio(w, h);\n    if (aspectRatio > 1.25) {\n      return SOCIAL_IMAGE_WIDE;\n    } else {\n      return SOCIAL_IMAGE_SQUARE;\n    }\n  }\n\n  /**\n   * @private\n   * @ngdoc\n   * @methodOf iTT.service:imageResize\n   * @name _setCanvasWH\n   * @description\n   * sets the width and height on a given canvas.\n   * @param {Object} canvas HTML5 Canvas Element\n   * @param {Number} width Width to set.\n   * @param {Number} height Height to set.\n   * @returns {Void} returns undefined.\n   */\n  function _setCanvasWH(canvas, width, height) {\n    canvas.width = width;\n    canvas.height = height;\n  }\n\n  /**\n   * @private\n   * @ngdoc\n   * @methodOf iTT.service:imageResize\n   * @name _resizeImgWithCanvas\n   * @description\n   * Resize an image rendered in an HTML5 canvas element to given dimensions\n   * @param {Object} c HTML5 Canvas Element\n   * @param {Number} w Target width to resize image to.\n   * @param {Number} h Target height to resize image to.\n   * @param {Number} [cW=w] Optional param, Target width of canvas, defaults to image width.\n   * @param {Number} [cH=h] Optional param, Target height of canvas, defaults to image height.\n   * @param {Number} [dx=0] Optional param, Amount to horizontally offset the image inside the canvas element, defaults to 0.\n   * @param {Number} [dy=0] Optional param, Amount to vertically offset the image inside the canvas element, defaults to 0.\n   * @returns {Object} HTML5 canvas element.\n   */\n  function _resizeImgWithCanvas(c, w, h, cW = w, cH = h, dx = 0, dy = 0) {\n    //console.log('drawImage inputs: ', 'c', c, 'dx', dx, 'dy', dy, 'w', w, 'h', h);\n    let _resizeCvs = document.createElement('canvas');\n    let _resizeCtx = _getContext(_resizeCvs);\n    _resizeCvs.width = cW;\n    _resizeCvs.height = cH;\n    _resizeCtx.drawImage(c, dx, dy, w, h);\n\n    return _resizeCvs;\n  }\n\n  /**\n   * @private\n   * @ngdoc\n   * @methodOf iTT.service:imageResize\n   * @name _getContext\n   * @description\n   * Method to get the Context from an HTML5 canvas element and set anti-aliasing properties\n   * @param {Object} canvas HTML5 Canvas Element\n   * @returns {Object} HTML5 Canvas Context object.\n   */\n  function _getContext(canvas) {\n    let context = canvas.getContext('2d');\n    context.imageSmoothingEnabled = true;\n    context.mozImageSmoothingEnabled = true;\n    context.oImageSmoothingEnabled = true;\n    context.webkitImageSmoothingEnabled = true;\n    return context;\n  }\n\n  /**\n   * @private\n   * @ngdoc\n   * @methodOf iTT.service:imageResize\n   * @name _dataURLToBlob\n   * @description\n   * Converts data url to Blob object which can be used as data for a File object\n   * Taken from https://github.com/ebidel/filer.js/blob/master/src/filer.js#L137\n   * @param {String} dataURL base64 encoded string containing image\n   * @returns {Object} Blob Object\n   */\n  function _dataURLToBlob(dataURL: string): FileBlob {\n    let BASE64_MARKER = ';base64,';\n    if (dataURL.indexOf(BASE64_MARKER) == -1) {  //jshint ignore:line\n      let parts = dataURL.split(',');\n      let contentType = parts[0].split(':')[1];\n      let raw = decodeURIComponent(parts[1]);\n\n      return new Blob([raw], {type: contentType});\n    }\n\n    let parts = dataURL.split(BASE64_MARKER); //jshint ignore:line\n    let contentType = parts[0].split(':')[1]; //jshint ignore:line\n    let raw = window.atob(parts[1]); //jshint ignore:line\n    let rawLength = raw.length;\n\n    let uInt8Array = new Uint8Array(rawLength);\n\n    for (let i = 0; i < rawLength; ++i) {\n      uInt8Array[i] = raw.charCodeAt(i);\n    }\n\n    return new Blob([uInt8Array], {type: contentType});\n  }\n\n  /**\n   * @private\n   * @ngdoc method\n   * @methodOf iTT.service:imageResize\n   * @name _calculateNewDimensions\n   * @description\n   * Calculates the dimensions of a rectangle (for an image) while maintaining the original aspect ratio.\n   * @param {Number} srcWidth Input width of rectangle.\n   * @param {Number} srcHeight Input height of rectangle.\n   * @param {Number} maxWidth Target width of rectangle.\n   * @param {Number} maxHeight Target height of rectangle.\n   * @returns {Object} Object with width and height properties as integers.\n   */\n  function _calculateNewDimensions(srcWidth, srcHeight, maxWidth, maxHeight) {\n    let _ratio = Math.min(maxWidth / srcWidth, maxHeight / srcHeight);\n\n    return {width: Math.floor(srcWidth * _ratio), height: Math.floor(srcHeight * _ratio)};\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/imageResizeSvc.ts","// for quick debugging of templates.\n\n// TODO: figure out how to get grunt to omit this from the build\n\n\nmockSvc.$inject = ['modelSvc'];\n\nexport default function mockSvc(modelSvc) {\n  var svc = {};\n  svc.keepJsLintHappy = function () {\n    var noop = modelSvc.episodes.noop;\n    noop = undefined;\n  };\n  svc.mockEpisode = function (epId) {\n    // FOR DEV TESTING\n\n    modelSvc.cache(\"episode\", {\n      \"_id\": epId,\n      \"created_at\": \"2014-04-10T02:02:15Z\",\n      \"description\": {\n        en: \"The Business Case for Sustainability\"\n      },\n      \"master_asset_id\": \"masterasset\",\n      \"title\": {\n        en: \"Test Episode\"\n      },\n      \"languages\": [{\n        code: 'en',\n        default: true\n      }],\n\n      \"status\": \"Published\",\n      \"templateUrl\": \"templates/episode/gwsb.html\",\n      \"styles\": [\n        \"\", \"\", \"\"\n      ]\n    });\n    modelSvc.cache(\"asset\", {\n      \"_id\": \"masterasset\",\n      \"_type\": \"Asset::Video\",\n      \"alternate_urls\": [\n        \"https://www.youtube.com/watch?v=dTAAsCNK7RA&list=RDHCffYp01sXKH8\",\n        \"https://s3.amazonaws.com/itt.uploads/development/Test%20Customer/SLIC/The%20Business%20Case/Sustainability%20Pays%20sXs/9aPKP5AJNJdH-UEQ2EB9jg.m3u8\",\n        \"https://s3.amazonaws.com/itt.uploads/development/Test%20Customer/SLIC/The%20Business%20Case/Sustainability%20Pays%20sXs/9aPKP5AJNJdH-UEQ2EB9jg_416x234.webm\",\n        \"https://s3.amazonaws.com/itt.uploads/development/Test%20Customer/SLIC/The%20Business%20Case/Sustainability%20Pays%20sXs/9aPKP5AJNJdH-UEQ2EB9jg_960x540.webm\",\n        \"https://s3.amazonaws.com/itt.uploads/development/Test%20Customer/SLIC/The%20Business%20Case/Sustainability%20Pays%20sXs/9aPKP5AJNJdH-UEQ2EB9jg_416x234.mp4\",\n        \"https://s3.amazonaws.com/itt.uploads/development/Test%20Customer/SLIC/The%20Business%20Case/Sustainability%20Pays%20sXs/9aPKP5AJNJdH-UEQ2EB9jg_960x540.mp4\"\n      ],\n      \"attachment\": \"Sustainability_Pays_for_Demo_1.mp4\",\n      \"base_path\": \"development/Test Customer/SLIC/The Business Case/Sustainability Pays sXs\",\n      \"content_type\": \"video/mp4\",\n      \"duration\": \"443.199313\",\n      \"extension\": \"mp4\",\n      \"file_size\": 338886327,\n      \"filename\": \"Sustainability_Pays_for_Demo_1.mp4\",\n      \"frame_rate\": \"10000000/417083\",\n      \"frame_rate_d\": 417083,\n      \"frame_rate_n\": 10000000,\n      \"height\": 720,\n      \"name\": \"Sustainability Pays for Demo 1\",\n      \"original_filename\": \"Sustainability_Pays_for_Demo_1.mp4\",\n      \"start_time\": \"0.000000\",\n      \"status\": \"complete\",\n      \"url\": \"https://s3.amazonaws.com/itt.uploads/development/Test%20Customer/SLIC/The%20Business%20Case/Sustainability%20Pays%20sXs/Sustainability_Pays_for_Demo_1.mp4\",\n      \"width\": 1280\n    });\n\n    var sceneStub = {\n      \"_id\": \"-\",\n      \"_type\": \"Scene\",\n      \"description\": {\n        en: \"Scene <b>description</b> Description\"\n      },\n      \"keywords\": [],\n      \"start_time\": 0,\n      \"end_time\": 200,\n      \"type\": \"Scene\",\n      \"episode_id\": epId,\n      \"cur_episode_id\": epId,\n      //\"templateUrl\": \"templates/scene/centered.html\",\n      \"layouts\": [\"\", \"\"],\n      \"styles\": [\"transitionSlideL\"]\n    };\n\n    var scenetemplateurls = [\n      \"templates/scene/cornerH.html\",\n      \"templates/scene/cornerV.html\",\n      \"templates/scene/centered.html\",\n      \"templates/scene/1col.html\"\n    ];\n\n    for (var i = 0; i < 10; i++) {\n      var scene = angular.copy(sceneStub);\n      scene._id = \"scene-\" + i;\n      scene.title = (i / 2 === Math.floor(i / 2)) ? {\n        en: \"Scene \" + (i + 1) + \" Title\"\n      } : {\n        en: \"\"\n      };\n      scene.start_time = (i * 20);\n      scene.end_time = (i * 20 + 20);\n      scene.templateUrl = scenetemplateurls[i % scenetemplateurls.length];\n      modelSvc.cache(\"event\", scene);\n    }\n\n    var annotationStub = {\n      \"_id\": \"\",\n      \"_type\": \"Annotation\",\n      \"annotation\": {\n        en: \"Transcript text: <b>html</b> included!\"\n      },\n      \"annotation_image_id\": \"asset3\",\n      \"annotator\": {\n        en: \"Speaker Name\"\n      },\n      \"cosmetic\": false,\n      \"episode_id\": epId,\n      \"cur_episode_id\": epId,\n      \"required\": false,\n      \"stop\": false,\n      \"type\": \"Annotation\",\n      \"templateUrl\": \"templates/item/transcript-withthumbnail.html\",\n      \"styles\": [\"colorInvert\"]\n    };\n\n    var testLayouts = [\n      \"sidebarL\",\n      \"sidebarR\", \"inline\"\n    ];\n\n    var annotationTemplates = [\n      \"templates/item/text-h1.html\",\n      \"templates/item/pullquote.html\",\n      \"templates/item/text-h2.html\"\n    ];\n\n    for (i = 0; i < 30; i++) {\n      var transcript = angular.copy(annotationStub);\n      transcript._id = \"transcript-\" + i;\n      transcript.annotation = {\n        en: \"Transcript block number \" + (i + 1)\n      };\n      transcript.start_time = (i * 5);\n      transcript.end_time = (i * 5 + 5);\n      transcript.layouts = [testLayouts[i % testLayouts.length]];\n      //\t\t\t\tmodelSvc.cache(\"event\", transcript);\n    }\n    for (i = 0; i < 10; i++) {\n      var annotation = angular.copy(annotationStub);\n      annotation._id = \"annotation-\" + i;\n      annotation.start_time = i * 6;\n      annotation.end_time = i * 6 + 3;\n      annotation.templateUrl = annotationTemplates[i % annotationTemplates.length];\n      modelSvc.cache(\"event\", annotation);\n    }\n\n    for (i = 0; i < 10; i++) {\n      var longtext = angular.copy(annotationStub);\n      longtext._id = \"longtext-\" + i;\n      longtext.start_time = i * 7;\n      longtext.end_time = i * 7 + 7;\n      longtext.styles = [\"timestampNone\"];\n      longtext.annotation = {\n        en: \"A way a long a last a loved along the riverrun, past Eve and Adam's, from swerve of shore to bend of bay, brings us by a commodius vicus of recirculation back to Howth Castle and Environs. Sir Tristram, <i>violer d'amores</i>, fr'over the short sea, had passencore rearrived from North Armorica on this side the scraggy isthmus of Europe Minor to wielderfight his penisolate war\"\n      };\n      longtext.templateUrl = \"templates/item/text-transmedia.html\";\n\n      modelSvc.cache(\"event\", longtext);\n    }\n\n    modelSvc.cache(\"asset\", {\n      \"_id\": \"asset1\",\n      \"_type\": \"Asset::Image\",\n      \"url\": \"https://s3.amazonaws.com/itt.uploads/development/Test%20Customer/SLIC/The%20Business%20Case/Sustainability%20Pays/Sustainability_Scorecard_1.jpg\",\n      \"extension\": \"jpg\",\n      \"name\": \"Sustainability Scorecard 1\",\n    });\n    modelSvc.cache(\"asset\", {\n      \"_id\": \"asset2\",\n      \"_type\": \"Asset::Image\",\n      \"url\": \"http://placehold.it/350x350\",\n      \"extension\": \"jpg\",\n      \"name\": \"350x350 placeholder\",\n    });\n    modelSvc.cache(\"asset\", {\n      \"_id\": \"asset3\",\n      \"_type\": \"Asset::Image\",\n      \"url\": \"http://placehold.it/64x64\",\n      \"extension\": \"jpg\",\n      \"name\": \"64x64 placeholder\",\n    });\n    modelSvc.cache(\"asset\", {\n      \"_id\": \"asset4\",\n      \"_type\": \"Asset::Image\",\n      \"url\": \"http://placehold.it/900x900\",\n      \"extension\": \"jpg\",\n      \"name\": \"900x900 placeholder\",\n    });\n\n    var linkStub = {\n      \"_id\": \"\",\n      \"_type\": \"Link\",\n      \"link_image_id\": \"asset1\",\n      \"url\": \"https://luminarydigitalmedia.com\",\n      \"title\": {\n        en: \"Link Title\"\n      },\n      \"description\": {\n        en: \"Link Description <i>lorem</i> ipsum dolor frog a frog oh lord it's amet lorem ipsum buddy lorem ipsum dolor frog a frog oh lord it's amet lorem ipsum buddy lorem ipsum dolor frog a frog oh lord it's amet lorem ipsum buddy\"\n      },\n      \"cosmetic\": false,\n      \"stop\": false,\n      \"type\": \"Link\",\n      \"episode_id\": epId,\n      \"cur_episode_id\": epId,\n      \"layouts\": [\"inline\"],\n      \"styles\": [\"timestampNone\"],\n      \"isContent\": true,\n    };\n\n    for (i = 0; i < 30; i++) {\n      var link = angular.copy(linkStub);\n      link._id = \"link-\" + i;\n      link.required = (Math.random() > 0.5);\n      link.start_time = i * 3;\n      link.end_time = i * 3 + 3;\n\n      link.layouts = [testLayouts[i % testLayouts.length]];\n\n      // if (Math.random() > 0.1) {\n      // \tlink.title = {en: \"NO EMBED link\"};\n      // \tlink.templateUrl = \"templates/transmedia-link-noembed.html\";\n      // } else if (Math.random() < 0.1) {\n      // \tlink.title = {en: \"FRAMEICIDE link\"};\n      // \tlink.templateUrl = \"templates/transmedia-link-frameicide.html\";\n      // }\n      modelSvc.cache(\"event\", link);\n    }\n\n    var questionFormativeStub = {\n      \"_id\": \"\",\n      \"_type\": \"Plugin\",\n\n      \"producerItemType\": \"question\",\n      \"episode_id\": epId,\n      \"cur_episode_id\": epId,\n      \"templateUrl\": \"templates/item/question-mc.html\",\n      \"style_id\": [],\n      \"layout_id\": [],\n      \"title\": {},\n      \"data\": {\n        \"_id\": \"\",\n        \"_pluginType\": \"question\",\n        \"_version\": 2,\n        \"_plugin\": {\n          \"questiontext\": \"Some question text?\",\n          \"questiontype\": \"mc-formative\",\n          \"distractors\": [{\n            \"text\": \"a\",\n            \"index\": 1,\n          }, {\n            \"text\": \"b\",\n            \"index\": 2\n          }, {\n            \"text\": \"c\",\n            \"correct\": true,\n            \"index\": 3,\n          }, {\n            \"text\": \"\",\n            \"index\": 4\n          }],\n          \"correctfeedback\": \"Great!\",\n          \"incorrectfeedback\": \"Doh!\",\n          \"_type\": \"question\"\n        }\n      }\n    };\n\n    for (i = 0; i < 10; i++) {\n      var question = angular.copy(questionFormativeStub);\n      question._id = \"question-\" + i;\n      question.required = (Math.random() > 0.5);\n      question.start_time = i * 5;\n      question.end_time = i * 5 + 5;\n\n      question.layouts = [testLayouts[i % testLayouts.length]];\n      modelSvc.cache(\"event\", question);\n    }\n\n    var questionPollStub = {\n      \"_id\": \"\",\n      \"_type\": \"Plugin\",\n      \"type\": \"Plugin\",\n      \"producerItemType\": \"question\",\n      \"episode_id\": epId,\n      \"cur_episode_id\": epId,\n      \"templateUrl\": \"templates/item/question-mc.html\",\n      \"style_id\": [],\n      \"layout_id\": [],\n      \"data\": {\n        \"_id\": \"\",\n        \"_pluginType\": \"question\",\n        \"_version\": 2,\n        \"_plugin\": {\n          \"questiontext\": \"Some question text?\",\n          \"questiontype\": \"mc-poll\",\n          \"distractors\": [{\n            \"text\": \"a\",\n            \"index\": 1,\n          }, {\n            \"text\": \"b\",\n            \"index\": 2\n          }, {\n            \"text\": \"c\",\n            \"index\": 3,\n          }, {\n            \"text\": \"\",\n            \"index\": 4\n          }],\n          \"_type\": \"question\"\n        }\n      }\n    };\n\n    for (i = 0; i < 10; i++) {\n      var questionTemp = angular.copy(questionPollStub);\n      questionTemp._id = \"question-\" + i;\n      questionTemp.required = (Math.random() > 0.5);\n      questionTemp.start_time = i * 6;\n      questionTemp.end_time = i * 6 + 6;\n\n      questionTemp.layouts = [testLayouts[i % testLayouts.length]];\n      modelSvc.cache(\"event\", questionTemp);\n    }\n\n    var uploadStub = {\n      \"_type\": \"Upload\",\n\n      \"description\": {\n        en: \"Description of an upload item\"\n      },\n      \"required\": false,\n      \"cosmetic\": true,\n      \"stop\": false,\n      \"type\": \"Upload\",\n      \"episode_id\": epId,\n      \"cur_episode_id\": epId,\n      \"templateUrl\": \"templates/item/image-caption.html\",\n      \"styles\": [\n        \"transitionFade\", \"tl\"\n      ],\n      \"layouts\": [\n        \"inline\"\n      ]\n    };\n    for (i = 0; i < 30; i++) {\n      var upload = angular.copy(uploadStub);\n      upload._id = \"upload-\" + i;\n      upload.asset_id = \"asset2\"; // + (i % 3 + 2);\n      upload.title = {\n        en: \"Upload number \" + (i % 3 + 1)\n      };\n      upload.start_time = i * 4;\n      upload.end_time = i * 4 + 4;\n      upload.layouts = [testLayouts[i % testLayouts.length]];\n\n      modelSvc.cache(\"event\", upload);\n    }\n\n    var layouts = [\"mainFg\", \"altFg\", \"videoOverlay\"];\n    for (i = 0; i < 8; i++) {\n      var filltest = angular.copy(uploadStub);\n      filltest.layouts = [layouts[i % layouts.length]];\n      filltest._id = \"filltest-\" + i;\n      filltest.asset_id = \"asset2\";\n      filltest.start_time = i * 2;\n      filltest.end_time = i * 2 + 2;\n      filltest.templateUrl = \"templates/item/image-fill.html\";\n      filltest.styles.push(\"cover\");\n      modelSvc.cache(\"event\", filltest);\n\n    }\n\n    modelSvc.resolveEpisodeEvents(epId);\n    modelSvc.resolveEpisodeAssets(epId);\n\n  };\n  return svc;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/mockSvc.ts","/* Parses API data into player-acceptable format,\n and derives secondary data where necessary for performance/convenience/fun */\n\nimport { IAnnotators, Partial } from '../../interfaces';\nimport { createInstance, IAsset, ICustomer, IEpisode, INarrative, IScene, NEvent } from '../../models';\n\nexport interface IModelSvc {\n  episodes: { [episodeId: string]: any };\n  assets: { [assetId: string]: IAsset };\n  events: { [eventId: string]: NEvent };\n  containers: { [containerId: string]: any };\n  narratives: { [narrativeId: string]: any };\n  customers: { [customerId: string]: any };\n  getNarrativeByPathOrId(pathOrId: string): INarrative;\n  assocNarrativesWithCustomer(customer: ICustomer, narratives: INarrative[]): ICustomer;\n  cachedNarrativesByCustomer(customer: any): any;\n  getCustomersAsArray(): any[];\n  getNarrativesAsArray(): any[];\n  cache(cacheType: string, item: any): void;\n  deriveEpisode(episode: any): IEpisode;\n  deriveAsset(asset: any): any;\n  deriveContainer(container: any): any;\n  deriveEvent(event: Partial<NEvent>): NEvent;\n  setLanguageStrings(): void;\n  resolveEpisodeEvents(epId: string): IEpisode;\n  resolveEpisodeContainers(epId: string): void;\n  episode(epId: string): any;\n  episodeEvents(epId: string): NEvent[];\n  isOnExistingSceneStart(t: number): boolean;\n  getEpisodeScenes(): IScene[];\n  sceneAtEpisodeTime(epId: string, t: number): IScene;\n  scene(sceneId: string): IScene;\n  assocEventWithAsset(eventId: string, assetId: string): void;\n  resolveEpisodeAssets(episodeId: string): void;\n  addLandingScreen(episodeId: string): void;\n  addEndingScreen(episodeId: string): void;\n  isTranscoded(video: any): boolean;\n  mainVideoNewWindowUrl(\n    accessToken: string,\n    entityId: string,\n    timelineId?: string,\n    startAt?: number,\n    playerType?: 'episode' | 'editor' | 'producer'\n  ): string;\n}\n\nmodelSvc.$inject = ['$filter', '$location', 'ittUtils', 'config', 'appState', 'playbackService', 'urlService'];\nexport default function modelSvc($filter, $location, ittUtils, config, appState, playbackService, urlService) {\n  // const DEFAULT_EPISODE_TEMPLATE_URL = 'templates/episode/episode.html';\n  var svc: IModelSvc = Object.create(null);\n\n  svc.episodes = {};\n  svc.assets = {};\n  svc.events = {}; // NOTE svc.events contains scenes and items -- anything that happens during the episode timeline\n  svc.containers = {};\n  svc.narratives = {};\n  svc.customers = {};\n\n  // receives cacheTypes of episode, event, asset, and container.\n  // splits event into scenes and items.  Not sure yet whether we care about containers, discarding them for now.\n\n  // TODO? normalize items before cacheing: (annotation_image_id and link_image_id -> asset_id, etc)\n  //^^ NP-1310\n  // TODO discard unused fields before cacheing\n\n  // use angular.extend if an object already exists, so we don't lose existing bindings\n\n\n  svc.mainVideoNewWindowUrl = mainVideoNewWindowUrl;\n  function mainVideoNewWindowUrl(\n    accessToken: string,\n    entityId: string,\n    timelineId?: string,\n    startAt?: number,\n    playerType: 'episode' | 'producer' | 'editor'  = 'episode'): string {\n\n    const baseNewWindowEndpoint = config.apiDataBaseUrl + '/v1/new_window';\n    // if second id is present, first ID must be from a narrative\n    if (entityId && timelineId) {\n      return baseNewWindowEndpoint +\n        `?narrative=${entityId}&timeline=${timelineId}&access_token=${accessToken}&t=${startAt || 0}`;\n    } else {\n      return baseNewWindowEndpoint + `?${playerType}=${entityId}&access_token=${accessToken}&t=${startAt || 0}`;\n    }\n  }\n\n  svc.getNarrativeByPathOrId = function (pathOrId) {\n    var isMongoId = /^[0-9a-fA-F]{24}$/.test(pathOrId);\n    if (isMongoId) {\n      return svc.narratives[pathOrId];\n    }\n    //else loop and find the matching path slug passed in.\n    var n;\n    for (n in svc.narratives) {\n      if (svc.narratives.hasOwnProperty(n)) {\n        if (pathOrId === svc.narratives[n].path_slug.en) {\n          return svc.narratives[n];\n        }\n      }\n\n    }\n  };\n  //add subdomain to each narrative then cache\n  //add narratives to customer object then cache customer.\n  svc.assocNarrativesWithCustomer = assocNarrativesWithCustomer;\n  function assocNarrativesWithCustomer(customer: ICustomer, narratives: INarrative[]): ICustomer {\n    narratives.forEach(function (narrative) {\n      svc.cache('narrative', narrative);\n    });\n    customer.narratives = cachedNarrativesByCustomer(customer);\n    svc.cache('customer', customer);\n    // //remove any old customer references if narrative was changed to a different customer\n    // Object.keys(svc.customers)\n    //   .filter(function(key) {\n    //   return customer._id !== key;\n    // })\n    //   .forEach(function(customerId) {\n    //     var cust = svc.customers[customerId];\n    //     var custNarratives = cust.narratives;\n    //     var found;\n    //     if (ittUtils.existy(custNarratives) && custNarratives.length > 0 && narratives.length === 1) {\n    //       var narrative = svc.narratives[narratives[0]._id];\n    //       found = custNarratives.indexOf(narrative);\n    //       if (found !== -1) {\n    //         cust.narratives.splice(found, 1);\n    //         svc.cache('customer', cust);\n    //       }\n    //     }\n    //   });\n\n    return customer;\n  }\n\n  svc.cachedNarrativesByCustomer = cachedNarrativesByCustomer;\n  function cachedNarrativesByCustomer(customer: ICustomer): INarrative[] {\n    return Object.keys(svc.narratives).reduce(function (narratives, key) {\n      if (svc.narratives[key].customer_id === customer._id) {\n        narratives.push(svc.narratives[key]);\n      }\n      return narratives;\n    }, []);\n  }\n\n  svc.getCustomersAsArray = getCustomersAsArray;\n  function getCustomersAsArray() {\n    return Object.keys(svc.customers).map(function (c) {\n      return svc.customers[c];\n    });\n  }\n\n  svc.getNarrativesAsArray = getNarrativesAsArray;\n  function getNarrativesAsArray() {\n    return Object.keys(svc.narratives).map(function (n) {\n      return svc.narratives[n];\n    });\n  }\n\n  svc.cache = function (cacheType, item) {\n    if (cacheType === 'narrative') {\n      // NOTE no deriveNarrative used here, not needed so far\n      const instance = createInstance('Narrative', item);\n\n      if (instance.timelines && instance.timelines.length > 0) {\n        instance.timelines = instance.timelines.map(tl => createInstance('Timeline', tl));\n      }\n      console.log(\"cache nar?\", instance);\n\n      if (svc.narratives[item._id]) {\n        angular.extend(svc.narratives[item._id], instance);\n      } else {\n        svc.narratives[item._id] = angular.copy(instance);\n      }\n    }\n    if (cacheType === 'customer') {\n      const instance = createInstance('Customer', item);\n      // NOTE no deriveCustomer used here, not needed so far\n      if (svc.customers[item._id]) {\n        angular.extend(svc.customers[item._id], instance);\n      } else {\n        svc.customers[item._id] = angular.copy(instance);\n      }\n    }\n    if (cacheType === 'episode') {\n      const instance = createInstance('Episode', item);\n      if (svc.episodes[item._id]) {\n        angular.extend(svc.episodes[item._id], svc.deriveEpisode(angular.copy(instance)));\n      } else {\n        svc.episodes[item._id] = svc.deriveEpisode(angular.copy(instance));\n      }\n    } else if (cacheType === 'event') {\n      const instance = createInstance(item._type, item);\n      // TEMP fix for events without titles:\n      if (!item.title) {\n        item.title = {};\n      }\n      if (svc.events[item._id]) {\n        angular.extend(svc.events[item._id], svc.deriveEvent(angular.copy(instance)));\n      } else {\n        svc.events[item._id] = svc.deriveEvent(angular.copy(instance));\n      }\n    } else if (cacheType === 'asset') {\n      const instance = createInstance('Asset', item);\n      if (svc.assets[item._id]) {\n        angular.extend(svc.assets[item._id], svc.deriveAsset(angular.copy(instance)));\n      } else {\n        svc.assets[item._id] = svc.deriveAsset(angular.copy(instance));\n      }\n    } else if (cacheType === 'container') {\n      const instance = createInstance('Container', item);\n      if (svc.containers[item._id]) {\n        angular.extend(svc.containers[item._id], svc.deriveContainer(angular.copy(instance)));\n      } else {\n        svc.containers[item._id] = svc.deriveContainer(angular.copy(instance));\n      }\n\n    }\n  };\n\n  // svc.deriveFoo() are for efficiency precalculations.\n  // Input API data, output API data plus clientside-only convenience variables.\n  // Should call this after making any changes to the underlying data.\n\n  svc.deriveEpisode = function (episode) {\n    // console.log(\"deriveEpisode:\", episode);\n\n    angular.forEach(episode.languages, function (lang) {\n      if (lang.default) {\n        // console.log(\"FOUND DEFAULT LANGUAGE\", lang.code, appState.lang);\n        episode.defaultLanguage = lang.code;\n      }\n    });\n    if (episode.defaultLanguage === false) {\n      episode.defaultLanguage = 'en'; // last resort\n    }\n    svc.setLanguageStrings();\n\n    // For now, automatically add customer-specific styles to episode if there aren't other selections.\n    // (TODO Producer should do this automatically; this is for legacy episodes):\n    if (!episode.styles) {\n      episode.styles = [];\n    }\n\n    if (episode.title && svc.events['internal:landingscreen:' + episode._id]) {\n      svc.events['internal:landingscreen:' + episode._id].title = episode.title;\n      svc.events['internal:landingscreen:' + episode._id] = setLang(svc.events['internal:landingscreen:' + episode._id]);\n    }\n    if (episode.template) {\n      const doResizeIframe =\n        episode.template.displayName === 'Career Playbook'\n        || episode.template.displayName === 'Narrasys Professional';\n\n      if (episode.template && doResizeIframe) {\n        appState.resizeIframeReviewMode = true;\n      }\n    }\n\n    episode = setLang(episode);\n    return episode;\n  };\n\n  svc.deriveAsset = function (asset) {\n    let _asset = Object.assign({}, asset);\n    if (_asset._type === 'Asset::Video') {\n      _asset = urlService.resolveVideo(_asset);\n    }\n    if (_asset.url) {\n      // escape URLs for css background-image https://stackoverflow.com/q/25613552\n      _asset.cssBgUrl = _asset.url.replace(/\\\"/g, '\\\\\"');\n    }\n    _asset = setLang(_asset);\n    return _asset;\n  };\n\n  // TODO there are some hacky dependencies on existing templateUrls which really ought to become\n  // separate data fields in their own right:\n  //      isTranscript (for Annotations)\n  //      allowEmbed, noExternalLink, and targetTop (for Links)\n\n  /* TODO also we should merge the Link and Upload types, split those templates by file type instead of source,\n   and make all these data fields consistent:\n\n   Upload/link\n   title: Link text\n   (category)\n   required\n   description: Description\n   displayTime: Timestamp\n   allowEmbed: is/isn't frameable\n   targetTop: link should point to window.top (for end-of-episode links back to LTI host)\n   url: primary URL\n   url_type: file type\n   (?) secondary image URL (icon, thumbnail, etc)\n\n   Annotation\n   Speaker\n   text\n   secondary image URL (speaker icon)\n   */\n\n  svc.deriveContainer = function (container) {\n\n    // console.log(\"deriving container\", container);\n\n    container.haveNotLoadedChildData = false; // not sure yet if this is necessary\n    // first sort the children:\n    if (container.children && container.children.length > 0) {\n      // When we populate sort_order, we can remove this:\n      container.children = container.children.sort(function (a, b) {\n        return (a.name.en > b.name.en) ? 1 : -1; // WARN always sorted by english\n      });\n      // This is the real one (for now sort_order always is zero, so this sort will have no effect):\n      container.children = container.children.sort(function (a, b) {\n        return a.sort_order - b.sort_order;\n      });\n\n      var childRefs = [];\n      angular.forEach(container.children, function (child) {\n        const instance = createInstance('Container', child);\n        if (svc.containers[child._id]) {\n          childRefs.push(svc.containers[child._id]);\n        } else {\n          instance.haveNotLoadedChildData = true; // not sure yet if this is necessary\n          svc.containers[child._id] = angular.copy(setLang(instance));\n        }\n\n      });\n\n      container.loadedChildData = true;\n    } else {\n      container.children = [];\n    }\n    return setLang(container);\n  };\n\n  var isTranscript = function (item) {\n    if (typeof (item) !== 'undefined') {\n      if (item._type === 'Annotation' && item.templateUrl.match(/transcript/)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  };\n\n  svc.deriveEvent = function (event: Partial<NEvent>): NEvent {\n    event = setLang(event);\n    if (event._type !== 'Scene') {\n\n      event.searchableText = (event.display_annotation || event.display_description) + ' ' + (event.display_title || event.display_annotator);\n      if (!event.cosmetic) {\n        event.cosmetic = false; // search needs this to be explicit\n      }\n      if (event.sxs) { // HACK can probably be safely removed?\n        event.cosmetic = false;\n      }\n      if (!event.templateUrl) {\n        event.templateUrl = '';\n      }\n\n      if (event.avatar_id) {\n        if (!svc.assets[event.avatar_id]) { // not sure if necessary here.  Should move this into a getter function for assets anyway\n          svc.assets[event.avatar_id] = {};\n        }\n        event.avatar = svc.assets[event.avatar_id];\n      }\n\n\n      if (svc.episodes[event.cur_episode_id] && svc.episodes[event.cur_episode_id].template.displayName === 'University of Southern California') {\n        // HACKS AHOY\n        // USC made a bunch of change requests post-release; this was the most expedient way\n        // to deal with them. Sorry!\n\n        // I don't know why this situation occurs, but it does:\n        if (event.templateUrl === '') {\n          event.templateUrl = 'templates/item/usc-badges.html';\n        }\n\n        if (event._type === 'Link') {\n          if (event.templateUrl === 'templates/transmedia-link-default.html') {\n            // they don't want any embedded links (shrug)\n            event.templateUrl = 'templates/transmedia-link-noembed.html';\n          }\n          if (event.display_title.match(/ACTIVITY/)) {\n            // Unnecessary explanatory text\n            event.display_description = event.display_description + '<div class=\"uscWindowFgOnly\">Remember! You need to complete this activity to earn a Friends of USC Scholars badge. (When you’re finished - Come back to this page and click <b>Continue</b>).<br><br>If you’d rather <b>not</b> do the activity, clicking Continue will take you back to the micro-lesson and you can decide where you want to go from there.</div>';\n          }\n          if (event.display_title.match(/Haven't Registered/)) {\n            // hide this event for non-guest users\n            event.styles = event.styles ? event.styles : [];\n            event.styles.push('uscHackOnlyGuests'); // will be used in discover mode (so we don't have to explicitly include it in the scene templates)\n            event.uscReviewModeHack = 'uscHackOnlyGuests'; // ...except the review mode template, because item styles don't show up there\n          }\n          if (event.display_title.match(/Connect with/)) {\n            // hide this event unless episode badge is achieved\n            event.styles = event.styles ? event.styles : [];\n            event.styles.push('uscHackOnlyBadge'); // will be used in discover mode (so we don't have to explicitly include it in the scene templates)\n            event.uscReviewModeHack = 'uscHackOnlyBadge'; // ...except the review mode template, because item styles don't show up there\n          }\n        }\n        // END of USC hacks\n      }\n\n      //items\n\n      // clear derived flags before re-setting them (in case we're editing an existing item):\n      event.isContent = false;\n      event.isTranscript = false;\n      // event.noEmbed = event.noEmbed === undefined ? false : event.noEmbed;\n      event.mixedContent = false;\n      event.targetTop = false;\n      event.isVideoUrl = false;\n\n      // determine whether the item is in a regular content pane.\n      // items only have one layout (scenes may have more than one...)\n      if (event.layouts) {\n        event.layoutCss = event.layouts[0];\n        if (event.layouts[0] === 'inline' || event.layouts[0].match(/sidebar/) || event.layouts[0].match(/burst/)) {\n          event.isContent = true;\n        }\n      } else {\n        // no layout, therefore inline content\n        event.isContent = true;\n      }\n\n      // Old templates which (TODO) should have been database fields instead:\n      if (isTranscript(event)) {\n        event.isTranscript = true;\n      }\n\n      var isHttps = $location.protocol() === 'https';\n      if (event._type === 'Link' && event.url && event.url.match(/^http:\\/\\//) && isHttps) {\n        event.mixedContent = true;\n        event.showInlineDetail = false;\n      }\n\n      if (event._type === 'Link') {\n        if (urlService.isVideoUrl(event.url)) {\n          event.isVideoUrl = true;\n        }\n      }\n\n      if (event._type === 'Link' && event.url && /mailto/.test(event.url)) {\n        // event.noEmbed = true;\n        event.target = '_blank';\n      }\n\n      if (event.templateUrl.match(/frameicide/)) {\n        event.targetTop = true;\n      }\n    }\n\n    // Finally one more super-fragile HACK for producer:\n    if (!event.producerItemType) {\n      if (event._type === 'Scene') {\n        event.producerItemType = 'scene';\n      } else if (event._type === 'Annotation') {\n        if (event.templateUrl.match(/transcript/)) {\n          event.producerItemType = 'transcript';\n        } else {\n          event.producerItemType = 'annotation';\n        }\n      } else if (event._type === 'Upload') {\n        if (event.templateUrl.match(/file/)) { // HACK\n          event.producerItemType = 'file';\n        } else {\n          event.producerItemType = 'image';\n        }\n      } else if (event._type === 'Link') {\n        if (event.templateUrl.match(/video/)) {\n          event.producerItemType = 'video';\n        } else {\n          event.producerItemType = 'link';\n        }\n      } else if (event._type === 'Plugin') {\n        if (event.templateUrl.match(/question/)) {\n          event.producerItemType = 'question';\n        }\n      } else if (event._type === 'Chapter') {\n        event.producerItemType = 'chapter';\n      }\n      if (!event.producerItemType) {\n        console.warn('Couldn\\'t determine a producerItemType for ', event.templateUrl);\n      }\n    }\n\n    //it is helpful for UI purposes to know what type of annotation an event is\n    //the IF statement above only runs if producerItemType has not be set.\n    //when creating a new event, generateEmptyItem (in EditCtrl) will set producerItemType\n    //this code handles the case AFTER producerItemType has been set, and the event is\n    //an annotation, and the user switched the annotation type.\n    switch (event.producerItemType) {\n      case 'chapter':\n        event.isContent = false;\n        break;\n      case 'annotation':\n        //set to false off the bat, then flip to true for each case\n        event.isPq = event.isHeader = event.isLongText = event.isDef = false;\n        if (/pullquote/.test(event.templateUrl)) {\n          event.isPq = true;\n        }\n        if (/text-h1|text-h2/.test(event.templateUrl)) {\n          event.isHeader = true;\n        }\n\n        if (/text-transmedia/.test(event.templateUrl)) {\n          event.isLongText = true;\n        }\n\n        if (/text-definition/) {\n          event.isDef = true;\n        }\n        break;\n    }\n\n    event.displayStartTime = $filter('asTime')(event.start_time);\n    return event;\n  };\n\n  var setLang = function (obj) {\n    // TODO: keywords, customers/oauth2_message\n    // TODO use episode default language instead of 'en'\n    var langToSet = (appState.lang) ? appState.lang : 'en';\n    angular.forEach(['title', 'annotator', 'annotation', 'description', 'name'], function (field) {\n      if (obj[field]) {\n        if (typeof (obj[field]) === 'string') {\n          // TODO can delete this after all data has been migrated to object form\n          obj['display_' + field] = obj[field];\n        } else {\n          if (obj[field][langToSet]) {\n            obj['display_' + field] = obj[field][langToSet];\n          } else {\n            obj['display_' + field] = obj[field].en; // TODO use episode default language instead of 'en'\n          }\n        }\n      }\n    });\n    return obj;\n  };\n\n  svc.setLanguageStrings = function () {\n    angular.forEach(svc.events, function (evt) {\n      evt = setLang(evt);\n    });\n    angular.forEach(svc.episodes, function (ep) {\n      ep = setLang(ep);\n    });\n    angular.forEach(svc.containers, function (container) {\n      container = setLang(container);\n    });\n    // todo:  containers\n  };\n\n  //for items with the same time, ensure hierarchy of items\n  //in the following order:\n  // 1. Annotations:\n  //  \t- H1 > H2 > isTranscript\n  // 3. Links\n  // 4. Uploads\n  //\t\t- Document > Image\n  //5. all other annotations\n  function _sortItems(items) {\n    return items.sort(function (a, b) {\n      if (a.start_time === b.start_time) {\n        if (a.producerItemType === 'chapter') {\n          return -1;\n        } else if (b.producerItemType === 'chapter') {\n          return 1;\n        } else if (a.chapter_marker === true) {\n          return -1;\n        } else if (b.chapter_marker === true) {\n          return 1;\n        } else if (a.templateUrl === 'templates/item/text-h1.html') {\n          return -1;\n        } else if (b.templateUrl === 'templates/item/text-h1.html') {\n          return 1;\n        } else if (a.templateUrl === 'templates/item/text-h2.html') {\n          return -1;\n        } else if (b.templateUrl === 'templates/item/text-h2.html') {\n          return 1;\n        } else if (a.isTranscript) {\n          return -1;\n        } else if (b.isTranscript) {\n          return 1;\n        } else if (a._type === 'Link') {\n          return -1;\n        } else if (b._type === 'Link') {\n          return 1;\n        } else if (a._type === 'Upload') {\n          if (a.producerItemType === 'file' || b._type === 'Annotation') {\n            return -1;\n          } else {\n            return 1;\n          }\n        } else if (b._type === 'Upload') {\n          return 1;\n        } else {\n          return -1;\n        }\n      }\n      else {\n        return a.start_time - b.start_time;\n      }\n    });\n  }\n\n  /*  Any changes to any scene or item data must call svc.resolveEpisodeEvents afterwards. It sets:\n   - episode.scenes\n   - episode.items\n   - scene.items\n   - item.scene_id\n   - episode.annotators (for use in producer)\n\n   NOTE: this currently calls cascadeStyles on episodes and events as a side effect.\n   deriveEvent() and deriveEpisode() would be a theoretically more consistent place for that, but\n   cascadeStyles depends on the episode structure we're building here, so it feels dangerous to separate them.\n\n   // HACK magic numbers galore:\n   endingscene cuts the duration of the last scene by 0.1 seconds\n   startingscreen extends from below zero to 0.01s\n\n   */\n  svc.resolveEpisodeEvents = function (epId: string): IEpisode {\n    // console.log(\"resolveEpisodeEvents\");\n    //Build up child arrays: episode->scene->item\n    var scenes = [];\n    var items = [];\n    var chapters = [];\n    var episode = svc.episodes[epId];\n    angular.forEach(svc.events, function (event) {\n      if (event.cur_episode_id !== epId) {\n        return;\n      }\n\n      if (event._type === 'Scene') {\n        scenes.push(event);\n      } else if (event._type === 'Chapter') {\n        chapters.push(event);\n        items.push(event);\n      } else {\n        items.push(event);\n      }\n\n    });\n\n    // collect a list of all the speakers/annotators in the episode.\n    // Try to merge partially-translated annotator names into the more fully-translated versions.\n    // This is imperfect -- a few will slip through if there is a missing translation in the default language -- but good enough for now\n    // TODO replace all of this, have the API keep track of each annotator as a real, separate entity\n    var annotators: IAnnotators = {};\n    angular.forEach(items, function (event) {\n      if (event._type === 'Annotation' && event.chapter_marker === true) {\n        chapters.push(event);\n      }\n\n      if (event._type === 'Annotation' && event.annotator) {\n        // This is kind of a mess\n        // Use the default language as the key; merge any other languages into that key\n        var defaultLanguage = episode.defaultLanguage || 'en';\n        var key = event.annotator[defaultLanguage];\n\n        if (key === undefined) {\n          // this annotator doesn't have a translation in the default language, so use its first language instead\n          key = event.annotator[Object.keys(event.annotator)\n            .sort()[0]];\n        }\n\n        if (annotators[key]) {\n          // merge other translations of the same name into this one\n          annotators[key].name = angular.extend(annotators[key].name, event.annotator);\n          if (!annotators[key].annotation_image_id) {\n            annotators[key].annotation_image_id = event.annotation_image_id;\n          }\n        } else {\n          annotators[key] = {\n            'name': event.annotator,\n            'annotation_image_id': event.annotation_image_id\n          };\n        }\n\n        // construct a description containing all languages, starting with the default\n        var langs = Object.keys(annotators[key].name)\n          .sort();\n        var longKey = annotators[key].name[defaultLanguage] || '(untranslated)';\n        for (var i = 0; i < langs.length; i++) {\n          if (langs[i] !== defaultLanguage) {\n            longKey = longKey + ' / ' + annotators[key].name[langs[i]];\n          }\n        }\n        annotators[key].key = longKey;\n      }\n    });\n    episode.annotators = annotators;\n    episode.chapters = chapters;\n\n    // WARN Chrome doesn't stable sort!   Don't depend on simultaneous events staying in the same order\n    // attach array of scenes to the episode.\n    // Note these are references to objects in svc.events[]; to change item data, do it in svc.events[] instead of here.\n    var duration = 0;\n    if (episode.masterAsset) {\n      duration = episode.masterAsset.duration;\n      angular.forEach(episode.scenes, function (scene) {\n        if (scene.start_time > duration) {\n          scene.start_time = duration - 0.2; // last resort HACK to catch bad scene data\n        }\n      });\n    }\n\n    episode.scenes = scenes.sort(function (a, b) {\n      if (a._id.indexOf('internal:start') > -1 || b._id.indexOf('internal:end') > -1) {\n        return -1;\n      }\n      if (b._id.indexOf('internal:start') > -1 || a._id.indexOf('internal:end') > -1) {\n        return 1;\n      }\n      return a.start_time - b.start_time;\n    });\n\n    // and a redundant array of child items to the episode for convenience (they're just references, so it's not like we're wasting a lot of space)\n\n    episode.chapters = chapters.sort(function (a, b) {\n      return a.start_time - b.start_time;\n    });\n\n    // Fix bad event timing data.  (see also svc.deriveEvent())\n    angular.forEach(items, function (event) {\n\n      // We have some events whose start time is beyond the episode duration; they were winding up attached to the endingscene (and therefore invisible)\n      // HACK just shove those into the end of the last (real) scene with a short duration\n      if (duration > 0) {\n        if (event.start_time > duration - 0.11) { // the -0.11 ensures they don't get attached to the ending screen\n          event.start_time = duration - 0.2;\n          event.end_time = duration - 0.1;\n        }\n      }\n\n      // HACK keep events from being attached to landing screen if there is one\n      if (event.start_time < 0.01) {\n        event.start_time = 0.01;\n        if (event.end_time < 0.01) {\n          event.end_time = 0.01;\n        }\n      }\n\n      // Some events have been stored with end times before their start times.\n      if (event.start_time > event.end_time) {\n        event.end_time = event.start_time;\n      }\n    });\n\n    episode.items = _sortItems(items);\n    // console.log('after sort \\n', items);\n    // ensure scenes are contiguous. Including the ending scene as end_times are relied on in producer in any editable scene.\n    // Note that this means we explicitly ignore scenes' declared end_time; instead we force it to the next scene's start (or the video end)\n    for (var i = 1, len = episode.scenes.length; i < len; i++) {\n      if (i === len - 1) {\n        if (duration !== 0) {\n          episode.scenes[i].end_time = duration;\n        }\n      } else {\n        episode.scenes[i].end_time = episode.scenes[i + 1].start_time;\n      }\n    }\n\n    var itemsIndex = 0;\n    // assign items to scenes (give them a scene_id and attach references to the scene's items[]:\n    //angular.forEach(scenes, function (scene) {\n    for (var y = 0, scenesLength = scenes.length; y < scenesLength; y++) {\n      var scene = scenes[y];\n      var sceneItems = [];\n      var previousTranscript = {};\n      for (var x = itemsIndex, itemsLength = items.length; x < itemsLength; x++) {\n        var event = items[x];\n\n        //angular.forEach(items, function (event) {\n        /* possible cases:\n         start and end are within the scene: put it in this scene\n         start is within this scene, end is after this scene:\n         if item start is close to the scene end, change item start to next scene start time. The next loop will assign it to that scene\n         if item start is not close to the scene end, change item end to scene end, assign it to this scene.\n         start is before this scene, end is within this scene: will have already been fixed by a previous loop\n         start is after this scene: let the next loop take care of it\n         */\n        if (event.start_time >= scene.start_time && event.start_time < scene.end_time) {\n          if (isTranscript(event)) {\n            // console.log('transcript event', event);\n            //the current event is a transcript and we have a transcript (in this scene) before it that has incorrectly set its end_time to the scene end_time.\n            if (previousTranscript.end_time === scene.end_time) {\n              // console.log('adjusting according to previousTranscript');\n              //end_time may have been empty before the last itter of loop\n              previousTranscript.end_time = event.start_time;\n            }\n            previousTranscript = event;\n          }\n\n          if (event.end_time <= scene.end_time) {\n            // entirely within scene\n            svc.events[event._id].scene_id = scene._id;\n            sceneItems.push(event);\n          } else {\n\n            // end time is in next scene.  Check if start time is close to scene end, if so bump to next scene, otherwise truncate the item to fit in this one\n            if (scene.end_time - 0.25 < event.start_time) {\n              if (y !== scenesLength - 1) {\n                // bump to next scene\n                event.start_time = scene.end_time;\n              } else {\n                //in last scene\n                event.end_time = scene.end_time;\n                event.scene_id = scene._id;\n                sceneItems.push(event);\n              }\n            } else {\n              // truncate and add to this one\n              event.end_time = scene.end_time;\n              event.scene_id = scene._id;\n              sceneItems.push(event);\n            }\n          }\n        }\n        // This optimization was dropping some events:\n        // if (event.start_time > scene.end_time) {\n        // \titemsIndex = x; //set the current index to i, no need to loop through things we've already seen\n        // \tbreak; // no need to continue checking events after this point as no events will be added to this scene after this point\n        // }\n\n      }\n      // attach array of items to the scene event:\n      // Note these items are references to objects in svc.events[]; to change item data, do it in svc.events[] instead of here.\n      svc.events[scene._id].items = _sortItems(sceneItems);\n    }\n    // Now that we have the structure, calculate event styles (for scenes and items:)\n    episode.styleCss = cascadeStyles(episode);\n    // the professional css class only should be applied on the ittEpisode template div\n    // episode.styleCss is used elsewhere and with the professional class it causes issues in some cases\n    episode.templateCss = episode.styleCss;\n    if (episode instanceof IEpisode && episode.template.pro_episode_template) {\n      episode.templateCss = 'professional ' + episode.templateCss;\n    }\n\n    if (episode.template && episode.template.displayName === 'Wiley') {\n      episode.templateCss += ' wiley-endscreentext ';\n    }\n    angular.forEach(svc.events, function (event) {\n      if (event.cur_episode_id !== epId) {\n        return;\n      }\n      event.styleCss = cascadeStyles(event);\n      var isImgPlain = event.templateUrl === 'templates/item/image-plain.html';\n      var isInlineImgWText = event.templateUrl === 'templates/item/image-inline-withtext.html';\n      var isImgCap = event.templateUrl === 'templates/item/image-caption-sliding.html';\n      var isImgThumb = event.templateUrl === 'templates/item/image-thumbnail.html';\n      var isBgImage = event.templateUrl === 'templates/item/image-fill.html';\n\n      var isLongText = event.templateUrl === 'templates/item/text-transmedia.html';\n      var isDef = event.templateUrl === 'templates/item/text-definition.html';\n      var isH1 = event.templateUrl === 'templates/item/text-h1.html';\n      var isH2 = event.templateUrl === 'templates/item/text-h2.html';\n      var isPq = event.templateUrl === 'templates/item/pullquote-noattrib.html' || event.templateUrl === 'templates/item/pullquote.html';\n      var potentialHighlight = ['highlightSolid', 'highlightBorder', 'highlightSide', 'highlightBloom', 'highlightTilt', 'highlightNone'];\n      var potentialTransitions = ['transitionFade', 'transitionPop', 'transitionNone', 'transitionSlideL', 'transitionSlideR'];\n      var currentScene;\n\n      if (event._type !== 'Scene') {\n        currentScene = svc.scene(event.scene_id);\n        if (episode.styles.indexOf('timestampNone') === -1 && episode.styles.indexOf('timestampInline') === -1 &&\n          (!ittUtils.existy(currentScene) || !ittUtils.existy(currentScene.styles) || (currentScene.styles.indexOf('timestampNone') === -1 && currentScene.styles.indexOf('timestampInline') === -1) )) {\n          if (isImgPlain || isLongText || isDef) {\n            if (!ittUtils.existy(event.styles) || (event.styles.indexOf('timestampInline') === -1 && event.styles.indexOf('timestampNone') === -1)) {\n              event.styleCss += ' timestampNone';\n            }\n          }\n        }\n        if (isH1 || isH2 || isPq) {\n          event.styleCss += ' timestampNone';\n        }\n\n        if ((!ittUtils.existy(event.layouts) || event.layouts.indexOf('showCurrent') === -1) &&\n          ittUtils.intersection(episode.styles, potentialHighlight).length === 0 &&\n          (!ittUtils.existy(currentScene) || !ittUtils.existy(currentScene.styles) || ittUtils.intersection(currentScene.styles, potentialHighlight).length === 0) &&\n          (!ittUtils.existy(event.styles) || ittUtils.intersection(event.styles, potentialHighlight).length === 0)) {\n          event.styleCss += ' highlightSolid';\n        }\n\n        if (ittUtils.intersection(episode.styles, potentialTransitions).length === 0 &&\n          (!ittUtils.existy(currentScene) || !ittUtils.existy(currentScene.styles) || ittUtils.intersection(currentScene.styles, potentialTransitions).length === 0) &&\n          (!ittUtils.existy(event.styles) || ittUtils.intersection(event.styles, potentialTransitions).length === 0)) {\n          if (isImgPlain || isInlineImgWText || isImgCap || isImgThumb || isPq || isBgImage) {\n            if (!ittUtils.existy(event.layouts) || event.layouts.indexOf('videoOverlay') !== -1) {\n              event.styleCss += ' transitionFade';\n            } else {\n              event.styleCss += ' transitionPop';\n            }\n          } else {\n            event.styleCss += ' transitionSlideL';\n          }\n        }\n\n      }\n\n      if (event.layouts) {\n        event.styleCss = event.styleCss + ' ' + event.layouts.join(' ');\n      }\n\n      event.styleCss = event.styleCss.replace(/timestampInline/, '');\n    });\n\n    return episode;\n  };\n\n  svc.resolveEpisodeContainers = function (epId) {\n    // Constructs the episode's parents[] array, up to its navigation depth plus (skipping the episode container itself)\n    // Also sets the episode's nextEpisodeContainer and prevEpisodeContainer\n\n    // all parent containers should have been loaded by the time this is called, so we don't need to worry about asynch at each step\n    // console.log(\"resolveEpisodeContainers\", epId);\n    var episode = svc.episodes[epId];\n    episode.parents = [];\n    delete episode.previousEpisodeContainer;\n    delete episode.nextEpisodeContainer;\n    // if (episode.navigation_depth > 0) {\n    // \tsetParents(Number(episode.navigation_depth) + 1, epId, episode.container_id);\n    // } else {\n    episode.navigation_depth = 0;\n    // }\n  };\n\n  /*\n   var setParents = function (depth, epId, containerId) {\n\n\n   // console.log(\"setParents\", depth, epId, containerId);\n   var episode = svc.episodes[epId];\n\n   // THis will build up the parents array backwards, starting at the end\n   if (depth <= episode.navigation_depth) { // skip the episode container\n   episode.parents[depth - 1] = svc.containers[containerId];\n   }\n\n   if (depth === episode.navigation_depth) {\n   // as long as we're at the sibling level, get the next and previous episodes\n   // (But only within the session: this won't let us find e.g. the previous episode from S4E1; that's TODO)\n   for (var i = 0; i < svc.containers[containerId].children.length; i++) {\n   var c = svc.containers[containerId].children[i];\n   if (c.episodes[0] === epId) {\n   if (i > 0) {\n   // find the previous 'Published' episode\n   for (var j = i - 1; j > -1; j--) {\n   if (svc.containers[svc.containers[containerId].children[j]._id].status === 'Published') {\n   episode.previousEpisodeContainer = svc.containers[svc.containers[containerId].children[j]._id];\n   break;\n   }\n   }\n   }\n   if (i < svc.containers[containerId].children.length - 1) {\n   for (var k = i + 1; k < svc.containers[containerId].children.length; k++) {\n   if (svc.containers[svc.containers[containerId].children[k]._id].status === 'Published') {\n   episode.nextEpisodeContainer = svc.containers[svc.containers[containerId].children[k]._id];\n   break;\n   }\n   }\n   }\n   }\n   }\n   }\n\n   // iterate\n   if (depth > 1) {\n   setParents(depth - 1, epId, svc.containers[containerId].parent_id);\n   }\n\n   };\n   */\n\n  svc.episode = function (epId) {\n    if (!svc.episodes[epId]) {\n      // console.warn('called modelSvc.episode for a nonexistent ID', epId);\n    }\n    return svc.episodes[epId];\n  };\n\n  // returns all scenes and items for a given episode\n  svc.episodeEvents = function (epId) {\n    // console.log(\"modelSvc.episodeEvents\");\n    var ret = [];\n    angular.forEach(svc.events, function (event) {\n      if (event.cur_episode_id !== epId) {\n        return;\n      }\n      ret.push(event);\n    });\n    return ret;\n  };\n\n  svc.isOnExistingSceneStart = isOnExistingSceneStart;\n  function isOnExistingSceneStart(t) {\n    return getEpisodeScenes().some(function (scene) {\n      return scene.start_time === ittUtils.parseTime(t);\n    });\n  }\n\n  svc.getEpisodeScenes = getEpisodeScenes;\n  function getEpisodeScenes() {\n    return Object.keys(svc.events).reduce(function (scenes, key) {\n      if (svc.events[key]._type === 'Scene' && svc.events[key].episode_id === appState.episodeId) {\n        scenes.push(svc.events[key]);\n      }\n      return scenes;\n    }, []);\n  }\n\n  // returns whichever scene is current for the given time.\n  svc.sceneAtEpisodeTime = function (epId, t) {\n    t = t || playbackService.getMetaProp('time');\n    var scenes = svc.episodes[epId].scenes;\n    for (var i = 0; i < scenes.length; i++) {\n      if (scenes[i].start_time <= t && scenes[i].end_time > t) {\n        return scenes[i];\n      }\n    }\n  };\n\n  svc.scene = function (sceneId) {\n    // console.log(\"modelsvc.scene: \", sceneId);\n    if (!svc.events[sceneId]) {\n      // console.warn('called modelSvc.scene for a nonexistent ID', sceneId);\n    }\n    return svc.events[sceneId];\n  };\n\n  // Squish an episode, scene or item's episode styles, scene styles, and styles into a single styleCss string.\n  // Styles with these prefixes are the only ones that get passed down to children, and only if there isn't\n  // one with the same prefix on the child.\n  // typography, color, highlight, timestamp, transition\n  var cascadeStyles = function (thing) {\n    var styleCategories = { // used to keep track of what categories the thing is already using:\n      'typography': false,\n      'color': false,\n      'highlight': false,\n      'timestamp': false,\n      'transition': false\n    };\n    var cssArr = [];\n\n    // start with the thing's own styles\n\n    angular.forEach(thing.styles, function (style) {\n      cssArr.push(style); // keep all styles; not just the ones in a styleCategory\n      angular.forEach(styleCategories, function (categoryValue, categoryName) {\n        if (style.indexOf(categoryName) === 0) {\n          styleCategories[categoryName] = style;\n        }\n      });\n    });\n\n    // add each sceneStyle, only if it is in a styleCategory the thing isn't already using\n    if (thing.scene_id) {\n      var sceneStyles = svc.events[thing.scene_id].styles;\n      angular.forEach(sceneStyles, function (style) {\n        angular.forEach(styleCategories, function (categoryValue, categoryName) {\n          if (!styleCategories[categoryName] && style.indexOf(categoryName) === 0) {\n            cssArr.push(style);\n            styleCategories[categoryName] = style;\n          }\n        });\n      });\n    }\n\n\n    // if (thing instanceof IEpisode) {\n    //   // TODO: add episode namespace until db work is implemented\n    //   cssArr.push(thing.template_data.cssClass);\n    // }\n\n    // add each episodeStyle, only if it is in a styleCategory the thing isn't already using\n    if (thing.cur_episode_id) {\n      var episodeStyles = svc.episodes[thing.cur_episode_id].styles;\n      angular.forEach(episodeStyles, function (style) {\n        angular.forEach(styleCategories, function (categoryValue, categoryName) {\n          if (!styleCategories[categoryName] && style.indexOf(categoryName) === 0) {\n            cssArr.push(style);\n          }\n        });\n      });\n    }\n\n    // TEMPORARY: force bg items to transitionFade\n    if ((thing._type !== 'Scene') && !thing.isContent && thing.layouts && thing.layouts[0].match(/Bg/)) {\n      for (var i = 0; i < cssArr.length; i++) {\n        if (cssArr[i].match(/transition/) && cssArr[i] !== 'transitionNone') {\n          cssArr[i] = 'transitionFade';\n        }\n      }\n    }\n\n    return cssArr.join(' ');\n  };\n\n  svc.assocEventWithAsset = assocEventWithAsset;\n  function assocEventWithAsset(eventId, assetId) {\n    if (svc.events[eventId] && svc.assets[assetId]) {\n      svc.events[eventId].asset = svc.assets[assetId];\n    }\n  }\n\n  svc.resolveEpisodeAssets = function (episodeId) {\n    // console.log(\"resolveEpisodeAssets\");\n    // attaches assets to svc.events\n    angular.forEach(svc.events, function (item) {\n      if (item.cur_episode_id !== episodeId) {\n        return;\n      }\n      var assetId = item.asset_id || item.link_image_id || item.annotation_image_id;\n      if (!assetId) {\n        return;\n      }\n      if (svc.assets[assetId]) {\n        svc.events[item._id].asset = svc.assets[assetId];\n      }\n    });\n    // Do episode's master asset and poster, too.  If they're not here, do nothing; this will get called again after assets load\n    if (svc.episodes[episodeId]) {\n      var master_asset_id = svc.episodes[episodeId].master_asset_id;\n      if (master_asset_id) {\n        if (svc.assets[master_asset_id]) {\n          svc.episodes[episodeId].masterAsset = svc.assets[master_asset_id];\n        }\n      }\n      var poster_frame_id = svc.episodes[episodeId].poster_frame_id;\n      if (poster_frame_id) {\n        if (svc.assets[poster_frame_id]) {\n          svc.episodes[episodeId].poster = svc.assets[poster_frame_id];\n        }\n      }\n    }\n  };\n\n  // TODO: Future episodes should have this as an available scene template instead\n  svc.addLandingScreen = function (episodeId) {\n    // console.log(\"add landing screen\", episodeId);\n    // create a new scene event for this episod\n    svc.events['internal:landingscreen:' + episodeId] = createInstance('Scene', {\n      '_id': 'internal:landingscreen:' + episodeId,\n      '_type': 'Scene',\n      '_internal': true,\n      'templateUrl': 'templates/scene/landingscreen.html',\n      'cur_episode_id': episodeId,\n      'episode_id': episodeId,\n      'start_time': -0.01,\n      // enforce its firstness; a start time of zero might sort after the first scene which also starts at zero\n      'end_time': 0.01\n    });\n  };\n\n  // Don't call this until the master asset exists and episode events have loaded!\n  svc.addEndingScreen = function (episodeId) {\n    // console.log(\"addEndingScreen\", svc.episodes[episodeId].scenes);\n    var episode = svc.episodes[episodeId];\n\n    if (!episode || !episode.scenes) {\n      // console.warn('addEndingScreen called on an episode without scenes');\n      return;\n    }\n\n    if (!episode.masterAsset) {\n      console.warn('No master asset in episode...');\n      return;\n    }\n\n    //may not be sorted... so sort them\n    episode.scenes = episode.scenes.sort(function (a, b) {\n      return a.start_time - b.start_time;\n    });\n    var lastScene = episode.scenes[episode.scenes.length - 1];\n    if (lastScene._id.match(/internal:endingscreen/)) {\n      // console.error('Attempted to add an ending screen twice');\n      return;\n    }\n\n    var duration = parseFloat(episode.masterAsset.duration); // HACK\n\n    //coerce end of last scene (and its items) to match video duration:\n    lastScene.end_time = duration - 0.1;\n    angular.forEach(lastScene.items, function (item) {\n      if (item.end_time > duration - 0.1) {\n        item.end_time = duration - 0.1;\n      }\n    });\n    // create a new scene event for this episode\n    svc.events['internal:endingscreen:' + episodeId] = createInstance('Scene',{\n      '_id': 'internal:endingscreen:' + episodeId,\n      '_type': 'Scene',\n      '_internal': true,\n      'templateUrl': 'templates/scene/endingscreen.html',\n      'cur_episode_id': episodeId,\n      'start_time': duration - 0.1,\n      'end_time': duration\n    });\n    svc.events['internal:endingscreen:' + episodeId] = setLang(svc.events['internal:endingscreen:' + episodeId]);\n    svc.resolveEpisodeEvents(episodeId);\n  };\n\n  // TODO get rid of this; really wasteful to be checking this constantly, it's only useful\n  //  right after a master asset upload  (put it in ittVideo pollInterval() instead)\n  svc.isTranscoded = function (video) {\n    if (video.mediaSrcArr.length > 0) {\n      return true;\n    }\n    return false;\n  };\n\n  if (config.debugInBrowser) {\n    console.log('Event cache:', svc.events);\n    console.log('Asset cache:', svc.assets);\n    console.log('Container cache:', svc.containers);\n    console.log('Episode cache:', svc.episodes);\n    console.log('Narrative cache:', svc.narratives);\n    console.log('Customer cache:', svc.customers);\n  }\n  return svc;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/modelSvc/modelSvc.ts","/**\n * Created by githop on 10/24/16.\n */\n\nimport {IPlayerManager, IUrlService, IWistiaPlayerManager} from '../../interfaces';\n\n/**\n * @ngdoc service\n * @name iTT.service:playbackService\n * @description\n * playbackService exports an interface for the timelineSvc and consumes the interfaces exported from\n * the playerManagers. The exported methods of the playbackService are called by timelineSvc or ittVideo directive.\n *\n * Videos in the app (either the main video or embeds) are kept track of using the db record _id. See the _players\n * object in the playerManagers for an example.\n *\n * Most of the exported playback methods (seek, play, pause...etc) accept an optional playerId param. If\n * left blank the playerId will be set to the id of the episode.masterAsset, aka the main video. This case is used\n * in mostly the timlineSvc, (as it syncs the main video with our episode events) and to query state of video\n * playback in the UI.\n * ```\n *  //no input parameter, will command main video.\n *  //sending a command\n *  playbackService.playVideo()\n *  //querying playback state\n *  playbackService.getMetaprop('duration');\n * ```\n * @requires $interval\n * @requires iTT.service:youTubePlayerManager\n * @requires iTT.service:html5PlayerManager\n * @requires iTT.service:ittUtils\n * @requires iTT.service:urlService\n * @requires PLAYERSTATES_WORD\n * @requires PLAYERSTATES\n */\n\nplaybackService.$inject = [\n  '$interval',\n  'youTubePlayerManager',\n  'html5PlayerManager',\n  'kalturaPlayerManager',\n  'wistiaPlayerManager',\n  'ittUtils',\n  'urlService',\n  'PLAYERSTATES_WORD',\n  'PLAYERSTATES'\n];\n\nexport default function playbackService(\n  $interval,\n  youTubePlayerManager,\n  html5PlayerManager,\n  kalturaPlayerManager,\n  wistiaPlayerManager: IWistiaPlayerManager,\n  ittUtils,\n  urlService: IUrlService,\n  PLAYERSTATES_WORD,\n  PLAYERSTATES) {\n  /* tslint:disable:prefer-const object-literal-shorthand */\n  var _playerInterfaces: { [id: string]: IPlayerManager } = {};\n  var _mainPlayerId;\n  var _stateChangeCallbacks = [];\n  var _playerManagers: IPlayerManager[] = [\n    html5PlayerManager, youTubePlayerManager, kalturaPlayerManager, wistiaPlayerManager\n  ];\n  var _timelineState = '';\n  var _mainPlayerBufferingPoll;\n  var _playbackServiceHasBeenReset;\n  var _existy = ittUtils.existy;\n\n  angular.forEach(_playerManagers, function (playerManager: IPlayerManager) {\n    playerManager.registerStateChangeListener(_stateChangeCB);\n  });\n\n  return {\n    seedPlayer: seedPlayer,\n    createInstance: createInstance,\n    play: play,\n    pause: pause,\n    seek: seek,\n    getCurrentTime: getCurrentTime,\n    getPlayerState: getPlayerState,\n    toggleMute: toggleMute,\n    setVolume: setVolume,\n    getPlayerDiv: getPlayerDiv,\n    setSpeed: setSpeed,\n    registerStateChangeListener: registerStateChangeListener,\n    unregisterStateChangeListener: unregisterStateChangeListener,\n    getMetaProp: getMetaProp,\n    setMetaProp: setMetaProp,\n    getTimelineState: getTimelineState,\n    setTimelineState: setTimelineState,\n    freezeMetaProps: freezeMetaProps,\n    unFreezeMetaProps: unFreezeMetaProps,\n    // getMetaObj: getMetaObj,\n    pauseOtherPlayers: pauseOtherPlayers,\n    handle$Destroy: handle$Destroy,\n    resetPlaybackService: resetPlaybackService,\n    stop: stop,\n    allowPlayback: allowPlayback,\n    togglePlayback: togglePlayback,\n    renamePid: renamePid,\n    handleTimelineEnd: handleTimelineEnd\n  };\n  /*\n   PUBLIC METHODS\n   */\n\n  /**\n   * @ngdoc method\n   * @name #handleTimelineEnd\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Used to allow flexibility between player managers when it comes to reaching the end of the timeline.\n   * @param {String} pid the pid of the player\n   * @returns {Void} returns void.\n   */\n  function handleTimelineEnd(pid) {\n    pid = _setPid(pid);\n    if (_existy(_playerInterfaces[pid])) {\n      _playerInterfaces[pid].handleTimelineEnd(pid);\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #seedPlayer\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Called from ittVideo during initialization. Used to store and setup particular data relevant to creating\n   * an instance of playerManager.\n   * @param {String} id Main Video Asset ID or Event ID, for embeds\n   * @param {Boolean} mainPlayer Determines type of player, embed or main\n   * @param {Array} mediaSrcArr array of youtube URLs\n   * @returns {Void} returns void.\n   */\n  function seedPlayer(mediaSrcArr, id, mainPlayer) {\n    if (mainPlayer === true) {\n      if (_existy(_playerInterfaces[id])) {\n        //bail if we have already set the main player.\n        return;\n      }\n    }\n    var parsedMedia = urlService.parseMediaSrcArr(mediaSrcArr);\n\n    var pm = _getPlayerManagerFromMediaSrc(parsedMedia);\n    _playerInterfaces[id] = pm;\n    _playbackServiceHasBeenReset = false;\n    if (mainPlayer) {\n      _mainPlayerId = id;\n\n      if (pm.type !== 'wistia') { // wistia doesn't provide any buffering info currently.\n        _pollBufferedPercent();\n      }\n\n    }\n\n    pm.seedPlayerManager(id, mainPlayer, parsedMedia[0].mediaSrcArr);\n  }\n\n  /**\n   * @ngdoc method\n   * @name #createInstance\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Invokes the 'create' method on the playerManager with the input id, stores the entry in the\n   * _playerInterfaces map.\n   * @param {String} [playerId=mainPlayerId] Optional input param.\n   */\n  function createInstance(playerId) {\n    _playerInterfaces[playerId].create(playerId);\n  }\n\n  //called from timlineSvc -> playbackService -> playerManager\n  /**\n   * @ngdoc method\n   * @name #play\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Invokes the 'play' method on the playerManager with the passed input id.\n   * @param {String} [playerId=mainPlayerId] Optional input param.\n   */\n  function play(playerId) {\n    angular.forEach(_playerManagers, function (pm) {\n      pm.pauseOtherPlayers(_setPid(playerId));\n    });\n    if (getMetaProp('ready', _setPid(playerId)) === true) {\n      _playerInterfaces[_setPid(playerId)].play(_setPid(playerId));\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #pause\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Invokes the 'pause' method on the playerManager with the passed input id.\n   * @param {String} [playerId=mainPlayerId] Optional input param.\n   */\n  function pause(playerId) {\n    if (getMetaProp('ready', _setPid(playerId)) === true) {\n      _playerInterfaces[_setPid(playerId)].pause(_setPid(playerId));\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #seek\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Invokes the 'seek' method on the playerManager with the passed input id.\n   * @param {Number} t time to seek playback to.\n   * @param {String} [playerId=mainPlayerId] Optional input param.\n   */\n  function seek(t, playerId) {\n    if (getMetaProp('ready', _setPid(playerId)) === true) {\n      _playerInterfaces[_setPid(playerId)].seekTo(_setPid(playerId), parseFloat(t));\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #allowPlayback\n   * @methodOf iTT.service:playbackService\n   * @description\n   * static method used check playback state prior to toggling between play or pause\n   * @param {String} state state to check against.\n   */\n  function allowPlayback(state) {\n    return (state === 'paused' ||\n    state === 'unstarted' ||\n    state === 'video cued' ||\n    state === 'ended' ||\n    state === 'player ready');\n  }\n\n  /**\n   * @ngdoc method\n   * @name #togglePlayback\n   * @methodOf iTT.service:playbackService\n   * @description\n   * static method which is bound to play/pause buttons / video mask.\n   * @param {String} pid id of the player to drive\n   * @param {Function} restartFn function to call when restarting.\n   */\n  function togglePlayback(pid, restartFn, analyticsFn?) {\n    pid = _setPid(pid);\n    var state = getPlayerState(pid);\n    var time = getMetaProp('time', pid);\n    var duration = getMetaProp('duration', pid);\n\n    if (time >= duration && pid === _mainPlayerId) {\n      return restartFn();\n    }\n\n    if (allowPlayback(state) === true) {\n      play(pid);\n    } else {\n      pause(pid);\n      analyticsFn('pause');\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #pauseOtherPlayers\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Invokes the 'pauseOtherPlayers' method on all playerManagers with the passed input id.\n   * @param {String} [playerId=mainPlayerId] Optional input param.\n   */\n  function pauseOtherPlayers(playerId) {\n    angular.forEach(_playerManagers, function (pm) {\n      pm.pauseOtherPlayers(_setPid(playerId));\n    });\n    //on emebds, be sure to set the playerState to paused if the $destroy event pre-empts pause from being\n    //set naturally\n    angular.forEach(_playerInterfaces, function (pi: IWistiaPlayerManager, pid) {\n      if (pid !== playerId && pid !== _mainPlayerId) {\n        pi.setMetaProp(pid, 'playerState', '2');\n      }\n    });\n  }\n\n  /**\n   * @ngdoc method\n   * @name #registerStateChangeListener\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Wires up a stateChangeListener to which events can be emitted from and responded to.\n   * @param {Function} cb the function to invoke when on a state change.\n   */\n  function registerStateChangeListener(cb) {\n    var len = _stateChangeCallbacks.length;\n\n    //do not register the same listener twice\n    while (len--) {\n      if (cb.toString() === _stateChangeCallbacks[len].toString()) {\n        return;\n      }\n    }\n\n    _stateChangeCallbacks.push(cb);\n  }\n\n  /**\n   * @ngdoc method\n   * @name #unregisterStateChangeListener\n   * @methodOf iTT.service:playbackService\n   * @description\n   * removes a stateChangeListener function from the array of listeners.\n   * @param {Function} cb the function to remove.\n   */\n  function unregisterStateChangeListener(cb) {\n    _stateChangeCallbacks = _stateChangeCallbacks.filter(function (fn) {\n      return fn.toString() !== cb.toString();\n    });\n  }\n\n  /**\n   * @ngdoc method\n   * @name #getCurrentTime\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Invokes the 'getCurrentTime' method on all playerManagers with the passed input id.\n   * @param {String} [playerId=mainPlayerId] Optional input param.\n   */\n  function getCurrentTime(playerId) {\n    if (_existy(_playerInterfaces[_setPid(playerId)])) {\n      return _playerInterfaces[_setPid(playerId)].getCurrentTime(_setPid(playerId));\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #getPlayerDiv\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Invokes the 'getPlayerDiv' method on all playerManagers with the passed input id.\n   * @param {String} [playerId=mainPlayerId] Optional input param.\n   */\n  function getPlayerDiv(playerId) {\n    return _playerInterfaces[_setPid(playerId)].getPlayerDiv(_setPid(playerId));\n  }\n\n  /**\n   * @ngdoc method\n   * @name #getPlayerState\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Invokes the 'getPlayerState' method on all playerManagers with the passed input id.\n   * @param {String} [playerId=mainPlayerId] Optional input param.\n   */\n  function getPlayerState(playerId) {\n    return _playerInterfaces[_setPid(playerId)].getPlayerState(_setPid(playerId));\n  }\n\n  /**\n   * @ngdoc method\n   * @name #setSpeed\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Invokes the 'setSpeed' method on all playerManagers with the passed input id.\n   * @param {Number} playbackRate rate to set playback speed to.\n   * @param {String} [playerId=mainPlayerId] Optional input param.\n   */\n  function setSpeed(playbackRate, playerId) {\n    return _playerInterfaces[_setPid(playerId)].setSpeed(_setPid(playerId), playbackRate);\n  }\n\n  /**\n   * @ngdoc method\n   * @name #toggleMute\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Invokes the 'toggleMute' method on all playerManagers with the passed input id.\n   * @param {String} [playerId=mainPlayerId] Optional input param.\n   */\n  function toggleMute(playerId) {\n    return _playerInterfaces[_setPid(playerId)].toggleMute(_setPid(playerId));\n  }\n\n  /**\n   * @ngdoc method\n   * @name #setVolume\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Invokes the 'setVolume' method on all playerManagers with the passed input id.\n   * @param {Number} vol the volume level to set.\n   * @param {String} [playerId=mainPlayerId] Optional input param.\n   */\n  function setVolume(vol, playerId) {\n    _playerInterfaces[_setPid(playerId)].setVolume(_setPid(playerId), vol);\n  }\n\n  /**\n   * @ngdoc method\n   * @name #getMetaProp\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Used to query a property of a playerManager meta Object, such as 'duration'.\n   * @param {String} prop the name of the property to query.\n   * @param {String} [id=mainPlayerId] Optional id.\n   * @returns {String|Number|Boolean|Void} returns the value of the prop specified\n   */\n  function getMetaProp(prop, id) {\n    var pid = _setPid(id);\n    if (_existy(_playerInterfaces[pid])) {\n      return _playerInterfaces[pid].getMetaProp(pid, prop);\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #setMetaProp\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Used to set a property on a playerManager instance's meta Object.\n   * @param {String} prop the name of the property to query.\n   * @param {String|Number|Boolean} val The value to set.\n   * @param {String} [id=mainPlayerId] Optional id.\n   * @returns {Void} no return value but does have side-effects.\n   */\n  function setMetaProp(prop, val, id) {\n    var pid = _setPid(id);\n    if (_existy(_playerInterfaces[pid])) {\n      _playerInterfaces[pid].setMetaProp(pid, prop, val);\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #getTimelineState\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Used to query the state of the timeline.\n   * @returns {String} the state of the timeline.\n   */\n  function getTimelineState() {\n    return _timelineState;\n  }\n\n  /**\n   * @ngdoc method\n   * @name #setTimelineState\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Used set the state of the timeline.\n   * @param {String} state the timelineState to set\n   * @returns {Void} no return val but has side-effects.\n   */\n  function setTimelineState(state) {\n    _timelineState = state;\n  }\n\n  /**\n   * @ngdoc method\n   * @name #freezeMetaProps\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Invokes the 'freezeMetaProps' method on all playerManagers with the passed input id.\n   * @param {String} [playerId=mainPlayerId] Optional input param.\n   */\n  function freezeMetaProps(playerId) {\n    _playerInterfaces[_setPid(playerId)].freezeMetaProps(_setPid(playerId));\n  }\n\n  /**\n   * @ngdoc method\n   * @name #unFreezeMetaProps\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Invokes the 'unFreezeMetaProps' method on all playerManagers with the passed input id.\n   * @param {String} [playerId=mainPlayerId] Optional input param.\n   */\n  function unFreezeMetaProps(playerId) {\n    _playerInterfaces[_setPid(playerId)].unFreezeMetaProps(_setPid(playerId));\n  }\n\n  // function getMetaObj(playerId) {\n  //   if (_existy(_playerInterfaces[_setPid(playerId)])) {\n  //     return _playerInterfaces[_setPid(playerId)].getMetaObj(_setPid(playerId));\n  //   }\n  // }\n\n  /**\n   * @ngdoc method\n   * @name #resetPlaybackService\n   * @methodOf iTT.service:playbackService\n   * @description\n   * used when the playbackService needs to be reset back to mostly default state. This is eventually called when\n   * the main video fires its $destory event\n   */\n  function resetPlaybackService() {\n    _playbackServiceHasBeenReset = true;\n    _playerInterfaces = {};\n    angular.forEach(_playerManagers, function (pm) {\n      pm.resetPlayerManager();\n    });\n    _mainPlayerId = '';\n    _timelineState = '';\n    $interval.cancel(_mainPlayerBufferingPoll);\n  }\n\n  /**\n   * @ngdoc method\n   * @name #handle$Destroy\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Handles clean up for either main player of embeds. called from ittVideo's $destroy event.\n   * @param {String} playerId unique id of the player to command\n   */\n  function handle$Destroy(playerId) {\n    if (playerId !== _mainPlayerId) {\n      if (_playbackServiceHasBeenReset === false) {\n        _handleEmbedDestroy(playerId);\n      }\n    } else {\n      //will call resetPlaybackService from timelineSvc\n      _emitStateChange('reset');\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #stop\n   * @methodOf iTT.service:playbackService\n   * @description\n   * for calling stop for youtube videos\n   * @param {String} playerId unique id of the player to command\n   */\n  function stop(playerId) {\n    _playerInterfaces[_setPid(playerId)].stop(_setPid(playerId));\n  }\n\n  /**\n   * @ngdoc method\n   * @name renamePid\n   * @methodOf iTT.service:playbackService\n   * @param {String} oldName the name to find and replace\n   * @param {String} newName the target name\n   * @returns {Void} no return value\n   */\n  function renamePid(oldName, newName) {\n    //rename player manager\n    if (_existy(_playerInterfaces[oldName])) {\n      _playerInterfaces[oldName].renamePid(oldName, newName);\n    }\n    //check if main player is being renamed.\n    if (oldName === _mainPlayerId) {\n      _mainPlayerId = newName;\n    }\n    //rename _playerInterface that calls player managers\n    ittUtils.renameKey(oldName, newName, _playerInterfaces);\n  }\n\n  /*\n   PRIVATE METHODS\n   */\n\n  /**\n   * @ngdoc method\n   * @name getBufferedPercent\n   * @methodOf iTT.service:playbackService\n   * @description\n   * for drawing the amount of video that has buffered in the timeline.\n   * @param {String} playerId unique id of the player to command\n   * @private\n   */\n  function _getBufferedPercent(pid) {\n    pid = _setPid(pid);\n    return _playerInterfaces[pid].getBufferedPercent(pid);\n  }\n\n  /**\n   * @ngdoc method\n   * @name _handleEmbedDestroy\n   * @methodOf iTT.service:playbackService\n   * @description\n   * _handleEmbedDestroy\n   * @param {String} [playerId=mainPlayerId] Optional input param.\n   * @private\n   */\n  function _handleEmbedDestroy(playerId) {\n    setMetaProp('startAtTime', getCurrentTime(playerId), playerId);\n    setMetaProp('hasResumedFromStartAt', false, playerId);\n    setMetaProp('ready', false, playerId);\n    freezeMetaProps(playerId);\n  }\n\n  /**\n   * @ngdoc method\n   * @name _setPid\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Helper method used to set the playerId to either the input ID or the mainPlayerId if left blank.\n   * @param {String} pid the ID of the player to use.\n   * @returns {String} Either the input ID or the _mainPlayerId\n   * @private\n   */\n  function _setPid(pid) {\n    if (_existy(pid)) {\n      return pid;\n    }\n    return _mainPlayerId;\n  }\n\n  /**\n   * @ngdoc method\n   * @name _emitStateChange\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Helper method used to to emit stateChanges upstream to the timelineSvc (or anywhere else that has registered\n   * a listener)\n   * @param {String} state State to emit.\n   * @private\n   */\n  function _emitStateChange(state) {\n    angular.forEach(_stateChangeCallbacks, function (cb) {\n      cb(state);\n    });\n  }\n\n  /**\n   * @ngdoc method\n   * @name _onPlayerReady\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Method that handles the 'onReady' event fired from a playerManager when the player is ready to accept\n   * commands. Will seek playback to 'startAt' time which is set from either a query string parameter (for the\n   * main video) or is saved on the ittVideo $destory event, for embeds. If the video was playing prior to being\n   * destroyed, it will resume playback.\n   * @param {String} pid playerId of player emitting 'onReady' event.\n   * @private\n   */\n  function _onPlayerReady(pid) {\n    var lastState = PLAYERSTATES[getMetaProp('playerState', pid)];\n    var startAt = getMetaProp('startAtTime', pid);\n    var hasResumed = getMetaProp('hasResumedFromStartAt', pid);\n    var isBeingReset = getMetaProp('resetInProgress', pid);\n    setMetaProp('ready', true, pid);\n\n    if (pid === _mainPlayerId && isBeingReset === false) {\n      setMetaProp('playerState', '5', pid);\n      _emitStateChange('video cued');\n    }\n\n    if (startAt === 0 && getMetaProp('autoplay', pid) === true) {\n      play(pid);\n      setMetaProp('autoplay', false, pid);\n    }\n\n    if (startAt > 0) {\n      if (hasResumed === false) {\n        seek(startAt, pid);\n\n        if (isBeingReset === true) {\n          play(pid);\n          setMetaProp('resetInProgress', false, pid);\n          return;\n        }\n\n        if (getMetaProp('autoplay', pid) === true) {\n          play(pid);\n          setMetaProp('autoplay', false, pid);\n        }\n\n        if (pid !== _mainPlayerId) {\n          setMetaProp('hasResumedFromStartAt', true, pid);\n          if (lastState === 'playing') {\n            play(pid);\n          }\n        }\n      }\n    }\n  }\n  //respond to events emitted from playerManager\n  //playerManager -> playbackSvc -> timelineSvc (if main)\n  /**\n   * @ngdoc method\n   * @name _stateChangeCB\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Switch statement that handles events emitted from playerManagers and will emit the event up to the\n   * timelineSvc if the event came from the mainVideo.\n   * @param {Object} stateChangeEvent Object with state and emitterId properties.\n   * @returns {Void} returns void but has side-effects.\n   * @private\n   */\n  function _stateChangeCB(stateChangeEvent) {\n    var state = stateChangeEvent.state;\n    var emitterId = stateChangeEvent.emitterId;\n    // console.log('pbs#stateChangeCB', state);\n    switch (state) {\n      case 'unstarted':\n        break;\n      case 'ended':\n        break;\n      case 'playing':\n        if (getMetaProp('hasBeenPlayed', emitterId) === false) {\n          setMetaProp('hasBeenPlayed', true, emitterId);\n        }\n        break;\n      case 'paused':\n        break;\n      case 'buffering':\n        break;\n      case 'video cued':\n        break;\n      case 'player ready':\n        _onPlayerReady(emitterId);\n        break;\n\n    }\n\n    if (state !== 'player ready') {\n      setMetaProp('playerState', PLAYERSTATES_WORD[state], emitterId);\n    }\n\n    if (emitterId === _mainPlayerId) {\n      _emitStateChange(state);\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name _stateChangeCB\n   * @methodOf iTT.service:playbackService\n   * @description\n   * queries the bufferedPercent meta object prop on a 200ms interval\n   * @returns {Number} returns the percent of buffering for the main video\n   * @private\n   */\n  function _pollBufferedPercent() {\n    _mainPlayerBufferingPoll = $interval(function () {\n      setMetaProp('bufferedPercent', _getBufferedPercent(_mainPlayerId), _mainPlayerId);\n    }, 200);\n  }\n\n  /**\n   * @ngdoc method\n   * @name _getPlayerManagerFromMediaSrc\n   * @methodOf iTT.service:playbackService\n   * @description\n   * Loops over the input mediaSrcArr to derive the playerManager that can handle the input parsedMediaSrcArr\n   * @returns {Object} returns the playerManager that can handle the input media\n   * @private\n   */\n  function _getPlayerManagerFromMediaSrc(parsedMediaSrc): IPlayerManager {\n    var len = _playerManagers.length, pm = null;\n    while (len--) {\n      if (parsedMediaSrc.length > 0 && _playerManagers[len].type === parsedMediaSrc[0].type) {\n        pm = _playerManagers[len];\n        break;\n      }\n    }\n    return pm;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/playbackService/playbackService.ts","'use strict';\nquestionAnswersSvc.$inject = ['$q', 'analyticsSvc', 'appState'];\n\nexport default function questionAnswersSvc($q, analyticsSvc, appState) {\n  var svc = {};\n  svc.saveAnswer = function (name, eventID, data) {\n    return analyticsSvc.forceCaptureEventActivityWithPromise(name, eventID, data);\n  };\n  svc.getAnswers = function (eventId) {\n    var defer = $q.defer();\n    analyticsSvc.readEventActivity(eventId)\n      .then(function (activityData) {\n        var answers = activityData.filter(function (activity) {\n          return (\n            (activity.name === \"question-answered\" || activity.name === \"question-answered-updated\") &&\n            activity.episode_id === appState.episodeId\n          );\n        });\n        defer.resolve(answers);\n      });\n    return defer.promise;\n  };\n  svc.getUserAnswer = function (eventId, userId) {\n    var defer = $q.defer();\n    svc.getAnswers(eventId)\n      .then(function (data) {\n        if (data) {\n          var userAnswer = data.filter(function (item) {\n            return item.user_id === userId;\n          });\n          if (userAnswer.length > 0) {\n            defer.resolve(userAnswer[0]);\n          } else {\n            defer.reject();\n          }\n        } else {\n          return defer.reject();\n        }\n      });\n    return defer.promise;\n  };\n\n  svc.calculateCounts = function (events) {\n    var grouped;\n    angular.forEach(events, function (event) {\n      grouped[event.data.index]++;\n    });\n    return grouped;\n  };\n  svc.incrementAnswerCount = function (answerCounts, answerIndex) {\n    answerCounts[answerIndex] = (answerCounts[answerIndex] || 0) + 1;\n  };\n\n  /* This never gets used (flot calculates percentages for us) and was I think incorrect anyway (the chart was displaying the percentage as the answer count)\n   svc.calculatePercentages = function (grouped) {\n   console.log(\"CalcPercentages\", grouped);\n   var totalAnswers = 0;\n   for (var answerIndex in grouped) {\n   if (grouped.hasOwnProperty(answerIndex)) {\n   totalAnswers += grouped[answerIndex];\n   }\n   }\n   var chartData = [];\n   var x = 0;\n   for (answerIndex in grouped) {\n   if (grouped.hasOwnProperty(answerIndex)) {\n   chartData.push({\n   data: ((grouped[answerIndex] / totalAnswers) * 100),\n   //\t\t\t\t\t\tdata: [\n   //\t\t\t\t\t\t\t[x, ((grouped[answertext] / totalAnswers) * 100)]\n   //\t\t\t\t\t\t],\n   label: answerIndex\n   });\n\n   }\n   x++;\n   }\n   console.log(\"returning \", chartData);\n   return chartData;\n   };\n   */\n\n  return svc;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/questionAnswersSvc.ts","recursionHelper.$inject = ['$compile'];\n\nexport default function recursionHelper($compile) {\n  return {\n    // snarfed this from a SO answer.  Allows a directive to include itself without endless loops\n\n    compile: function (element, link) {\n      // Normalize the link parameter\n      if (angular.isFunction(link)) {\n        link = {\n          post: link\n        };\n      }\n\n      // Break the recursion loop by removing the contents\n      var contents = element.contents().remove();\n      var compiledContents;\n      return {\n        pre: (link && link.pre) ? link.pre : null,\n        /**\n         * Compiles and re-adds the contents\n         */\n        post: function (scope, element) {\n          // Compile the contents\n          if (!compiledContents) {\n            compiledContents = $compile(contents);\n          }\n          // Re-add the compiled contents to the element\n          compiledContents(scope, function (clone) {\n            element.append(clone);\n          });\n\n          // Call the post-linking function, if any\n          if (link && link.post) {\n            link.post.apply(null, arguments);\n          }\n        }\n      };\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/recursionHelper.ts","/**\n * Created by githop on 6/7/16.\n */\nimport { IDataSvc, IModelSvc } from '../interfaces';\n\nselectService.$inject = ['authSvc', 'modelSvc', 'dataSvc', 'ittUtils'];\n\nexport default function selectService(authSvc, modelSvc: IModelSvc, dataSvc: IDataSvc, ittUtils) {\n  var _userHasRole = authSvc.userHasRole;\n  var _existy = ittUtils.existy;\n\n  var _langOpts = [\n    {value: 'en', name: 'English', isDisabled: false},\n    {value: 'es', name: 'Spanish', isDisabled: false},\n    {value: 'zh', name: 'Chinese', isDisabled: false},\n    {value: 'pt', name: 'Portuguese', isDisabled: false},\n    {value: 'fr', name: 'French', isDisabled: false},\n    {value: 'de', name: 'German', isDisabled: false},\n    {value: 'it', name: 'Italian', isDisabled: false}\n  ];\n\n  //select opts map\n  var _select = {\n    video: [],\n    display: [],\n    imagePosition: [],\n    imagePin: [],\n    questionType: [],\n    language: _langOpts\n  };\n  //use visibility map with getVisibility() and component directives\n  var _visibility = {\n    templateSelect: true,\n    imageUpload: false,\n    display: false,\n    videoPosition: false,\n    bgImagePosition: false,\n    titleField: true,\n    speakerField: true\n  };\n\n  //moved into a map because we will need to use this\n  //when we are handing updates on background images.\n  var _scenes = {\n    centered: 'templates/scene/centered.html',      \t\t\t//Center 1\n    centeredPro: 'templates/scene/centeredPro.html',\t\t\t//Center 2\n    '1col': 'templates/scene/1col.html',\t\t\t\t\t\t//Center 3\n    mirroredTwoCol: 'templates/scene/mirrored-twocol.html', \t//Split 2\n    cornerV: 'templates/scene/cornerV.html',               \t\t//Split 1\n    centerVV: 'templates/scene/centerVV.html',             \t\t//Split 3\n    centerVVMondrian: 'templates/scene/centerVV-Mondrian.html', //Split 4\n    cornerH: 'templates/scene/cornerH.html',                    //Split 5\n    pip: 'templates/scene/pip.html'                             //Split 6\n  };\n\n  var _bgImageTitles = {\n    windowBg: 'Full window background',\n    videoOverlay: 'Video overlay (16:9)',\n    textBg: 'Text pane background',\n    textFg: 'Text pane foreground',\n    transmediaBg: 'Transmedia pane background',\n    transmediaFg: 'Transmedia pane foreground'\n  };\n\n  var _D1 = {\n    a: {value: 'showCurrent', name: 'show only current transmedia items'},\n    b: {value: '', name: 'Show all transmedia items, highlight current ones'}\n  };\n  var _D2 = {\n    a: {value: 'showCurrent', name: 'Show only current text items'},\n    b: {value: '', name: 'Show all text items, highlight current ones'}\n  };\n  var _D3 = {\n    a: {value: 'showCurrent', name: 'Show only current items'},\n    b: {value: '', name: 'Show all items, highlight current ones'}\n  };\n\n  var _imageFieldVisibility = _partialVis('imageUpload');\n  var _displaySelectVisibility = _partialVis('display');\n  var _videoPositionSelectVisibility = _partialVis('videoPosition');\n  var _titleFieldVisibility = _partialVis('titleField');\n  var _speakerFieldVisibility = _partialVis('speakerField');\n  var _templateSelectVisibility = _partialVis('templateSelect');\n  var _bgImagePositionSelectVisibility = _partialVis('bgImagePosition');\n\n  return {\n    showTab: showTab,\n    onSelectChange: onSelectChange,\n    getTemplates: getTemplates,\n    getVisibility: getVisibility,\n    getSelectOpts: getSelectOpts,\n    setupItemForm: setupItemForm,\n    getSceneName: getSceneName\n  };\n\n  function _setVisibility(prop, bool) {\n    _visibility[prop] = bool;\n  }\n\n  function _partialVis(prop) {\n    return function (bool) {\n      return _setVisibility(prop, bool);\n    };\n  }\n\n  function _setAvailableImageOptsForLayout(sceneType, item, itemForm) {\n    //if we are set to the default layout,\n    //overwrite it back to an empty array\n    var isInline = item.layouts[0] === 'inline';\n\n    //TS-1147 - hide video position for videoOverlay\n    //TS-1139 - all layouts, if vidOverlay, forced to fill/stretch.\n    if (item.layouts.indexOf('videoOverlay') !== -1) {\n      _bgImagePositionSelectVisibility(false);\n      itemForm.position = 'fill';\n    }\n    // altPane = transmedia pane, mainPane = text pane.\n    switch (sceneType) {\n      case 'centeredPro':\n        _displaySelectVisibility(true);\n        _videoPositionSelectVisibility(true);\n        _select.display = [\n          {value: 'windowBg', name: _bgImageTitles.windowBg, isDisabled: false},\n          {value: 'videoOverlay', name: _bgImageTitles.videoOverlay, isDisabled: false},\n          {value: 'mainBg', name: _bgImageTitles.textBg, isDisabled: true},\n          {value: 'mainFg', name: _bgImageTitles.textFg, isDisabled: true},\n          {value: 'altBg', name: _bgImageTitles.transmediaBg, isDisabled: true},\n          {value: 'altFg', name: _bgImageTitles.transmediaFg, isDisabled: true}\n        ];\n\n        if (isInline) {\n          item.layouts = ['windowBg'];\n        }\n\n        item.layouts = item.layouts || ['windowBg'];\n        itemForm.position = itemForm.position || 'fill'; //P1-A\n        break;\n      case '1col':\n      case 'centered':\n        var isAdmin = _userHasRole('admin');\n        _displaySelectVisibility(true);\n        _select.display = [\n          {value: 'windowBg', name: _bgImageTitles.windowBg, isDisabled: false},\n          {value: 'videoOverlay', name: _bgImageTitles.videoOverlay, isDisabled: false},\n          {value: 'mainBg', name: _bgImageTitles.textBg, isDisabled: !isAdmin},\n          {value: 'mainFg', name: _bgImageTitles.textFg, isDisabled: !isAdmin},\n          {value: 'altBg', name: _bgImageTitles.transmediaBg, isDisabled: true},\n          {value: 'altFg', name: _bgImageTitles.transmediaFg, isDisabled: true},\n        ];\n        if (isInline) {\n          item.layouts = ['windowBg'];\n        }\n        itemForm.position = itemForm.position || 'fill'; //P1-A\n        item.layouts = item.layouts || ['windowBg'];\n        break;\n      case 'mirroredTwoCol':\n        _displaySelectVisibility(true);\n        _select.display = [\n          {value: 'windowBg', name: _bgImageTitles.windowBg, isDisabled: false},\n          {value: 'videoOverlay', name: _bgImageTitles.videoOverlay, isDisabled: false},\n          {value: 'mainBg', name: _bgImageTitles.textBg, isDisabled: false},\n          {value: 'mainFg', name: _bgImageTitles.textFg, isDisabled: false},\n          {value: 'altBg', name: _bgImageTitles.transmediaBg, isDisabled: false},\n          {value: 'altFg', name: _bgImageTitles.transmediaFg, isDisabled: false}\n        ];\n\n        if (isInline) {\n          item.layouts = ['mainBg'];\n        }\n        itemForm.position = itemForm.position || 'fill'; //P1-A\n        item.layouts = item.layouts || ['mainBg'];\n        break;\n      case 'cornerV':\n      case 'centerVV':\n      case 'cornerH':\n        _displaySelectVisibility(true);\n        _select.display = [\n          {value: 'windowBg', name: _bgImageTitles.windowBg, isDisabled: false},\n          {value: 'videoOverlay', name: _bgImageTitles.videoOverlay, isDisabled: false},\n          {value: 'mainBg', name: _bgImageTitles.textBg, isDisabled: false},\n          {value: 'mainFg', name: _bgImageTitles.textFg, isDisabled: false},\n          {value: 'altBg', name: _bgImageTitles.transmediaBg, isDisabled: false},\n          {value: 'altFg', name: _bgImageTitles.transmediaFg, isDisabled: false}\n        ];\n\n        if (isInline) {\n          item.layouts = ['altBg'];\n        }\n\n        itemForm.position = itemForm.position || 'fill'; //P1-A\n        item.layouts = item.layouts || ['altBg'];\n        break;\n      case 'pip':\n        _displaySelectVisibility(true);\n        _select.display = [\n          {value: 'windowBg', name: _bgImageTitles.windowBg, isDisabled: true},\n          {value: 'videoOverlay', name: _bgImageTitles.videoOverlay, isDisabled: false},\n          {value: 'mainBg', name: _bgImageTitles.textBg, isDisabled: true},\n          {value: 'mainFg', name: _bgImageTitles.textFg, isDisabled: true},\n          {value: 'altBg', name: _bgImageTitles.transmediaBg, isDisabled: false},\n          {value: 'altFg', name: _bgImageTitles.transmediaFg, isDisabled: false}\n        ];\n\n        if (isInline) {\n          item.layouts = ['altBg'];\n        }\n        itemForm.position = itemForm.position || 'fill';\n        item.layouts = item.layouts || ['altBg'];\n        break;\n      case 'centerVVMondrian':\n        _select.display = [\n          {value: 'windowBg', name: _bgImageTitles.windowBg, isDisabled: true},\n          {value: 'videoOverlay', name: _bgImageTitles.videoOverlay, isDisabled: false},\n          {value: 'mainBg', name: _bgImageTitles.textBg, isDisabled: false},\n          {value: 'mainFg', name: _bgImageTitles.textFg, isDisabled: false},\n          {value: 'altBg', name: _bgImageTitles.transmediaBg, isDisabled: true},\n          {value: 'altFg', name: _bgImageTitles.transmediaFg, isDisabled: true}\n        ];\n        if (isInline) {\n          item.layouts = ['mainBg'];\n        }\n        item.layouts = item.layouts || ['mainBg'];\n        itemForm.position = itemForm.position || 'fill';\n        break;\n    }\n\n    if (itemForm.position) {\n      item.styles = [itemForm.position];\n    }\n  }\n\n  //not the display name, but the key of the scene map as string.\n  function getSceneName(scene) {\n    return Object.keys(_scenes).filter(function (key) {\n      return _scenes[key] === scene.templateUrl;\n    })[0];\n  }\n\n  function getSelectOpts(type) {\n    return _select[type];\n  }\n\n  function getVisibility(prop) {\n    return _visibility[prop];\n  }\n\n  /*\n   This logic used to live in ittItemEditor and ittEpisodeEditor and is now consolidated here.\n   These loops seem to be responsible for setting up itemForm from the styles array.\n   itemForm seems to be where we hold style specific data that pertains to events (aka items).\n   itemForm seems to be used mostly in the customize tab and sets color, timestamp, hightlight and transition options.\n   itemForm is also responsible for setting the 'pin' and 'position' props on a background image event.\n   All of the above is parsed from the itemForm (if its set), and read into the item.styles array.\n   When it comes time to persist, the styles array is used in dataSvc#prepItemForStorage,\n   which reads the strings in the styles array and returns the corresponding ID for the entity in the DB.\n\n   We do the inverse of this inside of watchStyleEdits below, which watches the itemForm, and builds up the styles array from\n   the itemForm props. It also formats background URLs.\n   */\n  function setupItemForm(stylesArr, type) {\n    //global for episode and item\n    var _itemFormStub = {\n      \"transition\": \"\",\n      \"highlight\": \"\",\n      \"color\": \"\",\n      \"typography\": \"\",\n      \"timestamp\": \"\",\n    };\n    var _itemSpecificOpts = {\n      \"position\": \"\", // for image fills only\n    };\n    //add additional props for items\n    if (type === 'item') {\n      _itemFormStub = angular.extend(_itemSpecificOpts, _itemFormStub);\n    }\n    //return stub object if no array is passed.\n    if (!_existy(stylesArr)) {\n      return _itemFormStub;\n    }\n    // do this in both cases, i.e. for item and episode\n    for (var styleType in _itemFormStub) {\n      for (var i = 0; i < stylesArr.length; i++) {\n        if (stylesArr[i].substr(0, styleType.length) === styleType) { // begins with styleType\n          _itemFormStub[styleType] = stylesArr[i].substr(styleType.length); // Remainder of stylesArr[i]\n        }\n      }\n    }\n    //next loop only necessary for items, so early return\n    if (type === 'episode') {\n      return _itemFormStub;\n    }\n    //need more stuff to do for items\n    // position and pin don't have a prefix because I was dumb when I planned this\n    for (var j = 0; j < stylesArr.length; j++) {\n      if (stylesArr[j] === 'contain' || stylesArr[j] === 'cover' ||\n        stylesArr[j] === 'center' || stylesArr[j] === 'fill' ||\n        stylesArr[j] === 'tl' || stylesArr[j] === 'tr' ||\n        stylesArr[j] === 'bl' || stylesArr[j] === 'br') {\n        _itemFormStub.position = stylesArr[j];\n      }\n    }\n\n    return _itemFormStub;\n  }\n\n  function getTemplates(type, customerIds?: string[]) {\n    switch (type) {\n      case 'episode':\n\n        const _sortAlpha = function (a, b) {\n          if (a.name.toLowerCase() < b.name.toLowerCase()) {\n            return -1;\n          } else if (a.name.toLowerCase() > b.name.toLowerCase()) {\n            return 1;\n          } else {\n            return 0;\n          }\n        };\n        _titleFieldVisibility(true); // NP-1159\n\n        return dataSvc.getEpisodeTemplatesByCustomerIds(customerIds).sort(_sortAlpha);\n\n      case 'scene':\n        _displaySelectVisibility(false);\n        _videoPositionSelectVisibility(false);\n        _templateSelectVisibility(true);\n        _bgImagePositionSelectVisibility(false);\n        var scenes = [ //\\u2022 = bullet point\n          {url: _scenes.centered, name: 'Center 1 (+ V\\u2022TS\\u2022ANT\\u2022TM)'},\n          {url: _scenes.centeredPro, name: 'Center 2 (+ V\\u2022ANT)'},\n          {url: _scenes['1col'], name: 'Center 3 (V\\u2022TS\\u2022ANT\\u2022TM)'},\n          {url: _scenes.cornerV, name: 'Split 1 (V\\u2022TS\\u2022ANT | TM)'},\n          {url: _scenes.mirroredTwoCol, name: 'Split 2 (V\\u2022TM | TS\\u2022ANT)'},\n          {url: _scenes.centerVV, name: 'Split 3 (V\\u2022ANT | TM)'},\n          {url: _scenes.centerVVMondrian, name: 'Split 4 (V\\u2022ANT | TM Invert)'},\n          {url: _scenes.cornerH, name: 'Split 5 (V\\u2022TS\\u2022ANT / TM)'},\n          {url: _scenes.pip, name: 'Split 6 (TM / V\\u2022TS\\u2022ANT)'}\n        ];\n\n        return scenes;\n      case 'transcript':\n        _speakerFieldVisibility(true);\n        _templateSelectVisibility(true);\n        _bgImagePositionSelectVisibility(false);\n        return [\n          {url: 'templates/item/transcript.html', name: 'Transcript'}\n        ];\n      case 'annotation':\n        _speakerFieldVisibility(false);\n        _titleFieldVisibility(false);\n        _templateSelectVisibility(true);\n        _bgImagePositionSelectVisibility(false);\n        return [\n          {url: 'templates/item/text-h1.html', name: 'Header 1'},\n          {url: 'templates/item/text-h2.html', name: 'Header 2'},\n          {url: 'templates/item/pullquote.html', name: 'Pullquote'},\n          // {url: 'templates/item/pullquote-noattrib.html', name: 'Pullquote with attribution'},\n          {url: 'templates/item/text-transmedia.html', name: 'Long text (as transmedia)'},\n          {url: 'templates/item/text-definition.html', name: 'Definition (as transmedia)'}\n        ];\n      case 'link':\n        _displaySelectVisibility(true);\n        _videoPositionSelectVisibility(false);\n        _imageFieldVisibility(true);\n        _titleFieldVisibility(true);\n        _templateSelectVisibility(true);\n        _bgImagePositionSelectVisibility(false);\n        var linkTemplates = [\n          {url: 'templates/item/link.html', name: 'Link'},\n          {url: 'templates/item/link-withimage-notitle.html', name: 'Link - hide title'},\n          {url: 'templates/item/link-modal-thumb.html', name: 'Link modal'},\n          {url: 'templates/item/link-embed.html', name: 'Embedded link'}\n        ];\n        if (_userHasRole('admin')) {\n          linkTemplates.splice(3, 0, {\n            url: 'templates/item/link-descriptionfirst.html',\n            name: 'Link w/ description first'\n          });\n        }\n        return linkTemplates;\n      case 'image':\n        _imageFieldVisibility(true);\n        _displaySelectVisibility(false);\n        _videoPositionSelectVisibility(false);\n        _titleFieldVisibility(true);\n        _templateSelectVisibility(true);\n        _bgImagePositionSelectVisibility(false);\n        var imgTemplates = [\n          {url: 'templates/item/image-plain.html', name: 'Plain Image'},\n          {url: 'templates/item/image-inline-withtext.html', name: 'Inline Image with text'},\n          {url: 'templates/item/image-caption-sliding.html', name: 'Image with sliding caption'},\n          {url: 'templates/item/image-thumbnail.html', name: 'Image thumbnail'},\n          {url: 'templates/item/image-fill.html', name: 'Background or video overlay'}\n        ];\n        return imgTemplates;\n      case 'file':\n        _titleFieldVisibility(true);\n        _templateSelectVisibility(false);\n        _bgImagePositionSelectVisibility(false);\n        return [\n          {url: 'templates/item/file.html', name: 'Uploaded File'},\n        ];\n      case 'question':\n        _displaySelectVisibility(true);\n        _imageFieldVisibility(true);\n        _titleFieldVisibility(true);\n        _templateSelectVisibility(true);\n        _bgImagePositionSelectVisibility(false);\n        return [\n          {url: 'templates/item/question-mc.html', name: 'Question'}\n        ];\n      case 'chapter':\n        //chapters have no template, but need to do side-effects\n        _titleFieldVisibility(true);\n        break;\n    }\n  }\n\n  function onSelectChange(item, itemForm) {\n    _displaySelectVisibility(false);\n    switch (item.producerItemType) {\n      case 'scene':\n        var isInline = item.layouts[0] === 'inline';\n        switch (item.templateUrl) {\n          case 'templates/scene/centered.html': //centered\n          case 'templates/scene/centeredPro.html': //Centered Pro, Hide Transcript & Transmedia\n            _videoPositionSelectVisibility(false);\n            _displaySelectVisibility(false);\n            item.layouts[0] = ''; //P1 Video Centered\n            item.layouts[1] = _D1.a.value; //showCurrent;\n            break;\n          case 'templates/scene/centerVV.html': //Vertical Pro, Hide Transcript\n          case 'templates/scene/centerVV-Mondrian.html': //Vertical Pro Mondrian, Hide Transcript\n            _displaySelectVisibility(false);\n            _videoPositionSelectVisibility(true);\n            _select.video = [\n              {value: 'videoLeft', name: 'Video on Left'},\n              {value: 'videoRight', name: 'Video on Right'}\n            ];\n            item.layouts[1] = _D1.a.value;\n            if (isInline || item.layouts[0] === '') {\n              item.layouts[0] = 'videoLeft'; //P2 video left\n            }\n            break;\n          case 'templates/scene/cornerV.html': //Corner video, vertical\n          case 'templates/scene/cornerH.html': //Corner video, horizontal\n          case 'templates/scene/pip.html': //picture in picture\n            _displaySelectVisibility(true);\n            _videoPositionSelectVisibility(true);\n            _select.video = [\n              {value: 'videoLeft', name: 'Video on Left'},\n              {value: 'videoRight', name: 'Video on Right'}\n            ];\n            _select.display = [\n              {value: _D1.a.value, name: _D1.a.name},\n              {value: _D1.b.value, name: _D1.b.name}\n            ];\n\n            if (isInline || item.layouts[0] === '') {\n              console.log('we are getting here');\n              item.layouts[0] = 'videoLeft'; //P2 video left\n              item.layouts[1] = _D1.a.value;\n            }\n            break;\n          case 'templates/scene/mirrored-twocol.html': // Two Columns (v2 mirrored vert)\n            _displaySelectVisibility(true);\n            _videoPositionSelectVisibility(true);\n            _select.video = [\n              {value: 'videoLeft', name: 'Video on Left'},\n              {value: 'videoRight', name: 'Video on Right'}\n            ];\n            _select.display = [\n              {value: _D2.a.value, name: _D2.a.name},\n              {value: _D2.b.value, name: _D2.b.name}\n            ];\n\n            if (isInline || item.layouts[0] === '') {\n              item.layouts[0] = 'videoLeft'; //P2 video left\n              item.layouts[1] = _D2.b.value; //show all + highlight current\n            }\n            break;\n          case 'templates/scene/1col.html': //One Column\n            _displaySelectVisibility(true);\n            _videoPositionSelectVisibility(false);\n            _select.display = [\n              {value: _D3.a.value, name: _D3.a.name},\n              {value: _D3.b.value, name: _D3.b.name}\n            ];\n            item.layouts[0] = ''; //P1 Video Centered\n            if (isInline) {\n              item.layouts[1] = _D3.b.value;\n            }\n            break;\n        }\n        break;\n      case 'link':\n        _displaySelectVisibility(true);\n        _imageFieldVisibility(true);\n        _templateSelectVisibility(true);\n        if (item.stop === true) {\n          item.layouts[0] = 'windowFg';\n          //prevent link-modal template from opening on top of stop-item modal\n          if (item.templateUrl === 'templates/item/link-modal-thumb.html') {\n            item.templateUrl = 'templates/item/link-embed.html';\n            // angular.forEach(item.templateOpts, function(opt) {\n            // \tconsole.log('opt!!', opt);\n            // });\n          }\n        } else {\n          item.layouts[0] = 'inline';\n        }\n\n        switch (item.templateUrl) {\n          case 'templates/item/link.html':\n          case 'templates/item/link-withimage-notitle.html':\n          case 'templates/item/link-modal-thumb.html':\n            _imageFieldVisibility(true);\n            break;\n          case 'templates/item/link-descriptionfirst.html':\n          case 'templates/item/link-embed.html':\n            _imageFieldVisibility(false);\n            break;\n        }\n\n        break;\n      case 'transcript':\n        _displaySelectVisibility(false);\n        item.layouts[0] = 'inline';\n        break;\n      case 'annotation':\n        item.layouts[0] = 'inline';\n        switch (item.templateUrl) {\n          case 'templates/item/text-h1.html':\n          case 'templates/item/text-h2.html':\n            _speakerFieldVisibility(false);\n            _titleFieldVisibility(false);\n            break;\n          case 'templates/item/pullquote-noattrib.html':\n          case 'templates/item/pullquote.html':\n            _speakerFieldVisibility(true);\n            _titleFieldVisibility(false);\n            break;\n          case 'templates/item/text-transmedia.html':\n          case 'templates/item/text-definition.html':\n            _speakerFieldVisibility(false);\n            _titleFieldVisibility(true);\n            break;\n        }\n        if (item.stop === true) {\n          item.layouts[0] = 'windowFg';\n        }\n        break;\n      case 'question':\n        _select.questionType = [\n          {value: 'mc-poll', name: 'Poll'},\n          {value: 'mc-formative', name: 'Formative'}\n        ];\n        item.layouts[0] = 'windowFg';\n        item.stop = true;\n        break;\n      case 'image':\n        //will set to true in image fill\n        _displaySelectVisibility(false);\n        var _currentSceneName = getSceneName(modelSvc.scene(item.scene_id));\n        switch (item.templateUrl) {\n          case 'templates/item/image-plain.html':\n          case 'templates/item/image-inline-withtext.html':\n          case 'templates/item/image-caption-sliding.html':\n          case 'templates/item/image-thumbnail.html':\n            //set back to blank when not a BG image.\n            itemForm.pin = itemForm.position = '';\n            item.layouts[0] = 'inline';\n            break;\n          case 'templates/item/image-fill.html':\n            item.cosmetic = true;\n            _displaySelectVisibility(true);\n            _bgImagePositionSelectVisibility(true);\n            _select.imagePosition = [\n              {value: 'fill', name: 'Fill and stretch'},\n              {value: 'contain', name: 'Contain'},\n              {value: 'cover', name: 'Cover and crop'},\n              {value: 'tl', name: 'Top Left'},\n              {value: 'tr', name: 'Top Right'},\n              {value: 'bl', name: 'Bottom Left'},\n              {value: 'br', name: 'Bottom Right'},\n            ];\n            _setAvailableImageOptsForLayout(_currentSceneName, item, itemForm);\n        }\n        if (item.stop === true) {\n          item.layouts[0] = 'windowFg';\n        }\n        break;\n      case 'file':\n        item.showInlineDetail = false;\n        switch (item.templateUrl) {\n          case 'templates/item/link.html':\n            item.showInlineDetail = true;\n            break;\n          case 'templates/item/file.html':\n          case 'templates/item/link-descriptionfirst.html':\n          case 'templates/item/link-modal-thumb.html':\n            break;\n        }\n        if (item.stop === true) {\n          item.layouts[0] = 'windowFg';\n        }\n\n        break;\n    }\n  }\n\n  function showTab(itemType, tabTitle) {\n    switch (itemType) {\n      case 'scene':\n        switch (tabTitle) {\n          case 'Item':\n            return false;\n          case 'Style':\n            return true;\n          case 'Customize':\n            return _userHasRole('admin');\n        }\n        break;\n      case 'transcript':\n        switch (tabTitle) {\n          case 'Item':\n            return true;\n          case 'Style':\n            return false;\n          case 'Customize':\n            return _userHasRole('admin');\n        }\n        break;\n      case 'annotation':\n        switch (tabTitle) {\n          case 'Item':\n            return true;\n          case 'Style':\n            return false;\n          case 'Customize':\n            return _userHasRole('admin');\n        }\n        break;\n      case 'link':\n        switch (tabTitle) {\n          case 'Item':\n            return true;\n          case 'Style':\n            return false;\n          case 'Customize':\n            return _userHasRole('admin');\n        }\n        break;\n      case 'image':\n        switch (tabTitle) {\n          case 'Item':\n            return true;\n          case 'Style':\n            return false;\n          case 'Customize':\n            return _userHasRole('admin');\n        }\n        break;\n      case 'file':\n        switch (tabTitle) {\n          case 'Item':\n            return true;\n          case 'Style':\n            return false;\n          case 'Customize':\n            return _userHasRole('admin');\n        }\n        break;\n      case 'question':\n        switch (tabTitle) {\n          case 'Item':\n            return true;\n          case 'Style':\n            return false;\n          case 'Customize':\n            return _userHasRole('admin');\n        }\n        break;\n      case 'chapter':\n        switch (tabTitle) {\n          case 'Item':\n            return true;\n          case 'Style':\n            return false;\n          case 'Customize':\n            return false;\n        }\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/selectService.ts","/* tslint:disable */\n/*\n Son of cuePointScheduler, with a smattering of video controls.\n\n This needs a bit of a rewrite before it can safely handle more than one episode at a time:\n stepEvent (and probably other things too) currently depends on video time matching timeline time;\n we'll need to have a way to calculate one from the other (which will get especially complicated when\n we allow skipping scenes in SxS...)\n\n\n keeps an sorted-by-time array of timed events.\n Events are (item/scene id) enter or exit, (timeline) pause or play\n\n There are two separate loops here:\n clock() just updates appState.time on a tight interval, purely for time display.\n stepEvent() runs on a slower interval, watches the current video's reported current time,\n and handles any events since it was last called.  If one of them is\n a stop event, it will 'rewind' the timeline to that time (and stop handling events past it.)\n\n appState.time is the current playhead position\n timeMultiplier is the playback speed. No negative values or zero.\n\n\n injectEvents(events, t) receives a list of timed events (i.e. an episode) to be injected into the timeline at a given point.\n For now that point has to be zero. In future this will support injecting episodes inside of other episodes.\n\n TODO: support sequential episodes\n TODO: support injecting into the middle of an episode\n TODO: have a way to delete a portion of the timeline (so sXs users can skip scenes)\n\n timeline ending sequence:\n -do no wait for video to emit and 'ended' event\n -manually signal an ending sequence upon entering the endingscreen's enter event detected in stepEvent\n sequence\n\n -> ending screen entered -> timelineSvc#_doEndingSequence -> on 'ended' event emitted from player, set time to the duration\n\n note: ending screen can be entered naturally as the video progresses or from seeking,\n either from the timeline or the next scene arrow\n */\n/* tslint:enable */\nimport {IEvent} from '../../models';\ninterface ITimelineEvent {\n  t: number;\n  id: string;\n  eventId?: string;\n  action: 'enter' | 'exit' | 'pause' | 'play' | 'preload';\n}\n\ninterface IDisplayMarkedEvent {\n  events: ITimelineEvent[];\n  layoutChange: boolean;\n  multiStop: boolean;\n  start_time: string;\n  stop: boolean;\n  toolTipText: string;\n}\n\nexport interface ITimelineSvc {\n  timelineEvents: ITimelineEvent[];\n  markedEvents: IEvent[];\n  displayMarkedEvents: IDisplayMarkedEvent[];\n  enforceSingletonPauseListener: boolean;\n  setSpeed(speed: number): void;\n  restartEpisode(): void;\n  play(): void;\n  pause(nocapture?: boolean): void;\n  startAtSpecificTime(t: number): void;\n  seek(t: number, method?: string, eventId?: string): void;\n  nextScene(): void;\n  handleScene(index: number, action: string): void;\n  prevScene(): void;\n  toggleMute(): void;\n  setVolume(vol: number): void;\n  init(episodeId: string): void;\n  injectEvents(events: any[], injectionTime?: number): void;\n  removeEvent(removeId: string): void;\n  updateEventTimes(event: any): void;\n  updateSceneTimes(episodeId: string): void;\n  sortTimeline(): void;\n  updateEventStates(): void;\n}\n\n/* tslint:disable */\ntimelineSvc.$inject = ['$window', '$timeout', '$interval', '$filter', 'config', 'modelSvc', 'appState', 'analyticsSvc', 'playbackService', 'ittUtils'];\n\nexport default function timelineSvc($window, $timeout, $interval, $filter, config, modelSvc, appState, analyticsSvc, playbackService, ittUtils) {\n  /* tslint:enable */\n  /* tslint:disable:prefer-const */\n  var svc: ITimelineSvc = Object.create(null);\n\n  svc.timelineEvents = [];\n  // each entry consists of {t:n, id:eventID|timeline, action:enter|exit|pause|play}. Keep sorted by t.\n  svc.markedEvents = [];\n  // time, title of marked events (scenes, currently)\n  if (!svc.enforceSingletonPauseListener) {\n    $window.addEventListener('message', function (e) {\n      if (e.data === 'pauseEpisodePlayback') {\n        svc.pause();\n      }\n    }, false);\n  }\n\n  svc.enforceSingletonPauseListener = true; // this is probably unnecessary paranoia\n  var clock;\n  var eventTimeout;\n  var timeMultiplier;\n  var parseTime = ittUtils.parseTime;\n\n  //player states\n  // '-1': 'unstarted',\n  // '0': 'ended',\n  // '1': 'playing',\n  // '2': 'paused',\n  // '3': 'buffering',\n  // '5': 'video cued'\n  // '5': player ready\n\n  function _onPlayerStateChange(state) {\n\n    // console.info('state from player', state, 'timelineState', playbackService.getTimelineState());\n\n    if (playbackService.getTimelineState() === 'ended' && (state === 'unstarted' || state === 'video cued')) {\n      return;\n    }\n\n    playbackService.setTimelineState(state);\n\n    switch (state) {\n      case 'reset':\n        _resetClocks();\n        playbackService.resetPlaybackService();\n        break;\n      case 'unstarted':\n\n        break;\n      case 'ended':\n        // console.log('timelineSvc#ended event!');\n        playbackService.setMetaProp('time', playbackService.getMetaProp('duration'));\n        const episode = modelSvc.episodes[appState.episodeId];\n        const endingScreen = episode.scenes[episode.scenes.length - 1];\n        episode.setCurrentScene(endingScreen);\n        break;\n      case 'playing':\n        var currentTime = playbackService.getCurrentTime();\n        var ourTime = playbackService.getMetaProp('time');\n        var isBeingReset = playbackService.getMetaProp('resetInProgress');\n        if (Math.abs(ourTime - currentTime) > 0.75 && isBeingReset === false) {\n          playbackService.setMetaProp('time', currentTime);\n          stepEvent(true);\n        }\n        startTimelineClock();\n        startEventClock();\n        appState.videoControlsActive = true;\n        appState.show.navPanel = false;\n        // For episodes embedded within episodes:\n        if ($window.parent !== $window) {\n          $window.parent.postMessage('pauseEpisodePlayback', '*'); // negligible risk in using a global here\n        }\n        analyticsSvc.captureEpisodeActivity('play');\n        break;\n      case 'paused':\n        _resetClocks();\n        break;\n      case 'buffering':\n        _resetClocks();\n        break;\n      case 'video cued':\n        var startAt = playbackService.getMetaProp('startAtTime');\n        var hasResumed = playbackService.getMetaProp('hasResumedFromStartAt');\n\n        if (startAt > 0 && hasResumed === false) {\n          // console.log('about to call startAtSpecificTime');\n          svc.startAtSpecificTime(startAt);\n        }\n        break;\n      case 'player ready':\n        svc.updateEventStates();\n        break;\n    }\n  }\n\n  function _resetClocks() {\n    $interval.cancel(clock);\n    appState.videoControlsActive = true;\n    stopEventClock();\n    clock = undefined;\n    lastTick = undefined;\n  }\n\n  function _doEndingSequence() {\n    _resetClocks();\n    playbackService.handleTimelineEnd();\n    analyticsSvc.captureEpisodeActivity('pause');\n  }\n\n  svc.setSpeed = function (speed) {\n    // console.log(\"timelineSvc.setSpeed\", speed);\n    timeMultiplier = speed;\n    //here, and only here, make this public. (an earlier version of this tweaked the private timeMultiplier\n    // variable if the video and timeline fell out of synch.  Fancy.  Too fancy.  Didn't work. Stopped doing it.)\n    playbackService.setMetaProp('timeMultiplier', timeMultiplier);\n    playbackService.setSpeed(timeMultiplier);\n    stepEvent();\n  };\n\n  svc.restartEpisode = restartEpisode;\n  function restartEpisode() {\n    console.log('restarting!');\n    svc.seek(0.01);\n    svc.play();\n  }\n\n  svc.play = function () {\n    // console.log(\"timelineSvc.play\");\n    // On first play, we need to check if we need to show help menu instead; if so, don't play the video:\n    // (WARN this is a bit of a sloppy mixture of concerns.)\n\n    var duration = playbackService.getMetaProp('duration');\n\n    if (!duration || duration < 0.1) {\n      console.error('This episode has no duration');\n      return;\n    }\n\n    playbackService.play();\n  };\n\n  svc.pause = function (nocapture) {\n    _resetClocks();\n    playbackService.pause();\n\n    if (!nocapture) {\n      analyticsSvc.captureEpisodeActivity('pause');\n    }\n  };\n\n  svc.startAtSpecificTime = function (t) {\n\n    // Youtube on touchscreens can't auto-seek to the correct time,\n    // we have to wait for the user to init youtube manually.\n    if (appState.isTouchDevice && playbackService.getMetaProp('hasBeenPlayed') === false &&\n      playbackService.getMetaProp('videoType') === 'youtube') {\n      //TODO in future it might be possible to trick YT into starting at the correct time even\n      return;\n    }\n\n    t = parseTime(t);\n    if (t < 0) {\n      t = 0;\n    }\n    if (t > playbackService.getMetaProp('duration')) {\n      playbackService.setMetaProp('duration', t);\n    }\n\n    playbackService.setMetaProp('time', t);\n    playbackService.setMetaProp('hasResumedFromStartAt', true);\n    svc.updateEventStates();\n\n    analyticsSvc.captureEpisodeActivity('seek', {\n      method: 'URLParameter'\n    });\n\n  };\n\n  svc.seek = function (t, method, eventID) {\n    if (playbackService.getMetaProp('ready') !== true) {\n      return;\n    }\n    playbackService.pauseOtherPlayers();\n    var duration = playbackService.getMetaProp('duration');\n\n    var timelineState = playbackService.getTimelineState();\n\n    if (timelineState === 'ended') {\n      //to avoid restarting the video after the video has ended when the user initiates a seek\n      playbackService.setTimelineState('paused');\n    }\n\n    if (duration === 0) {\n      // if duration = 0, we're trying to seek to a time from a url param before the events\n      // have loaded.  Just poll until events load, that's good enough for now.\n      // TODO throw error and stop looping if this goes on too long\n      $timeout(function () {\n        // console.log(\"waiting for video to be ready\");\n        svc.seek(t);\n      }, 300);\n      return;\n    }\n\n    interface ICaptureData {\n      method: string;\n      seekStart: number;\n      event_id?: string;\n    }\n\n    var captureData: ICaptureData = {method: '', seekStart: playbackService.getMetaProp('time')};\n\n    t = parseTime(t);\n    if (t < 0) {\n      t = 0;\n    }\n    if (t > duration) {\n      playbackService.setMetaProp('duration', t);\n    }\n\n    stopEventClock();\n\n    playbackService.setMetaProp('time', t);\n    // youtube depends on an accurate appState.timelineState here,\n    // so don't modify that by calling svc.stall() before the seek:\n\n    playbackService.seek(t);\n    svc.updateEventStates();\n\n    //capture analytics\n\n    if (ittUtils.existy(method)) {\n      captureData.method = method;\n\n      if (ittUtils.existy(eventID)) {\n\n        captureData.event_id = eventID;\n      }\n\n      analyticsSvc.captureEpisodeActivity('seek', captureData);\n    }\n  };\n\n  svc.nextScene = nextScene;\n  function nextScene() {\n    var found = false;\n    var currentTime = playbackService.getMetaProp('time');\n    var currentDuration = playbackService.getMetaProp('duration');\n    var len = svc.markedEvents.length;\n    var i = 0;\n    for (; i < len; i++) {\n      if (svc.markedEvents[i].start_time > currentTime) {\n        console.log('Seeking to ', svc.markedEvents[i].start_time);\n        //scope.enableAutoscroll(); // TODO in playerController\n        handleScene(i, 'nextScene');\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      svc.pause();\n      svc.seek(currentDuration - 0.01, 'nextScene');\n      //scope.enableAutoscroll(); // in playerController\n    }\n  }\n\n  svc.handleScene = handleScene;\n  function handleScene(index, action) {\n    var s = svc.markedEvents[index];\n    var t = s.start_time;\n\n    if (t === 0.01 && action !== 'prevScene') {\n      // to allow seekPauseListener to pause if using nextScene arrow on unstarted episode\n      t += 0.1;\n    }\n\n    svc.seek(t, action);\n    if (s.stop === true) {\n      svc.pause();\n    }\n  }\n\n  svc.prevScene = prevScene;\n  function prevScene() {\n    var now = playbackService.getMetaProp('time');\n    var timelineState = playbackService.getTimelineState();\n    if (timelineState === 'playing') {\n      now = now - 3; // leave a bit of fudge when skipping backwards in a video that's currently playing\n    }\n    var len = svc.markedEvents.length - 1;\n    var i = len;\n    for (; i >= 0; i--) {\n      if (svc.markedEvents[i].start_time < now) {\n        svc.seek(svc.markedEvents[i].start_time, 'prevScene');\n\n        if (i === len) { //allow user to seek to event just prior to ending screen.\n          --i;\n        }\n\n        handleScene(i, 'prevScene');\n        break;\n      }\n    }\n  }\n\n  // - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  // WHY IS THIS AUDIO CHOCOLATE IN MY TIMELINE PEANUT BUTTER?\n  // to make it easier to maintain state for these across multiple videos, when there are multiple videos.\n  // Also because there isn't an obviously better place for it.  If this is dumb, TODO: be less dumb\n\n  svc.toggleMute = function () {\n    playbackService.toggleMute();\n  };\n  svc.setVolume = function (vol) { // 0..100\n    playbackService.setVolume(vol);\n  };\n\n  // - - - - - - - - - - - - - - - - - - - - - - - - - -\n  // Event clock\n\n  /*\n   If timeline is playing,\n   TODO\n   1. find out how long since last checked, compare videotime delta to timeline delta, adjust timeline if necessary)\n   2. check for timeline events since the last time stepEvent ran, handle them in order\n   3. if any were stop events,\n   rewind the timeline and the video to that time (and stop handling events)\n   otherwise\n   set a timeout for a bit after the next event in the queue, up to some maximum amount of time, to run again\n   (the 'up to some maximum' bit is for 1., so the timeline and video time don't fall out of synch)\n   */\n\n  var eventClockData;\n\n  var resetEventClock = function () {\n    // console.log('RESET EVENT CLOCK');\n    eventClockData = {\n      lastTimelineTime: 0,\n      lastVideoTime: 0,\n      running: false\n    };\n  };\n  resetEventClock();\n\n  var startEventClock = function () {\n    // console.log('START EVENT CLOCK');\n    if (eventClockData.running) {\n      return;\n    }\n    eventClockData.running = true;\n    eventClockData.lastTimelineTime = playbackService.getMetaProp('time');\n    eventClockData.lastVideoTime = playbackService.getMetaProp('time');\n    // TODO this should be relative to episode, not timeline ^\n    stepEvent();\n  };\n\n  var stopEventClock = function () {\n    // console.log('STOP EVENT CLOCK', playbackService.getCurrentTime());\n    // playbackService.setMetaProp('time', playbackService.getCurrentTime() || 0);\n    $timeout.cancel(eventTimeout);\n    resetEventClock();\n  };\n\n  var stepEvent = function (ignoreStopEvents?) {\n    $timeout.cancel(eventTimeout);\n    var vidTime = playbackService.getCurrentTime();\n    var ourTime = playbackService.getMetaProp('time');\n\n    // TODO check video time delta, adjust ourTime as needed (most likely case is that video stalled\n    // and timeline has run ahead, so we'll be backtracking the timeline to match the video before we handle the events.\n    // find timeline events since last time stepEvent ran, handle them in order until one is a stop or a seek\n    for (var i = 0; i < svc.timelineEvents.length; i++) {\n      var evt = svc.timelineEvents[i];\n\n      if (evt.t >= eventClockData.lastTimelineTime) {\n        if (evt.t > ourTime) {\n          break; // NOTE! next event should be this one; let i fall through as is\n        }\n        // Don't let stop events stop us before we even start.\n        // (if the stop event and lastTimelineTime match, that stop event is what stopped us in the first place)\n        if (evt.action === 'pause' && (ignoreStopEvents || evt.t === eventClockData.lastTimelineTime)) {\n          // console.log(\"Skipping pause event\");\n        } else {\n          handleEvent(evt);\n          if (evt.action === 'pause') {\n            // TODO: check for multiple simultaneous pause actions, skip to the last one\n            i++;\n            break; //NOTE! next event should be the one AFTER the stop event, so let i++ fall through\n          }\n        }\n      }\n    }\n\n    var nextEvent = svc.timelineEvents[i]; // i falls through from the break statements above\n    var lastEvent = svc.timelineEvents[svc.timelineEvents.length - 1];\n\n    if (!ittUtils.existy(nextEvent) && ittUtils.existy(lastEvent) && /internal:endingscreen/.test(lastEvent.id)) {\n      _doEndingSequence();\n    }\n\n    eventClockData.lastVideoTime = vidTime;\n    eventClockData.lastTimelineTime = ourTime;\n\n    if (nextEvent && playbackService.getTimelineState() === 'playing') {\n      // need to check timelineState in case there were stop events above\n      // Find out how long until the next event, and aim for just a bit after it.\n      var timeToNextEvent = (svc.timelineEvents[i].t - ourTime) * 1000 / timeMultiplier;\n      // console.log(\"next event in \", timeToNextEvent);\n      eventTimeout = $timeout(stepEvent, timeToNextEvent + 10);\n    }\n  };\n\n  // \"event\" here refers to a timelineEvents event, not the modelSvc.event:\n  var handleEvent = function (event) {\n    if (event.id === 'timeline') {\n      //console.log(\"TIMELINE EVENT\");\n      if (event.action === 'pause') {\n        playbackService.setMetaProp('time', event.t);\n        console.log('handle stop event');\n        svc.pause(); // TODO handle pause with duration too\n      } else {\n        svc.play();\n      }\n    } else {\n      if (event.action === 'enter') {\n        modelSvc.events[event.id].state = 'isCurrent';\n        modelSvc.events[event.id].isCurrent = true;\n      } else if (event.action === 'exit') {\n        modelSvc.events[event.id].state = 'isPast';\n        modelSvc.events[event.id].isCurrent = false;\n      } else if (event.action === 'preload') {\n        preloadImageAsset(modelSvc.events[event.id]);\n      } else {\n        console.warn('Unknown event action: ', event, event.action);\n      }\n    }\n  };\n\n  // This is ONLY used to update appState.time in \"real\" time.  Events are handled by stepEvent.\n  var lastTick: number | undefined;\n  var startTimelineClock = function () {\n    // console.log('START TIMELINE CLOCK');\n    lastTick = undefined;\n    $interval.cancel(clock); // safety belt, in case we're out of synch\n    clock = $interval(_tick, 20);\n  };\n\n  var _tick = function () {\n    var thisTick: any = new Date();\n    var delta = (Number.isNaN(thisTick - lastTick)) ? 0 : (thisTick - lastTick);\n\n    //in the event that the timelineClock is running but the eventClock is not, start the eventClock.\n    if (!eventClockData.running) {\n      startEventClock();\n    }\n\n    var newTime = parseFloat(playbackService.getMetaProp('time')) + (delta / 1000 * timeMultiplier);\n    // check for out of bounds:\n    if (newTime < 0) {\n      newTime = 0;\n      svc.pause();\n    }\n\n    var currentDuration = playbackService.getMetaProp('duration');\n    if (newTime > currentDuration) {\n      newTime = currentDuration;\n      // svc.pause();\n      // _resetClocks();\n    }\n\n    playbackService.setMetaProp('time', newTime);\n    lastTick = thisTick;\n  };\n\n  svc.init = function (episodeId) {\n    // console.log('timelineSvc#init', episodeId);\n    svc.timelineEvents = [];\n    svc.markedEvents = [];\n    svc.displayMarkedEvents = [];\n    timeMultiplier = 1;\n    var episode = modelSvc.episode(episodeId);\n    playbackService.seedPlayer(episode.masterAsset.mediaSrcArr, episode.masterAsset._id, true);\n    playbackService.setTimelineState('unstarted');\n    playbackService.setMetaProp('duration', 0);\n    svc.injectEvents(modelSvc.episodeEvents(episodeId), 0);\n    playbackService.registerStateChangeListener(_onPlayerStateChange);\n    $interval.cancel(clock);\n    stopEventClock();\n  };\n\n  svc.injectEvents = function (events, injectionTime) {\n\n    // console.log(\"timelineSvc.injectEvents: has \", svc.timelineEvents.length, \" adding \", events.length);\n    // events should be an array of items in modelSvc.events\n    // for now this only supports adding events starting at injectionTime=0,\n    // which does not shift existing events later in time.\n\n    // in future will be able to inject episode events at injectionTime=whatever, shifting any later events\n    // to their new time (based on the total duration of the injected group)\n    // (which we'll need to get probably by passing in episode.duration along with the events?)\n\n    if (events.length === 0) {\n      return;\n    }\n    if (!injectionTime) {\n      injectionTime = 0;\n    }\n    angular.forEach(events, function (event) {\n      event.start_time = Number(event.start_time);\n      event.end_time = Number(event.end_time);\n      // add scenes to markedEvents[]:\n      if (event._type === 'Scene') {\n        if (appState.product === 'producer') {\n          // producer gets all scenes, even 'hidden' ones (which are now not 'hidden' but they indicate\n          //change in layout).\n          addMarkedEvent(event);\n        }\n\n        if (/internal:(landing|ending)screen/.test(event._id)) {\n          addMarkedEvent(event);\n        }\n      }\n      if (event._type === 'Chapter' || event.chapter_marker === true) {\n        addMarkedEvent(event);\n      }\n      if (event.start_time === 0 && !event._id.match('internal')) {\n        event.start_time = 0.01;\n        modelSvc.events[event._id].start_time = 0.01;\n      }\n      // add start and end to timelineEvents array\n      if (event.stop) {\n        addMarkedEvent(event); // give all stop items a timeline marker\n\n        svc.timelineEvents.push({\n          t: event.start_time + injectionTime,\n          id: 'timeline',\n          eventId: event._id, //Need to store the event id in case this event needs to get removed from the timeline\n          action: 'pause'\n        });\n        svc.timelineEvents.push({\n          t: event.start_time + injectionTime,\n          id: event._id,\n          action: 'enter'\n        });\n        // For now, ignore end_time on stop events; they always end immediately after user hits play again.\n        // In future we may allow durations on stop events so the\n        // video will start automatically after that elapses.\n        svc.timelineEvents.push({\n          t: (event.start_time + injectionTime + 0.01),\n          id: event._id,\n          action: 'exit'\n        });\n      } else {\n        // not a stop event.\n        svc.timelineEvents.push({\n          t: event.start_time + injectionTime,\n          id: event._id,\n          action: 'enter'\n        });\n\n        if (event.end_time || event.end_time === 0) {\n          if (/internal:endingscreen/.test(event._id)) {\n            // console.log('do not add exit event for ending screen.');\n            return;\n          }\n          svc.timelineEvents.push({\n            t: event.end_time + injectionTime,\n            id: event._id,\n            action: 'exit'\n          });\n        } else {\n          // TODO: handle missing end times.\n          // For transcript items, create an end time matching the start of the next transcript or the end of the scene\n          // or the duration (whichever comes first)\n          // For other items, create an end time matching the next scene start or the duration, whichever comes first\n          // For scenes, create an end time matching the start of the next scene or the duration, whichever comes first.\n          // That's complex logic, may be better handled in a second pass.... or, duh,  during authoring\n          console.warn('Missing end_time on event ', event);\n        }\n      }\n\n      // allow preload of event assets:\n      if (event.asset_id || event.annotation_image_id || event.link_image_id) {\n        svc.timelineEvents.push({\n          t: (event.start_time < 3) ? 0 : event.start_time - 3, // 3 seconds early\n          id: event._id,\n          action: 'preload'\n        });\n      }\n\n    });\n\n    svc.sortTimeline();\n    var groupedEvents = groupByStartTime(svc.markedEvents);\n    svc.displayMarkedEvents = prepGroupedEvents(groupedEvents);\n  };\n\n  function groupByStartTime(array) {\n    return array.reduce(function (map, event) {\n      if (map.hasOwnProperty(event.start_time)) {\n        map[event.start_time].push(event);\n      } else {\n        map[event.start_time] = [event];\n      }\n      return map;\n    }, {});\n  }\n\n  function prepGroupedEvents(map) {\n    var displayArr = [];\n    angular.forEach(map, function (val, key) {\n      var obj = {\n        events: val,\n        stop: false,\n        multiStop: false,\n        start_time: key,\n        //null over '' because empty strings are truthy in JS :(\n        toolTipText: null,\n        layoutChange: false\n      };\n      var foundStop = false, chapters = [], foundScene = false, foundInternalScene = false;\n      angular.forEach(val, function (event) {\n        if (/internal:endingscreen|internal:landingscreen/.test(event._id)) {\n          foundInternalScene = true;\n        }\n        if (event.stop) {\n          foundStop = true;\n        }\n        if (event.type === 'Scene') {\n          foundScene = true;\n        }\n\n        if (event.type === 'Chapter' || event.chapter_marker === true) {\n          chapters.push(event);\n        }\n\n      });\n\n      if (chapters.length === 0 && !foundScene && foundStop) {\n        obj.toolTipText = 'Stop item';\n      }\n\n      if (foundStop) {\n        obj.stop = true;\n      }\n\n      if (obj.events.length > 1 && foundStop) {\n        obj.multiStop = true;\n      }\n\n      if (foundScene && chapters.length === 0) {\n        obj.layoutChange = true;\n        obj.toolTipText = '(Layout Change)';\n      }\n\n      if (chapters.length > 0) {\n        angular.forEach(chapters, function (chap, $index) {\n          if ($index === 0) {\n            obj.toolTipText = chap.display_annotation || chap.display_title;\n          } else {\n            obj.toolTipText += ' / ' + (chap.display_annotation || chap.display_title);\n          }\n        });\n\n        if (foundScene) {\n          obj.toolTipText += ' (Layout Change)';\n        }\n\n        if (obj.multiStop) {\n          obj.toolTipText += ' / (Stop item)';\n        }\n      }\n      if (!foundInternalScene) {\n        displayArr.push(obj);\n      }\n    });\n\n    return displayArr;\n  }\n\n  var addMarkedEvent = function (newEvent: IEvent) {\n    // scan through existing markedEvents; if the new event is already there, replace it; otherwise add it\n    var wasFound = false;\n    for (var i = 0; i < svc.markedEvents.length; i++) {\n      if (svc.markedEvents[i]._id === newEvent._id) {\n        // replace existing event\n        svc.markedEvents[i] = angular.copy(newEvent);\n        wasFound = true;\n      }\n    }\n\n    // wasn't found, so add it:\n    if (!wasFound) {\n      svc.markedEvents.push(newEvent);\n    }\n\n    // console.log(svc.markedEvents);\n  };\n\n  svc.removeEvent = function (removeId) {\n    // delete anything corresponding to this id from the timeline:\n    // console.log(\"timelineSvc.removeEvent\");\n    svc.timelineEvents = $filter('filter')(svc.timelineEvents, function (timelineEvent) {\n      //Remove the timeline event if it's _id or eventId  equal the removeId\n      if (timelineEvent.id === removeId || timelineEvent.eventId === removeId) {\n        return false;\n      }\n      return true;\n    });\n    // and from the markedEvents, with its inexplicably inconsistent ID naming:\n    svc.markedEvents = $filter('filter')(svc.markedEvents, {\n      _id: '!' + removeId\n    });\n    //TS-1154 - remove the event from the displayMarkedEvents\n    var groupedEvents = groupByStartTime(svc.markedEvents);\n    svc.displayMarkedEvents = prepGroupedEvents(groupedEvents);\n    svc.updateEventStates();\n  };\n\n  svc.updateEventTimes = function (event) {\n    // remove old references, as in removeEvent, then re-add it with new times\n    // (not calling removeEvent here since it would do a redundant updateEventStates)\n    svc.timelineEvents = $filter('filter')(svc.timelineEvents, function (timelineEvent) {\n      //Remove the timeline event if it's _id or eventId  equal the removeId\n      if (timelineEvent.id === event._id || timelineEvent.eventId === event._id) {\n        return false;\n      }\n      return true;\n    });\n    svc.injectEvents([event], 0);\n  };\n\n  svc.updateSceneTimes = function (episodeId) {\n    // HACK(ish): since editing a scene's timing has side effects on other scenes,\n    // need to updateEventTimes for each scene in the episode when one changes\n    angular.forEach(modelSvc.episodes[episodeId].scenes, function (scene) {\n      svc.updateEventTimes(scene);\n    });\n  };\n\n  svc.sortTimeline = function () {\n\n    // keep events sorted by time.\n    // Simultaneous events should be sorted as exit, then enter, then stop.\n    // (sort order of 'preload' events doesn't matter.)\n    svc.timelineEvents = svc.timelineEvents.sort(function (a, b) {\n      if (a.t === b.t) {\n        if (a.action === b.action) {\n          return 0;\n        }\n        // This is overly verbose, but I keep running into differences in\n        // how Safari and FF sort when I try to simplify it:\n        if (a.action === 'enter') {\n          if (b.action === 'pause') {\n            return -1;\n          }\n          if (b.action === 'exit') {\n            return 1;\n          }\n        }\n        if (a.action === 'exit') {\n          return -1;\n        }\n        if (a.action === 'pause') {\n          return 1;\n        }\n        return 0;\n      } else {\n        return a.t - b.t;\n      }\n    });\n\n    svc.markedEvents = svc.markedEvents.sort(function (a, b) {\n      return a.start_time - b.start_time;\n    });\n\n    // for (var i = 0; i < svc.timelineEvents.length; i++) {\n    // \tconsole.log(svc.timelineEvents[i].t, svc.timelineEvents[i].action);\n    // }\n\n    // Find the latest end_time in the timeline, set that as the duration.\n    // TODO this will need to change when we support multiple episodes in one timeline\n\n    if (svc.timelineEvents.length > 0) {\n      playbackService.setMetaProp('duration', svc.timelineEvents[svc.timelineEvents.length - 1].t);\n    }\n    svc.updateEventStates();\n  };\n\n  svc.updateEventStates = function () {\n    // Sets past/present/future state of every event in the timeline.\n    // TODO performance check (though this isn't done often, only on seek and inject.)\n\n    // DO NOT check event start and end times directly; they're relative to the episode, not the timeline!\n    // instead preset everything to the future, then scan the timeline events up to now\n    // and set state based on enter/exit events per the timeline\n    var now = playbackService.getMetaProp('time');\n    // put everything in the future state:\n    angular.forEach(svc.timelineEvents, function (tE) {\n      if (tE.id !== 'timeline') {\n        var event = modelSvc.events[tE.id];\n        if (event) { // cancelling adding an event can leave \"internal:editing\" in the event list;\n          // TODO keep that from happening but for now just ignore it if it doesn't exist\n          event.setFuture();\n        }\n      }\n    });\n\n    // 2nd pass, step through all events before now:\n    angular.forEach(svc.timelineEvents, function (tE) {\n      if (tE.t <= now) {\n        var event = modelSvc.events[tE.id];\n        if (event) {\n          if (tE.action === 'enter') {\n            event.setCurrent();\n          } else if (tE.action === 'exit') {\n            event.setPast();\n          }\n        }\n      }\n    });\n    // console.count('updateEventState called');\n    // console.trace('updateEventStates');\n    // console.log('tlEvents', modelSvc.episodes[appState.episodeId].scenes);\n  };\n\n  var alreadyPreloadedImages = {};\n  var preloadImageAsset = function (event) {\n    if (event.asset && event.asset._type === 'Asset::Image') {\n      if (!alreadyPreloadedImages[event.asset.url]) {\n        // console.log(\"Preloading \", event.asset.url);\n        alreadyPreloadedImages[event.asset.url] = new Image();\n        alreadyPreloadedImages[event.asset.url].src = event.asset.url;\n      }\n    }\n  };\n\n  if (config.debugInBrowser) {\n    console.log('timelineSvc: ', svc);\n  }\n\n  return svc;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/timelineSvc/timelineSvc.ts","import {IParsedMediaSrcObj, IUrlService, IWistiaUrlservice} from '../interfaces';\n/**\n * Created by githop on 11/3/16.\n */\n\nurlService.$inject = ['youtubeUrlService', 'html5UrlService', 'kalturaUrlService', 'wistiaUrlService', 'config'];\n\nexport default function urlService(youtubeUrlService, html5UrlService, kalturaUrlService, wistiaUrlService: IWistiaUrlservice, config) {\n\n  var _urlSubServices = {\n    youtube: youtubeUrlService,\n    html5: html5UrlService,\n    kaltura: kalturaUrlService,\n    wistia: wistiaUrlService\n  };\n\n  return <IUrlService> {\n    parseMediaSrcArr: parseMediaSrcArr,\n    checkUrl: checkUrl,\n    getOutgoingUrl: getOutgoingUrl,\n    parseInput: parseInput,\n    isVideoUrl: isVideoUrl,\n    resolveVideo: resolveVideo\n  };\n\n  function parseInput(input) {\n    var type = checkUrl(input).type;\n    if (type.length > 0) {\n      return _urlSubServices[type].parseInput(input);\n    }\n  }\n\n  /**\n   *\n   * @param mediaSrcArr\n   * @return parsedMediaSrcArr Array<{type: string, mediaSrcArr: Array<String>}>\n   */\n  function parseMediaSrcArr(mediaSrcArr: string[]): IParsedMediaSrcObj[] {\n    return Object.keys(_urlSubServices).reduce(function (parsedMediaSrcArr, urlSrv) {\n      var parsedMediaSrcObj = _urlSubServices[urlSrv].parseMediaSrc(mediaSrcArr);\n      if (parsedMediaSrcObj.mediaSrcArr.length > 0) {\n        parsedMediaSrcArr.push(parsedMediaSrcObj);\n      }\n      return parsedMediaSrcArr;\n    }, []);\n  }\n\n  function isVideoUrl(url) {\n    return checkUrl(url).type.length > 0;\n  }\n\n  function checkUrl(url) {\n    return Object.keys(_urlSubServices).reduce(function (map, urlSrv) {\n      if (_urlSubServices[urlSrv].canPlay(url)) {\n        map.type = urlSrv;\n        map.mimeType = _urlSubServices[urlSrv].getMimeType(url);\n      }\n      return map;\n    }, {type: '', mimeType: ''});\n  }\n\n  function getOutgoingUrl(url, startAt) {\n    var type = checkUrl(url).type;\n    if (type.length > 0) {\n      return _urlSubServices[type].getOutgoingUrl(url, startAt);\n    }\n  }\n\n  function resolveVideo(videoAsset) {\n    var videoObject = {\n      youtube: [],\n      mp4: [],\n      webm: [],\n      m3u8: [],\n      kaltura: [],\n      wistia: []\n    };\n\n    var extensionMatch = /\\.(\\w+)$/;\n\n    if (videoAsset.alternate_urls) {\n      // Sort them out by file extension first:\n      for (var i = 0; i < videoAsset.alternate_urls.length; i++) {\n        if (videoAsset.alternate_urls[i].match(/youtube/)) {\n          if (youtubeUrlService.embeddableYoutubeUrl(videoAsset.alternate_urls[i])) {\n            videoObject.youtube.push(youtubeUrlService.embeddableYoutubeUrl(videoAsset.alternate_urls[i]));\n          }\n        } else {\n          videoObject[videoAsset.alternate_urls[i].match(extensionMatch)[1]].push(videoAsset.alternate_urls[i]);\n        }\n      }\n\n      //remove after migration\n      if (videoAsset.you_tube_url && youtubeUrlService.embeddableYoutubeUrl(videoAsset.you_tube_url)) {\n        videoObject.youtube.push(youtubeUrlService.embeddableYoutubeUrl(videoAsset.you_tube_url));\n      }\n      //end remove after migration\n\n      // now by size:\n      // most video files come from the API with their width and height in the URL as blahblah123x456.foo:\n      var videoPixelSize = /(\\d+)x(\\d+)\\.\\w+$/; // [1]=w, [2]=h\n      angular.forEach(Object.keys(videoObject), function (key) {\n        videoObject[key] = videoObject[key].sort(function (a, b) {\n          // There shouldn't ever be cases where we're comparing two non-null filenames, neither of which have a\n          // WxH portion, but fill in zero just in case so we can at least continue rather than erroring out\n          var aTest = a.match(videoPixelSize) || [0, 0];\n          var bTest = b.match(videoPixelSize) || [0, 0];\n          return aTest[1] - bTest[1]; // compare on width\n        });\n      });\n    }\n\n    // Old-school episodes, or linked youtube assets\n    // Use the you_tube_url,  if it's not present in alternate_urls:\n    if (videoObject.youtube.length === 0) {\n      if (videoAsset.url) {\n        if (youtubeUrlService.embeddableYoutubeUrl(videoAsset.url)) {\n          videoObject.youtube = [youtubeUrlService.embeddableYoutubeUrl(videoAsset.url)];\n        }\n      }\n      //remove after migration\n      if (videoAsset.you_tube_url) {\n        if (youtubeUrlService.embeddableYoutubeUrl(videoAsset.you_tube_url)) {\n          videoObject.youtube = [youtubeUrlService.embeddableYoutubeUrl(videoAsset.you_tube_url)];\n        }\n      }\n      //end remove after migration\n    }\n\n    // Same for other types (we used to put the .mp4 in videoAsset.url and just swapped out the extension for other types, which was silly, which is why we stopped doing it, but some old episodes never got updated)\n    if (!videoAsset.alternate_urls) {\n      angular.forEach([\"mp4\", \"webm\", \"m3u8\"], function (ext) {\n        if (videoObject[ext].length === 0 && !(videoAsset.url.match(/youtube/))) {\n          videoObject[ext].push(videoAsset.url.replace(\"mp4\", ext));\n        }\n      });\n    }\n\n    if (config.youtube.disabled) {\n      delete videoObject.youtube;\n    }\n\n    // Only Safari supports m3u8 at the moment\n    var isSafari = /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor);\n    if (!isSafari) {\n      delete videoObject.m3u8;\n    }\n\n    // Chrome won't allow the same video to play in two windows, which interferes with our 'escape the iframe' button.\n    // Therefore we trick Chrome into thinking it is not the same video:\n    var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n    if (isChrome) {\n      var tDelimit;\n      var tParam = \"t=\" + new Date().getTime();\n      angular.forEach([\"mp4\", \"webm\"], function (ext) {\n        if (videoObject[ext].length > 0) {\n          for (var i = 0; i < videoObject[ext].length; i++) {\n            tDelimit = videoObject[ext][i].match(/\\?/) ? \"&\" : \"?\";\n            videoObject[ext][i] = videoObject[ext][i] + tDelimit + tParam;\n          }\n        }\n      });\n    }\n\n    if (kalturaUrlService.canPlay(videoAsset.url)) {\n      videoObject.kaltura.push(videoAsset.url);\n    }\n\n    if (wistiaUrlService.canPlay(videoAsset.url)) {\n      videoObject.wistia.push(videoAsset.url);\n    }\n\n    videoAsset.urls = videoObject;\n    videoAsset.mediaSrcArr = _resolveMediaSrcArray(videoObject);\n    return videoAsset;\n  }\n\n  function _resolveMediaSrcArray(videoObject) {\n    return Object.keys(videoObject).reduce(function (mediaSrcArr, mediaSrc) {\n      mediaSrcArr = mediaSrcArr.concat(videoObject[mediaSrc]);\n      return mediaSrcArr;\n    }, []);\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/urlService.ts","/**\n * Created by githop on 1/16/17.\n */\n\nimport {IMetaProps} from '../../interfaces';\nimport {commonMetaProps} from './index';\n/**\n * @ngdoc service\n * @name iTT.service:playerManagerCommons\n * @description\n * Implements / exports common methods used across all player managers.\n * @property {Object} commonMetaProps public metaProps\n * @requires ittUtils\n *\n */\n\n\nexport interface IBasePlayerManager {\n  commonMetaProps: IMetaProps;\n  getPlayer(pid: string): any;\n  setPlayer(pid: string, val: any): void;\n  getMetaProp(pid: string, prop: string): any;\n  setMetaProp(validKeys: () => {}): (pid: string, prop: string, val: any) => void;\n  setInstance(pid: string, instance: object): void;\n  createMetaObj(props: object, base: object): object;\n  getMetaObj(pid: string): object;\n  getPlayerDiv(pid: string): string;\n  getInstance(predicate: () => boolean): (pid: string) => object;\n  registerStateChangeListener(stateChangeListener: (stateChangeEvent: object) => void): void;\n  unregisterStateChangeListener(cb: () => {}): void;\n  getStateChangeListeners(): any[];\n  pauseOtherPlayers(pauseFn: () => void, getPlayerState: () => number): (pid: string) => void;\n  resetPlayerManager(destroyFn: () => void): () => void;\n  renamePid(oldName: string, newName: string): void;\n  handleTimelineEnd(fn: () => void): (pid: string) => void;\n}\n\nplayerManagerCommons.$inject = ['ittUtils'];\n\nexport default function playerManagerCommons(ittUtils) {\n  var _existy = ittUtils.existy;\n  return function (locals) {\n\n    var _players = locals.players;\n    var _stateChangeCallbacks = [];\n    var _type = locals.type;\n\n\n    const pm: IBasePlayerManager = {\n      commonMetaProps,\n      getPlayer,\n      setPlayer,\n      getMetaProp,\n      setInstance,\n      setMetaProp,\n      createMetaObj,\n      getMetaObj,\n      getPlayerDiv,\n      getInstance,\n      registerStateChangeListener,\n      unregisterStateChangeListener,\n      getStateChangeListeners,\n      pauseOtherPlayers,\n      resetPlayerManager,\n      renamePid,\n      handleTimelineEnd\n    };\n\n    return pm;\n\n    function getStateChangeListeners() {\n      return _stateChangeCallbacks;\n    }\n\n    function getPlayer(pid) {\n      if (_existy(_players[pid])) {\n        return _players[pid];\n      }\n    }\n\n    function setInstance(pid, instance): void {\n      let playerObj = getPlayer(pid);\n      playerObj.instance = instance;\n    }\n\n    function setPlayer(pid, val) {\n      _players[pid] = val;\n    }\n\n    function getMetaProp(pid, prop) {\n      if (_existy(_players[pid]) && _existy(_players[pid].meta)) {\n        return _players[pid].meta[prop];\n      }\n    }\n\n    function setMetaProp(validKeys) {\n      return function (pid, prop, val) {\n        if (validKeys.indexOf(prop) === -1) {\n          throw new Error(prop + ' is not a valid prop for' + _type + ' meta info');\n        }\n\n        if (_existy(_players[pid] && _players[pid].meta)) {\n          try {\n            _players[pid].meta[prop] = val;\n          }\n          catch (e) {\n            console.log('catch read only error:', e, 'prop', prop, 'val', val);\n          }\n        }\n      };\n    }\n\n    /**\n     * @ngdoc method\n     * @name #getMetaObj\n     * @methodOf iTT.service:playerManagerCommons\n     * @description\n     * returns the entire metaObj, currently used only for debugging.\n     * @param {String} pid the pid of the player\n     * @returns {Object} The requested objects Meta Props.\n     */\n    function getMetaObj(pid) {\n      if (_existy(_players[pid]) && _existy(_players[pid].meta)) {\n        return _players[pid].meta;\n      }\n    }\n\n    /**\n     * @private\n     * @ngdoc method\n     * @name _createMetaObj\n     * @methodOf iTT.service:playerManagerCommons\n     * @param {Object} base base object to copy from.\n     * @param {Object} props array of objects (properties) to set on the copy of the meta object.\n     * @returns {Object} returns copy of new meta object\n     */\n    function createMetaObj(props, base) {\n      var newMetaObj = angular.copy(base);\n      newMetaObj.meta = angular.extend(newMetaObj.meta, props);\n      return newMetaObj;\n    }\n\n    /**\n     * @ngdoc method\n     * @name #getPlayerDiv\n     * @methodOf iTT.service:playerManagerCommons\n     * @description\n     * returns an HTML string with the ID from the input param\n     * @param {String} id the ID of the player\n     * @return {String} the HTML string to be used by ittVideo\n     */\n    function getPlayerDiv(id) {\n      return getMetaProp(id, 'div');\n    }\n\n    function pauseOtherPlayers(pauseFn, getPlayerState) {\n      return function (pid) {\n        Object.keys(_players).forEach(function (playerId) {\n          if (playerId !== pid) {\n            var otherPlayerState = getPlayerState(playerId);\n            if (_existy(otherPlayerState)) {\n              if (otherPlayerState === 'playing') {\n                pauseFn(playerId);\n              }\n            }\n          }\n        });\n      };\n    }\n\n    /**\n     * @ngdoc method\n     * @name getInstance\n     * @methodOf iTT.service:playerManagerCommons\n     * @param {String} pid Unique ID\n     * @returns {Object} returns HTML5 video element\n     * @private\n     */\n    function getInstance(predicate) {\n      return function (pid) {\n        if (predicate(pid) === true) {\n          return getPlayer(pid).instance;\n        }\n      };\n    }\n\n    /**\n     * @ngdoc method\n     * @name #registerStateChangeListener\n     * @methodOf iTT.service:playerManagerCommons\n     * @param {Function} cb callback to fire\n     * @returns {Void} returns void\n     */\n    function registerStateChangeListener(cb) {\n      var len = _stateChangeCallbacks.length;\n\n      while (len--) {\n        if (cb.toString() === _stateChangeCallbacks[len].toString()) {\n          return;\n        }\n      }\n\n      _stateChangeCallbacks.push(cb);\n    }\n\n    /**\n     * @ngdoc method\n     * @name #unregisterStateChangeListener\n     * @methodOf iTT.service:playerManagerCommons\n     * @param {Function} cb callback to unregister\n     * @returns {Void} returns void.\n     */\n    function unregisterStateChangeListener(cb) {\n      _stateChangeCallbacks = _stateChangeCallbacks.filter(function (fn) {\n        return fn.toString() !== cb.toString();\n      });\n    }\n\n    /**\n     * @ngdoc method\n     * @name #resetPlayerManager\n     * @methodOf iTT.service:playerManagerCommons\n     * @description\n     * Will destroy all instances of YT on the _players map and reset it to an empty object.\n     * @returns {Void} No return value.\n     */\n    function resetPlayerManager(destroyFn) {\n      return function () {\n        angular.forEach(_getPlayers(), function (pm, id) {\n          _destroyInstance(id, true, destroyFn);\n        });\n        _players = {};\n      };\n    }\n\n    function renamePid(oldName, newName) {\n      ittUtils.renameKey(oldName, newName, _players);\n    }\n\n    function handleTimelineEnd(fn) {\n      return function (pid) {\n        return fn(pid);\n      };\n    }\n\n    /**\n     * @ngdoc method\n     * @name #destroyInstance\n     * @methodOf iTT.service:playerManagerCommons\n     * @description\n     * Used to destroy YT instances and clear them from the _players object\n     * @param {String} pid The ID of the YT instance\n     * @param {Boolean} [doRemove=false] optional param to optionally reset the instance in the _players map.\n     * @returns {Void} No return value.\n     * @private\n     */\n    function _destroyInstance(pid, doRemove, sideEffects) {\n      if (!_existy(doRemove)) {\n        doRemove = false;\n      }\n\n      sideEffects(pid);\n\n      if (doRemove === true) {\n        setPlayer(pid, {});\n      }\n    }\n\n    function _getPlayers() {\n      return _players;\n    }\n  };\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/basePlayerManager/playerManagerCommons.ts","/**\n * Created by githop on 1/18/16.\n */\n\n/**\n * @ngdoc service\n * @name iTT.service:html5PlayerManager\n * @description\n * Implements the PlayerManager interface, wraps HTML5 videos\n * @property {String} type the type of playerManager\n * @requires $interval\n * @requires PLAYERSTATES\n * @requires ittUtils\n */\n// var readyStates = {\n// \t0: 'HAVE_NOTHING',\n// \t1: 'HAVE_METADATA',\n// \t2: 'HAVE_CURRENT_DATA',\n// \t3: 'HAVE_FUTURE_DATA',\n// \t4: 'HAVE_ENOUGH_DATA'\n// }\n\nhtml5PlayerManager.$inject = ['$interval', 'PLAYERSTATES', 'ittUtils', 'appState', 'playerManagerCommons'];\n\nexport default function html5PlayerManager($interval, PLAYERSTATES, ittUtils, appState, playerManagerCommons) {\n  var _players = {};\n  var _mainPlayerId;\n  // var _checkInterval = 50.0;\n  var _ignoreNextEventIfPause = false;\n  var _type = 'html5';\n  var _existy = ittUtils.existy;\n  var base = playerManagerCommons({players: _players, type: _type});\n  var commonMetaProps = base.commonMetaProps;\n\n  var _html5MetaProps = {\n    videoObj: {},\n    videoType: _type\n  };\n\n  var _html5MetaObj = {\n    instance: null,\n    meta: {}\n  };\n\n  angular.extend(_html5MetaObj.meta, _html5MetaProps, commonMetaProps);\n\n  var _validMetaKeys = Object.keys(_html5MetaObj.meta);\n  var predicate = function (pid) {\n    return (_existy(getPlayer(pid)) && _existy(getPlayer(pid).instance))\n  };\n\n  function html5Ending(pid) {\n    stop(pid);\n    const instance = getInstance(pid);\n    onEnded.call(instance);\n  }\n\n  var getPlayer = base.getPlayer;\n  var setPlayer = base.setPlayer;\n  var getPlayerDiv = base.getPlayerDiv;\n  var getInstance = base.getInstance(predicate);\n  var createMetaObj = base.createMetaObj;\n  var getMetaObj = base.getMetaObj;\n  var getMetaProp = base.getMetaProp;\n  var setMetaProp = base.setMetaProp(_validMetaKeys);\n  var registerStateChangeListener = base.registerStateChangeListener;\n  var unregisterStateChangeListener = base.unregisterStateChangeListener;\n  var pauseOtherPlayers = base.pauseOtherPlayers(pause, getPlayerState);\n  var resetPlayerManager = base.resetPlayerManager(_removeEventListeners);\n  var renamePid = base.renamePid;\n  var handleTimelineEnd = base.handleTimelineEnd(html5Ending);\n  var _getStateChangeListeners = base.getStateChangeListeners;\n\n  return {\n    type: _type,\n    getMetaProp: getMetaProp,\n    setMetaProp: setMetaProp,\n    getMetaObj: getMetaObj,\n    getPlayerDiv: getPlayerDiv,\n    pauseOtherPlayers: pauseOtherPlayers,\n    registerStateChangeListener: registerStateChangeListener,\n    unregisterStateChangeListener: unregisterStateChangeListener,\n    resetPlayerManager: resetPlayerManager,\n    renamePid: renamePid,\n    seedPlayerManager: seedPlayerManager,\n    create: create,\n    getPlayerState: getPlayerState,\n    play: play,\n    pause: pause,\n    seekTo: seek,\n    getCurrentTime: getCurrentTime,\n    getBufferedPercent: getBufferedPercent,\n    toggleMute: toggleMute,\n    setVolume: setVolume,\n    setSpeed: setSpeed,\n    freezeMetaProps: freezeMetaProps,\n    unFreezeMetaProps: unFreezeMetaProps,\n    stop: stop,\n    handleTimelineEnd: handleTimelineEnd\n  };\n\n  //public methods\n  /**\n   * @ngdoc method\n   * @name #create\n   * @methodOf iTT.service:html5PlayerManager\n   * @param {string} divID unique ID of video tag\n   * @returns {Void} no return value\n   */\n  function create(divID) {\n\n    if (Object.isFrozen(getPlayer(divID).meta)) {\n      unFreezeMetaProps(divID);\n    }\n\n    var plr = document.getElementById(divID);\n    _attachEventListeners(plr);\n\n    plr.onStateChange = _onStateChange;\n    plr.controls = true;\n\n    if (_mainPlayerId === divID) {\n      _mainPlayerId = divID;\n      plr.controls = false;\n    }\n\n    plr.load();\n    // _players[divID].instance = plr;\n    getPlayer(divID).instance = plr;\n\n    // console.log('check', getPlayer(divID));\n    // temp to test out video source change.\n    // $timeout(function() {\n    // \tconsole.info('BEGIN QUALITY CHANGE!');\n    // \t_changeVideoQuality(divID, 1);\n    // \t_players[divID].meta.playerState = 2;\n    // \t_emitStateChange(plr);\n    // }, 8 * 1000);\n\n    // var checkBuffering = _checkBuffering(plr);\n\n    // var interval = $interval(checkBuffering, _checkInterval);\n  }\n\n  /**\n   * @ngdoc method\n   * @name #freezeMetaProps\n   * @methodOf iTT.service:html5PlayerManager\n   * @description Freezes the player's meta data object\n   * @param {String} pid the pid of the player to freeze.\n   * @returns {Void} returns void\n   */\n  function freezeMetaProps(pid) {\n    Object.freeze(getMetaObj(pid));\n  }\n\n  /**\n   * @ngdoc method\n   * @name #unFreezeMetaProps\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * Unfreeze metaObj by copying (shallow) all of the props into a new object.\n   * @param {String} pid the pid of the player to unfreeze\n   * @returns {Void} returns void.\n   */\n  function unFreezeMetaProps(pid) {\n    var newMeta, prop, frozenMeta;\n    frozenMeta = getMetaObj(pid);\n    newMeta = {};\n\n    for (prop in frozenMeta) {\n      if (frozenMeta.hasOwnProperty(prop)) {\n        newMeta[prop] = frozenMeta[prop];\n      }\n    }\n\n    //If this is a Safari browser, there will be a pause event that gets emitted after this unfreeze happens.\n    //This would cause the state to be recorded as paused and would therefore break the automatic resumption of the html5 video.\n    //Therefore, we will suppress that pause event.\n    if (/Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor)) {\n      _ignoreNextEventIfPause = true;\n    }\n\n    getPlayer(pid).meta = newMeta;\n  }\n\n  /**\n   * @ngdoc method\n   * @name #seedPlayerManager\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * Used to set the PID / divID for a html5 video element, is called prior to create()\n   * @param {String} id Main Video Asset ID or Event ID (for embeds)\n   * @param {Boolean} mainPlayer Determines type of player, embed or main\n   * @param {Array} mediaSrcArr array of youtube URLs\n   * @returns {Void} returns void.\n   */\n  function seedPlayerManager(id, mainPlayer, mediaSrcArr) {\n\n    //bail if we were frozen prior to attempting to re-init player.\n    if (_existy(getPlayer(id)) && getMetaProp(id, 'startAtTime') > 0) {\n      return;\n    }\n\n    if (mainPlayer) {\n      _players = {};\n      _mainPlayerId = id;\n    }\n\n    var plrInfo = _initPlayerDiv(id, mediaSrcArr);\n    //store relevant info the particular player in the 'meta' obj.\n    var newProps = {\n      mainPlayer: mainPlayer,\n      videoObj: plrInfo.videoObj,\n      div: plrInfo.videoElm\n    };\n\n    setPlayer(id, createMetaObj(newProps, _html5MetaObj));\n  }\n\n  /*\n   HTML5 media event handlers\n   */\n  function onSeeked(ev) {\n    var state = getPlayerState(this.id);\n    if (state === 'playing' || state === 'buffering' && appState.isIEOrEdge === true) {\n      //manually fire onPlaying for IE/Edge only as to avoid duplicate onplaying events.\n      onPlaying.call(this);\n    }\n\n    const {currentTime, duration} = ev.target;\n    const padding = 0.5;\n\n    if (Math.floor(duration - currentTime) <= padding) {\n      onEnded.call(this);\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name onEnded\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * HTML5 media event handler bound to HTML5 video element,\n   * used to handle appropriate side effects and pipe events up stream\n   * @private\n   * @returns {Void} Returns void but will emit a 'ended' event as side-effect\n   */\n  function onEnded() {\n    var instance = getInstance(this.id);\n    setMetaProp(this.id, 'playerState', 0);\n    _emitStateChange(instance);\n  }\n\n  /**\n   * @ngdoc method\n   * @name onCanPlay\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * Used to determine when the video can be played for the first time\n   * @private\n   * @returns {Void} Returns void but will emit a 'player ready' evetn as side-effect.\n   */\n  function onCanPlay() {\n    var instance = getInstance(this.id);\n    if (getMetaProp(this.id, 'ready') === false) {\n      _emitStateChange(instance, 6);\n      setMetaProp(this.id, 'duration', instance.duration);\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @private\n   * @name onPlaying\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * Event handler that responds to a 'playing' HTML5 media event.\n   * @returns {Void} returns void but will emit a 'playing' event.\n   */\n  function onPlaying() {\n    var instance = getInstance(this.id);\n    setMetaProp(this.id, 'playerState', 1);\n    _emitStateChange(instance);\n  }\n\n  /**\n   * @ngdoc method\n   * @private\n   * @name onPause\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * Event handler for 'pause' event.\n   * @returns {Void} returns void but will emit a 'paused' event\n   */\n  function onPause() {\n    var instance = getInstance(this.id);\n    //Bail out if we are ignoring the next pause event\n    if (_ignoreNextEventIfPause === true) {\n      _ignoreNextEventIfPause = false;\n      return;\n    }\n    setMetaProp(this.id, 'playerState', 2);\n    _emitStateChange(instance);\n  }\n\n  /**\n   * @ngdoc method\n   * @name onBuffering\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * Event handler for 'buffering' event, note that HTML5 media api does not have a 'buffering' event, this is\n   * bound to the 'onWaiting' event.\n   * @returns {Void} returns void but will emit a 'buffering' event.\n   */\n  function onBuffering() {\n    var instance = getInstance(this.id);\n    setMetaProp(this.id, 'playerState', 3);\n    _emitStateChange(instance);\n  }\n\n  /*\n   Playback exported methods\n   */\n\n  /**\n   * @ngdoc method\n   * @name #play\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * Will play the video.\n   * @param {String} pid the PID of the video to play\n   * @returns {Void} returns void.\n   */\n  function play(pid) {\n    var instance = getInstance(pid);\n    var timestamp = getMetaProp(pid, 'time');\n    var playerRendered = getMetaProp(pid, 'ready');\n    var waitUntilReady = $interval(function () {\n      var delay;\n      //make sure the player is in a state to accept commands\n      if (_existy(instance) && instance.readyState === 4 && playerRendered === true) {\n        delay = getMetaProp(pid, 'time');\n        //check for a drift then seek to original time to fix.\n        //only for main player, otherwise embed players will attempt\n        //to resume playback according to the timeline time.\n        if (pid === _mainPlayerId && timestamp <= delay) {\n          instance.currentTime = timestamp;\n        }\n        instance.play();\n        $interval.cancel(waitUntilReady);\n      }\n    }, 10);\n  }\n\n  /**\n   * @ngdoc method\n   * @name #pause\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * used to pause the player\n   * @param {String} pid the pid of the player\n   * @returns {Void} returns void.\n   */\n  function pause(pid) {\n    var instance = getInstance(pid);\n    instance.pause();\n  }\n\n  function stop(pid) {\n    setMetaProp(pid, 'time', getMetaProp(pid, 'duration'));\n    console.log('stopped!');\n    pause(pid);\n  }\n\n  /**\n   * @ngdoc method\n   * @name #getCurrentTime\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * reports the current time of video playback.\n   * @param {String} pid the pid of the player\n   * @returns {Number} the time of playback.\n   */\n  function getCurrentTime(pid) {\n    var instance = getInstance(pid);\n    if (instance !== undefined) {\n      return instance.currentTime;\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #getPlayerState\n   * @methodOf iTT.service:html5PlayerManager\n   * @description returns the current state of the player\n   * @param {String} pid the player to query for state\n   * @returns {String} the player state\n   */\n  function getPlayerState(pid) {\n    // var instance = _getInstance(pid);\n    var player = getPlayer(pid);\n\n    if (_existy(player)) {\n      return PLAYERSTATES[player.meta.playerState];\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #seek\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * will seek the video to the input time\n   * @param {String} pid the player to seek\n   * @param {Number} t the time to seek to.\n   * @returns {Void} returns void.\n   */\n  function seek(pid, t) {\n    var instance = getInstance(pid);\n    instance.currentTime = t;\n  }\n\n  /**\n   * @ngdoc method\n   * @name #setSpeed\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * used to speed up / slow down the rate of video playback.\n   * @param {String} pid the pid of the player\n   * @param {Number} playbackRate the rate of playback to set\n   * @returns {Void} returns void.\n   */\n  function setSpeed(pid, playbackRate) {\n    var instance = getInstance(pid);\n    instance.playbackRate = playbackRate;\n  }\n\n  /**\n   * @ngdoc method\n   * @name #toggleMute\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * toggles the mute on / off\n   * @param {String} pid the pid of the player\n   * @returns {Void} returns void.\n   */\n  function toggleMute(pid) {\n    var instance = getInstance(pid);\n    instance.muted = !instance.muted;\n    setMetaProp(pid, 'muted', instance.muted);\n  }\n\n  /**\n   * @ngdoc method\n   * @name #setVolume\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * used to set the volume.\n   * @param {String} pid the pid of the player\n   * @param {Number} vol the value to set the volume to\n   * @returns {Void} returns void.\n   */\n  function setVolume(pid, vol) {\n    var instance = getInstance(pid);\n    instance.volume = (vol / 100);\n    setMetaProp(pid, 'volume', vol);\n  }\n\n  /**\n   * @ngdoc method\n   * @name #getBufferedPercent\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * Used to determine the percent of buffered video\n   * @param {String} pid The ID of the YT instance\n   * @returns {Number} Numerical value representing\n   * percent of video that is currently buffered\n   */\n  function getBufferedPercent(pid) {\n    var instance = getInstance(pid);\n    if (instance && getMetaProp(pid, 'playerState') !== -1) {\n      if (instance.buffered.length > 0) {\n        var bufLen = instance.buffered.length;\n        var bufStart = instance.buffered.start(bufLen - 1);\n        var bufEnd = instance.buffered.end(bufLen - 1);\n\n        if (bufEnd < 0) {\n          bufEnd = bufEnd - bufStart;\n          bufStart = 0;\n        }\n        return bufEnd / getMetaProp(pid, 'duration') * 100;\n      }\n    }\n\n  }\n\n  /*\n   private methods\n   */\n\n  /**\n   * @private\n   * @ngdoc method\n   * @name _initPlayerDiv\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * Used to create a HTML video tag with the src tags mapped to the URLs in the input array.\n   * @param {String} id the unique id\n   * @param {Array} mediaSrcArr array of URLs that could contain .mp4, .webm or .m3u8 files\n   * @returns {Object} Object with videoObj and videoElm properties\n   */\n  function _initPlayerDiv(id, mediaSrcArr) {\n    var videoObj = _getHtml5VideoObject(mediaSrcArr);\n    var videoElm = _drawPlayerDiv(id, videoObj, 0);\n    return {videoObj: videoObj, videoElm: videoElm};\n  }\n\n  /**\n   * @ngdoc method\n   * @name _drawPlayerDiv\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * Helper method that abstracts the functionality of creating a HTML5 video tag\n   * @param {String} id unique id\n   * @param {Object} videoObj Object with array of source URLs by file type\n   * @param {Number} quality index to select the proper source out of the availble sources\n   * @returns {string} returns HTML5 video element\n   * @private\n   */\n  function _drawPlayerDiv(id, videoObj, quality) {\n    var videoElement = document.createElement('video');\n    videoElement.id = id;\n\n    Object.keys(videoObj).forEach(function (fileType) {\n      var classAttr, srcAttr, typeAttr, srcElement;\n\n      classAttr = fileType;\n\n      if (classAttr === 'mp4') {\n        classAttr = 'mpeg4';\n      }\n\n      srcAttr = videoObj[fileType][quality];\n\n      if (!_existy(srcAttr)) {\n        return;\n      }\n\n      if (fileType === 'm3u8') {\n        typeAttr = 'application/x-mpegURL';\n      } else {\n        typeAttr = 'video/' + fileType;\n      }\n\n      srcElement = document.createElement('source');\n      srcElement.setAttribute('type', typeAttr);\n      srcElement.setAttribute('src', srcAttr);\n      srcElement.setAttribute('class', classAttr);\n      videoElement.appendChild(srcElement);\n    });\n\n    var fallback = document.createElement('p');\n    fallback.innerText = 'Oh no! Your browser does not support the HTML5 Video element.';\n    videoElement.appendChild(fallback);\n    return videoElement.outerHTML;\n  }\n\n  /**\n   * @ngdoc method\n   * @name _formatPlayerStateChangeEvent\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * Helper method for creating an object that conforms to our message API between\n   * the timelineSvc, playbackService, and individual playerManagers\n   * @param {Number} event Interger that corresponds to a playerStateChange\n   * @param {String} pid Unique ID of player\n   * @returns {Object} Object with emitterID String and state String props\n   * @private\n   */\n  function _formatPlayerStateChangeEvent(event, pid) {\n    return {\n      emitterId: pid,\n      state: PLAYERSTATES[event]\n    };\n  }\n\n  /**\n   * @ngdoc method\n   * @name _emitStateChange\n   * @methodOf iTT.service:html5PlayerManager\n   * @param {Object} instance HTML5 Video element\n   * @param {Boolean} [forceState] optional Boolean if you want to send a message without setting the playerState\n   * on the meta object.\n   * @private\n   */\n  function _emitStateChange(instance, forceState?) {\n    var player = getPlayer(instance.id);\n    var state;\n\n    //for emitting a state but not setting it on the player.\n    if (forceState) {\n      state = forceState;\n    } else {\n      state = player.meta.playerState;\n    }\n\n    instance.onStateChange(_formatPlayerStateChangeEvent(state, instance.id));\n  }\n\n  /**\n   * @ngdoc method\n   * @name _onStateChange\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * Method bound to each instance of _player[id] to invoke the stateChangeCallback for any listeners\n   * @param {Object} event the message to send\n   * @private\n   */\n  function _onStateChange(event) {\n    angular.forEach(_getStateChangeListeners(), function (cb) {\n      cb(event);\n    });\n  }\n\n  /**\n   * @ngdoc method\n   * @name _getHtml5VideoObject\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * reduces an array of URLs into an Object used in other helper methods ultimately to format a\n   * string of HTML with the provided input URLS as source tags.\n   * @param {Array} mediaSrcArr array of URLS\n   * @returns {Object} Object with mp4, webm, and m3u8 props, array of strings\n   * @private\n   */\n  function _getHtml5VideoObject(mediaSrcArr) {\n    var extensionMatch = /(mp4|m3u8|webm)/;\n\n    return mediaSrcArr.reduce(function (videoObject, mediaSrc) {\n      var fileTypeKey = mediaSrc.match(extensionMatch)[1];\n      videoObject[fileTypeKey].push(mediaSrc);\n      return videoObject;\n    }, {mp4: [], webm: [], m3u8: []});\n  }\n\n  /**\n   * @ngdoc method\n   * @name _attachEventListeners\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * helper method to abstract attaching of event listeners to the necessary events and wiring up the relevant\n   * function\n   * @param {Object} videoElement HTML5 video element\n   * @private\n   */\n  function _attachEventListeners(videoElement) {\n    var evMap = {\n      'pause': onPause,\n      'playing': onPlaying,\n      'waiting': onBuffering,\n      'seeked': onSeeked,\n      'canplay': onCanPlay,\n      'ended': onEnded\n    };\n\n    Object.keys(evMap).forEach(function (evtName) {\n      (function (evtName) {\n        videoElement.addEventListener(evtName, evMap[evtName]);\n      })(evtName);\n    });\n  }\n\n  /**\n   * @ngdoc method\n   * @name _attachEventListeners\n   * @methodOf iTT.service:html5PlayerManager\n   * @description\n   * helper method to remove attached event listeners.\n   * function\n   * @param {String} pid id of element to remove listeners from.\n   * @private\n   */\n  function _removeEventListeners(pid) {\n    var videoElement;\n    var instance = getInstance(pid);\n    if (_existy(instance)) {\n      videoElement = instance;\n      videoElement.removeEventListener('pause', onPause);\n      videoElement.removeEventListener('playing', onPlaying);\n      videoElement.removeEventListener('waiting', onBuffering);\n      videoElement.removeEventListener('seeked', onSeeked);\n      videoElement.removeEventListener('canplay', onCanPlay);\n      videoElement.removeEventListener('ended', onEnded);\n    }\n  }\n\n\n  // function _changeVideoQuality(id, quality) {\n  // \tvar player = getPlayer(id);\n  // \tvar videoObj = player.meta.videoObj;\n  // \tvar videoChildren = player.instance.childNodes;\n  //\n  // \tangular.forEach(videoChildren, function(elm) {\n  // \t\tvar fileType = '';\n  // \t\tif (elm.nodeName === 'SOURCE') {\n  // \t\t\tfileType = elm.className;\n  // \t\t\telm.setAttribute('src', videoObj[fileType][quality]);\n  // \t\t}\n  // \t});\n  //\n  // \tvar wasPlaying = player.meta.playerState === 1;\n  //\n  // \t//load new element into DOM.\n  // \tplayer.instance.load();\n  // \tif (wasPlaying) {\n  // \t\tplay(id);\n  // \t}\n  // }\n\n  //seems not to work very well.\n  // function _checkBuffering(player) {\n  // \treturn function() {\n  // \t\tplayer.meta.currentPlayPos = player.currentTime;\n  // \t\tvar offset = 1 / _checkInterval;\n  //\n  // \t\tif (player.meta.playerState !== 3 &&\n  // \t\t\tplayer.meta.currentPlayPos < (player.meta.lastPlayPos + offset) &&\n  // \t\t\t!player.paused) {\n  // \t\t\tplayer.meta.playerState = 3;\n  // \t\t\t_emitStateChange(player);\n  // \t\t}\n  // \t\t// if (player.meta.playerState === 3 &&\n  // \t\t// \tplayer.meta.currentPlayPos > (player.meta.lastPlayPos + offset) &&\n  // \t\t// \t!player.paused) {\n  // \t\t// }\n  // \t\tplayer.meta.lastPlayPos = player.meta.currentPlayPos;\n  // \t}\n  // }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/html5/html5PlayerManager.svc.ts","/**\n * Created by githop on 11/4/16.\n */\n\n\nhtml5UrlService.$inject = ['ittUtils'];\n\nexport default function html5UrlService(ittUtils) {\n  var _type = 'html5';\n  var _existy = ittUtils.existy;\n  return {\n    type: _type,\n    getMimeType: getMimeType,\n    parseMediaSrc: parseMediaSrc,\n    canPlay: isHTML5VideoUrl,\n    parseInput: parseInput,\n    getOutgoingUrl: getOutgoingUrl\n  };\n\n  function getMimeType(url) {\n    return 'video/' + url.match(/(mp4|m3u8|webm)/)[0];\n  }\n\n  function getOutgoingUrl(url, startAt) {\n    if (_existy(startAt) && startAt > 0) {\n      url += '#t=' + startAt;\n    }\n    return url;\n  }\n\n  /**\n   *\n   * @param mediaSrc\n   * @return mediaObj{type: String, mediaSrcArr: Array<String>}\n   */\n  function parseMediaSrc(mediaSrc) {\n    return mediaSrc.reduce(function (parsedMediaObj, mediaSrc) {\n      if (isHTML5VideoUrl(mediaSrc)) {\n        parsedMediaObj.mediaSrcArr.push(mediaSrc);\n      }\n      return parsedMediaObj;\n    }, {type: _type, mediaSrcArr: []});\n  }\n\n  function isHTML5VideoUrl(url) {\n    return /(.mp4|.m3u8|.webm)/.test(url);\n  }\n\n  function parseInput(url) {\n    if (isHTML5VideoUrl(url)) {\n      return url;\n    }\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/html5/html5UrlService.ts","/**\n * Created by githop on 1/13/17.\n */\n/**\n * @ngdoc service\n * @name iTT.service:kalturaPlayerManager\n * @description\n * Implements the PlayerManager interface, wraps kaltura videos\n * @property {String} type the type of playerManager\n * @requires playerManagerCommons\n * @requires kalturaScriptLoader\n * @requires kalturaUrlService\n * @requires PLAYERSTATES\n * @requires ittUtils\n */\n\n\nkalturaPlayerManager.$inject = ['ittUtils', 'PLAYERSTATES', 'playerManagerCommons', 'kalturaScriptLoader', 'kalturaUrlService'];\n\nexport default function kalturaPlayerManager(ittUtils, PLAYERSTATES, playerManagerCommons, kalturaScriptLoader, kalturaUrlService) {\n  var _players = {};\n  var _mainPlayerId;\n  var _type = 'kaltura';\n  var _existy = ittUtils.existy;\n\n  var base = playerManagerCommons({players: _players, type: _type});\n  var commonMetaProps = base.commonMetaProps;\n\n  var _kalturaMetaProps = {\n    ktObj: {},\n    videoType: _type,\n    bufferTimeout: null,\n    seekTimeout: null,\n    lastVol: 100\n  };\n\n  var _kalturaMetaObj = {\n    instance: null,\n    meta: {}\n  };\n\n  angular.extend(_kalturaMetaObj.meta, _kalturaMetaProps, commonMetaProps);\n  var _validMetaKeys = Object.keys(_kalturaMetaObj.meta);\n\n  var predicate = function (pid) {\n    return (_existy(getPlayer(pid)) && getMetaProp(pid, 'ready') === true);\n  };\n\n  var kalturaEndingFn = function (pid) {\n    //add logic if necessary\n  };\n\n  var getPlayer = base.getPlayer;\n  var setPlayer = base.setPlayer;\n  var getPlayerDiv = base.getPlayerDiv;\n  var getInstance = base.getInstance(predicate);\n  var createMetaObj = base.createMetaObj;\n  var getMetaObj = base.getMetaObj;\n  var getMetaProp = base.getMetaProp;\n  var setMetaProp = base.setMetaProp(_validMetaKeys);\n  var registerStateChangeListener = base.registerStateChangeListener;\n  var unregisterStateChangeListener = base.unregisterStateChangeListener;\n  var pauseOtherPlayers = base.pauseOtherPlayers(pause, getPlayerState);\n  var resetPlayerManager = base.resetPlayerManager(_removeEventListeners);\n  var renamePid = base.renamePid;\n  var handleTimelineEnd = base.handleTimelineEnd(kalturaEndingFn);\n  var ittTimeout = ittUtils.ngTimeout;\n  var cancelIttTimeout = ittUtils.cancelNgTimeout;\n  var _getStateChangeListeners = base.getStateChangeListeners;\n\n  return {\n    type: _type,\n    getMetaProp: getMetaProp,\n    setMetaProp: setMetaProp,\n    getMetaObj: getMetaObj,\n    getPlayerDiv: getPlayerDiv,\n    pauseOtherPlayers: pauseOtherPlayers,\n    registerStateChangeListener: registerStateChangeListener,\n    unregisterStateChangeListener: unregisterStateChangeListener,\n    resetPlayerManager: resetPlayerManager,\n    renamePid: renamePid,\n    seedPlayerManager: seedPlayerManager,\n    create: create,\n    getPlayerState: getPlayerState,\n    play: play,\n    pause: pause,\n    seekTo: seekTo,\n    getCurrentTime: getCurrentTime,\n    getBufferedPercent: getBufferedPercent,\n    toggleMute: toggleMute,\n    setVolume: setVolume,\n    setSpeed: setSpeed,\n    freezeMetaProps: angular.noop,\n    unFreezeMetaProps: angular.noop,\n    stop: stop,\n    handleTimelineEnd: handleTimelineEnd\n  };\n\n  function create(playerId) {\n\n    var ktObj = getMetaProp(playerId, 'ktObj');\n    var partnerId = ktObj.partnerId,\n      entryId = ktObj.entryId,\n      uiConfId = ktObj.uiconfId;\n\n    _createKWidget(playerId, partnerId, entryId, uiConfId, readyCallback)\n      .then(handleSuccess);\n\n\n    function handleSuccess() {\n      // noop\n    }\n\n    function readyCallback(playerId) {\n      var kdp = document.getElementById(playerId);\n      getPlayer(playerId).instance = kdp;\n      _attachEventListeners(kdp, playerId);\n    }\n\n  }\n\n  function seedPlayerManager(id, mainPlayer, mediaSrcArr) {\n    if (_existy(getPlayer(id)) && getMetaProp(id, 'startAtTime') > 0) {\n      return;\n    }\n\n    if (mainPlayer) {\n      _players = {};\n      _mainPlayerId = id;\n    }\n    var ktObj = kalturaUrlService.getKalturaObject(mediaSrcArr[0]);\n    var newProps = {\n      mainPlayer: mainPlayer,\n      div: _getPlayerDiv(id),\n      ktObj: ktObj\n    };\n    setPlayer(id, createMetaObj(newProps, _kalturaMetaObj));\n  }\n\n  /*\n   Event Bound functions\n   */\n\n  function onMediaReady(pid) {\n    _emitStateChange(pid, 6);\n    setMetaProp(pid, 'duration', _kdpEval(pid, 'duration'));\n  }\n\n  function onPlaying(pid) {\n    setMetaProp(pid, 'playerState', 1);\n    if (getMetaProp(pid, 'ready') === true) {\n      _emitStateChange(pid);\n    }\n  }\n\n  function onPaused(pid) {\n    setMetaProp(pid, 'playerState', 2);\n    _emitStateChange(pid);\n  }\n\n  function onBufferEnd(ev) {\n    var currentState = PLAYERSTATES[getMetaProp(this.id, 'playerState')];\n    var isBuffering = getMetaProp(this.id, 'bufferTimeout');\n\n    if (_existy(isBuffering)) {\n      cancelIttTimeout(isBuffering);\n    }\n\n    if (currentState === 'buffering') {\n      play(this.id);\n    }\n  }\n\n  function onBufferStart() {\n    var pid = this.id;\n\n    var isBuffering = ittTimeout(function () {\n      console.log('stuck in buffer land', getMetaProp(pid, 'time'));\n      _reset(pid);\n    }, 15 * 1000);\n\n    setMetaProp(this.id, 'bufferTimeout', isBuffering);\n    setMetaProp(this.id, 'playerState', 3);\n    _emitStateChange(this.id);\n  }\n\n  function onPlayerPlayEnd(pid) {\n    console.log('playerState ended', getMetaProp(pid, 'playerState'));\n    setMetaProp(pid, 'playerState', 0);\n    _emitStateChange(pid);\n  }\n\n  function onMediaError(e) {\n    console.warn('PLAYER ERROR', e);\n  }\n\n  function onUpdatedPlaybackRate(e) {\n    console.log('new rate', e);\n  }\n\n  function onPlayerUpdatePlayhead(ev) {\n    setMetaProp(this.id, 'time', ev);\n  }\n\n  /*\n   Public Methods\n   */\n  function play(pid) {\n    _sendKdpNotice(pid, 'doPlay');\n  }\n\n  function pause(pid) {\n    _sendKdpNotice(pid, 'doPause');\n  }\n\n  function seekTo(pid, t) {\n    if (t > 60 && t % 10 === 0) { //certain startAtTime values seem to lock the player up in chrome\n      t -= 0.5;\n    }\n    _sendKdpNotice(pid, 'doSeek', t);\n  }\n\n  function stop(pid) {\n    _sendKdpNotice(pid, 'doStop');\n  }\n\n  function getPlayerState(pid) {\n    return PLAYERSTATES[getMetaProp(pid, 'playerState')];\n  }\n\n  function getCurrentTime(pid) {\n    return _kdpEval(pid, 'video.player.currentTime') || 0;\n  }\n\n  function getBufferedPercent(pid) {\n    if (getMetaProp(pid, 'ready') === true) {\n      return _kdpEval(pid, 'video.buffer.percent') * 100;\n    }\n  }\n\n  function toggleMute(pid) {\n    var isMuted = getMetaProp(pid, 'muted');\n\n    if (isMuted === false) {\n      setMetaProp(pid, 'lastVol', getMetaProp(pid, 'volume'));\n      setVolume(pid, 0);\n    } else {\n      setVolume(pid, getMetaProp(pid, 'lastVol'));\n    }\n\n    setMetaProp(pid, 'muted', !isMuted);\n  }\n\n  function setSpeed(pid, playbackRate) {\n    console.log('setting speed to', playbackRate);\n    _sendKdpNotice(pid, 'playbackRateChangeSpeed', playbackRate);\n  }\n\n  function setVolume(pid, v) {\n    _sendKdpNotice(pid, 'changeVolume', v / 100);\n    setMetaProp(pid, 'volume', v);\n  }\n\n  /*\n   Private methods\n   */\n  function _reset(pid, t?) {\n    var currentTime = t || getMetaProp(pid, 'time');\n    //changeMedia will emit a 'onMediaReady' event after the media has been successfully changed\n    //when handling the 'onMediaReady' event, the playbackService will seek to the startAtTime\n    console.log('about to reset to t=', currentTime);\n    setMetaProp(pid, 'startAtTime', currentTime);\n    setMetaProp(pid, 'hasResumedFromStartAt', false);\n    setMetaProp(pid, 'resetInProgress', true);\n    var entryId = getMetaProp(pid, 'ktObj').entryId;\n    _sendKdpNotice(pid, 'changeMedia', {'entryId': entryId});\n    setMetaProp(pid, 'ready', false);\n  }\n\n  function _sendKdpNotice(pid, notice, val?) {\n    var kdp = getInstance(pid);\n\n    try {\n      if (_existy(val)) {\n        kdp.sendNotification(notice, val);\n      } else {\n        kdp.sendNotification(notice);\n      }\n    } catch (e) {\n      console.log('error sending', notice);\n    }\n  }\n\n  function _createKWidget(divId, partnerID, entryID, uiConfId, onReadyCB) {\n\n    var embedObj = {\n      'targetId': divId,\n      'wid': '_' + partnerID,\n      'uiconf_id': uiConfId,\n      'readyCallback': onReadyCB,\n      'entry_id': entryID,\n      'flashvars': {\n        'playbackRateSelector.plugin': true,\n        'controlBarContainer.plugin': false,\n        'largePlayBtn.plugin': false,\n        'loadingSpinner.plugin': true,\n        'closedCaptions.displayCaptions': false\n      }\n    };\n\n    var embedControls = {\n      'EmbedPlayer.NativeControls': true,\n      'EmbedPlayer.DisableHTML5FlashFallback': true\n    };\n\n    if (divId !== _mainPlayerId) {\n      angular.extend(embedObj.flashvars, embedControls);\n    }\n\n    return kalturaScriptLoader.load(partnerID, uiConfId).then(function () {\n      KWidget.embed(embedObj);\n    });\n  }\n\n  function _getPlayerDiv(id) {\n    return '<div id=\"' + id + '\"></div>';\n  }\n\n  function _attachEventListeners(kdp, pid) {\n    var kMap = {\n      'playerPlayed': onPlaying,\n      'playerPaused': onPaused,\n      'bufferStartEvent': onBufferStart,\n      'bufferEndEvent': onBufferEnd,\n      'playerPlayEnd': onPlayerPlayEnd,\n      'mediaError': onMediaError,\n      'mediaReady': onMediaReady,\n      'updatedPlaybackRate': onUpdatedPlaybackRate,\n      'playerUpdatePlayhead': onPlayerUpdatePlayhead\n    };\n    Object.keys(kMap).forEach(function (evtName) {\n      (function (evtName) {\n        kdp.kBind(evtName + '.' + pid, kMap[evtName]);\n      })(evtName);\n    });\n  }\n\n  function _removeEventListeners(pid) {\n    var kdp = getInstance(pid);\n    kdp.kUnbind('.' + pid);\n  }\n\n  function _emitStateChange(pid, forceState?) {\n    var state;\n\n    if (forceState) {\n      state = forceState;\n    } else {\n      state = getMetaProp(pid, 'playerState');\n    }\n\n    _getStateChangeListeners().forEach(function (cb) {\n      cb(_formatPlayerStateChangeEvent(state, pid));\n    });\n  }\n\n  function _kdpEval(pid, prop) {\n    var instance = getInstance(pid);\n    if (_existy(instance)) {\n      return instance.evaluate('{' + prop + '}');\n    }\n  }\n\n  function _formatPlayerStateChangeEvent(state, pid) {\n    return {\n      emitterId: pid,\n      state: PLAYERSTATES[state]\n    };\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/kaltura/kalturaPlayerManager.ts","/**\n * Created by githop on 1/13/17.\n */\n\n/*\n Kaltura script loading strategy:\n - check for KWidget in global scope\n -- if KWidget is not present, load script tag with partnerID and uIConfId, store loaded script in _scriptsMap\n -- if KWidget is present, check _scriptsMap to see if we have already created a script for this partnerID + uiConfId,\n if we haven't, load script and store result in _scriptsMap\n */\n\nkalturaScriptLoader.$inject = ['$q', 'ittUtils'];\n\nexport default function kalturaScriptLoader($q, ittUtils) {\n  var _scriptsMap = {};\n  var _existy = ittUtils.existy;\n\n  return {\n    load: load\n  };\n\n  /**\n   *\n   * @param partnerId\n   * @param uiConfId\n   * @returns {*}\n   */\n  function load(partnerId, uiConfId) {\n    return $q(function (resolve) {\n\n      var scriptKey = uiConfId + partnerId;\n\n      if (!_existy(_scriptsMap[scriptKey])) {\n        _scriptsMap[scriptKey] = 'ready';\n      }\n\n      if (typeof(KWidget) == 'undefined') {\n        _loadScript(partnerId, uiConfId, _scriptsMap, resolve);\n      } else if (_scriptsMap[scriptKey] === 'ready') {\n        _loadScript(partnerId, uiConfId, _scriptsMap, resolve);\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  function _loadScript(partnerId, uiConfId, history, onDone) {\n    var tagSrc = _getScriptTagSrc(partnerId, uiConfId);\n    var tag = _appendScript(tagSrc, partnerId);\n    tag.onload = onDone;\n    history[uiConfId + partnerId] = tag;\n  }\n\n  function _getScriptTagSrc(partnerId, uiConfId) {\n    return 'https://cdnapisec.kaltura.com/p/' + partnerId + '/sp/' + partnerId + '00/embedIframeJs/uiconf_id/' + uiConfId + '/partner_id/' + partnerId;\n  }\n\n  function _appendScript(src, partnerId) {\n    var tag = document.createElement('script');\n    tag.src = src;\n    tag.id = partnerId;\n    var firstScriptTag = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    return tag;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/kaltura/kalturaScriptLoader.ts","/**\n * Created by githop on 1/13/17.\n */\nkalturaUrlService.$inject = [];\n\nexport default function kalturaUrlService() {\n  var _type = 'kaltura';\n  var _mimeType = 'video/x-' + _type;\n  return {\n    type: _type,\n    getMimeType: getMimeType,\n    canPlay: isKalturaUrl,\n    parseMediaSrc: parseMediaSrc,\n    getKalturaObject: getKalturaObject,\n    buildAutoEmbedURLFromKalturaObject: buildAutoEmbedURLFromKalturaObject,\n    parseInput: parseInput,\n    getOutgoingUrl: function () {\n    }\n  };\n\n  function getMimeType() {\n    return _mimeType;\n  }\n\n  function parseInput(input) {\n    return buildAutoEmbedURLFromKalturaObject(getKalturaObject(input), 1024, 768)\n  }\n\n  /**\n   * @name parseMediaSrc\n   * @methodOf iTT.service:kalturaUrlService\n   * @param {Array} mediaSrc array of media sources, could be a URL or embed code.\n   * @returns {Object} Object with type<String> and mediaSrcArr<Array> properties.\n   */\n\n  function parseMediaSrc(mediaSrc) {\n    return mediaSrc.reduce(function (parsedMediaObj, mediaSrc) {\n      if (isKalturaUrl(mediaSrc)) {\n        parsedMediaObj.mediaSrcArr.push(mediaSrc);\n      }\n      return parsedMediaObj;\n    }, {type: _type, mediaSrcArr: []});\n  }\n\n  function isKalturaUrl(url) {\n    var keys = ['partnerId', 'uiconfId', 'entryId', 'uniqueObjId'];\n    var test = getKalturaObject(url);\n    return keys.every(function (k) {\n      return (test.hasOwnProperty(k) && test[k] != null); //jshint ignore:line\n    });\n  }\n\n  function getKalturaObject(input) {\n    var params = {};\n    var myArray = [];\n    var urlParams;\n    if (input == null) {\n      return {\n        partnerId: null,\n        uiconfId: null,\n        entryId: null,\n        uniqueObjId: null\n      };\n    }\n    if (input.substring(0, 7) === \"<script\") {\n      myArray = /^.*?src\\=.https?\\:\\/\\/(?:www|cdnapi|cdnapisec)\\.kaltura\\.com\\/p\\/(.*?)\\/sp\\/(.*?)00.*?\\/embedIframeJs\\/uiconf_id\\/(.*?)\\/partner_id\\/(.*?)\\?(.*?)\\\".*/g.exec(input);\n      if (myArray != null) {\n        params[\"partnerId\"] = myArray[1];\n        params[\"uiconfId\"] = myArray[3];\n        urlParams = parseUrlParams(myArray[5]);\n        params[\"entryId\"] = urlParams.entry_id;\n        params[\"uniqueObjId\"] = urlParams.playerId;\n      } else {\n        params = getKalturaObjectFromDynamicEmbedCode(input);\n      }\n    } else if (input.substring(0, 4) === \"<div\") {\n      params = getKalturaObjectFromDynamicEmbedCode(input);\n    } else if (input.substring(0, 7) === \"<iframe\") {\n      myArray = /^.*?src\\=.https?\\:\\/\\/(?:www|cdnapi|cdnapisec)\\.kaltura\\.com\\/p\\/(.*?)\\/sp\\/(.*?)00.*?\\/embedIframeJs\\/uiconf_id\\/(.*?)\\/partner_id\\/(.*?)\\?(.*?)\\\".*/g.exec(input);\n      if (myArray != null) {\n        params[\"partnerId\"] = myArray[1];\n        params[\"uiconfId\"] = myArray[3];\n        urlParams = parseUrlParams(myArray[5]);\n        params[\"uniqueObjId\"] = urlParams.playerId;\n        params[\"entryId\"] = urlParams.entry_id;\n      }\n    } else if (input.substring(0, 7) === \"<object\") {\n      myArray = /^.*\\n*?.*?id\\=.(.*?)\\\"(.*?\\n*)*?data\\=.*?https?\\:\\/\\/(?:www|cdnapi|cdnapisec)\\.kaltura\\.com\\/kwidget\\/wid\\/_(.*?)\\/uiconf_id\\/(.*?)\\/entry_id\\/(.*?)\\\".*/g.exec(input);\n      if (myArray != null) {\n        params[\"uniqueObjId\"] = myArray[1];\n        params[\"partnerId\"] = myArray[3];\n        params[\"uiconfId\"] = myArray[4];\n        params[\"entryId\"] = myArray[5];\n      }\n    } else if (input.substring(0, 4) === \"http\") {\n      myArray = /^https?\\:\\/\\/(?:www|cdnapi|cdnapisec)\\.kaltura\\.com\\/p\\/(.*?)\\/sp\\/(.*?)00.*?\\/embedIframeJs\\/uiconf_id\\/(.*?)\\/partner_id\\/(.*?)\\?(.*)/g.exec(decodeURIComponent(input));\n      if (myArray != null) {\n        params[\"partnerId\"] = myArray[1];\n        params[\"uiconfId\"] = myArray[3];\n        urlParams = parseUrlParams(myArray[5]);\n        params[\"entryId\"] = urlParams.entry_id;\n        params[\"uniqueObjId\"] = urlParams.playerId;\n      }\n    } else {\n      // console.log(\"Detected an invalid embed code\");\n    }\n    return params;\n  }\n\n  function buildAutoEmbedURLFromKalturaObject(kalturaObject, width, height) {\n    return \"https://cdnapisec.kaltura.com/p/\" + kalturaObject[\"partnerId\"] + \"/sp/\" + kalturaObject[\"partnerId\"] + \"00/embedIframeJs/uiconf_id/\" + kalturaObject[\"uiconfId\"] + \"/partner_id/\" + kalturaObject[\"partnerId\"] + \"?entry_id=\" + kalturaObject[\"entryId\"] + \"&playerId=\" + kalturaObject[\"uniqueObjId\"] + \"&autoembed=true&width=\" + width + \"&height=\" + height;\n  }\n\n  function parseUrlParams(urlParamsString) {\n    //Remove any trailing ampersand if there is one\n    if (urlParamsString.charAt(urlParamsString.length - 1) == '&') {\n      urlParamsString = urlParamsString.substr(0, urlParamsString.length - 1);\n    }\n    return JSON.parse('{\"' + urlParamsString.replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}');\n  }\n\n  function getKalturaObjectFromDynamicEmbedCode(embedCode) {\n    var params = {};\n    var myArray = /^(?:.|\\n|\\r)*?kWidget\\..*?mbed\\(({(?:.|\\n|\\r)*})\\).*?/g.exec(embedCode);\n    if (myArray != null) {\n      var kWidgetParams = JSON.parse(myArray[1]);\n      params[\"uniqueObjId\"] = kWidgetParams.targetId;\n      params[\"partnerId\"] = kWidgetParams.wid.substring(1);\n      params[\"uiconfId\"] = kWidgetParams.uiconf_id;\n      params[\"entryId\"] = kWidgetParams.entry_id;\n    }\n    return params;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/kaltura/kalturaUrlService.ts","/**\n * Created by githop on 12/3/15.\n */\n/**\n * @ngdoc service\n * @name iTT.service:youTubePlayerManager\n * @description\n * A service for working with youtube iframes\n * {@link https://github.com/InTheTelling/client/blob/master/app/scripts/services/YouTubePlayerManager.svc.js source}\n * @requires $location\n * @requires YoutubePlayerApi\n * @requires errorSvc\n * @requires PLAYERSTATES\n * @requires youtubeUrlService\n */\n\n\nyouTubePlayerManager.$inject = ['$location', 'ittUtils', 'YTScriptLoader', 'errorSvc', 'PLAYERSTATES', 'youtubeUrlService', 'playerManagerCommons'];\n\nexport default function youTubePlayerManager($location, ittUtils, YTScriptLoader, errorSvc, PLAYERSTATES, youtubeUrlService, playerManagerCommons) {\n\n  var _youTubePlayerManager;\n  var _players = {};\n  var _mainPlayerId;\n  var _type = 'youtube';\n\n  var base = playerManagerCommons({players: _players, type: _type});\n  var commonMetaProps = base.commonMetaProps;\n\n  var _youtubeMetaProps = {\n    ytId: '',\n    videoType: _type,\n    bufferInterval: null\n  };\n\n  var _youtubeMetaObj = {\n    instance: null,\n    meta: {}\n  };\n\n  angular.extend(_youtubeMetaObj.meta, _youtubeMetaProps, commonMetaProps);\n  var _validMetaKeys = Object.keys(_youtubeMetaObj.meta);\n\n  var predicate = function (pid) {\n    return (_existy(getPlayer(pid)) && getMetaProp(pid, 'ready') === true);\n  };\n\n  var destroyFn = function (pid) {\n    var p = getInstance(pid);\n    _tryCommand(p, 'destroy');\n  };\n\n  var youtubeEnding = function (pid) {\n    setMetaProp(pid, 'time', getMetaProp(pid, 'duration'));\n    ittUtils.ngTimeout(function () {\n      if (playerState(pid) !== 'ended') {\n        console.log('on ended state', playerState(pid));\n        stop(pid);\n      }\n    }, 500);\n  };\n\n  var getPlayer = base.getPlayer;\n  var setPlayer = base.setPlayer;\n  var getInstance = base.getInstance(predicate);\n  var createMetaObj = base.createMetaObj;\n  var getMetaObj = base.getMetaObj;\n  var getMetaProp = base.getMetaProp;\n  var setMetaProp = base.setMetaProp(_validMetaKeys);\n  var registerStateChangeListener = base.registerStateChangeListener;\n  var unregisterStateChangeListener = base.unregisterStateChangeListener;\n  var pauseOtherPlayers = base.pauseOtherPlayers(pause, playerState);\n  var getPlayerDiv = base.getPlayerDiv;\n  var resetPlayerManager = base.resetPlayerManager(destroyFn);\n  var renamePid = base.renamePid;\n  var handleTimelineEnd = base.handleTimelineEnd(youtubeEnding);\n  var waitForBuffering = ittUtils.ngTimeout;\n  var cancelBuffering = ittUtils.cancelNgTimeout;\n  var _getStateChangeListeners = base.getStateChangeListeners;\n\n  _youTubePlayerManager = {\n    type: _type,\n    getMetaProp: getMetaProp,\n    setMetaProp: setMetaProp,\n    getMetaObj: getMetaObj,\n    getPlayerDiv: getPlayerDiv,\n    pauseOtherPlayers: pauseOtherPlayers,\n    registerStateChangeListener: registerStateChangeListener,\n    unregisterStateChangeListener: unregisterStateChangeListener,\n    resetPlayerManager: resetPlayerManager,\n    renamePid: renamePid,\n    seedPlayerManager: seedPlayerManager,\n    create: create,\n    play: play,\n    pause: pause,\n    seekTo: seekTo,\n    getCurrentTime: getCurrentTime,\n    getPlayerState: playerState,\n    getBufferedPercent: getVideoLoadedFraction,\n    toggleMute: toggleMute,\n    setVolume: setVolume,\n    setSpeed: setSpeed,\n    setPlaybackQuality: setPlaybackQuality,\n    freezeMetaProps: angular.noop,\n    unFreezeMetaProps: angular.noop,\n    stop: stop,\n    handleTimelineEnd: handleTimelineEnd\n  };\n\n  //public methods\n  /**\n   * @ngdoc method\n   * @name #seedPlayerManager\n   * @methodOf iTT.service:youTubePlayerManager\n   * @description\n   * Used to set the PID / divID for a YT instance, is called prior to create()\n   * @param {String} id Main Video Asset ID or Event ID, for embeds\n   * @param {Boolean} mainPlayer Determines type of player, embed or main\n   * @param {Array} mediaSrcArr array of youtube URLs\n   * @returns {Vofid} returns void.\n   */\n  function seedPlayerManager(id, mainPlayer, mediaSrcArr) {\n\n    //bail if we already have set the instance in the _players map.\n    if (_existy(getPlayer(id)) && getMetaProp(id, 'startAtTime') > 0) {\n      return;\n    }\n\n    if (mainPlayer) {\n      // setPlayer(id, {});\n      _players = {};\n      _mainPlayerId = id;\n    }\n\n    var newProps = {\n      mainPlayer: mainPlayer,\n      div: _getPlayerDiv(id),\n      ytId: youtubeUrlService.extractYoutubeId(mediaSrcArr[0])\n    };\n\n    setPlayer(id, createMetaObj(newProps, _youtubeMetaObj));\n  }\n\n\n  /**\n   * @ngdoc method\n   * @name #create\n   * @methodOf iTT.service:youTubePlayerManager\n   * @param {String} playerId unique ID of player.\n   * @description\n   * Used to create an instance of the YT object which is necessary to\n   * interface with the youtube Iframe API\n   * @returns {void} has no return value\n   */\n  function create(playerId) {\n    var ytId = getMetaProp(playerId, 'ytId');\n    _createInstance(playerId, ytId, onPlayerStateChange, onPlayerQualityChange, onReady, onError)\n      .then(handleSuccess)\n      .catch(tryAgain);\n\n    function handleSuccess(ytInstance) {\n      getPlayer(playerId).instance = ytInstance;\n      setMetaProp(playerId, 'ytId', ytId);\n    }\n\n    function tryAgain() {\n      return _createInstance(playerId, ytId, onPlayerStateChange, onPlayerQualityChange, onReady, onError)\n        .then(handleSuccess)\n        .catch(handleFail);\n    }\n\n    function handleFail(e) {\n      var errorMsg = 'Network timeout initializing video player. Please try again.';\n      errorSvc.error({data: errorMsg}, e);\n    }\n\n    //available 'states'\n    //YT.PlayerState.ENDED\n    //YT.PlayerState.PLAYING\n    //YT.PlayerState.PAUSED\n    //YT.PlayerState.BUFFERING\n    //YT.PlayerState.CUED\n\n\n    /**\n     * @private\n     * @ngdoc method\n     * @name onPlayerStateChange\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Event handler responsible responsible for handling events emitted from a youtube player instance\n     * Responsible for interaction between our app and youtube iframes. Toggles playback\n     * between main and embedded videos\n     * @param {Object} event an object with target and data properties with metadata regarding the event and\n     * player that emitted it.\n     * @returns {Void} has no return value\n     */\n    function onPlayerStateChange(event) {\n      var pid = _getPidFromInstance(event.target);\n      setMetaProp(pid, 'playerState', event.data);\n      var stateChangeEvent = _formatPlayerStateChangeEvent(event, pid);\n      var isBuffering = getMetaProp(pid, 'bufferInterval');\n      // console.log('YT PlayerState', PLAYERSTATES[event.data]);\n\n      if (event.data === YT.PlayerState.ENDED) {\n        event.target.stopVideo();\n      }\n\n      if (event.data === YT.PlayerState.BUFFERING) {\n        isBuffering = waitForBuffering(function () {\n          if (event.target.getPlayerState() === YT.PlayerState.BUFFERING) {\n            _reset(pid);\n          }\n        }, 7 * 1000);\n        setMetaProp(pid, 'bufferInterval', isBuffering);\n      } else {\n        cancelBuffering(isBuffering)\n      }\n\n      _emitStateChange(stateChangeEvent);\n    }\n\n    /**\n     * @private\n     * @ngdoc method\n     * @name onReady\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Event Handler called when YT instance is ready\n     * @param {Object} event an object with target and data properties with metadata regarding the event and\n     * player that emitted it.\n     * @returns {Void} has no return value\n     */\n    function onReady(event) {\n      var pid = _getPidFromInstance(event.target);\n\n      var playerReadyEv = _formatPlayerStateChangeEvent({data: '6'}, pid);\n      setMetaProp(pid, 'duration', event.target.getDuration());\n      console.log('_reset duration!');\n      _emitStateChange(playerReadyEv);\n    }\n\n    /**\n     * @private\n     * @ngdoc method\n     * @name onPlayerQualityChange\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Event Handler called when changing playback quality\n     * @param {Object} event an object with target and data properties with metadata regarding the event and\n     * player that emitted it.\n     * @returns {Void} has no return value\n     */\n    function onPlayerQualityChange(event) {\n      var pid = _getPidFromInstance(event.target);\n      if (event.data === 'medium' && /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor)) {\n        setPlaybackQuality(pid, 'large');\n      }\n\n      // qualityChangeCB(event);\n\n    }\n\n    /**\n     * @private\n     * @ngdoc method\n     * @name onError\n     * @methodOf iTT.service:youTubePlayerManager\n     * @description\n     * Error Handler for youtube iframe API errors\n     * @param {Object} event an object with target and data properties with metadata regarding the event and\n     * player that emitted it.\n     * @returns {Void} has no return value\n     */\n    function onError(event) {\n      var brokePlayerPID = _getPidFromInstance(event.target);\n      if (event.data === 5) {\n        //only _reset for HTML5 player errors\n        console.warn('resetting for chrome!!!');\n        _reset(brokePlayerPID);\n      }\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #setSpeed\n   * @methodOf iTT.service:youTubePlayerManager\n   * @description\n   * used to speed up / slow down the rate of video playback.\n   * @param {String} pid pid of player\n   * @param {Number} playbackRate the rate to set playback to.\n   * @returns {Void} returns void.\n   */\n  function setSpeed(pid, playbackRate) {\n    var p = getInstance(pid);\n    // getAvailablePlayBackRates returns an array of numbers, with at least 1 element; i.e. the default playback rate\n    if (_existy(p) && p.getAvailablePlaybackRates().length > 1) {\n      p.setPlaybackRate(playbackRate);\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #getCurrentTime\n   * @methodOf iTT.service:youTubePlayerManager\n   * @description\n   * Used to get the current time of youtube video.\n   * @param {String} pid The ID of the YT instance\n   * @returns {Number} The current time of video in seconds.\n   */\n  function getCurrentTime(pid) {\n    var p = getInstance(pid);\n    if (_existy(p)) {\n      return _tryCommand(p, 'getCurrentTime');\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #playerState\n   * @methodOf iTT.service:youTubePlayerManager\n   * @description\n   * Used to get the playerState of a YT instance. Possible states:\n   * -1 = unstarted\n   * 0 = ended,\n   * 1 = playing,\n   * 2 = paused,\n   * 3 = buffering,\n   * 5 = video cued\n   * @param {String} pid The ID of the YT instance\n   * @returns {Number} Int representing current player state.\n   */\n  function playerState(pid) {\n    var p = getInstance(pid);\n    if (_existy(p)) {\n      return PLAYERSTATES[_tryCommand(p, 'getPlayerState')];\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #play\n   * @methodOf iTT.service:youTubePlayerManager\n   * @description\n   * Used to resume playback\n   * @param {String} pid The ID of the YT instance\n   * @returns {Void} no return value\n   */\n  function play(pid) {\n    var p = getInstance(pid);\n    if (_existy(p)) {\n      _tryCommand(p, 'playVideo');\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #pause\n   * @methodOf iTT.service:youTubePlayerManager\n   * @description\n   * Used to pause playback\n   * @param {String} pid The ID of the YT instance\n   * @returns {Void} no return value\n   */\n  function pause(pid) {\n    var p = getInstance(pid);\n\n    // console.log('pause instance?', p);\n    if (_existy(p)) {\n      _tryCommand(p, 'pauseVideo');\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #stop\n   * @methodOf iTT.service:youTubePlayerManager\n   * @description\n   * Stops video playback and download of video stream\n   * @params pid The id of the player\n   * @returns {Void} no return value\n   */\n  function stop(pid) {\n    var p = getInstance(pid);\n    if (_existy(p)) {\n      _tryCommand(p, 'stopVideo');\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #setPlaybackQuality\n   * @methodOf iTT.service:youTubePlayerManager\n   * @description\n   * Used to pick a desired video quality\n   * @param {String} pid The ID of the YT instance\n   * @returns {Void} no return value\n   */\n  function setPlaybackQuality(pid, size) {\n    var p = getInstance(pid);\n    if (_existy(p)) {\n      p.setPlaybackQuality(size);\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #getVideoLoadedFraction\n   * @methodOf iTT.service:youTubePlayerManager\n   * @description\n   * Used to determine the percent of buffered video\n   * @param {String} pid The ID of the YT instance\n   * @returns {Number} Numerical value representing\n   * percent of video that is currently buffered\n   */\n  function getVideoLoadedFraction(pid) {\n    var p = getInstance(pid);\n    if (_existy(p)) {\n      return p.getVideoLoadedFraction() * 100;\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #seekTo\n   * @methodOf iTT.service:youTubePlayerManager\n   * @description\n   * Used to seek the video to a desired time in seconds. Note: On safari, if seekTo is called with a time where\n   * the video data is already available (i.e. we seek within our buffered range), the onStateChange event will\n   * not fire a 'buffering' event, or a 'playing' event after the seek has completed and the playback resumes.\n   *\n   * Since a seeking will stop our event clock from running, and a 'playing' event will not be fired when the seek\n   * operation is finished, we need to manually restart the event clock, which is done in the timelineSvc _tick\n   * function.\n   * @param {String} pid The ID of the YT instance\n   * @param {Number} t The desired time to seek to\n   * the server if the t (seconds) parameter specifies a time outside of the currently\n   * buffered video data\n   * @returns {Void} no return value\n   */\n  function seekTo(pid, t) {\n    var p = getInstance(pid);\n    var ytId = getMetaProp(pid, 'ytId');\n    var lastState = PLAYERSTATES[getMetaProp(pid, 'playerState')];\n    var currentState = playerState(pid);\n\n    if (_existy(p)) {\n      if (currentState === 'video cued') {\n        switch (lastState) {\n          case 'paused':\n          case 'playing':\n            /* falls through */\n            p.cueVideoById(ytId, t);\n            break;\n          case 'video cued':\n            if (pid === _mainPlayerId) {\n              //if we're in video cued and we are not restarting, e.g. seeking in the paused state\n              //then we want to immediately pause after playback resumes.\n              // (to get the correct frame of video visible)\n              if (t > 0.1 && getMetaProp(pid, 'autoplay') === false) {\n                //to ignore next play to not generate a false playing analytics\n                registerStateChangeListener(_seekPauseListener);\n              }\n              _tryCommand(p, 'seekTo', t);\n            } else {\n              p.cueVideoById(ytId, t);\n            }\n            break;\n        }\n      } else {\n        _tryCommand(p, 'seekTo', t, true);\n      }\n\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #toggleMute\n   * @methodOf iTT.service:youTubePlayerManager\n   * @description\n   * toggles the mute on / off\n   * @param {String} pid the pid of the player\n   * @returns {Void} returns void.\n   */\n  function toggleMute(pid) {\n    var p = getInstance(pid);\n    if (p.isMuted()) {\n      p.unMute();\n      setMetaProp(pid, 'muted', false);\n    } else {\n      p.mute();\n      setMetaProp(pid, 'muted', true);\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name #setVolume\n   * @methodOf iTT.service:youTubePlayerManager\n   * @description\n   * Setter for volume level\n   * @param {String} pid The ID of the YT instance\n   * @param {Number} v Number between 1 and 100\n   * @returns {Void} No return value.\n   */\n  function setVolume(pid, v) {\n    var p = getInstance(pid);\n\n    if (_existy(p)) {\n      p.setVolume(v);\n      setMetaProp(pid, 'volume', v);\n    }\n  }\n\n  //private methods\n\n  function _seekPauseListener(event) {\n    if (event.state === 'playing') {\n      unregisterStateChangeListener(_seekPauseListener);\n      pause(event.emitterId);\n    }\n  }\n\n  /**\n   * @ngdoc method\n   * @name _reset\n   * @methodOf iTT.service:youTubePlayerManager\n   * @description\n   * Used to _reset the player after detecting\n   * onError event.\n   * @params pid The id of the player\n   * @returns {Void} no return value\n   * @private\n   */\n  function _reset(pid) {\n    var instance = getInstance(pid);\n    var isMainPlayer = getMetaProp(pid, 'mainPlayer');\n\n    if (_existy(instance)) {\n      console.log('debug info', instance.getDebugText());\n      var videoId = instance.getVideoData().video_id;\n      var lastTime = instance.getCurrentTime();\n\n      if (isMainPlayer === true) {\n        instance.cueVideoById(videoId, lastTime);\n      } else {\n        instance.loadVideoById(videoId, lastTime);\n      }\n\n    }\n  }\n\n  /**\n   * @private\n   * @ngdoc method\n   * @methodOf iTT.service:youTubePlayerManager\n   * @name _createInstance\n   * @param {string} divId the unique ID of the element on the DOM\n   * @param {string} videoID the youtube video ID\n   * @param {Function} stateChangeCB callback to register to youtube's 'onStateChange' playerVar\n   * @param {Function} qualityChangeCB callback to register to youtube's 'onQualityChange' playerVar\n   * @param {Function} onReadyCB callback to register to youtube's 'onReady' playerVar\n   * @param {Function} onError callback to register to youtube's 'onError' playerVar\n   * @returns {Object} instance of YT.Player\n   * @private\n   */\n  function _createInstance(divId, videoID, stateChangeCB, qualityChangeCB, onReadyCB, onError) {\n\n    var _controls = 1;\n    if (divId === _mainPlayerId) {\n      _controls = 0;\n    }\n\n    var host = $location.host();\n    return YTScriptLoader.load().then(function () {\n      return new YT.Player(divId, {\n        videoId: videoID,\n        //enablejsapi=1&controls=0&modestbranding=1&showinfo=0&rel=0&iv_load_policy=3&wmode=transparent\n        playerVars: {\n          'controls': _controls,\n          'fs': _controls,\n          'enablejsapi': 1,\n          'modestbranding': 1,\n          'showinfo': 0,\n          'rel': 0,\n          'iv_load_policy': 3,\n          'origin': host,\n          'wmode': 'transparent'\n        },\n        events: {\n          onReady: onReadyCB,\n          onStateChange: stateChangeCB,\n          onPlaybackQualityChange: qualityChangeCB,\n          onError: onError\n        }\n      });\n    });\n  }\n\n  function _existy(x) {\n    return x != null;  // jshint ignore:line\n  }\n\n  /**\n   * @private\n   * @ngdoc method\n   * @name _getPidFromInstance\n   * @methodOf iTT.service:youTubePlayerManager\n   * @description\n   * Used to retrieve a PID from a YT Instance\n   * @params {Object} ytInstance\n   * @returns {String} PID of YT Instance\n   */\n  function _getPidFromInstance(ytInstance) {\n    return ytInstance.getIframe().id;\n  }\n\n  /**\n   * @private\n   * @ngdoc method\n   * @name _formatPlayerStateChange\n   * @methodOf iTT.service:youTubePlayerManager\n   * @param {Object} event youtube's state change event object. has target and data props.\n   * @param {string} pid the PID of the player\n   * @returns {Object} Object with emiiterId and state props\n   * @private\n   */\n  function _formatPlayerStateChangeEvent(event, pid) {\n    return {\n      emitterId: pid,\n      state: PLAYERSTATES[event.data]\n    };\n  }\n\n  /**\n   * @private\n   * @ngdoc method\n   * @name _emitStateChange\n   * @methodOf iTT.service:youTubePlayerManager\n   * @param {Function} playerStateChange callback to fire\n   *@returns {Void} returns void 0.\n   */\n  function _emitStateChange(playerStateChange) {\n    _getStateChangeListeners().forEach(function (cb) {\n      cb(playerStateChange);\n    });\n  }\n\n  /**\n   * @private\n   * @ngdoc method\n   * @name _getPlayerDiv\n   * @methodOf iTT.service:youTubePlayerManager\n   * @param {string } id of the player\n   * @returns {string} HTML div with ID of player\n   */\n  function _getPlayerDiv(id) {\n    return '<div id=\"' + id + '\"></div>';\n  }\n\n  /**\n   * @private\n   * @ngdoc method\n   * @name _tryCommand\n   * @methodOf iTT.service:youTubePlayerManager\n   * @param {Object} instance of YT.Player\n   * @param {String} command string representation of method to invoke\n   * @param {String | Number} val the val to set\n   * @returns {Void |String | Number} returns void, or the getter value.\n   */\n  function _tryCommand(instance, command, val, bool) {\n    var returnVal;\n    try {\n      if (_existy(val) && _existy(bool)) {\n        instance[command](val, bool);\n      } else if (_existy(val)) {\n        instance[command](val);\n      } else {\n        //some getters return a value, i.e. getPlayerState\n        // console.log('hmm', instance, command);\n        returnVal = instance[command]();\n      }\n    } catch (err) {\n      console.warn('error trying', command, 'with', instance[command], 'full error:', err);\n    }\n\n    if (_existy(returnVal)) {\n      return returnVal;\n    }\n  }\n\n  return _youTubePlayerManager;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/youtube/YouTubePlayerManager.svc.ts","/**\n * Created by githop on 12/1/15.\n */\n\n/**\n * @ngdoc service\n * @name iTT.service:YTScriptLoader\n * @description\n * A service for downloading youtube player scripts\n * @requires $q\n * @requires $timeout\n */\nYTScriptLoader.$inject = ['$q', '$timeout'];\n\nexport default function YTScriptLoader($q, $timeout) {\n  //allow 2 seconds download time per each try\n  //4 seconds total, as on first error, we retry\n  //see YoutubePlayerManager#create\n  var TIMEOUT = 2 * 1000;\n  return {\n    load: load\n  };\n\n  /**\n   * @ngdoc method\n   * @name #load\n   * @methodOf iTT.service:YTScriptLoader\n   * @description\n   * for injecting the youtube.com/iframe_api script which in turn async downloads\n   * www-widgetapi script\n   * @returns {Promise} returns Promise<Void>\n   */\n  function load() {\n    var doReject;\n    return $q(function (resolve, reject) {\n\n      doReject = $timeout(reject, TIMEOUT);\n\n      //check for YT global\n      if (typeof(YT) == 'undefined' || typeof(YT.Player) == 'undefined') { //jshint ignore:line\n        var url = '//www.youtube.com/iframe_api';\n        var tag = document.createElement('script');\n        tag.src = url;\n        tag.id = 'yt-iframe-api';\n        var firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n      } else {\n        //we have already fired onYoutubeIframeAPIReady\n        $timeout.cancel(doReject);\n        resolve();\n      }\n\n      window.onYouTubeIframeAPIReady = function () {\n        //youtube.com/iframe_api script will invoke\n        //this function after it downloads www-widgetapi script.\n        $timeout.cancel(doReject);\n        resolve();\n      };\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/youtube/youtubeScriptLoader.ts","\nyoutubeUrlService.$inject = ['ittUtils'];\n\nexport default function youtubeUrlService(ittUtils) {\n  var _existy = ittUtils.existy;\n  var _type = 'youtube';\n  var _mimeType = 'video/x-' + _type;\n  return {\n    type: _type,\n    getMimeType: getMimeType,\n    extractYoutubeId: extractYoutubeId,\n    isYoutubeUrl: isYoutubeUrl,\n    canPlay: isYoutubeUrl,\n    parseMediaSrc: parseMediaSrc,\n    embedParams: embedParams,\n    createEmbedLinkFromYoutubeId: createEmbedLinkFromYoutubeId,\n    embeddableYoutubeUrl: embeddableYoutubeUrl,\n    parseInput: embeddableYoutubeUrl,\n    getOutgoingUrl: getOutgoingUrl\n  };\n\n  function getMimeType() {\n    return _mimeType;\n  }\n\n  function getOutgoingUrl(url, startAt) {\n    url = embeddableYoutubeUrl(url, false);\n    if (_existy(startAt) && startAt > 0) {\n      url += '&start=' + startAt;\n    }\n    return url;\n  }\n\n  function extractYoutubeId(origUrl) {\n    if (!origUrl) {\n      return false;\n    }\n    origUrl = origUrl.replace(/%3F/, '?');\n    origUrl = origUrl.replace(/%26/, '&');\n    var getYoutubeID = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/i;\n    var ytMatch = origUrl.match(getYoutubeID);\n    return (ytMatch && ytMatch[1]) ? ytMatch[1] : false;\n  }\n\n  function isYoutubeUrl(origUrl) {\n    if (!origUrl) {\n      return false;\n    }\n    origUrl = origUrl.replace(/%3F/, '?');\n    origUrl = origUrl.replace(/%26/, '&');\n    var getYoutubeID = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/i;\n    return getYoutubeID.test(origUrl);\n  }\n\n  /**\n   *\n   * @param mediaSrcArr\n   * @return mediaSrcObj {type: string, mediaSrcArr: Array<String>}\n   */\n  function parseMediaSrc(mediaSrcArr) {\n    return mediaSrcArr.reduce(function (parsedMediaSrcObj, mediaSrc) {\n      if (isYoutubeUrl(mediaSrc)) {\n        parsedMediaSrcObj.mediaSrcArr.push(mediaSrc);\n      }\n      return parsedMediaSrcObj;\n    }, {type: 'youtube', mediaSrcArr: []});\n  }\n\n  function embedParams(outgoing) {\n    // kept separate from createEmbedLinkFromYoutubeId for convenience in unit tests.\n    // TODO move these into videoController, as playerVar params, instead of embedding them in the url.  (Will need to init youtube as a div instead of as an iframe)\n    // WARN dont remove the wmode param, it works around an IE z-index bug\n\n    if (outgoing === false) {\n      //supported params available at https://developers.google.com/youtube/player_parameters\n      return \"?controls=1&autoplay=1&modestbranding=1&showinfo=1&rel=0&iv_load_policy=3&wmode=transparent\";\n    }\n\n    return \"?enablejsapi=1&controls=0&modestbranding=1&showinfo=0&rel=0&iv_load_policy=3&wmode=transparent\";\n  };\n\n  function createEmbedLinkFromYoutubeId(ytid, suppressParams) {\n    if (!ytid) {\n      return false;\n    }\n    return \"//www.youtube.com/embed/\" + ytid + (suppressParams ? \"\" : embedParams(suppressParams));\n  };\n\n  function embeddableYoutubeUrl(origUrl, suppressParams) {\n    if (!origUrl) {\n      return false;\n    }\n    var ytid = extractYoutubeId(origUrl);\n    return createEmbedLinkFromYoutubeId(ytid, suppressParams);\n  };\n\n  // var parseRidiculousDurationFormat = function (input) {\n  // \tvar duration = 0;\n  // \tif (input.match(/(\\d*)D/)) {\n  // \t\tduration = duration + parseInt((input.match(/(\\d*)D/)[1] * 86400), 10);\n  // \t}\n  // \tif (input.match(/(\\d*)H/)) {\n  // \t\tduration = duration + parseInt((input.match(/(\\d*)H/)[1] * 3600), 10);\n  // \t}\n  // \tif (input.match(/(\\d*)M/)) {\n  // \t\tduration = duration + parseInt((input.match(/(\\d*)M/)[1] * 60), 10);\n  // \t}\n  // \tif (input.match(/(\\d*)S/)) {\n  // \t\tduration = duration + parseInt((input.match(/(\\d*)S/)[1]), 10);\n  // \t}\n  // \treturn duration;\n  // };\n  //\n  // var getVideoMetaData = function (id) {\n  // \tvar url = \"https://www.googleapis.com/youtube/v3/videos?id=\" + id + \"&part=contentDetails,snippet&key=\" + config.youtube.apikey;\n  // \tvar defer = $q.defer();\n  //\n  // \tvar timeoutPromise = $timeout(function () {\n  // \t\tdefer.reject(\"Youtube API request timed out\");\n  // \t}, config.youtube.timeout);\n  //\n  // \t$http({\n  // \t\tmethod: 'GET',\n  // \t\turl: url,\n  // \t\ttransformRequest: function (data, headersGetter) {\n  // \t\t\tvar headers = headersGetter();\n  // \t\t\tdelete headers.Authorization; // youtube no likey\n  // \t\t\treturn headers;\n  // \t\t}\n  // \t})\n  // \t\t.success(function (respData) {\n  // \t\t\t$timeout.cancel(timeoutPromise);\n  // \t\t\tdefer.resolve(respData);\n  // \t\t})\n  // \t\t.error(function () {\n  // \t\t\tdefer.reject();\n  // \t\t});\n  // \treturn defer.promise;\n  // };\n\n  // svc.getVideoData = function (id) {\n  // \tvar defer = $q.defer();\n  // \tgetVideoMetaData(id)\n  // \t\t.then(\n  // \t\t\tfunction (respData) {\n  // \t\t\t\tif (respData.items[0]) {\n  // \t\t\t\t\t//shelter ourselves from youtube api changes, by adapting their return to an internal format\n  // \t\t\t\t\tvar videoMetadata = {\n  // \t\t\t\t\t\tid: id,\n  // \t\t\t\t\t\t//thumbnail: \"//img.youtube.com/vi/\"+id+\"/default.jpg\",   (might be useful someday)\n  // \t\t\t\t\t\ttitle: respData.items[0].snippet.title,\n  // \t\t\t\t\t\tdescription: respData.items[0].snippet.description,\n  // \t\t\t\t\t\tduration: parseRidiculousDurationFormat(respData.items[0].contentDetails.duration)\n  // \t\t\t\t\t};\n  // \t\t\t\t\tdefer.resolve(videoMetadata);\n  // \t\t\t\t} else {\n  // \t\t\t\t\tconsole.log(\"Bad response data from youtube getVideoData\", respData);\n  // \t\t\t\t\tdefer.reject(\"Bad response data from youtube getVideoData\");\n  // \t\t\t\t}\n  // \t\t\t},\n  // \t\t\tfunction (reason) {\n  // \t\t\t\tconsole.log(\"Youtube getVideoData failed:\" + reason);\n  // \t\t\t\tdefer.reject(reason);\n  // \t\t\t}\n  // \t\t);\n  // \treturn defer.promise;\n  // };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/youtube/youtubeUrlService.ts","// attach to any directive to make its first input/textarea autofocus\nautofocus.$inject = ['$timeout'];\n\nexport default function autofocus($timeout) {\n  return {\n    link: function (scope, element) {\n      $timeout(function () { // give any child directives time to render themselves...\n        if (element[0].tagName === 'TEXTAREA' || element[0].tagName === 'INPUT') {\n          element[0].focus();\n        } else {\n          element.find('input,textarea')[0].focus();\n        }\n      });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/autofocus.ts","/**\n *\n * Created by githop on 6/30/16.\n */\n\nexport default function ittAnnotationField() {\n  return {\n    restrict: 'EA',\n    scope: {\n      data: '=',\n      ittItemForm: '='\n    },\n    template: [\n      '<div class=\"field\">',\n      '\t<div class=\"label\">Annotation Text [{{$ctrl.appState.lang}}]',\n      '\t\t<itt-validation-tip ng-if=\"$ctrl.ittItemForm[$ctrl.textAreaName].$invalid\" text=\"Annotation Text is a required field\"></itt-validation-tip>',\n      '\t</div>',\n      '\t<div class=\"input\" sxs-input-i18n=\"$ctrl.data.annotation\" do-validate=\"true\" x-inputtype=\"\\'textarea\\'\" on-emit-name=\"$ctrl.onName($taName)\" autofocus></div>',\n      '</div>'\n    ].join('\\n'),\n    controller: ['appState', function (appState) {\n      var ctrl = this;\n      ctrl.onName = onName;\n      ctrl.appState = appState;\n      ctrl.textAreaName = '';\n\n      function onName(v) {\n        ctrl.textAreaName = v;\n\n      }\n\n    }],\n    controllerAs: '$ctrl',\n    bindToController: true\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittAnnotationField.ts","/**\n * Created by githop on 6/30/16.\n */\n\nexport default function ittColorSelect() {\n  return {\n    restrict: 'EA',\n    template: [\n      '<div class=\"field\">',\n      '\t<div class=\"label\">Color</div>',\n      '\t<div class=\"input\">',\n      '\t\t<select size=\"1\" ng-model=\"itemForm.color\">',\n      '\t\t\t<option value=\"\">(Default)</option>',\n      '\t\t\t<option value=\"Invert\">Invert</option>',\n      '\t\t\t<option value=\"Sepia\">Sepia</option>',\n      '\t\t\t<option value=\"Solarized\">Solarized</option>',\n      '\t\t\t<option value=\"Vivid\">Vivid</option>',\n      '\t\t</select>',\n      '\t</div>',\n      '</div>'\n    ].join(' ')\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittColorSelect.ts","/**\n *\n * Created by githop on 6/30/16.\n */\n\nexport default function ittDescriptionField() {\n  return {\n    restrict: 'EA',\n    scope: {\n      data: '=',\n      modelOpts: '=?'\n    },\n    template: [\n      '<div class=\"field\">',\n      '\t<div class=\"label\">Description [{{descriptionField.lang}}]</div>',\n      '\t<div class=\"input\" ng-model-options=\"descriptionField.modelOpts\" sxs-input-i18n=\"descriptionField.data.description\" x-inputtype=\"\\'textarea\\'\"></div>',\n      '</div>'\n    ].join(' '),\n    controller: ['appState', 'ittUtils', function (appState, ittUtils) {\n      var ctrl = this;\n      ctrl.lang = appState.lang;\n      if (!ittUtils.existy(ctrl.modelOpts)) {\n        ctrl.modelOpts = {updateOn: 'default'};\n      }\n    }],\n    controllerAs: 'descriptionField',\n    bindToController: true\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittDescriptionField.ts","/**\n *\n * Created by githop on 6/30/16.\n */\nexport default function ittDisplaySelect() {\n  return {\n    restrict: 'EA',\n    scope: {\n      data: '=',\n      itemForm: '=?',\n    },\n    template: [\n      '<div class=\"field\" ng-if=\"$ctrl.getVisibility(\\'display\\')\">',\n      '\t<div class=\"label\">Display</div>',\n      '\t<div class=\"input\">',\n      '\t\t<select ng-change=\"$ctrl.onItemFormUpdate($ctrl.data, $ctrl.itemForm)\"',\n      '\t\t\tng-model=\"$ctrl.data.layouts[$ctrl.layoutIndex]\"',\n      '\t\t\tng-options=\"{{$ctrl.setNgOpts(\\'display\\')}}\"',\n      '\t\t\titt-options-disabled=\"option.isDisabled for option in $ctrl.getSelectOpts(\\'display\\')\">',\n      '\t\t</select>',\n      '\t</div>',\n      '</div>',\n      '<div class=\"field\" ng-if=\"$ctrl.getVisibility(\\'bgImagePosition\\')\">',\n      '\t<div class=\"label\">Position</div>',\n      '\t\t<div class=\"input\">',\n      '\t\t<select ng-change=\"$ctrl.onItemFormUpdate($ctrl.data, $ctrl.itemForm)\" ng-model=\"$ctrl.itemForm.position\" ng-options=\"{{$ctrl.setNgOpts(\\'imagePosition\\')}}\"></select>',\n      '\t</div>',\n      '</div>'\n    ].join(''),\n    controller: ['$scope', 'selectService', 'ittUtils', function ($scope, selectService, ittUtils) {\n      var ctrl = this;\n      ctrl.getVisibility = selectService.getVisibility;\n      ctrl.getSelectOpts = selectService.getSelectOpts;\n      ctrl.onItemFormUpdate = selectService.onSelectChange;\n      ctrl.setNgOpts = ittUtils.setNgOpts;\n      //layout index should be 0 for images, 1 for scenes\n      ctrl.layoutIndex = (ctrl.data.producerItemType === 'image') ? 0 : 1;\n\n      $scope.$watch(watchTemplate, handleChange);\n\n      function watchTemplate() {\n        return ctrl.data.templateUrl;\n      }\n\n      function handleChange(nv) {\n        ctrl.isImageFillTemplate = (nv && nv === 'templates/item/image-fill.html');\n\n      }\n\n    }],\n    controllerAs: '$ctrl',\n    bindToController: true\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittDisplaySelect.ts","/**\n * Created by githop on 7/1/16.\n */\n\nittDynamicModel.$inject = ['$compile', '$parse'];\n\n//http://stackoverflow.com/a/32096328\nexport default function ittDynamicModel($compile, $parse) {\n  return {\n    restrict: 'A',\n    terminal: true,\n    priority: 100000,\n    link: function (scope, elem) {\n      var name = $parse(elem.attr('itt-dynamic-model'))(scope);\n      elem.removeAttr('itt-dynamic-model');\n      elem.attr('ng-model', name);\n      $compile(elem)(scope);\n    }\n  };\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittDynamicModel.ts","/**\n * Created by githop on 6/30/16.\n */\n\nexport default function ittFileField() {\n  return {\n    restrict: 'EA',\n    scope: true,\n    template: [\n      '<div class=\"field\">',\n      '\t<div class=\"label\">File',\n      '\t\t<itt-validation-tip ng-if=\"ittItemForm.itemAsset.$invalid\" text=\"File is required\"></itt-validation-tip>',\n      '\t</div>',\n      '\t<div class=\"input\" ng-include=\"\\'templates/producer/upload-producer.html\\'\"></div>',\n      '</div>'\n    ].join(' ')\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittFileField.ts","/**\n * Created by githop on 8/5/16.\n */\nexport default function ittFilesHandler() {\n  return {\n    scope: {\n      onSelected: '&'\n    },\n    restrict: 'A',\n    link: function (scope, elm) {\n      elm.bind('change', function () {\n        scope.$apply(function () {\n          console.log('changed?');\n          scope.onSelected({files: elm[0].files});\n        });\n      });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittFilesHandler.ts","// an angular.js wrapper for flot charting library -http://www.flotcharts.org/ but using flot.pie.js\nexport default function ittFlotr2Chart() {\n  var uniqueId = 1;\n  return {\n    restrict: 'E',\n    scope: {\n      type: '@',\n      height: '@',\n      width: '@',\n      title: '=title', //title is separate from options, but we may not want this as i'm not sure ALL charts have a title (or just one)\n      options: '@',\n      data: '@'\n    },\n    template: '<div class=\"flotContainer\"><div class=\"chartContainer\" id=\"chartContainer\" aria-label=\"{{chartLabel}}\"></div><div class=\"legendContainer\" id=\"legendContainer\"></div></div>',\n    link: function (scope, element, attrs) {\n\n      var draw = function (el, d, o) {\n        scope.chartLabel = createLabel(d);\n        $.plot(el, d, o);\n        el.show();\n      };\n\n      var chartContainer = $(\"#chartContainer\");\n      chartContainer.attr(\"id\", \"chartContainer\" + uniqueId);\n      var legendContainer = $(\"#legendContainer\");\n      legendContainer.attr(\"id\", \"legendContainer\" + uniqueId++);\n\n      var legendFormatterFn = function (label, series) {\n        return Math.round(series.percent) + '% (' + series.data[0][1] + '): ' + label;\n      };\n      var labelFormatterFn = function (label, series) {\n        return '<div style=\"padding: 3px; font-size: 80%\">' + Math.round(series.percent) + '%</div>';\n      };\n\n      // defaults\n      scope.chartOptions = {\n        series: {\n          pie: {\n            show: true,\n            label: {\n              show: true,\n              background: {\n                opacity: 0.7\n              },\n              formatter: labelFormatterFn\n            }\n          }\n        },\n        legend: {\n          show: true,\n          labelFormatter: legendFormatterFn,\n          //labelBoxBorderColor: color\n          noColumns: 1,\n          position: \"sw\", // or \"nw\" or \"ne\" or \"sw\"\n          margin: 0, //number of pixels or [x margin, y margin]\n          backgroundColor: null, // or color\n          backgroundOpacity: 1, // number between 0 and 1\n          sorted: 'descending', // null/false, true, \"ascending\", \"descending\", \"reverse\", or a comparator\n          container: legendContainer // or jQuery object/DOM element/jQuery expression\n        },\n\n        grid: {\n          hoverable: true\n        },\n        tooltip: true,\n        tooltipOpts: {\n          content: \"%y.0, %s\", // show percentages, rounding to 2 decimal places\n          shifts: {\n            x: 20,\n            y: 0\n          },\n          defaultTheme: false\n        }\n      };\n\n      //  TODO merge scope.options into chartOptions\n      // if (scope.options) {\n      // \t var newOptions = JSON.parse(scope.options);\n      // }\n\n      // watch width for both init and for resize:\n      scope.$watch(function () {\n        return chartContainer.width();\n      }, function (w) {\n        if (w > 0) {\n          chartContainer.css({\n            height: w\n          });\n          draw(chartContainer, JSON.parse(scope.data), scope.chartOptions);\n\n          // Now that we have a height we can safely observe changes in the data:\n          scope.observeData = attrs.$observe('data', function (value) {\n            scope.data = JSON.parse(value);\n            draw(chartContainer, scope.data, scope.chartOptions);\n          });\n          scope.$on('$destroy', scope.observeData);\n\n          // Options never change (for now) so disabling the watcher\n          // attrs.$observe('options', function (value) {\n          // \tscope.options = value;\n          // \tdraw(chartContainer, scope.data, scope.options);\n          // });\n\n        }\n      });\n\n      var addPercent = function (data) {\n        var total = 0;\n        for (var i = 0; i < data.length; i++) {\n          total += data[i].data;\n        }\n        for (var y = 0; y < data.length; y++) {\n          data[y].percent = (data[y].data / total) * 100;\n        }\n        return data;\n      };\n      var createLabel = function (data) {\n        var labelText = \"\";\n        data = addPercent(data);\n        for (var i = 0; i < data.length; i++) {\n          labelText += Math.round(data[i].percent) + \"% of users totaling \" + data[i].data + \" choose \\'\" + data[i].label + \"\\'. \";\n        }\n        return labelText;\n      };\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittFlotChart.ts","/**\n *\n * Created by githop on 6/30/16.\n */\n\nexport default function ittHighlightSelect() {\n  return {\n    restrict: 'EA',\n    template: [\n      '<div class=\"field\">',\n      '\t<div class=\"label\">Highlight<span ng-if=\"episode\"> Style</spann></div>',\n      '\t<div class=\"input\">',\n      '\t\t<select size=\"1\" ng-model=\"itemForm.highlight\">',\n      '\t\t\t<option ng-if=\"episode\" value=\"\">(Default)</option>',\n      '\t\t\t<option ng-if=\"item._type === \\'Scene\\'\" value=\"\">(Inherit from episode)</option>',\n      '\t\t\t<option ng-if=\"item._type !== \\'Scene\\' && !episode\" value=\"\">(Inherit from layout)</option>',\n      '\t\t\t<option value=\"None\">No highlight</option>',\n      '\t\t\t<option value=\"Solid\">Solid</option>',\n      '\t\t\t<option value=\"Border\">Border</option>',\n      '\t\t\t<option value=\"Side\">Side</option>',\n      '\t\t\t<option value=\"Bloom\">Translucent</option>',\n      '\t\t\t<option value=\"Tilt\">Tilt</option>',\n      '\t\t</select>',\n      '\t</div>',\n      '</div>'\n    ].join(' ')\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittHighlightSelect.ts","/**\n *\n * Created by githop on 12/8/15.\n */\n/**\n * @ngdoc directive\n * @name iTT.directive:ittIframe\n * @restrict 'E'\n * @scope\n * @description\n * Directive used to display iframed content\n * @requires appState\n * @param {String} src The Source URL for the iframe\n * @param {String=} contenttype The mime type of the iframed content\n * @param {Object} item The Item object, aka an Event from the Database\n * @example\n * <pre>\n *     <itt-iframe src=\"<url>\" contenttype=\"text/html\" item=\"<itemObject>\"></itt-iframe>\n * </pre>\n */\nittIframe.$inject = ['appState'];\n\nexport default function ittIframe(appState) {\n  return {\n    restrict: 'E',\n    scope: {\n      src: '@',\n      contenttype: '@',\n      item: '&'\n    },\n    replace: true,\n    templateUrl: 'templates/iframe.html',\n    controller: ['$scope', 'ittUtils', 'appState',\n      function ($scope, ittUtils, appState) {\n        // moved this all back out of the controller to avoid leaking $scope.sandbox across directives\n        var _ctrl = this; //jshint ignore:line\n        var _sandboxAttrs = 'allow-forms allow-same-origin allow-scripts';\n        var _popupsTopWindow = ' allow-top-navigation allow-popups';\n        _ctrl.isLoading = true;\n        _ctrl.isTouchDevice = appState.isTouchDevice;\n\n\n        function validateFrameUrl(url) {\n          if (ittUtils.isValidURL(url)) {\n            _ctrl.isLoading = false;\n            return true;\n          } else {\n            _ctrl.isLoading = true;\n            return false;\n          }\n\n        }\n\n        //set scrolling to no if we're on an ipad\n        //and we're attempting to iframe our own player\n        //this stops the player from expanding the iframe its contained in.\n        if (_ctrl.isTouchDevice && /inthetelling.com\\/#/.test(_ctrl.src)) {\n          _ctrl.iOSScroll = 'no';\n        }\n\n        _ctrl.watcher = $scope.$watchGroup([function () {\n          return _ctrl.src;\n        }, function () {\n          return _ctrl.contenttype;\n        }], function () {\n          if (!_ctrl.src || !validateFrameUrl(_ctrl.src)) {\n            return;\n          }\n\n          if (_ctrl.contenttype) {\n            // Uploads will always have a content type; we can trust it:\n            _ctrl.sandbox = (_ctrl.contenttype === 'text/html') ? _sandboxAttrs : undefined;\n          } else {\n            // no content type for links, so we have to fall back on string matching.\n            // Ideally we'd only apply the sandbox to html files, but that's hard to match, so for now we'll\n            // default to sandbox unless proven otherwise.\n            _ctrl.sandbox = _sandboxAttrs;\n\n            // Remove it for PDFs (for now; probably we'll be growing this list later on)\n            if (_ctrl.src.match(/.pdf$/)) {\n              delete _ctrl.sandbox;\n            }\n            //give ourselves more permission\n            if (_ctrl.src.match(/inthetelling.com\\/#/)) {\n              _ctrl.sandbox += _popupsTopWindow;\n            }\n\n            //for certain browsers, see: TS-757 and TS-773\n            if (_ctrl.src.match(/inthetelling.com\\/#/) && _ctrl.src.indexOf('?') === -1) {\n              _ctrl.src += '?embed=1';\n            }\n\n            // Looks like we have some episodes where production used Links item types to point to asset uploads,\n            // because upload templates  were broken (see TS-839). Would have been nice if they'd reported that\n            // so we could fix it, but they didn't, so we'll clean up after them.\n\n            // These won't have a file extension to match on, so we'll have to just\n            // assume that anything in our upload space won't have a framebreaker.\n            // URLs are either https://s3.amazonaws.com/ITT_Assets or https://s3.amazonaws.com/itt.user.uploads\n\n            // TODO check to see if they always used ITT_Assets -- if so we can still protect against end-user uploads\n            // of framebreaking files by using .match(/amazonaws.com\\/ITT/) instead\n            if (_ctrl.src.match(/amazonaws.com\\/itt/i)) {\n              delete _ctrl.sandbox;\n            }\n          }\n        });\n\n        $scope.$on('$destroy', function () {\n          _ctrl.watcher();\n        });\n      }],\n    controllerAs: '$ctrl',\n    bindToController: true,\n    link: function (scope, elm) {\n      var _btnConst = 95;\n\n      var _unWatch = angular.noop;\n      var _toolbarH = 75;\n      var _timelineBarH = 145;\n      var _offsetConst = _toolbarH + _timelineBarH;\n      var _modalWrapper = $('.w-modal');\n      var _otherModal = $('.modal');\n      var _frameBottom = $(window).height() - _offsetConst;\n\n      if (_otherModal.length > 0 && appState.isTouchDevice) {\n        //set dimenions on <iframe>\n        scope.$ctrl.styles = {'height': _frameBottom + 'px'};\n        //set dimensions on iframeContainer div\n        elm.css('height', _frameBottom);\n\n        scope.$watch(function () {\n          return elm.height();\n        }, function (newVal, oldval) {\n          if (newVal !== oldval) {\n            scope.$ctrl.styles = {'height': newVal + 'px'};\n            elm.css('height', _frameBottom);\n          }\n        });\n      }\n      //search for the 'w-modal\" class, if we find one,\n      //then we know that we are using windowfg template, which seems to handle modals.\n      if (_modalWrapper.length > 0) {\n        setIframeHeight();\n      } else {\n        resizeIframeReviewMode();\n      }\n\n      function setIframeHeight() {\n        var y = _modalWrapper.height() - _btnConst;\n        elm.css('height', y);\n        _modalWrapper.css('overflow-y', 'hidden');\n\n        _unWatch = scope.$watch(function () {\n          return _modalWrapper.height();\n        }, function (newVal, oldVal) {\n          if (newVal !== oldVal) {\n            var newY = newVal - _btnConst;\n            elm.css('height', newY);\n          }\n        });\n      }\n\n\n      function resizeIframeReviewMode() {\n        //only resize iframe in discover mode for the narrasys pro template, career playbook (at the moment)\n        if (appState.viewMode === 'discover'\n          && appState.resizeIframeReviewMode\n          && !appState.isTouchDevice) {\n          elm.css('height', _frameBottom);\n        }\n      }\n\n\n      scope.$on('$destroy', function () {\n        _unWatch();\n      });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittIframe.ts","/**\n * Created by githop on 6/30/16.\n */\nexport default function ittImageField() {\n  return {\n    restrict: 'EA',\n    template: [\n      '<div class=\"field\" ng-show=\"selectService.getVisibility(\\'imageUpload\\')\">',\n      '\t<div class=\"label\">Image',\n      '\t\t<itt-validation-tip ng-if=\"ittItemForm.itemAsset.$invalid\" text=\"Image is required\"></itt-validation-tip>',\n      '\t</div>',\n      '\t<div class=\"input\" ng-include=\"\\'templates/producer/upload-producer.html\\'\"></div>',\n      '</div>'\n    ].join(' ')\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittImageField.ts","/*\n NOTE: when authoring templates make sure that outgoing links call the outgoingLink() function,\n so they get logged properly: don't draw plain hrefs\n */\nimport {IValidationSvc} from '../services/validation.svc';\nittItem.$inject = ['$http', '$timeout', '$interval', 'config', 'authSvc', 'appState', 'analyticsSvc', 'timelineSvc', 'modelSvc', 'selectService', 'playbackService', 'urlService', 'validationSvc'];\n\nexport default function ittItem($http, $timeout, $interval, config, authSvc, appState, analyticsSvc, timelineSvc, modelSvc, selectService, playbackService, urlService, validationSvc: IValidationSvc) {\n  return {\n    restrict: 'A',\n    replace: false,\n    scope: {\n      item: '=ittItem'\n    },\n    template: function (el, attrs) {\n      if (attrs.forcetemplate) {\n        return '<div ng-include=\"\\'templates/item/' + attrs.forcetemplate + '.html\\'\"></div>';\n      } else {\n        return '<div ng-include=\"item.templateUrl\"></div>';\n      }\n    },\n    controller: 'ItemController',\n    link: function (scope, element) {\n      //scope.user = appState.user;\n\n      scope.appState = appState; // to get searchText\n      scope.userHasRole = authSvc.userHasRole;\n\n      if (scope.item.avatar_id) {\n        scope.item.avatar = modelSvc.assets[scope.item.avatar_id];\n      }\n\n      if (scope.item._id === 'internal:editing') {\n        element.addClass('noTransitions');\n      } else {\n        if (authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin') || scope.item.user_id === appState.user._id) {\n          scope.item.editableByThisUser = true;\n        }\n      }\n\n      scope.handleOutgoingLinkDisplay = handleOutgoingLinkDisplay;\n      function handleOutgoingLinkDisplay(): boolean {\n        if (scope.item.url != null && scope.item.url_status != null && scope.item.target != null) {\n          let {url, target, url_status} = scope.item;\n          let isMixedContent = validationSvc.mixedContentUrl(url);\n          let canEmbed = validationSvc.urlIsEmbeddable(url, url_status);\n          //open in new tab\n          return (!canEmbed || target === '_blank') || isMixedContent;\n        }\n      }\n\n      scope.toggleDetailView = function () {\n        // console.log(\"Item toggleDetailView\");\n        if (scope.item.showInlineDetail) {\n          // if inline detail view is visible, close it. (If a modal is visible, this is inaccessible anyway, so no need to handle that case.)\n          scope.item.showInlineDetail = false;\n        } else {\n          timelineSvc.pause();\n\n          scope.captureInteraction();\n          if (element.width() > 450) {\n            // show detail inline if there's room for it:\n            scope.item.showInlineDetail = true;\n          } else {\n            // otherwise pop a modal:\n            appState.itemDetail = {item: scope.item, animate: true};\n          }\n        }\n      };\n      var KeyCodes = {\n        ENTER: 13,\n        SPACE: 32\n      };\n\n      scope.toggleDetailOnKeyPress = function ($event) {\n        var e = $event;\n        var passThrough = true;\n        switch (e.keyCode) {\n          case KeyCodes.ENTER:\n            scope.toggleDetailView();\n            passThrough = false;\n            break;\n          case KeyCodes.SPACE:\n            scope.toggleDetailView();\n            passThrough = false;\n            break;\n          default:\n            passThrough = true;\n            break;\n        }\n        if (!passThrough) {\n          $event.stopPropagation();\n          $event.preventDefault();\n        }\n      };\n\n      scope.forceModal = function (doAnimate) {\n        if (doAnimate === undefined) {\n          doAnimate = true;\n        }\n        timelineSvc.pause();\n        appState.itemDetail = {item: scope.item, animate: doAnimate};\n      };\n\n      scope.outgoingLinkOnKeyPress = function (url, $event) {\n        var e = $event;\n        var passThrough = true;\n        switch (e.keyCode) {\n          case KeyCodes.ENTER:\n            scope.outgoingLink(url);\n            passThrough = false;\n            break;\n          case KeyCodes.SPACE:\n            scope.outgoingLink(url);\n            passThrough = false;\n            break;\n          default:\n            passThrough = true;\n            break;\n        }\n        if (!passThrough) {\n          $event.stopPropagation();\n          $event.preventDefault();\n        }\n      };\n      scope.outgoingLink = function (url) {\n        timelineSvc.pause();\n        scope.captureInteraction();\n\n        //check to see if item URL is from a video; i.e. youtube or html5\n        //then do the right thing; i.e. ensure linked to video resumes from\n        //current time.\n        if (urlService.isVideoUrl(url)) {\n          playbackService.pause(scope.item._id);\n          var curTime = Math.floor(playbackService.getCurrentTime(scope.item._id)) || 0;\n          url = urlService.getOutgoingUrl(url, curTime);\n        }\n\n        if (scope.item.targetTop) {\n          $timeout(function () {\n            window.location.href = url;\n          });\n        } else {\n          window.open(url);\n        }\n      };\n\n      scope.editItem = function () {\n        appState.editEvent = scope.item;\n        appState.editEvent.templateOpts = selectService.getTemplates(scope.item.producerItemType);\n        //second arg to onSelectChange is the itemForm, which is created in ittItemEditor and\n        //we do not have access here. Note that itemForm is only really used in background Images.\n        //hack fix is to pass in an empty object, and selectService will add the necessary itemForm\n        //props.\n\n        var itemForm = selectService.setupItemForm(appState.editEvent.styles, 'item');\n\n        selectService.onSelectChange(appState.editEvent, itemForm);\n        appState.videoControlsActive = true; // TODO see playerController showControls; this may not be sufficient on touchscreens\n        appState.videoControlsLocked = true;\n      };\n\n      scope.captureInteraction = function () {\n        analyticsSvc.captureEventActivity(\"clicked\", scope.item._id);\n      };\n\n      // HACK: need to capture embedded links on item enter, since they're automatically 'clicked'\n      // TODO timelineSvc should be able to inform the item directive directly that enter or exit has happened, $watch is silly\n      if (scope.item.templateUrl === 'templates/item/link-embed.html') {\n        var captureEmbed = scope.$watch(function () {\n          return playbackService.getMetaProp('time') > scope.item.start_time;\n        }, function (x) {\n          if (x) {\n            scope.captureInteraction();\n            captureEmbed();\n          }\n        });\n\n      }\n\n      // HACK not sure why but modelSvc.resolveEpisodeAssets isn't always doing the job.\n      // (Possibly a race condition?)  Quick fix here to resolve it:\n      if (scope.item.asset_id && !scope.item.asset) {\n        scope.item.asset = modelSvc.assets[scope.item.asset_id];\n      }\n\n      // TODO make credly badge its own directive instead of including it here\n      if (scope.item.data) {\n        scope.plugin = scope.item.data._plugin;\n        scope.plugin._type = scope.item.data._pluginType;\n\n        // BEGIN credly badge\n        if (scope.plugin._type === 'credlyBadge') {\n          // console.log(\"credly\");\n          // have analytics record that this event has been reached, so it can be used as a trigger for other achievements\n          analyticsSvc.captureEventActivity(\"viewed\", scope.item._id);\n          if (appState.user.roles && appState.user.roles.length === 1 && appState.user.roles[0] === \"guest\") {\n            scope.plugin.eligibleForBadges = false;\n          } else {\n            scope.plugin.eligibleForBadges = true;\n            if (appState.user.emails) {\n              scope.plugin.userEmail = appState.user.emails[0];\n            } else {\n              scope.plugin.userEmail = '';\n            }\n            scope.plugin.totalAchieved = 0;\n          }\n\n          scope.checkBadgeEligibility = function () {\n            // console.log('checkBadgeEligibility');\n            if (!scope.plugin.eligibleForBadges) {\n              return;\n            }\n\n            angular.forEach(scope.plugin.requirements, function (req) {\n              if (!req.achieved) {\n                analyticsSvc.readEventActivity(req.eventId, req.activity)\n                  .then(function (achieved) {\n                    req.achieved = achieved;\n                    scope.countAchievements(); // can't just do totalAchieved++ here: .then() happens asynch to the forEach, so scoping problems\n                  });\n              }\n              scope.countAchievements(); // catch the case where all were already marked\n            });\n          };\n\n          scope.countAchievements = function () {\n            var count = 0;\n            angular.forEach(scope.plugin.requirements, function (req) {\n              if (req.achieved) {\n                count = count + 1;\n              }\n            });\n            scope.plugin.totalAchieved = count;\n            if (scope.plugin.totalAchieved === scope.plugin.requirements.length) {\n              // HACK TODO we need to implement a real way for items to control the visibility of other items or scenes.\n              // The silly workaround here only works (for some poorly-defined version of 'works') because USC episodes only have one badge\n              modelSvc.episodes[appState.episodeId].styleCss = modelSvc.episodes[appState.episodeId].styleCss + \" uscHackUserHasBadge\";\n            }\n          };\n\n          // on link:\n          scope.checkBadgeEligibility();\n\n          // slow poll after that, up to some reasonable time limit\n          var pollLimit = 0;\n          scope.badgePoll = $interval(function () {\n            // console.log('poll', pollLimit);\n            pollLimit++;\n            if (scope.item.isCurrent || appState.viewMode === 'review') {\n              scope.checkBadgeEligibility();\n            }\n            if (pollLimit > 60) {\n              $interval.cancel(scope.badgePoll);\n            }\n          }, 10000);\n\n          scope.$on('$destroy', function () {\n            $interval.cancel(scope.badgePoll);\n          });\n\n          scope.badger = function () {\n            scope.plugin.gettingBadge = true;\n            $http({\n              method: 'GET',\n              url: config.apiDataBaseUrl + '/v1/send_credly_badge?badge_id=' + scope.plugin.credlyBadgeId + '&email=' + scope.plugin.userEmail\n            })\n              .success(function (data) {\n                // TODO check the data to make sure it's not status: \"Badge previously sent.\"\n                scope.checkBadgeEligibility();\n                // console.log(\"SUCCESS\", data);\n                if (data.status === 'Badge previously sent.') {\n                  scope.plugin.alreadyHadBadge = true;\n                }\n                scope.plugin.gotBadge = true;\n              })\n              .error(function () {\n                scope.plugin.gettingBadge = false;\n                scope.plugin.error = true; // TEMP HACK\n              });\n          };\n        }\n        // END credly badge\n      }\n      // end plugin\n\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittItem.ts","/**\n * @ngdoc directive\n * @name iTT.directive:ittItemDetailModal\n * @restrict 'A'\n * @scope\n * @description\n * For opening modals with event objects.\n * Currently resides in player.html and is passed the item data via appState.\n * Modal is invoked via forceModal() $scope method in ittItem.\n * forceModal() accepts a bool as param, and sets the item on the appState.\n * The modal transition is animated based upon the boolean param passed to forceModal()\n * @requires iTT.service:appState\n * @param {Object} item Event object to display in modal\n */\n\nittItemDetailModal.$inject = ['appState'];\n\nexport default function ittItemDetailModal(appState) {\n  return {\n    restrict: 'A',\n    replace: true,\n    scope: {\n      item: '=ittItemDetailModal'\n    },\n    templateUrl: 'templates/item/modal.html',\n    link: function (scope) {\n      scope.item = scope.item.item;\n      if (!scope.item.animate) {\n        scope.modalStyle = {'transition': 'none'};\n      }\n\n      var baseStyle = {'bottom': '0', 'padding-top': '5%'};\n      var imgStyle = {'overflow-y': 'auto', 'top': '40%', 'height': '85%', 'z-index': '11'};\n\n      if (scope.item.isVideoUrl) {\n        scope.modalStyle = angular.extend(scope.modalStyle, {'padding-top': '5%'});\n      } else if (scope.item.producerItemType === 'image') {\n        scope.modalStyle = angular.extend(scope.modalStyle, imgStyle);\n      } else {\n        scope.modalStyle = angular.extend(scope.modalStyle, baseStyle);\n      }\n\n      scope.dismiss = function () {\n        appState.itemDetail = false;\n      };\n    }\n\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittItemDetailModal.ts","/*jshint sub:true*/\n\n/*\n TODO: right now we're re-building the episode structure on every keystroke.  That's a tiny bit wasteful of cpu :)  At the very least, debounce input to a more reasonable interval\n\n\n */\n\n/**\n * @ngDoc directive\n * @name iTT.directive:ittItemEditor\n * @restrict 'A'\n * @scope\n * @description\n * Directive for editing items in the producer / editor interface\n * @requires $rootScope\n * @requires $timeOut\n * @requires errorSvc\n * @requires appState\n * @requires modelSvc\n * @requires timelineSvc\n * @requires awsSvc\n * @requires dataSvc\n * @param {Object} Item object representing an Event object from the DB to be edited.\n */\n\n\nittItemEditor.$inject = ['$rootScope', 'errorSvc', 'appState', 'modelSvc', 'timelineSvc', 'selectService'];\n\nexport default function ittItemEditor($rootScope, errorSvc, appState, modelSvc, timelineSvc, selectService) {\n  return {\n    restrict: 'A',\n    replace: true,\n    scope: {\n      item: '=ittItemEditor'\n    },\n    templateUrl: 'templates/producer/item.html',\n    controller: 'EditController',\n    link: function (scope) {\n\n      timelineSvc.pause();\n      timelineSvc.seek(scope.item.start_time);\n\n      scope.uploadStatus = [];\n      scope.uneditedItem = angular.copy(scope.item); // in case of cancel\n      scope.uneditedItem['$$hashKey'] = scope.item['$$hashKey']; //Preserve the hashkey, which angular.copy strips out\n      scope.annotators = modelSvc.episodes[appState.episodeId].annotators;\n      scope.episodeContainerId = modelSvc.episodes[appState.episodeId].container_id;\n\n      scope.languages = modelSvc.episodes[appState.episodeId].languages;\n      scope.itemForm = selectService.setupItemForm(scope.item.styles, 'item');\n\n      if (!scope.item.layouts) {\n        console.log('set layouts array to inline');\n        scope.item.layouts = [\"inline\"];\n      }\n\n      if (!scope.item.producerItemType) {\n        errorSvc.error({\n          data: \"Don't have a producerItemType for item \" + scope.item._id\n        });\n      }\n      // TODO:this breaks when editing sxs items within producer!\n      scope.itemEditor = 'templates/producer/item/' + appState.product + '-' + scope.item.producerItemType + '.html';\n      scope.appState = appState;\n\n      //watch templateUrl\n      // TODO this still needs more performance improvements...\n\n      scope.watchEdits = scope.$watch(function () {\n        return scope.item;\n      }, function (newItem, oldItem) {\n        if (!oldItem) {\n          return;\n        }\n\n        // console.log('item:', newItem);\n        // console.log('templateUrl: ', newItem.templateUrl, '\\n', 'layouts: ', newItem.layouts);\n        // FOR DEBUGGING\n        /*\n         angular.forEach(Object.keys(newItem), function (f) {\n         if (f !== '$$hashKey' && !(angular.equals(newItem[f], oldItem[f]))) {\n         console.log(\"CHANGED:\", f, newItem[f]);\n         }\n         });\n         */\n\n        if (newItem.chapter_marker === false) {\n          timelineSvc.removeEvent(newItem._id);\n        }\n\n        // Special cases:\n        // if new template is image-fill,\n        // \tset cosmetic to true, itemForm.\n        // if old template was image-fill, set cosmetic to false\n        // TODO this is fragile, based on template name:\n\n        //seeing if we can put this logic below into select service\n\n        //for changes to templateUrl, i.e. picking an option from the drop down.\n        // if (newItem.templateUrl !== oldItem.templateUrl) {\n        //\n        // \tif (newItem.templateUrl === 'templates/item/image-fill.html') {\n        // \t\tscope.item.cosmetic = true;\n        // \t\tscope.item.layouts = [\"windowBg\"];\n        // \t\tscope.itemForm.position = \"fill\";\n        // \t}\n        // \tif (oldItem.templateUrl === 'templates/item/image-fill.html') {\n        // \t\tscope.item.cosmetic = false;\n        // \t\tscope.item.layouts = [\"inline\"];\n        // \t\tscope.itemForm.position = \"\";\n        // \t\tscope.itemForm.pin = \"\";\n        // \t}\n        // }\n\n\n        //newItem is scope.item\n        newItem = modelSvc.deriveEvent(newItem); // Overkill. Most of the time all we need is setLang...\n\n        //for producers, if they edit a URL to link-embed template a site that cannot be embedded,\n        //change the template URL to 'link'\n        if (appState.product === 'producer' && newItem.target === '_blank' && (newItem.templateUrl === 'templates/item/link-embed.html' || newItem.templateUrl === 'templates/item/link-modal-thumb.html')) {\n          newItem.templateUrl = 'templates/item/link.html';\n        }\n\n        // TODO BUG items moved from one scene to another aren't being included in the new scene until the user hits save,\n        // only in discover mode (review mode has no problem.)   This was also the case when we ran resolveEpisodeEvents on every edit, it's an older bug.\n        // This _should_ be setting it, and it _is_ triggering sceneController precalculateSceneValues...  IT IS A MYSTERY\n        if (newItem.start_time !== oldItem.start_time || newItem.start_time !== oldItem.end_time || newItem.stop === true) {\n          modelSvc.resolveEpisodeEvents(appState.episodeId);\n        }\n        // console.count('$watch turn');\n\n        // console.group('itemStyles');\n        // console.count('incoming item layouts');\n        // console.log('Layouts:', newItem.layouts);\n        // console.log('Styles:', newItem.styles);\n        // console.log('styleCss:', newItem.styleCss);\n        // console.log('\\n');\n        // console.log('itemForm.pin', scope.itemForm.pin);\n        // console.log('itemForm.position', scope.itemForm.position);\n        // console.groupEnd('itemStyles');\n\n      }, true);\n\n      // Transform changes to form fields for styles into item.styles[]:\n      scope.watchStyleEdits = scope.$watch(function () {\n        return scope.itemForm;\n      }, function () {\n        var styles = [];\n        for (var styleType in scope.itemForm) {\n          if (scope.itemForm[styleType]) {\n            if (styleType === 'position') { // reason #2,142,683 why I should've specced these styles in some more structured way than a simple array\n              styles.push(scope.itemForm[styleType]);\n            } else {\n              styles.push(styleType + scope.itemForm[styleType]);\n            }\n          }\n        }\n        scope.item.styles = styles;\n        // Slight hack to simplify css for image-fill (ittItem does this too, but this is easier than triggering a re-render of the whole item)\n\n      }, true);\n\n      scope.forcePreview = function () {\n        // this is silly but it works.\n        appState.editEvent.fnord = (appState.editEvent.fnord) ? \"\" : \"fnord\";\n      };\n      var isTranscript = function (item) {\n        if (item._type === 'Annotation' && item.templateUrl.match(/transcript/)) {\n          return true;\n        } else {\n          return false;\n        }\n      };\n      scope.setItemTime = function () {\n        // triggered when user changes start time in the input field\n\n        // TODO ensure within episode duration. If too close to a scene start, match to scene start. If end time not in same scene, change end time to end of scene / beginning of next transcript\n\n        if (scope.item._type === 'Scene') {\n          modelSvc.resolveEpisodeEvents(appState.episodeId); // reparent events to new scene times if necessary\n\n          // need to update timeline enter/exit for *all* scenes here, since changing one can modify others ...\n          timelineSvc.updateSceneTimes(scope.item.episode_id);\n\n        } else if (scope.item.stop) {\n          scope.item.end_time = scope.item.start_time;\n          modelSvc.resolveEpisodeEvents(appState.episodeId); // redundant but necessary\n          timelineSvc.updateEventTimes(scope.item);\n        } else {\n          modelSvc.resolveEpisodeEvents(appState.episodeId); // in case the item has changed scenes\n\n          // for now, just using end of scene if the currently set end time is invalid.\n          if (scope.item.end_time <= scope.item.start_time || scope.item.end_time > modelSvc.events[scope.item.scene_id].end_time) {\n            scope.item.end_time = modelSvc.events[scope.item.scene_id].end_time;\n          }\n          timelineSvc.updateEventTimes(scope.item);\n        }\n\n      };\n      var sortByStartTime = function (a, b) {\n        return a.start_time - b.start_time;\n      };\n\n      scope.setItemEndTime = function () {\n        if (scope.item.end_time <= scope.item.start_time || scope.item.end_time > modelSvc.events[scope.item.scene_id].end_time) {\n          scope.item.end_time = modelSvc.events[scope.item.scene_id].end_time;\n        }\n        timelineSvc.updateEventTimes(scope.item);\n      };\n      var getTranscriptItems = function () {\n        var episode = modelSvc.episodes[appState.episodeId];\n        var allItems = angular.copy(episode.items);\n        return allItems.filter(isTranscript);\n      };\n\n      var getNextStartTime = function (currentScene, currentItem, items) {\n        if (currentItem._type === 'Chapter') {\n          return false;\n        }\n        //HACK to work around TS-412\n        if (!currentScene) {\n          console.warn(\"getNextStartTime called with no scene (because it's being called for a scene event?)\", currentItem, items);\n          return false;\n        }\n        var nextItem;\n        var nextStartTime = currentScene.end_time;\n        items = items.sort(sortByStartTime);\n        for (var i = 0, len = items.length; i < len; i++) {\n          if (items[i]._id === currentItem._id) {\n            //the next item start_time if less than scen end time\n            nextItem = items[i + 1];\n            break;\n          }\n        }\n        if (nextItem) {\n          if (nextItem.start_time < currentScene.end_time) {\n            nextStartTime = nextItem.start_time;\n          }\n        }\n        return nextStartTime;\n      };\n      var getCurrentScene = function (item) {\n        if (item._type === 'Scene') {\n          return item;\n        } else {\n          return modelSvc.events[scope.item.scene_id];\n        }\n      };\n      scope.switchToAutoOrCustom = function (isSwitchingFromCustom) {\n        if (isSwitchingFromCustom) {\n          var items = isTranscript(scope.item) ? getTranscriptItems() : [];\n          scope.item.end_time = getNextStartTime(getCurrentScene(scope.item), scope.item, items);\n          scope.customEndTime = false;\n        } else {\n          scope.customEndTime = true;\n        }\n      };\n      scope.isAutoEndTime = function () {\n        var items = isTranscript(scope.item) ? getTranscriptItems() : [];\n        var nextStartTime = getNextStartTime(getCurrentScene(scope.item), scope.item, items);\n        if (scope.item.end_time === nextStartTime) {\n          return true;\n        } else {\n          return false;\n        }\n\n      };\n      scope.customEndTime = !scope.isAutoEndTime();\n      scope.dismissalWatcher = $rootScope.$on(\"player.dismissAllPanels\", scope.cancelEdit);\n\n      scope.cancelEdit = function () {\n        // hand off to EditController (with the original to be restored)\n        scope.cancelEventEdit(scope.uneditedItem);\n      };\n\n      scope.assetUploaded = function (assetId) {\n        scope.item.asset = modelSvc.assets[assetId];\n        // TODO Shouldn't need to be worrying about asset field names here, handle this in modelSvc?\n        if (scope.item._type === 'Link') {\n          scope.item.link_image_id = assetId;\n        } else if (scope.item._type === 'Annotation') {\n          scope.item.annotation_image_id = assetId;\n        } else {\n          scope.item.asset_id = assetId;\n        }\n        scope.showUploadButtons = false;\n        scope.showUploadField = false;\n      };\n\n      scope.replaceAsset = function () {\n        console.log('replace asset!');\n        scope.showUploadButtons = true;\n\n        if (scope.item.sxs) { // we will delete assets atached to editor items, not from producer items\n          scope.item.removedAssets = scope.item.removedAssets || [];\n          // removedAsset will be used by editController on save to delete the old asset (if we're in editor)\n          if (scope.item._type === 'Link') {\n            scope.item.removedAssets.push(scope.item.link_image_id);\n          } else if (scope.item._type === 'Annotation') {\n            scope.item.removedAssets.push(scope.item.annotation_image_id);\n          } else {\n            scope.item.removedAssets.push(scope.item.asset_id);\n          }\n        }\n      };\n\n      scope.detachAsset = function () {\n        // console.log(\n        // \t'item:', scope.item,\n        // \t'asset:', scope.item.asset,\n        // \t'link_image_id:', scope.item.link_image_id,\n        // \t'asset_id:', scope.item.asset_id,\n        // \t'annotation_image_id:', scope.item.annotation_image_id\n        // );\n        if (scope.item.asset) {\n          switch (scope.item.producerItemType) {\n            case 'link':\n              scope.item.asset = null;\n              scope.item.link_image_id = null;\n              scope.item.asset_id = null;\n              scope.item.annotation_image_id = null;\n              break;\n            case 'transcript':\n              scope.item.asset = null;\n              scope.item.annotation_image_id = null;\n              break;\n            case 'image':\n            case 'question':\n            case 'file':\n              scope.item.asset = null;\n              scope.item.asset_id = null;\n              break;\n          }\n        }\n      };\n\n      scope.attachChosenAsset = function (asset_id) {\n        // console.log(scope.item);\n        var asset = modelSvc.assets[asset_id];\n        if (scope.item) {\n          scope.item.asset = asset;\n          selectService.onSelectChange(scope.item, scope.itemForm);\n          if (scope.item._type === 'Upload' || scope.item._type === 'Plugin') {\n            scope.item.asset_id = asset_id;\n          } else if (scope.item._type === 'Link') {\n            scope.item.link_image_id = asset_id;\n            scope.item.asset_id = asset_id;\n          } else if (scope.item._type === 'Annotation') {\n            console.log('you are actually getting here!!');\n            scope.item.asset_id = asset_id;\n            scope.item.annotation_image_id = asset_id;\n          } else {\n            console.error(\"Tried to select asset for unknown item type\", scope.item);\n          }\n        }\n      };\n\n      scope.$on('$destroy', function () {\n        scope.watchEdits();\n        scope.dismissalWatcher();\n        scope.watchStyleEdits();\n      });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittItemEditor.ts","/**\n * Created by githop on 8/23/16.\n */\n\n//impure, currently depends on inheriting scope for 'langform'\nexport default function ittLanguageFlags() {\n  return {\n    restrict: 'EA',\n    template: [\n      '<div class=\"field\">',\n      '\t<div class=\"label\">Languages</div>',\n      '\t<div class=\"input\">',\n      '\t<label>',\n      '\t\t<input type=\"checkbox\" ng-model=\"langForm.en\">English',\n      '\t</label>',\n      '\t<label>',\n      '\t\t<input type=\"checkbox\" ng-model=\"langForm.es\">Spanish',\n      '\t</label>',\n      '\t<label>',\n      '\t\t<input type=\"checkbox\" ng-model=\"langForm.zh\">Chinese',\n      '\t</label>',\n      '\t<label>',\n      '\t\t<input type=\"checkbox\" ng-model=\"langForm.pt\">Portuguese',\n      '\t</label>',\n      '\t<label>',\n      '\t\t<input type=\"checkbox\" ng-model=\"langForm.fr\">French',\n      '\t</label>',\n      '\t<label>',\n      '\t\t<input type=\"checkbox\" ng-model=\"langForm.de\">German',\n      '\t</label>',\n      '\t<label>',\n      '\t\t<input type=\"checkbox\" ng-model=\"langForm.it\">Italian',\n      '\t</label>',\n      '\t</div>',\n      '</div>'\n    ].join('\\n')\n  };\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittLanguageFlags.ts","/**\n * Created by githop on 8/23/16.\n */\n\nexport default function ittLanguageSelect() {\n  return {\n    restrict: 'EA',\n    scope: {\n      data: '=',\n      langForm: '=?'\n    },\n    template: [\n      '<div class=\"field\">',\n      '\t<div class=\"label\">Default Language</div>',\n      '\t<div class=\"input\">',\n      '\t\t<select ng-model=\"$ctrl.data.defaultLanguage\" ng-options=\"{{$ctrl.setNgOpts()}}\" itt-options-disabled=\"option.isDisabled for option in $ctrl.langOpts\"></select>',\n      '\t</div>',\n      '</div>'\n    ].join('\\n'),\n    controller: ['$scope', 'selectService', function ($scope, selectService) {\n      var ctrl = this;\n      ctrl.getSelectOpts = selectService.getSelectOpts;\n      ctrl.setNgOpts = setNgOpts;\n      ctrl.langOpts = selectService.getSelectOpts('language');\n\n      $scope.$watch(watchLangForm, handleUpdates, true);\n\n      function setNgOpts() {\n        return \"option.value as option.name for option in $ctrl.langOpts\";\n      }\n\n      function watchLangForm() {\n        return ctrl.langForm;\n      }\n\n      //read the state of the lang form, set the disabled state\n      //from the state of the language checkbox.\n      function handleUpdates(nv) {\n        ctrl.langOpts = ctrl.langOpts.map(function (l) {\n          angular.forEach(nv, function (v, k) {\n            if (l.value === k) {\n              l.isDisabled = !v;\n            }\n          });\n          return l;\n        });\n      }\n\n    }],\n    controllerAs: '$ctrl',\n    bindToController: true\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittLanguageSelect.ts","/*\n No UI for this directive. This originally showed a login form but that led to a flash-of-content when authenticating via lti\n\n */\nittLogin.$inject = ['$location', '$routeParams', 'config', 'authSvc', 'appState', 'errorSvc'];\n\nexport default function ittLogin($location, $routeParams, config, authSvc, appState, errorSvc) {\n  return {\n    restrict: 'A',\n    replace: false,\n\n    link: function (scope) {\n\n      scope.userHasRole = authSvc.userHasRole;\n\n      scope.appState = appState;\n      scope.loginForm = {\n        auth_key: '',\n        password: ''\n      };\n\n      scope.apiDataBaseUrl = config.apiDataBaseUrl;\n\n      authSvc.authenticate().then(function () {\n          errorSvc.init();\n          if ($routeParams.key) {\n            // (Probably unnecessary here, but testing to see if this fixes the unintended redirect from /#/auth)\n            $location.search('key', null); // hide the param from the url.  reloadOnSearch must be turned off in $routeProvider!\n          }\n          if ($routeParams.episode) {\n            var epId = $routeParams.episode;\n            $location.search('episode', null);\n            $location.search('nonce', null);\n            $location.path('/episode/' + epId);\n          } else if ($routeParams.narrative) {\n            var narrId = $routeParams.narrative;\n            $location.search('narrative', null);\n            $location.search('nonce', null);\n            if ($routeParams.timeline) {\n              var timelineId = $routeParams.timeline;\n              $location.search('timeline', null);\n              $location.path('/story/' + narrId + '/' + timelineId);\n            } else {\n              $location.path('/story/' + narrId);\n            }\n\n          } else if (Object.keys($routeParams).length === 0) {\n            $location.path('/account');\n\n          }\n        },\n        function () {\n          console.log(\"Login failed...\");\n        });\n\n      // for admin logins only, for now. In future maybe oauth-based login will route through here too\n      scope.adminLogin = function () {\n        authSvc.adminLogin(scope.loginForm.auth_key, scope.loginForm.password)\n          .then(function () {\n            $location.path('/projects');\n          })\n          .catch(function (data) {\n            console.warn(\"FAILED ADMIN LOGIN\", data);\n            scope.badlogin = true;\n          });\n      };\n\n      scope.logout = function () {\n        authSvc.logout();\n      };\n\n    }\n  };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittLogin.ts","// Sends magnet signal whenever becomes visible.\n// In watch mode (only), also watches the window size and tries to keep the video from overflowing the window height\n\nimport { CHANGE_MAGNET, JUMP_TO_MAGNET, UPDATE_MAGNET } from '../../constants';\n\nclass MagnetStore {\n  constructor(private _bcr: ClientRect) {}\n\n  static of(bcr) {\n    return new MagnetStore(bcr);\n  }\n\n  get bcr() {\n    return this._bcr;\n  }\n}\n\n// TODO: remove dependence on jQuery?  (.is(:visible))\nittMagnet.$inject = ['$rootScope', '$timeout', 'appState', 'playbackService'];\n\nexport default function ittMagnet($rootScope, $timeout, appState, playbackService) {\n  return {\n    restrict: 'A',\n    replace: true,\n    scope: true,\n    link: function mangetLinkFn(scope, element) {\n\n      const $watches = {\n        magnetBoundingClientRect: null,\n        size: null,\n        appState: null\n      };\n\n      $rootScope.$on(UPDATE_MAGNET, () => changeMagnet());\n\n      onInit();\n\n      function onInit() {\n        window.addEventListener('resize', onResize);\n\n\n        if (!appState.isIOS()) {\n          $watches.magnetBoundingClientRect = scope.$watchCollection(watchBcr, handleNewMagnetBcr, true);\n        } else {\n          // for iOS, watching the BCR seems to cause cause the video to bounce around when scrolling in longer\n          // layouts and when scrolling in review mode.\n          // for iOS devices, rely on onInit() to set BCR on layout changes and watch the view mode instead\n          // to handle repositioning the video when changing view modes, changing video position in producer etc....\n          changeMagnet();\n          $watches.appState = scope.$watchCollection(\n            watchAppState,\n            (newMode: any, oldMode: any) => {\n\n              if (newMode.videoPosition !== oldMode.videoPosition) {\n                $timeout(() => changeMagnet(), 500);\n                return;\n              }\n\n              if (newMode.viewMode) {\n                changeMagnet();\n              }\n            },\n            true\n          );\n        }\n\n\n        if (element.attr('id') === 'watchModeVideoMagnet') {\n          $watches.size = scope.$watch(watchSize, handleSize, true);\n        }\n      }\n\n      function onDestroy() {\n        window.removeEventListener('resize', onResize);\n        Object.keys($watches).forEach((fn) => {\n          if ($watches[fn]) {\n            $watches[fn]();\n          }\n        });\n      }\n\n      function onResize() {\n        if (appState.isIOS() && appState.viewMode === 'review') {\n          // for some reason a resize event is fired when scrolling\n          // in review mode\n          return;\n        }\n        changeMagnet();\n        scope.$digest();\n      }\n\n      function watchBcr() {\n        const { top, left, width } = element[0].getBoundingClientRect();\n\n        let documentOffset = top;\n\n        if (appState.viewMode !== 'review') {\n          // for IE compatibility\n          documentOffset = _adjustBcrOffset(top);\n        }\n\n        return {  left, width, top: documentOffset };\n      }\n\n      function watchAppState() {\n        return {\n          viewMode: appState.viewMode,\n          videoPosition: appState.editEvent.styleCss\n        };\n      }\n\n      function _adjustBcrOffset(top): number {\n        const yOffset = (window.pageYOffset !== undefined)\n          ? window.pageYOffset\n          : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n        return top + yOffset;\n      }\n\n      function handleNewMagnetBcr(newV) {\n        if (newV) {\n          changeMagnet(newV);\n        }\n      }\n\n      function watchSize() {\n        return {\n          w: angular.element(window).width(),\n          h: angular.element(window).height(),\n          v: element.is(':visible')\n        };\n      }\n\n      function handleSize() {\n        // console.log('watch mode guy');\n        // we want the video to be as wide as possible without overflowing the window.\n        // And dont' want to set the height directly, just the width. So math:\n        const win = angular.element(window);\n        const maxAllowableHeight = win.height() - 46; // TOOLBAR HEIGHT (plus some slop)\n        if (win.width() / maxAllowableHeight > (16 / 9)) {\n          element.width(16 / 9 * maxAllowableHeight);\n        } else {\n          element.width(win.width());\n        }\n        changeMagnet();\n      }\n\n      function getMagnetBcr(): ng.IPromise<ClientRect> {\n        return $timeout(\n          () => {\n            const readOnly = element[0].getBoundingClientRect();\n            return {\n              top: readOnly.top,\n              bottom: readOnly.bottom,\n              left: readOnly.left,\n              right: readOnly.right,\n              width: readOnly.width\n            };\n          },\n          100\n        );\n      }\n\n      function changeMagnet (preCalcedBcr?) {\n\n        if (preCalcedBcr) {\n          const magnetStore = MagnetStore.of(preCalcedBcr);\n          if (playbackService.getMetaProp('time') === 0) {\n            $rootScope.$emit(JUMP_TO_MAGNET, magnetStore.bcr);\n            return;\n          }\n\n          $rootScope.$emit(CHANGE_MAGNET, magnetStore.bcr);\n          return;\n        }\n\n        getMagnetBcr().then((bcr) => {\n          const bcrCopy = Object.assign({}, bcr);\n          if (appState.viewMode !== 'review') {\n            // for IE compatibility\n            bcrCopy.top = _adjustBcrOffset(bcrCopy.top);\n          }\n\n          const magnetStore = MagnetStore.of(bcrCopy);\n\n          if (playbackService.getMetaProp('time') === 0) {\n            $rootScope.$emit(JUMP_TO_MAGNET, magnetStore.bcr);\n            return;\n          }\n\n          $rootScope.$emit(CHANGE_MAGNET, magnetStore.bcr);\n        });\n      }\n\n      // cleanup watchers on destroy\n      scope.$on('$destroy', onDestroy);\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/magnet/ittMagnet.ts","'use strict';\n\nimport { CHANGE_MAGNET, JUMP_TO_MAGNET } from '../../constants';\n\n// TODO: remove dependence on jQuery? (lots of it here)\nittMagnetized.$inject = ['$rootScope', '$timeout', 'appState'];\nexport default function ittMagnetized($rootScope, $timeout: ng.ITimeoutService, appState) {\n\n  return {\n    restrict: 'A',\n    replace: true,\n    scope: true,\n    link: function (scope, element) {\n      const WIDTH = 854;\n      const TRANSITION_DURATION = '0.25s';\n\n      $rootScope.$on(CHANGE_MAGNET, (evt, magnetElmBcr: ClientRect) => jumpToMagnet(magnetElmBcr, true));\n      $rootScope.$on(JUMP_TO_MAGNET, (evt, magnetElmBcr: ClientRect) => jumpToMagnet(magnetElmBcr, false));\n\n      function jumpToMagnet (magnetElmBcr: ClientRect, animateTransition: boolean) {\n\n        if (magnetElmBcr == null) {\n          return;\n        }\n\n        if (appState.viewMode === 'review') {\n          element.css('position', 'fixed');\n        } else {\n          element.css('position', 'absolute');\n        }\n\n        const { top, left, width } = magnetElmBcr;\n\n        if (animateTransition === true) {\n          element.css('transition-timing-function', 'cubic-bezier(0.4, 0, 1, 1)');\n          element.css('transition-duration', TRANSITION_DURATION);\n        } else {\n          element.css('transition-duration', 'unset');\n          element.css('transition-timing-function', 'unset');\n        }\n\n        const scaleFactor = width / WIDTH;\n        if (scaleFactor === 0) {\n          return;\n        }\n\n        element.css('transform', `translate(${Math.abs(left)}px, ${Math.abs(top)}px) scale(${scaleFactor})`);\n      }\n\n      // cleanup watchers on destroy\n      scope.$on('$destroy', () => {\n        if (scope.unwatch) {\n          scope.unwatch();\n        }\n      });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/magnet/ittMagnetized.ts","ittMcQuestion.$inject = ['questionAnswersSvc', 'analyticsSvc', 'appState'];\n\nexport default function ittMcQuestion(questionAnswersSvc, analyticsSvc, appState) {\n  return {\n    restrict: 'E',\n    replace: false,\n    scope: {\n      plugin: '=data',\n      qid: '=',\n      choices: '=',\n      correct: '=',\n      onChoice: '=',\n      questionType: '@',\n      showChart: '='\n    },\n    templateUrl: \"templates/item/question-mc-inner.html\",\n    link: function (scope) {\n\n      scope.scoreQuiz = function (i) {\n        scope.plugin.distractors[i].selected = true;\n        scope.plugin.hasBeenAnswered = true;\n        scope.plugin.selectedDistractor = scope.plugin.distractors[i].index;\n        analyticsSvc.captureEventActivity(\"question-answered\", scope.qid, {\n          'answer': scope.plugin.distractors[i].text,\n          'index': scope.plugin.distractors[i].index,\n          'correct': !!(scope.plugin.distractors[i].correct)\n        });\n      };\n\n      scope.feedback = function () {\n        for (var i = 0; i < scope.plugin.distractors.length; i++) {\n          if (scope.plugin.distractors[i].index === scope.plugin.selectedDistractor) {\n            return (scope.plugin.distractors[i].correct) ? scope.plugin.correctfeedback : scope.plugin.incorrectfeedback;\n          }\n        }\n      };\n\n      scope.questionType = scope.plugin.questiontype;\n\n      // NOT YET SUPPORTED IN ittFlotChart:\n      scope.chartOptions = {}; // moving default chartOptions into ittFlotChart; use this to override.\n\n      var formatAnswersForFlotPieChart = function (grouped) {\n        // console.log(\"Formatting \", grouped, \" for \", scope.plugin);\n        var chartData = [];\n        for (var answerIndex in grouped) {\n          if (grouped.hasOwnProperty(answerIndex)) {\n            // translate the index into the answer text\n            angular.forEach(scope.plugin.distractors, function (distractor) {\n              if (distractor.index + \"\" === answerIndex + \"\") {\n                var label = distractor.text;\n                if (typeof (label) === 'object') {\n                  label = label[appState.lang] || label.en || \"\";\n                }\n                chartData.push({\n                  data: grouped[answerIndex],\n                  label: label\n                });\n              }\n            });\n          }\n        }\n        return chartData;\n      };\n\n      if (scope.plugin.hasBeenAnswered === true) {\n\n        /*\n         answer_counts is included in event data as {\n         index: count,\n         index: count\n         }\n         */\n        if (typeof scope.plugin.answer_counts === 'undefined') {\n          // This is in case of failure on the API side to return answer_counts (which shouldn't happen):\n          console.error(\"No answer_counts returned from API\");\n          scope.plugin.answer_counts = {};\n        }\n\n        var grouped = scope.plugin.answer_counts;\n        var chartData = formatAnswersForFlotPieChart(grouped);\n        scope.chartData = chartData;\n      }\n\n      scope.scorePoll = function (i) {\n        console.log(\"scorePoll\");\n        questionAnswersSvc.saveAnswer(\"question-answered\", scope.qid, {\n          'answer': scope.plugin.distractors[i].text,\n          'index': scope.plugin.distractors[i].index,\n          'correct': !!(scope.plugin.distractors[i].correct)\n        })\n          .then(function () {\n            scope.plugin.answer_counts = (typeof scope.plugin.answer_counts === 'undefined') ? {} : scope.plugin.answer_counts;\n            questionAnswersSvc.incrementAnswerCount(scope.plugin.answer_counts, scope.plugin.distractors[i].index);\n            var grouped = scope.plugin.answer_counts;\n            var chartData = formatAnswersForFlotPieChart(grouped);\n            scope.chartData = chartData;\n            scope.plugin.distractors[i].selected = true;\n            scope.plugin.hasBeenAnswered = true;\n            scope.plugin.selectedDistractor = scope.plugin.distractors[i].index;\n            //});\n          });\n\n      };\n\n    }\n\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittMcQuestion.ts","/* For now this is just a thin wrapper around the playerController */\nimport {IDataSvc} from '../interfaces';\nimport {INarrative} from '../models';\n\nclass NarrativeTimelineCtrl {\n  static $inject = [\n    '$scope',\n    '$routeParams',\n    '$location',\n    'dataSvc',\n    'appState',\n    'authSvc',\n    'errorSvc'\n  ];\n  constructor(\n    public $scope: ng.IScope,\n    private $routeParams,\n    private $location: ng.ILocationService,\n    private dataSvc: IDataSvc,\n    private appState,\n    private authSvc,\n    private errorSvc) {\n  }\n\n  $onInit() {\n    this.disableSocialShareOnDev();\n    // this.appState.init();\n    console.log('narrative timeline init!');\n\n    this.dataSvc.getNarrative(this.$routeParams.narrativePath)\n      .then((narrative: INarrative) => {\n        this.appState.narrativeId = narrative._id;\n        this.$scope.narrative = narrative;\n\n        const narrativeRole = this.authSvc.getRoleForNarrative(narrative._id);\n        const defaultProduct = this.authSvc.getDefaultProductForRole(narrativeRole);\n        let currentTl = Object.create(null);\n        let tlTitle = '';\n        let tlId = '';\n        this.appState.product = defaultProduct;\n        angular.forEach(narrative.timelines, (timeline) => {\n          if (\n            timeline._id === this.$routeParams.timelinePath ||\n            timeline.path_slug.en === this.$routeParams.timelinePath\n          ) {\n            currentTl = timeline;\n            tlTitle = timeline.name.en;\n            tlId = timeline._id;\n            this.appState.timelineId = timeline._id;\n            if (timeline.episode_segments[0]) {\n              this.appState.episodeId = timeline.episode_segments[0].episode_id;\n              this.appState.episodeSegmentId = timeline.episode_segments[0]._id;\n              this.$scope.showPlayer = true;\n            }\n          }\n        });\n\n        const narrativeUrl = narrative.path_slug.en;\n        const timelineUrl = currentTl.path_slug.en;\n        const {narrative_subdomain:  subDomain} = narrative;\n        if (narrative.enable_social_sharing === true && this.$scope.enableSocialSharing === true) {\n\n          this.$scope.socialShareInfo = {\n            subDomain,\n            tlTitle,\n            narrative: narrativeUrl,\n            timeline: {url: timelineUrl, id: tlId}\n          };\n        }\n\n        if (!this.appState.episodeId) {\n          this.errorSvc.error({\n            data: 'Sorry, no episode was found in this timeline.'\n          });\n        }\n      });\n  }\n\n  private disableSocialShareOnDev() {\n    this.$scope.enableSocialSharing = !(/api-dev|np-dev|demo/.test(this.$location.host()));\n  }\n\n}\n\n// ittNarrativeTimeline.$inject = ['$routeParams', '$location', 'dataSvc', 'appState', 'authSvc', 'errorSvc'];\n\nexport default function ittNarrativeTimeline() {\n  return {\n    restrict: 'A',\n    replace: true,\n    templateUrl: 'templates/player-timeline.html',\n    controller: NarrativeTimelineCtrl\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittNarrativeTimeline.ts","/**\n * Created by githop on 8/9/16.\n */\n\nittOptionsDisabled.$inject = ['$parse'];\n\n//from: http://stackoverflow.com/a/16203547\nexport default function ittOptionsDisabled($parse) {\n  return {\n    restrict: 'EA',\n    priority: 0,\n    require: 'ngModel',\n    link: link\n  };\n\n  function _disableOptions(scope, attr, element, data, fnDisableIfTrue) {\n    var options = element.find('option');\n    var pos = 0, index = 0, len = options.length, locals;\n    for (; pos < len; pos++) {\n      var elm = angular.element(options[pos]);\n\n      if (elm.val() != '') { //jshint ignore:line\n        locals = {};\n        locals[attr] = data[index];\n        elm.attr('disabled', fnDisableIfTrue(scope, locals));\n        index++;\n      }\n    }\n  }\n\n  function link(scope, elm, attrs) {\n    var expElements = attrs.ittOptionsDisabled.match(/^\\s*(.+)\\s+for\\s+(.+)\\s+in\\s+(.+)?\\s*/);\n    var attrToWatch = expElements[3];\n    var fnDisableIfTrue = $parse(expElements[1]);\n\n    scope.$watch(attrToWatch, function (nv) {\n      if (nv) {\n        _disableOptions(scope, expElements[2], elm, nv, fnDisableIfTrue);\n      }\n    }, true);\n\n    scope.$watch(attrs.ngModel, function (nv) {\n      var disOptions = $parse(attrToWatch)(scope);\n      if (nv) {\n        _disableOptions(scope, expElements[2], elm, disOptions, fnDisableIfTrue);\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittOptionsDisabled.ts","/**\n * Created by githop on 6/30/16.\n */\nexport default function ittQuestionOptions() {\n  return {\n    restrict: 'EA',\n    scope: true,\n    template: [\n      '<div class=\"field\"><div class=\"label\">Answers</div></div>',\n      '<div class=\"field\" ng-repeat=\"distractor in item.data._plugin.distractors track by $index\">',\n      '\t<div class=\"label\">',\n      '\t\t{{$index | alpha}} &nbsp;',\n      '\t\t<input type=\"checkbox\" ng-model=\"distractor.correct\" ng-change=\"onFormativeChecked(distractor)\" ng-if=\"item.data._plugin.questiontype == \\'mc-formative\\'\">',\n      '\t</div>',\n      '\t<div class=\"input\" sxs-input-i18n=\"distractor.text\" x-inputtype=\"\\'textarea\\'\"></div>',\n      '</div>',\n      '<div class=\"field\">',\n      '\t<div class=\"input\">',\n      '\t\t<button ng-click=\"addDistractor($event)\">Add distractor</button>',\n      '\t</div>',\n      '</div>',\n      '<div class=\"field\" ng-if=\"item.data._plugin.questiontype == \\'mc-formative\\'\">',\n      '\t<div class=\"label\">Feedback when correct</div>',\n      '\t<div class=\"input\" sxs-input-i18n=\"item.data._plugin.correctfeedback\" x-inputtype=\"\\'textarea\\'\"></div>',\n      '</div>',\n      '<div class=\"field\" ng-if=\"item.data._plugin.questiontype == \\'mc-formative\\'\">',\n      '\t<div class=\"label\">Feedback when incorrect</div>',\n      '\t<div class=\"input\" sxs-input-i18n=\"item.data._plugin.incorrectfeedback\" x-inputtype=\"\\'textarea\\'\"></div>',\n      '</div>'\n    ].join(' ')\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittQuestionOptions.ts","/**\n * Created by githop on 6/30/16.\n */\nexport default function ittQuestionTextField() {\n  return {\n    restrict: 'EA',\n    scope: {\n      data: \"=\",\n      doValidate: '=?',\n      ittItemForm: '=?'\n    },\n    template: [\n      '<div class=\"field\">',\n      '\t<div class=\"label\">Question text',\n      '\t\t<itt-validation-tip ng-if=\"$ctrl.ittItemForm[$ctrl.textAreaName].$invalid\" text=\"Question Text is a required field\"></itt-validation-tip>',\n      '\t</div>',\n      '\t<div class=\"input\" do-validate=\"$ctrl.doValidate\" on-emit-name=\"$ctrl.onName($taName)\" sxs-input-i18n=\"$ctrl.data.data._plugin.questiontext\" x-inputtype=\"\\'textarea\\'\"></div>',\n      '</div>'\n    ].join(' '),\n    controller: [function () {\n      var ctrl = this;\n      ctrl.onName = onName;\n\n      function onName(v) {\n        console.log(\"name!\", v);\n        ctrl.textAreaName = v;\n      }\n    }],\n    controllerAs: '$ctrl',\n    bindToController: true\n  };\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittQuestionTextField.ts","/**\n * Created by githop on 6/30/16.\n */\nexport default function ittQuestionTypeSelect() {\n  return {\n    restrict: 'EA',\n    scope: {\n      data: '='\n    },\n    template: [\n      '<div class=\"field\">',\n      '\t<div class=\"label\">Template</div>',\n      '\t<div class=\"input\">',\n      '\t<select ng-model=\"$ctrl.data.data._plugin.questiontype\" ng-options=\"{{$ctrl.setNgOpts(\\'questionType\\')}}\"></select>',\n      '\t</div>',\n      '</div>'\n    ].join(' '),\n    controller: ['selectService', 'ittUtils', function (selectService, ittUtils) {\n      var ctrl = this;\n      ctrl.setNgOpts = ittUtils.setNgOpts;\n      ctrl.getSelectOpts = selectService.getSelectOpts;\n      onInit();\n\n      function onInit() {\n        //initialize layout data by forcing a pass through the select service.\n        selectService.onSelectChange(ctrl.data, {});\n      }\n\n    }],\n    controllerAs: '$ctrl',\n    bindToController: true\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittQuestionTypeSelect.ts","// Force scenes to render scenes sequentially instead of all in one ng-repeat, because it looks faster that way.\n\n// (why don't all ng-repeats do this?  More to the point, why don't all of OUR ng-repeats do this?)\n\n// NOTE this is only used in the \"review mode\", not in the new combined search/review\n\nittReviewMode.$inject = ['$timeout', 'appState'];\n\nexport default function ittReviewMode($timeout, appState) {\n  return {\n    restrict: 'A',\n    replace: false,\n    scope: {\n      allScenes: '=ittReviewMode'\n    },\n    templateUrl: 'templates/episode/components/reviewmode-scenes.html',\n    link: function (scope) {\n      // console.log('ittReviewMode', scope);\n\n      // scope.scenes is what is being displayed right now. scope.allScenes is a reference to the original episode data,\n      // which is handy if the episode data hasn't loaded before this gets invoked.\n      scope.appState = appState;\n\n      scope.scenes = [];\n\n      var delay = 100; // would be better if there were a way to directly determine whether the prev scene has finished rendering, but this will do for now\n      var cur = 0;\n      scope.isLoading = true;\n\n      // Was just rendering one scene at a time, but with a lot scenes that can be a different kind of slow.\n      // So we'll ramp up gradually rendering more and more each iteration:\n      var fib = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, Infinity];\n\n      scope.addOne = function () {\n        cur++;\n        if (scope.allScenes) {\n          scope.scenes = scope.allScenes.slice(0, fib[cur]);\n          // console.log(\"scope.scenes length is \",scope.scenes.length);\n          if (cur < scope.allScenes.length) {\n            $timeout(scope.addOne, delay);\n          } else {\n            scope.isLoading = false;\n            scope.scenes = scope.allScenes; // swap in the original data reference once we think we're done loading, so in case users start adding new scenes later we're not stuck with a partial slice\n            // console.log(\"stopping\");\n          }\n        } else {\n          // No scenes loaded yet, so wait for them and try again.  (TODO see if this still works ok if users are editing or adding scenes while in review mode)\n          var loadWatcher = scope.$watch(function () {\n            return scope.allScenes;\n          }, function () {\n            if (scope.allScenes) {\n              loadWatcher();\n              scope.addOne();\n            }\n          });\n        }\n      };\n      $timeout(scope.addOne, delay);\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittReviewMode.ts","/**\n * Created by githop on 6/15/16.\n */\nexport default function ittRouteLoading() {\n  return {\n    restrict: 'EA',\n    template: [\n      '<div ng-if=\"routeLoadingCtrl.isLoading\" class=\"loading routeLoading\">',\n      '\t<div class=\"spinner\">',\n      '\t\t<div class=\"rotating pie\"></div>',\n      '\t\t<div class=\"filler pie\"></div>',\n      '\t\t<div class=\"mask\"></div>',\n      '\t</div><span class=\"loading__text\">Loading</span>',\n      '</div>'\n    ].join(' '),\n    scope: {\n      isLoading: '=?'\n    },\n    controller: ['$rootScope', '$scope', '$timeout', 'errorSvc',\n      function ($rootScope, $scope, $timeout, errorSvc) {\n        var ctrl = this;\n        ctrl.isLoading = ctrl.isLoading || false;\n        var threshold;\n\n        $rootScope.$on('$routeChangeStart', function () {\n          threshold = $timeout(function () {\n            ctrl.isLoading = true;\n          }, 500);\n        });\n\n        $rootScope.$on('$routeChangeSuccess', function () {\n          $timeout.cancel(threshold);\n          ctrl.isLoading = false;\n        });\n\n        $rootScope.$on('$locationChangeSuccess', function () {\n          $timeout.cancel(threshold);\n          ctrl.isLoading = false;\n        });\n\n        $rootScope.$on('$routeChangeError', function () {\n          $timeout.cancel(threshold);\n          ctrl.isLoading = false;\n        });\n\n        //do not show loading indicator\n        //when we have errors\n        $scope.$watch(function () {\n          return errorSvc.errors.length;\n        }, function (newVal, oldVal) {\n          if (newVal !== oldVal && newVal > 0) {\n            $timeout.cancel(threshold);\n            ctrl.isLoading = false;\n          }\n        });\n      }],\n    controllerAs: 'routeLoadingCtrl',\n    bindToController: true\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittRouteLoading.ts","// Minor jquery dependency ($.inArray)\nittScene.$inject = ['$timeout', 'appState'];\n\nexport default function ittScene($timeout, appState) {\n  return {\n    restrict: 'A',\n    replace: false,\n    scope: {\n      scene: '=ittScene',\n      episode: '=episode'\n    },\n    template: '<span ng-include=\"scene.templateUrl\"></span>',\n    controller: 'SceneController',\n    link: function (scope, element) {\n      // force discover and watch modes to not start out scrolled halfway out of view (STORY-161)\n      if (appState.viewMode !== 'review') {\n        window.scrollTo(0, 0);\n      }\n      scope.precalculateSceneValues();\n      scope.appState = appState;\n\n      // Trigger twiddleScene when the window changes size, the scene becomes current, or the viewMode changes:\n      window.addEventListener('resize', () => twiddleScene());\n      twiddleScene();\n\n      function twiddleScene() {\n        $timeout(\n          () => {\n            element.find('.matchVideoHeight:visible').each(function () {\n              $(this).css('height', element.find('.videoMagnet img').height());\n            });\n            const availableViewportHeight = angular.element(window).height() - $('#CONTAINER').scrollTop();\n            /* TOOLBAR HEIGHT */\n            element.find('.stretchToViewport:visible').each(function () {\n              $(this).css('min-height', (availableViewportHeight - $(this).offset().top));\n            });\n            // landing screen: keep the bottom toolbar onscreen\n            element.find('.stretchToViewportShort:visible').each(function () {\n              // HARDCODED FOOTER HEIGHT\n              $(this).css('min-height', (availableViewportHeight - $(this).offset().top - 210));\n            });\n          },\n          100\n        );\n      }\n\n      // trigger init when the user edits content:\n      scope.unwatchEdits = scope.$watch(\n        () => appState.editEvent,\n        scope.precalculateSceneValues,\n        true\n      );\n\n      // HACK to catch cases (mostly on ios) where matchvideoheight isn't matching.\n      // slow, odd interval\n      // scope.safetyBelt = $interval(twiddleScene, 1321);\n\n      // cleanup watchers on destroy\n      scope.$on('$destroy', () => {\n        // scope.unwatch();\n        scope.unwatchEdits();\n        // $interval.cancel(scope.safetyBelt);\n      });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittScene.ts","// Was a 'panel' in the old three-modes style.  New layout combined search with review mode, still uses this.\n// Maybe rename it after we finally migrate completely away from the three-modes layout.\n\nittSearchPanel.$inject = ['appState'];\n\nexport default function ittSearchPanel(appState) {\n  return {\n    restrict: 'A',\n    replace: true,\n    scope: true,\n    templateUrl: 'templates/searchpanel.html',\n    controller: 'SearchPanelController',\n    link: function (scope) {\n\n      scope.appState = appState;\n\n      // $timeout(function () {\n      // console.log(\"ittSearchPanel\", scope);\n      scope.indexEvents();\n      // });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittSearchPanel.ts","ittShowFocus.$inject = ['$timeout'];\n\nexport default function ittShowFocus($timeout) {\n  return function (scope, element, attrs) {\n    scope.$watch(attrs.ittShowFocus,\n      function (newValue) {\n        $timeout(function () {\n          /* jshint -W030 */\n          newValue && element.filter(':visible')\n            .first()\n            .focus();\n          /* jshint +W030 */\n        });\n      }, true);\n\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittShowFocus.ts","ittShowHideVisualOnly.$inject = ['$animate'];\n\nexport function ittShowHideVisualOnly($animate) {\n  return {\n    restrict: 'A',\n    multiElement: true,\n    link: function (scope, element, attr) {\n      scope.$watch(attr.ittShowHideVisualOnly, function ngShowWatchAction(value) {\n        if (value) {\n          $animate.removeClass(element, 'visual-hide');\n        } else {\n          $animate.addClass(element, 'visual-hide');\n        }\n      });\n    }\n  };\n}\n\nexport function visualHideAnimation() {\n  return {\n    addClass: function (element) {\n      //we'll use opacity, so we aren't hidden from screen readers, just hidden from eyes.\n      element.fadeTo(\"slow\", 0, function () {\n      });\n    },\n    removeClass: function (element) {\n      element.fadeTo(\"slow\", 1, function () {\n      });\n    }\n  };\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittShowHideVisualOnly.ts","/**\n * Created by githop on 6/30/16.\n */\nexport default function ittSpeakerField() {\n  return {\n    restrict: 'EA',\n    template: `\n      <div class=\"field\" ng-if=\"selectService.getVisibility('speakerField')\">\n      \t<div class=\"label\">Speaker [{{appState.lang}}]</div>\n      \t<div class=\"input\">\n      \t\t<div sxs-annotator-autocomplete=\"annotators\" item=\"item\" ng-model=\"item.annotator\"></div>\n      \t</div>\n      </div>`\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittSpeakerField.ts","/**\n * Created by githop on 6/30/16.\n */\nexport default function ittSpeakerThumbField() {\n  return {\n    restrict: 'EA',\n    template: [\n      '<div class=\"field\">',\n      '\t<div class=\"label\">Speaker thumbnail</div>',\n      '\t<div class=\"input\" ng-include=\"\\'templates/producer/upload-producer.html\\'\"></div>',\n      '</div>'\n    ].join(' ')\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittSpeakerThumbField.ts","/*\n\n No sneaky changing the tab order or number of tabs after init allowed.\n\n Possibly boneheaded parts of this:\n\n - jQuery (.find())\n - depends on magic classNames 'cur' and 'ittTab'\n - depends on the directive user to keep track of tabindex :P\n\n TODO: allow different html layouts in ittTab (right now this is just for the producer edit pane)\n\n *** this is now deprecated **\n How to use:\n\n <div class=\"ittTabs\" itt-tabs>\n <div class=\"ittTab\" itt-tab=\"tabs[0]\" x-tabindex=\"0\" x-tablabel=\"Label 1\">\n Tab contents 1\n </div>\n <div class=\"ittTab cur\" itt-tab=\"tabs[1]\" x-tabindex=\"1\" x-tablabel=\"Label 2\">\n Tab contents 2 (Note that you can force this to start as the visible tab by giving it class 'cur')\n </div>\n <div class=\"ittTab\" itt-tab=\"tabs[2]\" x-tabindex=\"2\" x-tablabel=\"Label 3\">\n Tab contents 3\n </div>\n </div>\n\n *** new Example **\n improvements:\n - directive user does not need to keep track of tab index.\n - no jQuery dep.\n - still uses cur css class to style selected tab label.\n <itt-tabs>\n <itt-tab title=\"title 1\"> contents </itt-tab>\n <itt-tab title=\"title 2\"> contents </itt-tab>\n <itt-tab title=\"title 3\"> contents </itt-tab>\n </itt-tabs>\n\n */\nexport default function ittTabs() {\n  return {\n    template: [\n      '<div class=\"\">',\n      '\t<ul class=\"nav nav-tabs\">',\n      '\t\t<li ng-repeat=\"pane in panes\" class=\"tab-pane\"><p class=\"ittTabLabel\" ng-class=\"{cur:pane.selected}\" ng-click=\"select(pane)\">{{pane.title}}</p></li>',\n      '\t</ul>',\n      '\t<div class=\"tab-content\"><ng-transclude></ng-transclude></div>',\n      '</div>'\n    ].join(''),\n    transclude: true,\n    restrict: 'EA',\n    scope: {},\n    controller: ['$scope', function ($scope) {\n      var panes = $scope.panes = [];\n      $scope.select = select;\n      var ctrl = this;\n\n      function select(pane) {\n        angular.forEach(panes, function (p) {\n          p.selected = false;\n        });\n        pane.selected = true;\n      }\n\n      ctrl.addPane = function addPane(pane) {\n        if (panes.length === 0) {\n          select(pane);\n        }\n        panes.push(pane);\n      };\n\n    }]\n  };\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittTabs.ts","/**\n * Created by githop on 3/30/17.\n */\n\nexport default function ittTab() {\n  return {\n    template: '<div ng-show=\"selected\"><ng-transclude></ng-transclude></div>',\n    require: '^^ittTabs',\n    transclude: true,\n    scope: {\n      title: '@'\n    },\n    link: function (scope, elm, attrs, tabsCtrl) {\n      tabsCtrl.addPane(scope);\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittTab.ts","/**\n * Created by githop on 6/30/16.\n */\n\nexport default function ittTimeField() {\n  return {\n    restrict: 'EA',\n    scope: true,\n    template: [\n      '<div class=\"field\" ng-if=\"!(item._type===\\'Scene\\' && item.start_time <= 0.1)\">',\n      '\t<div class=\"label\">Start</div>',\n      '\t<div class=\"input\">',\n      '  <itt-validation-tip ng-if=\"ittItemForm.time.$invalid\" text=\"{{item.validationMessage}}\"></itt-validation-tip>',\n      '\t\t<span sxs-input-time=\"item\" x-input-field=\"start_time\"></span>',\n      '\t\t<span ng-if=\"!(item.stop || item._type === \\'Scene\\' || item._type === \\'Chapter\\')\">',\n      '\t\t\t<span class=\"label\"> &nbsp; &nbsp; &nbsp; End</span>',\n      '\t\t\t<span sxs-input-time=\"item\" x-input-field=\"end_time\"></span>',\n      '\t\t</span>',\n      '\t</div>',\n      '</div>'\n    ].join(' ')\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittTimeField.ts","// jQuery dependencies: offset(), animate(), namespaced .bind and .unbind\n// TODO some events need to be unbound on destroy, which I'll get around to implementing if this ever needs to be destroyed\n// TODO for now simply hiding volume controls on touchscreen devices (they'll use native buttons). Future, see if we can include those and have them work properly...\nittTimeline.$inject = ['$timeout', 'appState', 'timelineSvc', 'modelSvc', 'playbackService'];\n\nexport default function ittTimeline($timeout, appState, timelineSvc, modelSvc, playbackService) {\n  return {\n    restrict: 'A',\n    replace: true,\n    scope: true,\n    templateUrl: \"templates/timeline-story.html\",\n    controller: \"TimelineController\",\n    link: function (scope, element) {\n      // console.log('ittTimeline', scope, element);\n      scope.appState = appState;\n\n      scope.timeline = timelineSvc;\n      scope.handlePosition = 0; // position of draghandle (as a fraction of full timeline)\n      scope.zoomLevel = 1; // multiples by which the timeline is zoomed in\n      scope.zoomOffset = 0; // multiple by which the timeline is offset to the left\n\n      // Prevent this from being visible on touchscreens before playback, to allow youtube to init from direct user input\n      if (appState.isTouchDevice && !playbackService.getMetaProp('hasBeenPlayed')) {\n        scope.isSuppressed = true;\n      }\n\n      var watch = scope.$watch(function () {\n        return playbackService.getMetaProp('hasBeenPlayed');\n      }, function (wasPlayed) {\n        if (wasPlayed === true) {\n          scope.isSuppressed = false;\n          watch();\n        }\n      });\n\n      // these classnames and variable names aren't confusing AT ALL.  Curse you, past Daniel\n      var timelineNode, timelineContainer;\n      $timeout(function () { // HACK need to wait for template url to resolve before doing element.find\n        timelineNode = element.find('.progressbarContainer');\n        timelineContainer = element.find('.progressbar');\n        initPlayheadEvents();\n      });\n\n      // zoom in on item edit:\n      scope.autoZoom = function (item) {\n        // console.log(\"autoZoom\");\n\n        scope.savedZoomLevel = scope.zoomLevel;\n        var itemLength = item.end_time - item.start_time;\n        var toEnd = (playbackService.getMetaProp('duration') - item.end_time);\n\n        // toEnd/itemLength puts the item end at the right edge of the visible playhead.\n        // trim it back by 40% for some wiggle room, and cap it at 2000% zoom so we don't go nuts on short-duration events\n        scope.zoomLevel = Math.min(Math.max(Math.round(0.6 * toEnd / itemLength), 1), 20);\n\n        zoom();\n      };\n\n      scope.endAutoZoom = function () {\n        if (scope.savedZoomLevel) {\n          scope.zoomLevel = scope.savedZoomLevel;\n          zoom();\n          delete scope.savedZoomLevel;\n        }\n      };\n\n      var editWatcher = scope.$watch(function () {\n        return appState.editEvent;\n      }, function (item) {\n        if (appState.product === 'producer') {\n          if (item) {\n            scope.autoZoom(item);\n          } else {\n            scope.endAutoZoom();\n          }\n        }\n      });\n\n      scope.appState = appState;\n\n      scope.setNewLanguage = function () {\n        modelSvc.setLanguageStrings();\n      };\n\n      scope.showSceneMenuTooltip = function (makeVisible) {\n        if (makeVisible && !(appState.isTouchDevice)) {\n          scope.sceneMenuToolTip = true;\n        } else {\n          scope.sceneMenuToolTip = false;\n        }\n      };\n\n      scope.prevScene = function () {\n        // console.log(\"prevScene\");\n        timelineSvc.prevScene();\n      };\n      scope.nextScene = function () {\n        // console.log(\"nextScene\");\n        timelineSvc.nextScene();\n      };\n\n      scope.userChangingVolume = function (evt) {\n        if (playbackService.getMetaProp('muted')) {\n          scope.toggleMute();\n        }\n        var volumeNode = angular.element(evt.currentTarget);\n        var updateVolume = function (movement, noApplyNeeded) {\n          var newVolume = (movement.clientX - volumeNode.offset()\n              .left) / volumeNode.width() * 100;\n          if (newVolume > 98) {\n            newVolume = 100;\n          }\n          if (newVolume < 3) {\n            newVolume = 0;\n          }\n          if (noApplyNeeded) {\n            scope.setVolume(newVolume); // mousedown\n          } else {\n            scope.$apply(scope.setVolume(newVolume)); // mousemove\n          }\n        };\n        updateVolume(evt, true); //mousedown\n        volumeNode.bind('mousemove.volume', updateVolume); // mousemove\n        angular.element(document)\n          .bind('mouseup.volume', function () {\n            angular.element(document)\n              .unbind('mouseup.volume');\n            volumeNode.unbind('mousemove.volume');\n          });\n      };\n      var KeyCodes = {\n        PAGEUP: 33,\n        PAGEDOWN: 34,\n        END: 35,\n        HOME: 36,\n        LEFTARROW: 37,\n        UPARROW: 38,\n        RIGHTARROW: 39,\n        DOWNARROW: 40\n      };\n\n      scope.onVolumeKeyDown = function ($event) {\n        var e = $event;\n        // var $target = $(e.target);\n        // var nextTab;\n        var passThrough = true;\n        switch (e.keyCode) {\n          case KeyCodes.LEFTARROW:\n            decrementVolume(1);\n            passThrough = false;\n            break;\n          case KeyCodes.RIGHTARROW:\n            incrementVolume(1);\n            passThrough = false;\n            break;\n          case KeyCodes.UPARROW:\n            incrementVolume(1);\n            passThrough = false;\n            break;\n          case KeyCodes.DOWNARROW:\n            decrementVolume(1);\n            passThrough = false;\n            break;\n          case KeyCodes.PAGEUP:\n            incrementVolume(10);\n            passThrough = false;\n            break;\n          case KeyCodes.PAGEDOWN:\n            decrementVolume(10);\n            passThrough = false;\n            break;\n          case KeyCodes.HOME:\n            decrementVolume(100);\n            passThrough = false;\n            break;\n          case KeyCodes.END:\n            incrementVolume(100);\n            passThrough = false;\n            break;\n          default:\n            passThrough = true;\n            break;\n        }\n        if (!passThrough) {\n          // console.log(\"stop propagation\");\n          $event.stopPropagation();\n          $event.preventDefault();\n        }\n      };\n\n      function adjustHigh(volume) {\n        return volume > 98 ? 100 : volume;\n      }\n\n      function adjustLow(volume) {\n        return volume < 3 ? 0 : volume;\n      }\n\n      function incrementVolume(chunk) {\n        var volume = scope.currentVolume() + chunk;\n        volume = adjustHigh(volume);\n        if (typeof scope.setVolume === \"function\") {\n          scope.setVolume(volume);\n        }\n      }\n\n      function decrementVolume(chunk) {\n        var volume = scope.currentVolume() - chunk;\n        volume = adjustLow(volume);\n        if (typeof scope.setVolume === \"function\") {\n          scope.setVolume(volume);\n        }\n      }\n\n      scope.currentVolume = function () {\n        if (playbackService.getMetaProp('muted')) {\n          return 0;\n        } else {\n          return playbackService.getMetaProp('volume');\n        }\n      };\n\n      scope.audioIcon = function () {\n        if (playbackService.getMetaProp('muted')) {\n          return \"muted\";\n        } else {\n          return \"vol\" + Math.floor(playbackService.getMetaProp('volume') / 34);\n        }\n      };\n\n      scope.showTooltip = function (event) {\n        // console.log(\"tip: \", event);\n        event.showTooltip = true;\n      };\n      scope.hideTooltip = function (event) {\n\n        event.showTooltip = false;\n      };\n\n      scope.zoomIn = function () {\n        scope.stopWatching = true;\n        scope.zoomLevel = scope.zoomLevel + 1;\n        zoom();\n      };\n      scope.zoomOut = function () {\n        scope.stopWatching = true;\n        if (scope.zoomLevel <= 2) {\n          scope.zoomLevel = 1;\n        } else if (scope.zoomLevel <= 3) {\n          scope.zoomLevel = 1.5;\n        } else {\n          scope.zoomLevel = scope.zoomLevel / 2;\n        }\n        zoom();\n      };\n\n      // adjust the position of the playhead after a scale change:\n      var zoom = function () {\n        scope.zoomOffset = -((scope.zoomLevel - 1) * (playbackService.getMetaProp('time') / playbackService.getMetaProp('duration')));\n        // console.log(\"zoom().scope.zoomOffset = \", scope.zoomOffset);\n        // console.log(\"zoom().scope.zoomLevel = \", scope.zoomLevel);\n        timelineNode.stop().animate({\n          \"left\": (scope.zoomOffset * 100) + \"%\",\n          \"width\": (scope.zoomLevel * 100) + \"%\"\n        }, 1000, function () {\n          scope.stopWatching = false; // so we don't try to update the playhead during a zoom animation\n        });\n      };\n\n      // at all times keep playhead position at the same % of the visible progress bar as the time is to the duration\n      // cosmetic: stop watching while zoom-animation is in progress\n      scope.$watch(function () {\n        return {\n          t: playbackService.getMetaProp('time'),\n          d: playbackService.getMetaProp('duration')\n        };\n      }, function () {\n        if (!scope.stopWatching) {\n          scope.zoomOffset = -((scope.zoomLevel - 1) * (playbackService.getMetaProp('time') / playbackService.getMetaProp('duration')));\n          if (timelineNode) {\n            timelineNode.css({\n              \"left\": (scope.zoomOffset * 100) + '%'\n            });\n          }\n        }\n      }, true);\n\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      // BEGIN handling of seek: mouse/touch interactions with the playhead\n      // startSeek when they mousedown or touchdown (binds the finish and cancel events)\n      // seeking on mousemove or touchmove (sets the time they will be seeking to)\n      // finishSeek when they mouseup or touchend inside the playhead (triggers the actual seek)\n      // cancelSeek when they mouseup or touchend outside the playhead (cancels)\n\n      var startSeek = function (evt) {\n        // console.log('startSeek');\n        playbackService.pauseOtherPlayers();\n        $timeout(function () {\n          // short delay for visibility of handle (don't want it when just clicking)\n          scope.seekHandleVisible = true;\n        }, 250);\n        scope.isSeeking = true;\n\n        var userEventName = (appState.isTouchDevice) ? 'touchend.timeline' : 'mouseup.timeline';\n        timelineContainer.bind(userEventName, function () {\n          finishSeek();\n        });\n        angular.element(document)\n          .bind(userEventName, function () {\n            cancelSeek();\n          });\n        seeking(evt);\n      };\n\n      /* SxS. Needed to position the edit handle when not actively dragging timeline */\n      scope.$watch(function () {\n        return playbackService.getMetaProp('time');\n      }, function () {\n        if (appState.editEvent) {\n          scope.willSeekTo = playbackService.getMetaProp('time');\n        }\n      });\n\n      /* end SxS */\n\n      // triggered on mousemove:\n      var seeking = function (evt) {\n        if (!scope.isSeeking) {\n          return;\n        }\n        var currentDuration = playbackService.getMetaProp('duration');\n        // timelineNode is the full timeline, including offscreen portions if zoomed in.\n        // So this math gives how far the pointer is in the full timeline as a percentage,\n        // multiplied by the real duration, which gives the real time.\n        scope.willSeekTo = (evt.clientX - timelineNode.offset()\n            .left) / timelineNode.width() * currentDuration;\n\n        // ios is still registering drags outside the visible boundaries of the timeline,\n        // so need to do some sanity checking here:\n        if (scope.willSeekTo < 0) {\n          scope.willSeekTo = 0;\n        }\n        if (scope.willSeekTo > currentDuration) {\n          scope.willSeekTo = currentDuration;\n        }\n      };\n\n      var finishSeek = function () {\n        // console.log(\"timeline mouseup or touchend\");\n        scope.stopWatching = true;\n        scope.enableAutoscroll(); // in playerController\n        timelineSvc.seek(scope.willSeekTo, 'scrubTimeline');\n        zoom();\n      };\n\n      var cancelSeek = function () {\n        // console.log(\"doc mouseup or touchend\");\n        // kill all events on  mouse up (anywhere).\n        angular.element(document)\n          .off('mouseup.timeline');\n        angular.element(document)\n          .off('touchend.timeline');\n        timelineContainer.off('mouseup.timeline');\n        timelineContainer.off('touchend.timeline');\n        $timeout(function () {\n          scope.isSeeking = false;\n          scope.seekHandleVisible = false;\n        });\n      };\n\n      var initPlayheadEvents = function () {\n        // bind playhead events:\n        var playhead = $(element.find('.playhead')); // WARN template url needs to have resolved first!\n        // console.log(\"ittTimeline initPlayheadEvents\", playhead);\n        if (appState.isTouchDevice) {\n          playhead.on('touchstart.timeline', function (e) {\n            startSeek(e.originalEvent.targetTouches[0]);\n            e.preventDefault();\n          });\n          playhead.on('touchmove.timeline', function (e) {\n            seeking(e.originalEvent.targetTouches[0]);\n            e.preventDefault();\n          });\n        } else {\n          playhead.on('mousedown.timeline', function (e) {\n            startSeek(e);\n            e.preventDefault();\n          });\n          playhead.on('mousemove.timeline', function (e) {\n            seeking(e);\n            e.preventDefault();\n          });\n        }\n      };\n\n      scope.$on('$destroy', function () {\n        cancelSeek(); // unbinds playhead events\n        editWatcher(); // stop watching for event edits\n      });\n\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittTimeline.ts","/**\n * Created by githop on 6/30/16.\n */\nexport default function ittTimestampSelect() {\n  return {\n    restrict: 'EA',\n    scope: true,\n    template: [\n      '<div class=\"field\">',\n      '\t<div class=\"label\"><span ng-if=\"episode\">Display </span>Timestamp</div>',\n      '\t<div class=\"input\">',\n      '\t\t<select size=\"1\" ng-model=\"itemForm.timestamp\">',\n      '\t\t\t<option ng-if=\"episode\" value=\"\">(Default)</option>',\n      '\t\t\t<option ng-if=\"item._type === \\'Scene\\'\" value=\"\">(Inherit from episode)</option>',\n      '\t\t\t<option ng-if=\"item._type !== \\'Scene\\'\" value=\"\">(Inherit from layout)</option>',\n      '\t\t\t<option value=\"None\">Off</option>',\n      '\t\t\t<option value=\"Inline\">On</option>',\n      '\t\t</select>',\n      '\t</div>',\n      '</div>'\n    ].join(' ')\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittTimestampSelect.ts","/**\n * Created by githop on 6/30/16.\n */\n\n\nexport default function ittTitleField() {\n  return {\n    restrict: 'EA',\n    scope: {\n      data: '=',\n      modelOpts: '=?',\n      doValidate: '=?',\n      ittItemForm: '=?'\n    },\n    template: [\n      '<div class=\"field\" ng-if=\"$ctrl.isVisible(\\'titleField\\')\">',\n      '\t<div class=\"label\">Title [{{$ctrl.appState.lang}}]',\n      '\t\t<itt-validation-tip ng-if=\"$ctrl.ittItemForm[$ctrl.textAreaName].$invalid\" text=\"Title is a required field\"></itt-validation-tip>',\n      '\t</div>',\n      '\t<div class=\"input\" ng-model-options=\"$ctrl.modelOpts\" do-validate=\"$ctrl.doValidate\" sxs-input-i18n=\"$ctrl.data.title\" on-emit-name=\"$ctrl.onName($taName)\" x-inputtype=\"\\'input\\'\" autofocus></div>',\n      '</div>'\n    ].join(' '),\n    controller: ['appState', 'ittUtils', 'selectService', function (appState, ittUtils, selectService) {\n      var ctrl = this;\n      ctrl.appState = appState;\n      ctrl.isVisible = selectService.getVisibility;\n      ctrl.onName = onName;\n\n      if (!ittUtils.existy(ctrl.modelOpts)) {\n        ctrl.modelOpts = {updateOn: 'default'};\n      }\n\n      function onName(v) {\n        ctrl.textAreaName = v;\n      }\n\n    }],\n    controllerAs: '$ctrl',\n    bindToController: true\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittTitleField.ts","/**\n * Created by githop on 12/21/15.\n */\n\nexport default function ittToolbarStory() {\n  return {\n    scope: true,\n    templateUrl: 'templates/toolbar-story.html'\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittToolbarStory.ts","/**\n * Created by githop on 6/30/16.\n */\n\nexport default function ittTranscriptField() {\n  return {\n    restrict: 'EA',\n    scope: {\n      data: '=',\n      //not itemForm, which is a plain old JS object,\n      //this is the 'IttItemForm' a ng-form defined at the head of item.html\n      ittItemForm: '='\n    },\n    template: [\n      '<div class=\"field\">',\n      '\t<div class=\"label\">Transcript [{{$ctrl.appState.lang}}]',\n      '\t\t<itt-validation-tip ng-if=\"$ctrl.ittItemForm[$ctrl.textAreaName].$invalid\" text=\"Transcript is a required field\"></itt-validation-tip>',\n      '\t</div>',\n      '\t<div class=\"input\" sxs-input-i18n=\"$ctrl.data.annotation\" do-validate=\"true\" x-inputtype=\"\\'textarea\\'\" on-emit-name=\"$ctrl.onName($taName)\" autofocus></div>',\n      '</div>'\n    ].join(' '),\n    controller: ['appState', function (appState) {\n      var ctrl = this;\n      ctrl.onName = onName;\n      ctrl.appState = appState;\n      ctrl.textAreaName = '';\n\n      function onName(v) {\n        ctrl.textAreaName = v;\n\n      }\n    }],\n    controllerAs: '$ctrl',\n    bindToController: true\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittTranscriptField.ts","/**\n * Created by githop on 6/30/16.\n */\n\n\nexport default function ittTransitionSelect() {\n  return {\n    restrict: 'EA',\n    template: [\n      '<div class=\"field\">',\n      '\t<div class=\"label\">Transition</div>',\n      '\t<div class=\"input\">',\n      '\t\t<select size=\"1\" ng-model=\"itemForm.transition\">',\n      '\t\t\t<option ng-if=\"episode\" value=\"\">(Default)</option>',\n      '\t\t\t<option ng-if=\"item._type === \\'Scene\\'\" value=\"\">(Inherit from episode)</option>',\n      '\t\t\t<option ng-if=\"item._type !== \\'Scene\\' && !episode\" value=\"\">(Inherit from layout)</option>',\n      '\t\t\t<option value=\"None\">No transition</option>',\n      '\t\t\t<option value=\"Fade\">Fade</option>',\n      '\t\t\t<option value=\"SlideL\">Slide left</option>',\n      '\t\t\t<option value=\"SlideR\">Slide right</option>',\n      // '\t\t\t<option value=\"ExpandW\">Expand</option>',\n      '\t\t\t<option value=\"Pop\">Pop</option>',\n      '\t\t</select>',\n      '\t</div>',\n      '</div>'\n    ].join(' ')\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittTransitionSelect.ts","/**\n * Created by githop on 6/30/16.\n */\n\nexport default function ittTypographySelect() {\n  return {\n    restrict: 'EA',\n    template: [\n      '<div class=\"field\">',\n      '\t<div class=\"label\">Typography</div>',\n      '\t<div class=\"input\">',\n      '\t\t<select size=\"1\" ng-model=\"itemForm.typography\">',\n      '\t\t\t<option value=\"\">(Default)</option>',\n      '\t\t\t<option value=\"Sans\">Sans</option>',\n      '\t\t\t<option value=\"Serif\">Serif</option>',\n      '\t\t\t<option value=\"Book\">Book</option>',\n      '\t\t\t<option value=\"Swiss\">Swiss</option>',\n      '\t\t</select>',\n      '\t</div>',\n      '</div>'\n    ].join(' ')\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittTypographySelect.ts","\nconst noAvatarImg = require('../../images/no-avatar.gif');\n\nittUser.$inject = ['$q', 'appState', 'authSvc', 'dataSvc', 'awsSvc', 'modelSvc', 'imageResize'];\n\nexport default function ittUser($q, appState, authSvc, dataSvc, awsSvc, modelSvc, imageResize) {\n  return {\n    restrict: 'A',\n    replace: true,\n    scope: {},\n    templateUrl: 'templates/user.html',\n\n    link: function (scope, element, attrs) {\n\n      scope.inPlayer = attrs.inPlayer;\n      scope.appState = appState;\n      scope.loading = true;\n      scope.logout = authSvc.logout;\n      scope.canAccess = authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin');\n\n      authSvc.authenticate().then(function () {\n        scope.loading = false;\n        scope.user = appState.user;\n        scope.userHasRole = authSvc.userHasRole;\n\n        //TS-1120 - remove purchases\n        // if (!scope.inPlayer && !authSvc.isGuest()) {\n        // \tscope.getMyNarratives();\n        // }\n      });\n\n      scope.isEditing = false;\n      scope.toggleEditing = toggleEditing;\n      function toggleEditing() {\n        scope.isEditing = !scope.isEditing;\n      }\n\n      // TODO refactor: this is very similar to ittItemEditor's uploadAsset\n      scope.uploadStatus = [];\n      scope.toggleUploadAvatar = function () {\n        scope.showUploadField = !scope.showUploadField;\n      };\n\n      scope.uploadAvatar = function (files) {\n        //Start the upload status out at 0 so that the\n        //progress bar renders correctly at first\n        scope.uploadStatus[0] = {\n          \"bytesSent\": 0,\n          \"bytesTotal\": 1\n        };\n\n        //promise chain\n        imageResize.readFileToImg(files[0])\n          .then(_resizeWithService)\n          .then(_avatarFileFromImg)\n          .then(_postToAWS)\n          .catch(function (e) {\n            console.log('something failed resizing / uploading the image', e);\n          });\n\n        //handler functions; i.e., 'links' in the 'promise chain' ;)\n        function _resizeWithService(img) {\n          return imageResize.resizeImg(img, 60, 60, true)\n            .then(function (dataUrl) {\n              return dataUrl;\n            });\n        }\n\n        //takes a base64 encoded URL with PNG image\n        //and turns it back into a File Object\n        function _avatarFileFromImg(dataUrl) {\n          return $q(function (resolve) {\n            var file = imageResize.createFileFromDataURL(dataUrl, files[0].name);\n            resolve(file);\n          });\n        }\n\n        //pass file to AWS service for file upload\n        function _postToAWS(file) {\n          awsSvc.uploadUserFiles(appState.user._id, [file])[0]\n            .then(function (data) {\n              scope.showUploadField = false;\n              modelSvc.cache(\"asset\", data.file);\n              if (appState.user.avatar_id) {\n                // TODO delete the user's previous avatar asset now that we have a new one\n                // (but first confirm that events the user has already created aren't storing the old avatar_id directly.... which would be a bug)\n              }\n              appState.user.avatar_id = data.file._id;\n              scope.updateUser();\n              delete scope.uploads;\n            });\n        }\n      };\n\n      scope.updateUser = function () {\n        authSvc.updateUser(appState.user).then(function () {\n          scope.user = appState.user;\n        });\n      };\n      scope.getMyNarratives = function () {\n        dataSvc.getUserNarratives(scope.user._id).then(function (data) {\n          // console.log(\"purchase\", data);\n\n          scope.myPurchases = data;\n\n          angular.forEach(scope.myPurchases, function (purchase) {\n            purchase.daysUntilExpiration = Math.floor((new Date(purchase.expiration_date) - new Date()) / 86400000);\n\n            // get the narrative data for each purchase (this copes with multiple purchases of the same narrative)\n            dataSvc.getNarrativeOverview(purchase.narrative_id).then(function (nData) {\n              angular.forEach(scope.myPurchases, function (pur) {\n                if (pur.narrative_id === nData._id) {\n                  pur.narrativeData = nData;\n                }\n              });\n            });\n          });\n\n        });\n      };\n\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittUser.ts","/**\n * Created by githop on 7/12/16.\n */\nittValidAsset.$inject = ['ittUtils'];\n\nexport default function ittValidAsset(ittUtils) {\n  return {\n    restrict: 'EA',\n    require: '^ngModel',\n    scope: {\n      item: '='\n    },\n    link: function (scope, elm, attrs, ngModelCtrl) {\n      if (ngModelCtrl) {\n        //set to valid right off the bat, then use $watch below\n        //to update validity on subsequent selections.\n        ngModelCtrl.$validators.itemAsset = function () {\n          return true;\n        };\n        scope.$watch(watchItem, handleChanges, true);\n      }\n\n      function watchItem() {\n        return scope.item;\n      }\n\n      function handleChanges(newVal) {\n        var tmplUrl = newVal.templateUrl;\n        var asset = newVal.asset;\n        switch (tmplUrl) {\n          case 'templates/item/file.html':\n          case 'templates/item/image-plain.html':\n          case 'templates/item/image-inline-withtext.html':\n          case 'templates/item/image-caption-sliding.html':\n          case 'templates/item/image.html':\n          case 'templates/item/image-fill.html':\n          case 'templates/item/link-withimage-notitle.html':\n            if (ittUtils.existy(asset)) {\n              ngModelCtrl.$setValidity('itemAsset', true);\n            } else {\n              ngModelCtrl.$setValidity('itemAsset', false);\n            }\n            break;\n          case 'templates/item/link.html':\n          case 'templates/item/link-modal-thumb.html':\n          case 'templates/item/link-descriptionfirst.html':\n          case 'templates/item/link-embed.html':\n            ngModelCtrl.$setValidity('itemAsset', true);\n            break;\n        }\n      }\n\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittValidAsset.ts","/**\n * Created by githop on 8/24/16.\n */\n\nexport default function ittValidationTip() {\n  return {\n    restrict: 'EA',\n    scope: {\n      text: '@',\n      doInfo: '=?'\n    },\n    template: [\n      '<span class=\"tooltip-static\">',\n      '\t<i class=\"fa fa-info-circle\" ng-class=\"{\\'error-red\\': !doInfo, \\'info-blue\\': doInfo}\"></i>',\n      '\t<span class=\"tooltip-text\">{{text}}</span>',\n      '</span>'\n    ].join('\\n')\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittValidationTip.ts","/**\n * Created by githop on 2/21/17.\n */\n\nittValidEpisodeUrl.$inject = ['urlService', 'ittUtils', 'authSvc'];\n\nexport default function ittValidEpisodeUrl(urlService, ittUtils, authSvc) {\n  return {\n    require: '?ngModel',\n    scope: {\n      onValidationNotice: '&'\n    },\n    link: function (scope, elm, attr, ngModel) {\n      var _capitalize = ittUtils.capitalize;\n      var message = {\n        showInfo: false,\n        message: '',\n        doInfo: false\n      };\n\n      var validatedFields = {\n        kaltura: message,\n        youtube: message,\n        html5: message,\n        error: message\n      };\n\n      ngModel.$validators = {\n        episodeUrl: episodeUrl\n      };\n\n      scope.$watch(watchFields, handleUpdates, true);\n\n      function watchFields() {\n        return validatedFields;\n      }\n\n      function handleUpdates(newVal) {\n        scope.onValidationNotice({$notice: newVal});\n      }\n\n      function episodeUrl(viewVal) {\n        validatedFields = {};\n        if (ngModel.$isEmpty(viewVal)) {\n          validatedFields['error'] = {showInfo: true, message: 'Field cannot be blank.'}; //jshint ignore:line\n          return false;\n        } else if (urlService.isVideoUrl(viewVal)) {\n          var type = urlService.checkUrl(viewVal).type;\n\n          if (type === 'html5' || type === 'wistia' && !authSvc.userHasRole('admin')) {\n            validatedFields[type] = {showInfo: true, message: _capitalize(type) + ' video currently not supported'};\n            return false;\n          }\n\n          validatedFields[type] = {showInfo: true, message: _capitalize(type) + ' detected', doInfo: true};\n          return true;\n        } else {\n          validatedFields['error'] = {showInfo: true, message: viewVal + ' is not a valid episode URL'}; //jshint ignore:line\n          return false;\n        }\n      }\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittValidEpisodeUrl.ts","/**\n * Created by githop on 3/23/17.\n */\n\n//this directive currently depends on the parent directive having\n//the necessary narrative(s) / timeline(s) data already cached in the modelSvc\n\nittValidPathslug.$inject = ['modelSvc', 'ittUtils'];\nexport default function ittValidPathslug(modelSvc, ittUtils) {\n  return {\n    require: ['^ngModel', '^npGuestAccessibleUrl'],\n    restrict: 'EA',\n    link: function ittValidPathslugLink(scope, elm, attr, ctrls) {\n      var _slugify = ittUtils.slugify;\n      var _existy = ittUtils.existy;\n      var ngModel = ctrls[0];\n      var parentCtrl = ctrls[1];\n      var customer = modelSvc.customers[parentCtrl.narrative.customer_id] || parentCtrl.customer;\n\n      var pathSlugs = parentCtrl.type === 'narrative' ?\n        modelSvc.cachedNarrativesByCustomer(customer) :\n        parentCtrl.narrative.timelines;\n\n      var id = parentCtrl[parentCtrl.type]._id;\n\n      if (ngModel) {\n        ngModel.$validators = {\n          validPathslug: validPathslug\n        };\n      }\n\n      function validPathslug(viewVal) {\n        parentCtrl[parentCtrl.type].error = null;\n\n        if (ngModel.$isEmpty(viewVal)) {\n          parentCtrl[parentCtrl.type].error = 'Slug cannot be empty';\n          return true;\n        }\n\n        var asSlug = _slugify(viewVal);\n        var subdomainSet = _gatherPathSlugs(pathSlugs, id);\n\n        if (subdomainSet.indexOf(asSlug) !== -1) {\n          parentCtrl[parentCtrl.type].error = asSlug + ' is already taken.';\n        }\n        return true;\n\n      }\n\n      function _gatherPathSlugs(pathSlugs, id) {\n        return pathSlugs.reduce(function (slugSet, n) {\n          if (n.path_slug && n.path_slug.en) {\n            if (_existy(id)) {\n              if (id !== n._id) {\n                slugSet.push(n.path_slug.en);\n                return slugSet;\n              }\n            } else {\n              slugSet.push(n.path_slug.en);\n            }\n          }\n          return slugSet;\n        }, []);\n      }\n\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittValidPathslug.ts","/**\n * Created by githop on 6/24/16.\n */\n\nittValidUrl.$inject = ['ittUtils'];\n\nexport default function ittValidUrl(ittUtils) {\n  return {\n    require: '?ngModel',\n    link: function (scope, elm, attr, ngModel) {\n      if (ngModel) {\n        ngModel.$validators.supportUrl = function (modelVal) {\n          return ngModel.$isEmpty(modelVal) || ittUtils.isValidURL(modelVal);\n        };\n      }\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittValidUrl.ts","import { IAnalyticsSvc, ITimelineSvc, IModelSvc, IDataSvc } from '../interfaces';\n\n/* tslint:disable:prefer-const */\nexport default function ittVideo() {\n  return {\n    replace: false,\n    templateUrl: 'templates/video.html',\n    scope: {\n      poster: '=?',\n      mainPlayer: '=',\n      mediaSrcArr: '=',\n      playerId: '='\n    },\n    controller: [\n      '$scope',\n      '$timeout',\n      '$interval',\n      '$sce',\n      '$rootScope',\n      '$routeParams',\n      'playbackService',\n      'ittUtils', 'timelineSvc',\n      'modelSvc',\n      'dataSvc',\n      'appState',\n      'analyticsSvc',\n      function (\n        $scope,\n        $timeout,\n        $interval,\n        $sce,\n        $rootScope,\n        $routeParams,\n        playbackService,\n        ittUtils,\n        timelineSvc: ITimelineSvc,\n        modelSvc: IModelSvc,\n        dataSvc: IDataSvc,\n        appState,\n        analyticsSvc: IAnalyticsSvc) {\n        var ctrl = this; //jshint ignore:line\n\n        //controller public properties\n        ctrl.isTranscoded = false;\n        ctrl.transcodedInterval = angular.noop;\n\n        //controller public methods.\n        ctrl.playbackService = playbackService;\n        ctrl.videoClick = videoClick;\n        ctrl.playerIsPaused = playerIsPaused;\n        ctrl.showUnstartedOverlay = showUnstartedOverlay;\n        ctrl.showReplayOverlay = showReplayOverlay;\n        ctrl.setCssClass = setCssClass;\n        ctrl.showMask = showMask;\n        ctrl.appState = appState;\n        var _existy = ittUtils.existy;\n\n        //controller event bindings\n        $scope.$on('$destroy', onDestroy);\n\n        onInit();\n\n        function onInit() {\n          //empty input passed in\n          if (!_existy(ctrl.mediaSrcArr) || ctrl.mediaSrcArr.length === 0) {\n            console.warn('No MediaSrc Array was passed to ittVideo');\n            //check to see if video has transcoded every 10 seconds\n            ctrl.transcodedInterval = $interval(checkTranscoded, 10 * 1000);\n            return;\n          }\n\n          playbackService.seedPlayer(ctrl.mediaSrcArr, ctrl.playerId, ctrl.mainPlayer);\n          ctrl.playerElement = $sce.trustAsHtml(playbackService.getPlayerDiv(ctrl.playerId));\n\n          $timeout(function () {\n            playbackService.createInstance(ctrl.playerId);\n\n            if (ctrl.mainPlayer === true) {\n              if ($routeParams.t) {\n                playbackService.setMetaProp('startAtTime', ittUtils.parseTime($routeParams.t), ctrl.playerId);\n              }\n\n              if ($routeParams.autoplay === 'true') {\n                playbackService.setMetaProp('autoplay', true, ctrl.playerId);\n              }\n            }\n\n          }, 0);\n        }\n\n        //video mask controls\n        function videoClick() {\n          playbackService.togglePlayback(\n            ctrl.playerId,\n            timelineSvc.restartEpisode,\n            analyticsSvc.captureEpisodeActivity.bind(analyticsSvc)\n          );\n        }\n\n        function setCssClass() {\n          var cssClass = {};\n          var embed = {'np--embed': ctrl.mainPlayer === false};\n          var paused = {'play': playerIsPaused()};\n          var firstplay = {'firstplay': showUnstartedOverlay()};\n          var replay = {'rewind': showReplayOverlay()};\n          angular.extend(cssClass, embed, paused, firstplay, replay);\n          return cssClass;\n        }\n\n        //if have less than iOS 10\n        //if our video is youtube\n        //hide the unstarted mask\n        function showMask() {\n          if (_existy(appState.iOSVersion) && appState.iOSVersion.length\n            && playbackService.getMetaProp('videoType', ctrl.playerId) === 'youtube') {\n            if (showUnstartedOverlay()) {\n              return (appState.iOSVersion[0] > 9);\n            }\n          }\n          return true;\n        }\n\n        function playerIsPaused() {\n          return playbackService.getPlayerState(ctrl.playerId) === 'paused' && !showReplayOverlay();\n        }\n\n        function showUnstartedOverlay() {\n          return playbackService.getMetaProp('hasBeenPlayed', ctrl.playerId) === false;\n        }\n\n        function showReplayOverlay() {\n          var time = playbackService.getMetaProp('time', ctrl.playerId);\n          var duration = playbackService.getMetaProp('duration', ctrl.playerId);\n          return (ctrl.mainPlayer === true && time > 0 && time >= duration - 0.3);\n        }\n\n        function onDestroy() {\n          playbackService.handle$Destroy(ctrl.playerId);\n        }\n\n        function checkTranscoded() {\n          var currentEpisode = modelSvc.episodes[appState.episodeId];\n          if (currentEpisode && currentEpisode.masterAsset && !modelSvc.isTranscoded(currentEpisode.masterAsset)) {\n\n            dataSvc.getSingleAsset(currentEpisode.master_asset_id)\n              .then(function (latestAsset) {\n                modelSvc.cache('asset', latestAsset);\n                var newAsset = modelSvc.assets[latestAsset._id];\n                if (modelSvc.isTranscoded(newAsset)) {\n                  ctrl.isTranscoded = true;\n                  $interval.cancel(ctrl.transcodedInterval);\n                  //use the new mediaSrcArr from the server\n                  ctrl.mediaSrcArr = newAsset.mediaSrcArr;\n                  //do this so playerController re-initializes the episode.\n                  $rootScope.$broadcast('dataSvc.getEpisode.done');\n                  //re-init ittVideo, playbackService etc..\n                  onInit();\n                }\n              });\n          } else {\n            $interval.clear(ctrl.transcodedInterval);\n          }\n        }\n      }],\n    bindToController: true,\n    controllerAs: '$ctrl'\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittVideo.ts","ittVolumeSlider.$inject = ['playbackService'];\n\nexport default function ittVolumeSlider(playbackService) {\n  return {\n    restrict: 'E',\n    scope: true,\n    template: '<div ng-focus=\"showControls()\" role=\"slider\" aria-label=\"volume\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"{{currentVolume()}}\" aria-valuetext=\"{{currentVolume()}}\" tabindex=\"0\" class=\"volumebar\" ng-mousedown=\"userChangingVolume($event)\" ng-keydown=\"onVolumeKeyDown($event)\" aria-labelledby=\"volumeControlDescription\"> <div class=\"volume\" ng-style=\"{width: currentVolume()+\\'%\\'}\"></div> <div id=\"volumeControlDescription\" class=\"screen-reader-offscreen\"> Use left and right arrows to increase or decrease the volume by 1. Use page up and page down to increase or decrease the volume by 10. Use home and end to move to the volume to the lowest and highest setting.  </div> ',\n    multiElement: false,\n    link: function (scope) {\n\n      scope.userChangingVolume = function (evt) {\n        var volumeNode = angular.element(evt.currentTarget);\n        var updateVolume = function (movement, noApplyNeeded) {\n          var newVolume = (movement.clientX - volumeNode.offset()\n              .left) / volumeNode.width() * 100;\n          if (newVolume > 98) {\n            newVolume = 100;\n          }\n          if (newVolume < 3) {\n            newVolume = 0;\n          }\n          if (noApplyNeeded) {\n            scope.setVolume(newVolume); // mousedown\n          } else {\n            scope.$apply(scope.setVolume(newVolume)); // mousemove\n          }\n        };\n        updateVolume(evt, true); //mousedown\n        volumeNode.bind('mousemove.volume', updateVolume); // mousemove\n        angular.element(document)\n          .bind('mouseup.volume', function () {\n            angular.element(document)\n              .unbind('mouseup.volume');\n            volumeNode.unbind('mousemove.volume');\n          });\n      };\n      var KeyCodes = {\n        PAGEUP: 33,\n        PAGEDOWN: 34,\n        END: 35,\n        HOME: 36,\n        LEFTARROW: 37,\n        UPARROW: 38,\n        RIGHTARROW: 39,\n        DOWNARROW: 40\n      };\n\n      scope.onVolumeKeyDown = function ($event) {\n        var e = $event;\n        // var $target = $(e.target);\n        // var nextTab;\n        var passThrough = true;\n        switch (e.keyCode) {\n          case KeyCodes.LEFTARROW:\n            decrementVolume(1);\n            passThrough = false;\n            break;\n          case KeyCodes.RIGHTARROW:\n            incrementVolume(1);\n            passThrough = false;\n            break;\n          case KeyCodes.UPARROW:\n            incrementVolume(1);\n            passThrough = false;\n            break;\n          case KeyCodes.DOWNARROW:\n            decrementVolume(1);\n            passThrough = false;\n            break;\n          case KeyCodes.PAGEUP:\n            incrementVolume(10);\n            passThrough = false;\n            break;\n          case KeyCodes.PAGEDOWN:\n            decrementVolume(10);\n            passThrough = false;\n            break;\n          case KeyCodes.HOME:\n            decrementVolume(100);\n            passThrough = false;\n            break;\n          case KeyCodes.END:\n            incrementVolume(100);\n            passThrough = false;\n            break;\n          default:\n            passThrough = true;\n            break;\n        }\n        if (!passThrough) {\n          $event.stopPropagation();\n          $event.preventDefault();\n        }\n      };\n\n      function adjustHigh(volume) {\n        return volume > 98 ? 100 : volume;\n      }\n\n      function adjustLow(volume) {\n        return volume < 3 ? 0 : volume;\n      }\n\n      function incrementVolume(chunk) {\n        var volume = scope.currentVolume() + chunk;\n        volume = adjustHigh(volume);\n        if (typeof scope.setVolume === \"function\") {\n          scope.setVolume(volume);\n        }\n      }\n\n      function decrementVolume(chunk) {\n        var volume = scope.currentVolume() - chunk;\n        volume = adjustLow(volume);\n        if (typeof scope.setVolume === \"function\") {\n          scope.setVolume(volume);\n        }\n      }\n\n      scope.currentVolume = function () {\n        if (playbackService.getMetaProp('muted')) {\n          return 0;\n        } else {\n          return playbackService.getMetaProp('volume');\n        }\n      };\n\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittVolumeSlider.ts","/* Attach this to content panes, so they can tell their items when to drop into inline timestamps. */\nexport default function ittWidthWatch() {\n  return {\n    restrict: 'A',\n    replace: false,\n    link: function (scope, element) {\n      var unwatch = scope.$watch(function () {\n        return element.width();\n      }, function (w) {\n        scope.isNarrow = (w < 450);\n      });\n      scope.$on(\"$destroy\", unwatch);\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittWidthWatch.ts","\n/*\n The \"add\" buttons for instructors to choose what type of content they want to add to the episode.\n\n TODO make this smarter about when it shows buttons; for example instead of matching against appState.time,\n look for current scene.id matching \"internal\".  Dim buttons instead of hiding them completely.\n\n */\nsxsAddContent.$inject = ['appState', 'playbackService'];\n\nexport default function sxsAddContent(appState, playbackService) {\n  return {\n    restrict: 'A',\n    replace: true,\n    scope: {},\n    templateUrl: 'templates/producer/addcontent.html',\n    controller: 'EditController',\n    link: function (scope) {\n\n      scope.appState = appState;\n      scope.playbackService = playbackService;\n\n      scope.expand = function () {\n        scope.expanded = true;\n        angular.element(document).one('mouseup.addcontent', function () {\n          scope.collapse();\n        });\n      };\n\n      scope.collapse = function () {\n        scope.expanded = false;\n      };\n\n    }\n\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/sxsAddContent.ts","/*\n TODO: make sure newly added annotators wind up in hte episode.annotators list\n TODO: disentangle annotator_image_id from this, move it into parent template\n */\n\nimport { ILangForm } from '../interfaces';\n\nexport interface IAnnotator {\n  name: ILangForm;\n  annotation_image_id: string;\n  key?: string;\n  imageUrl?: string;\n}\n\nexport interface IAnnotators {\n  [key: string]: IAnnotator;\n}\n\nsxsAnnotatorAutocomplete.$inject = ['$timeout', 'modelSvc', 'appState'];\n\nexport default function sxsAnnotatorAutocomplete($timeout, modelSvc, appState) {\n  return {\n    require: 'ngModel',\n    templateUrl: 'templates/producer/annotator-autocomplete.html',\n    scope: {\n      annotators: '=sxsAnnotatorAutocomplete',\n      item: '=item'\n    },\n    link: function (scope, element, attrs, ngModelController) {\n\n      scope.appState = appState;\n      scope.hasAnnotator = function () {\n        if (scope.item.annotator) {\n          return Object.keys(scope.item.annotator).length > 0;\n        }\n      };\n\n      // look up the annotator images\n      angular.forEach(scope.annotators, function (annotator) {\n        if (annotator.annotation_image_id) {\n          annotator.imageUrl = modelSvc.assets[annotator.annotation_image_id].url;\n        }\n      });\n\n      // the form value we'll ultimately want to return\n      scope.annotator = {\n        name: scope.item.annotator\n      };\n\n      if (scope.annotators[scope.item.annotator] && scope.annotators[scope.item.annotator].annotation_image_id) {\n        scope.annotator.imageUrl = modelSvc.assets[scope.annotators[scope.item.annotator].annotation_image_id].url;\n      }\n\n      scope.filteredAnnotators =  _sortAvailableAnnotators(angular.copy(scope.annotators));\n      scope.preselectedItem = -1;\n\n      function _sortAvailableAnnotators(annotators: IAnnotators) {\n        let _filteredAnnotators = Object.keys(annotators).map(key => annotators[key]);\n        let _nextAnnotator = _filteredAnnotators.pop();\n        let _sortedAndFiltered = _filteredAnnotators.sort((a, b) => {\n          if (a.key.toLowerCase() < b.key.toLowerCase()) {\n            return -1;\n          } else if (a.key.toLowerCase() > b.key.toLowerCase()) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n        _sortedAndFiltered.push(_nextAnnotator);\n        //return object built from sorted array\n        return _sortedAndFiltered.reduce((sortedObj, annotator) => {\n          sortedObj[annotator.key] = annotator;\n          return sortedObj;\n        }, {});\n      }\n\n\n\n      element.find('.annotatorChooser').bind(\"keydown\", function (event) {\n        switch (event.which) {\n          case 40: // down arrow\n            scope.preselectedItem = (scope.preselectedItem + 1) % Object.keys(scope.filteredAnnotators).length;\n            break;\n          case 38: // up arrow\n            scope.preselectedItem = (scope.preselectedItem - 1) % Object.keys(scope.filteredAnnotators).length;\n            break;\n          case 13: // enter\n            event.preventDefault();\n            if (scope.preselectedItem > -1) {\n              scope.selectByIndex(scope.preselectedItem);\n            }\n            break;\n          default:\n        }\n      });\n\n      // TODO destroy langWatcher when unlinking\n\n      scope.handleAutocomplete = function () {\n        scope.annotator.name = '';\n        if (scope.searchText) {\n\n          scope.preselectedItem = -1;\n          var newFilter = {};\n          angular.forEach(scope.annotators, function (annotator) {\n            // console.log(annotator.key.toLowerCase().indexOf(scope.searchText.toLowerCase()) > -1, annotator.key.toLowerCase(), scope.searchText.toLowerCase());\n            if (annotator.key.toLowerCase().indexOf(scope.searchText.toLowerCase()) > -1) {\n              newFilter[annotator.key] = annotator;\n            }\n          });\n\n          scope.filteredAnnotators = newFilter;\n          // if only one left, select it automatically\n          if (Object.keys(scope.filteredAnnotators).length === 1) {\n            scope.preselectedItem = 0;\n          }\n        } else {\n          // empty searchText, show all autocomplete options\n          scope.filteredAnnotators = angular.copy(scope.annotators);\n          scope.preselectedItem = -1;\n        }\n\n      };\n\n      scope.selectByIndex = function (index) {\n        if (index < 0) {\n          return;\n        }\n        var names = Object.keys(scope.filteredAnnotators).sort();\n        scope.select(scope.filteredAnnotators[names[index]]);\n      };\n\n      scope.select = function (annotator) {\n        // console.log(\"Selected \", annotator);\n        scope.preselectedItem = -1;\n\n        if (annotator.annotation_image_id) {\n          scope.item.annotation_image_id = annotator.annotation_image_id;\n          scope.item.asset = modelSvc.assets[annotator.annotation_image_id];\n          scope.annotator.imageUrl = scope.item.asset.url;\n        } else {\n          // TODO allow adding new image\n          delete scope.annotator.imageUrl;\n          delete scope.item.asset;\n        }\n\n        ngModelController.$setViewValue(annotator.name); // passes annotator name back to item\n        scope.searchText = '';\n\n        //TODO  allow upload to replace image\n      };\n\n      scope.autoCompleting = false;\n      scope.showAutocomplete = function () {\n        var inputField = element.find('.annotatorChooser')[0];\n        inputField.setSelectionRange(0, inputField.value.length);\n        scope.autoCompleting = true;\n      };\n\n      scope.hideAutocomplete = function () {\n        $timeout(function () {\n          if (scope.preselectedItem > -1) {\n            scope.selectByIndex(scope.preselectedItem);\n          } else {\n            // doesn't match an existing name, so...\n            if (scope.searchText !== '') {\n              scope.addNewAnnotator();\n            }\n          }\n          scope.autoCompleting = false;\n        }, 300);\n      };\n\n      scope.addNewAnnotator = function () {\n        var annotatorName = scope.searchText; // TODO sanitize me!!!\n        scope.item.annotator = {};\n        scope.item.annotator[appState.lang] = annotatorName;\n        scope.searchText = \"\";\n\n        scope.handleAutocomplete();\n\n        // var newAnnotator = {\n        // \t\"name\": {\n        // \t\t\"en\": annotatorName // make sure we have something consistent to key against\n        // \t},\n        // \t\"imageUrl\": \"\",\n        // \t\"annotation_image_id\": false\n        // };\n        // if (appState.lang !== 'en') {\n        // \tnewAnnotator.name[appState.lang] = annotatorName;\n        // }\n        // console.log(newAnnotator);\n\n        // // make available in future transcript edits\n        // // TODO shoudl this happen now? or wait until save?\n        // scope.annotators[annotatorName] = angular.copy(newAnnotator);\n        // console.log(scope.annotators);\n\n        // scope.annotator = angular.copy(newAnnotator);\n        // delete scope.annotator.imageUrl;\n\n        // ngModelController.$setViewValue(newAnnotator);\n\n      };\n\n      scope.uploadAnnotatorImage = function () {\n        window.alert(\"TODO\");\n        // For replacing existing annotator thumbnails, do we need to go through every transcript node with that speaker and replace its annotator ID? TODO check with Bill how he ahndles that in old authoring\n\n      };\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/sxsAnnotatorAutocomplete.ts","sxsInputI18n.$inject = ['$timeout', 'appState', 'textAngularManager'];\n\nexport default function sxsInputI18n($timeout, appState, textAngularManager) {\n  return {\n    templateUrl: 'templates/producer/inputi18n.html',\n    scope: {\n      field: \"=sxsInputI18n\",\n      inputtype: \"=inputtype\",\n      doValidate: '=',\n      onEmitName: '&'\n    },\n    link: function (scope, el, attrs) {\n      if (!scope.field) {\n        // need to init the object if it's empty\n        scope.field = {\n          en: \"\"\n        };\n      }\n      scope.appState = appState;\n      //do this in both cases so we can use the name on regular text inputs in addition to textareas\n      scope.textangularname = \"ta\" + new Date().getUTCMilliseconds() + \"y\" + Math.random().toString(16);\n      /*\n       textAngular requires unique name attributes set on the textarea or input element\n       ng-forms will use the name attribute as a namespace for ng-specific state regarding\n       the various states of validity an item can be in.\n\n       example:\n       <form ng-form=\"aForm\">\n       <input type=\"text\" name=\"firstName\">\n       </form>\n\n       will result in an ngform object like so:\n       aForm.firstName = {$valid: <boolean>, $invalid: <boolean>, $dirty: <boolean>}\n\n       It's hard to known the name of the textarea, because we ensure that it is unique by\n       randomly creating a name prop based upon the current time.\n\n       this makes the following technique a little harder:\n       <p ng-if=\"aForm.firstName.$invalid\">this is a required field</p>\n       because firstName (the value of the name attribute on the text area) is randomly generated.\n\n       the solution is to emit the name up to the directive that is consuming sxsInputI18n\n       after it has been set, then we can check the state of the validity in the parent component.\n       */\n      scope.onEmitName({$taName: scope.textangularname});\n\n      if (scope.inputtype === 'textarea') {\n\n        $timeout(function () { // wait for DOM\n          if (attrs.autofocus !== undefined) {\n            var editorScope = textAngularManager.retrieveEditor(scope.textangularname).scope;\n            editorScope.displayElements.text.trigger('focus');\n          }\n        });\n\n        scope.trim = function () {\n          // Let's prevent users from throwing extra whitespace at beginning and end:\n          var txt = scope.field[appState.lang];\n          if (!txt) {\n            return;\n          }\n          console.log(\"BEFORE\", txt);\n\n          // yay regexp parsing of html my favorite thing to do\n          txt = txt.replace(/<br\\/>/g, '<br>'); // no xml-style tags\n\n          // Replacing lots of complicated regexps with this brute force (we don't want user-input spans or divs anyway.)\n          txt = txt.replace(/<div>/g, '<br>');\n          txt = txt.replace(/<\\/?(span|div)>/g, '');\n          txt = txt.replace(/(<br>)*$/, ''); // kill extra linebreaks at end of entered text\n\n          console.log(\"AFTER\", txt);\n          scope.field[appState.lang] = txt;\n        };\n\n        scope.sanitizePastedHtml = function (pasted) {\n          // Strip out all markup from pasted content (to keep those addicted to MS Word from shooting themselves in the foot)\n          var frag = document.createElement(\"div\");\n          frag.innerHTML = pasted;\n          return frag.textContent;\n        };\n\n      }\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/sxsInputI18n.ts","/*For form fields: displays m:ss, sets model as number of seconds. accepts s or m:ss as input. */\nsxsInputTime.$inject = ['$rootScope', '$timeout', 'appState', 'modelSvc', 'timelineSvc', 'playbackService', 'ittUtils'];\n\nexport default function sxsInputTime($rootScope, $timeout, appState, modelSvc, timelineSvc, playbackService, ittUtils) {\n  return {\n    require: '?^^form',\n    scope: {\n      item: '=sxsInputTime'\n    },\n    templateUrl: 'templates/producer/inputtime.html',\n    link: function (scope, elem, attrs, ngForm) {\n\n      var _existy = ittUtils.existy;\n\n      angular.extend(scope, {\n        fieldname: angular.copy(attrs.inputField), // start_time or end_time\n        realValue: angular.copy(scope.item[attrs.inputField]), // internal representation of the selected time.  Don't parse or format this, it causes rounding errors,\n        playbackService: playbackService,\n        model: format(angular.copy(scope.item[attrs.inputField])), // user input\n        appState: appState,\n        parse: parse,\n        format: format,\n        nudge: nudge,\n        setTime: setTime,\n        showTools: showTools,\n        isTranscript: isTranscript\n      });\n\n      onInit();\n\n      function onInit() {\n        if (scope.item._type === 'Scene') {\n          scope.scene = function () {\n            return scope.item;\n          };\n        } else {\n          scope.scene = function () {\n            return modelSvc.sceneAtEpisodeTime(scope.item.cur_episode_id, playbackService.getMetaProp('time'));\n          };\n        }\n      }\n\n      // Watch for user input, send it to item if different\n      scope.$watch(watchModel, handleUpdates);\n\n      function watchModel() {\n        return parse(scope.model);\n      }\n\n      function handleUpdates(parsedTime) {\n\n        setTime(parsedTime);\n\n        // Stop questions should always have the same start + end\n        if (attrs.inputField === 'start_time' && scope.item.stop) {\n          scope.item.end_time = parsedTime;\n        }\n      }\n\n      function handelValidation(t) {\n        scope.item.validationMessage = null;\n        ngForm.time.$setValidity('time', true);\n\n        //these validations are specific to scenes.\n        if (scope.item._type !== 'Scene') {\n          return true;\n        }\n\n        var isValidInput = false;\n        var validStartTime = validateStartTime(t);\n        var isOnExistingScene = validateSceneStartTime(t);\n\n        isValidInput = validStartTime && isOnExistingScene;\n\n        if (!isValidInput) {\n          if (ngForm) {\n            ngForm.time.$setValidity('time', false);\n            ngForm.time.$setViewValue(format(t));\n            ngForm.time.$render();\n\n\n            if (!isOnExistingScene) {\n              scope.item.validationMessage = 'Scenes cannot share the same start time.';\n            }\n\n            if (!validStartTime) {\n              scope.item.validationMessage = 'For a start time <=0:00.1, please edit the first layout';\n            }\n\n          }\n        }\n\n        return isValidInput;\n      }\n\n      function validateSceneStartTime(t) {\n        var isOnSameStartTime;\n        var isValid = true;\n        //don't check the current scene\n        if (scope.item.start_time !== t) {\n          isOnSameStartTime = modelSvc.isOnExistingSceneStart(t);\n          isValid = !isOnSameStartTime;\n        }\n\n        return isValid;\n      }\n\n      function validateStartTime(t) {\n        return (_existy(t) && t > 0.1);\n      }\n\n      function setTime(t) { // pass in parsed values only!\n\n        if (handelValidation(t) === false) {\n          return;\n        }\n\n        if (t > episodeDuration) {\n          t = episodeDuration;\n        }\n        if (scope.item.stop) {\n          scope.item.end_time = t;\n        }\n        scope.realValue = t;\n        scope.item[attrs.inputField] = scope.realValue;\n        scope.model = scope.format(t);\n\n        scope.item.invalid_end_time = (scope.item.start_time > scope.item.end_time);\n      }\n\n      function parse(data) {\n        // console.log(\"Converting view \", data, \" to model\");\n        var ret;\n        if (data === undefined || data === '') {\n          ret = playbackService.getMetaProp('time');\n        } else if (isNaN(data)) {\n          var mss = data.split(':');\n          if (mss.length === 2) {\n            if (isNaN(mss[0])) {\n              mss[0] = 0;\n            }\n            if (isNaN(mss[1])) {\n              mss[1] = 0;\n            }\n            ret = (Number(mss[0]) * 60 + Number(mss[1]));\n          } else {\n            ret = playbackService.getMetaProp('time');\n          }\n        } else {\n          ret = data;\n        }\n        // HACK First scene is bumped a bit after the landing screen...\n        if (ret < 0.01) {\n          ret = 0.01;\n        }\n        $rootScope.$emit('searchReindexNeeded'); // HACK\n        return ret;\n      }\n\n      function format(data) {\n        // convert model value to view value\n        // in a way which is not completely borken, for a change\n        // srsly how was that even working before\n        var mins = Math.floor(data / 60);\n        var secs = Math.round((data % 60) * 100) / 100;\n        if (secs < 10) {\n          secs = \"0\" + secs;\n        }\n        return mins + \":\" + secs;\n      }\n\n      // console.log(\"initing inputTime: \", scope.realValue, scope.model);\n      // TODO this will break in multi-episode timelines\n      var episodeDuration = modelSvc.episodes[scope.item.cur_episode_id].masterAsset.duration;\n\n      function nudge(amt) {\n        // keep the tooltip panel open:\n        $timeout.cancel(tooltipHider);\n        elem.find('.inputfield').focus();\n\n        // This ends up triggering setTime twice (it changes scope.model, which triggers the $watch)  Oh Well\n        var diff = amt / 30; // pretend 1 frame is always 1/30s for now\n        setTime(scope.item[attrs.inputField] + diff);\n        if (attrs.inputField === 'start_time') {\n          timelineSvc.seek(scope.item[attrs.inputField] + diff);\n        }\n      }\n\n      var tooltipHider;\n\n      function showTools(x) {\n        if (x) {\n          scope.tooltip = true;\n        } else {\n          // allow time for clicks before we unload the thing being clicked on:\n          tooltipHider = $timeout(function () {\n            scope.tooltip = false;\n          }, 300);\n        }\n      }\n\n      function isTranscript() {\n        // TODO\n        return false;\n      }\n\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/sxsInputTime.ts","/**\n * Created by githop on 7/5/17.\n */\n\nexport function ittPlayerContainer() {\n  return {\n    templateUrl: 'templates/player.html',\n    controller: 'PlayerController'\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittPlayerContainer.ts","import { IAnalyticsSvc, IDataSvc, IModelSvc } from '../../../scripts/interfaces';\nconst TEMPLATE = `\n<div class=\"episode episode-template\" ng-class=\"episode.templateCss\" ng-hide=\"episodeTheme.sheetLoading\">\n\n  <div\n    class=\"fill\"\n    ng-if=\"episode.template.css_configuration.fill_class != null\"\n    ng-class=\"episode.template.css_configuration.fill_class\">\n    \n    <div ng-if=\"episode.template.css_configuration.fill_class === 'gwsb-seal'\" class=\"fill\"></div>\n  </div>\n  <span ng-include=\"'view-modes/review-mode/reviewmode.html'\"></span>\n  <span ng-include=\"'view-modes/watch-mode/watchmode.html'\"></span>\n  <span\n    ng-class=\"{'colorInvert DiscoverModeOnly': episode.template.displayName === 'Middlebury'}\"\n    ng-repeat=\"scene in episode.scenes | isCurrent\"\n    ng-include=\"'view-modes/discover-mode/discovermode.html'\">\n  </span>\n  <span ng-include=\"'view-modes/video/video.html'\"></span>\n  <span ng-include=\"'view-modes/windowfg/windowfg.html'\"></span>\n  \n  <np-episode-footer template-data=\"episode.template\"></np-episode-footer>\n</div>\n`;\n\n\nclass EpisodeController {\n  static $inject = [\n    '$scope',\n    '$interval',\n    'analyticsSvc',\n    'modelSvc',\n    'appState',\n    'dataSvc',\n    'timelineSvc'\n  ];\n\n  constructor(\n    public $scope: ng.IScope,\n    private $interval: ng.IIntervalService,\n    private analyticsSvc: IAnalyticsSvc,\n    private modelSvc: IModelSvc,\n    private appState,\n    private dataSvc: IDataSvc,\n    private timelineSvc) { }\n\n  $onInit() {\n    // console.log('episode init!');\n    // this.appState.episodeId = this.$routeParams.epId;\n    this.$scope.episode = this.modelSvc.episodes[this.appState.episodeId];\n    // TODO: this will break if the timeline and the episode timeline don't match.\n    // TODO: check whether this gets called if multiple episodes are added to the timeline...\n    // I'm thinking probably not....\n\n    // I did something stupid here wrt scoping, apparently;\n    // 'edit episode' causes this scope to refer to a copy of the data rather than back to the modelSvc cache.\n    // This is an even stupider but relatively harmless HACK to keep it  pointing at the right data:\n    // classic daniel ^^\n\n    this.loadEpisodeForPlayer();\n\n    const scopeHack = () => {\n      this.$scope.episode = this.modelSvc.episodes[this.appState.episodeId];\n    };\n\n    this.$interval(scopeHack, 457);\n  }\n\n  $onDestroy() {\n    this.analyticsSvc.captureEpisodeActivity('episodeUnload');\n    this.analyticsSvc.stopPolling();\n  }\n\n  loadEpisodeForPlayer() {\n    this.analyticsSvc.startPolling();\n    this.analyticsSvc.captureEpisodeActivity('episodeLoad');\n  }\n}\nexport default function ittEpisode() {\n  return {\n    restrict: 'EA',\n    replace: false,\n    template: TEMPLATE,\n    controller: EpisodeController\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/episode/components/episode/ittEpisode.ts","/*\n TODO: right now we're re-building the episode structure on every keystroke.\n That's a tiny bit wasteful of cpu :)  At the very least, debounce input to a more reasonable interval\n\n TODO: some redundancy with ittItemEditor, esp. in the 'styles'.\n I expect the episode styling to drift away from the event styling,\n though, so letting myself repeat myself repeat myself for now\n */\nimport { IModelSvc, IDataSvc, IEpisodeEditService, IEpisodeTheme } from '../../../scripts/interfaces';\n\nittEpisodeEditor.$inject = [\n  '$rootScope',\n  '$timeout',\n  'appState',\n  'modelSvc',\n  'dataSvc',\n  'authSvc',\n  'selectService',\n  'playbackService',\n  'urlService',\n  'episodeTheme',\n  'episodeEdit'\n];\n\nexport interface ILangformFlags {\n  en: boolean;\n  es?: boolean;\n  zh?: boolean;\n  pt?: boolean;\n  fr?: boolean;\n  de?: boolean;\n  it?: boolean;\n}\n\nexport default function ittEpisodeEditor(\n  $rootScope,\n  $timeout,\n  appState,\n  modelSvc: IModelSvc,\n  dataSvc: IDataSvc,\n  authSvc,\n  selectService,\n  playbackService,\n  urlService,\n  episodeTheme: IEpisodeTheme,\n  episodeEdit: IEpisodeEditService) {\n  return {\n    restrict: 'A',\n    replace: true,\n    scope: {\n      episode: '=ittEpisodeEditor'\n    },\n    templateUrl: 'templates/producer/episode.html',\n    controller: 'EditController',\n    link: function episodeEditorLinkFn(scope) {\n\n      scope.translationMessage = translationMessage;\n      function translationMessage(langArr) {\n       var prefix = '';\n       var langs = langArr.filter(function(l) {\n          if (l.default == undefined) { //jshint ignore:line\n            return true;\n          } else {\n            prefix = 'Translate from ' +  l.code + ' to: ';\n            return false;\n          }\n        }).map(function(l) {\n          l = l.code;\n          return l;\n        }).join(', ');\n       return prefix + langs;\n      }\n\n      scope.beginBackgroundTranslations = beginBackgroundTranslations;\n      function beginBackgroundTranslations(episodeId) {\n        dataSvc.beginBackgroundTranslations(episodeId)\n          .then(handleSuccess)\n          .catch(handleError);\n\n        function handleSuccess(resp) {\n          console.log('resp from translations!', resp);\n          if (resp.status === 'Request for translations queued') {\n            scope.afterTranslationAttempt = resp.status + ', check back later!';\n          } else {\n            scope.afterTranslationAttempt = 'Something went wrong...';\n          }\n          scope.doCheckForTranslations = true;\n        }\n\n        function handleError(e) {\n          console.log('error:', e);\n        }\n      }\n\n      scope.episodeContainerId = modelSvc.episodes[appState.episodeId].container_id;\n\n      var container = modelSvc.containers[scope.episodeContainerId];\n      scope.customer = modelSvc.customers[container.customer_id];\n\n      if (scope.episode.master_asset_id && scope.episode.master_asset_id !== \"\") {\n        scope.masterAsset = modelSvc.assets[scope.episode.master_asset_id];\n      }\n      scope.uploadStatus = [];\n      scope.uneditedEpisode = angular.copy(scope.episode); // in case of cancel.   Must be a copy, not the original!\n      scope.itemForm = selectService.setupItemForm(scope.episode.styles, 'episode');\n\n      if (!authSvc.userHasRole('admin') || (scope.masterAsset && /video\\/x-/.test(scope.masterAsset.content_type))) {\n        scope.masterAssetType = 'WebUrl';\n      } else {\n        scope.masterAssetType = 'Video';\n      }\n\n      // extract episode languages for the form\n      scope.langForm = <ILangformFlags> {'en': true, 'es': false, 'zh': false, 'pt': false, 'fr': false, 'de': false, 'it': false};\n      for (var j = 0; j < scope.episode.languages.length; j++) {\n        scope.langForm[scope.episode.languages[j].code] = true;\n      }\n      scope.langForm[scope.episode.defaultLanguage] = true;\n      scope.languageWatcher = scope.$watch(function () {\n        return [scope.langForm, scope.episode.defaultLanguage];\n      }, function () {\n        var languageCount = 0; // not sure if necessary -- can use languages.length instead?\n        var lastSelectedLanguage = \"\"; // convenience to stuff into default if the old default is no longer valid\n        var newLanguages = []; // will replace the existing episode languages array\n        for (var lang in scope.langForm) {\n          if (scope.langForm[lang]) {\n            languageCount++;\n            lastSelectedLanguage = lang;\n            newLanguages.push({\n              'code': lang\n            });\n          } else {\n            // language not selected; remove it as default if it was one\n            if (scope.episode.defaultLanguage === lang) {\n              scope.episode.defaultLanguage = false;\n            }\n          }\n        }\n        scope.languageCount = languageCount;\n\n        // ensure there is a valid default selection:\n        if (scope.episode.defaultLanguage === false) {\n          scope.episode.defaultLanguage = lastSelectedLanguage;\n        }\n\n        // set the default inside in the languages structure:\n        angular.forEach(newLanguages, function (lang) {\n          if (lang.code === scope.episode.defaultLanguage) {\n            lang.default = true;\n          }\n        });\n\n        scope.episode.languages = angular.copy(newLanguages);\n      }, true);\n\n      // Transform changes to form fields for styles into item.styles[]:\n      scope.watchStyleEdits = scope.$watch(function () {\n        return scope.itemForm;\n      }, function () {\n        // console.log(\"itemForm:\", scope.itemForm);\n        var styles = [];\n        for (var styleType in scope.itemForm) {\n          if (scope.itemForm[styleType]) {\n            styles.push(styleType + scope.itemForm[styleType]);\n          }\n        }\n        scope.episode.styles = styles;\n        modelSvc.deriveEpisode(scope.episode);\n        modelSvc.resolveEpisodeEvents(scope.episode._id); // needed for template or style changes\n      }, true);\n\n      scope.appState = appState;\n\n      // Angular1.3 dependency: watchGroup\n      // Deep-watching the entire episode is not so much with the good performance characteristics so we instead only watch the editable fields\n      // TODO would it be worth using watchGroup in itemEdit as well?\n      scope.watchEdits = scope.$watchGroup(\n        // I am kind of amazed that using appState.lang works here, these strings must get recalculated every tick\n        [\n          'episode.title[appState.lang]',\n          'episode.description[appState.lang]'\n        ],\n        () => {\n          modelSvc.deriveEpisode(scope.episode);\n          // modelSvc.resolveEpisodeContainers(scope.episode._id); // only needed for navigation_depth changes\n          modelSvc.resolveEpisodeEvents(scope.episode._id); // needed for template or style changes\n        }\n      );\n\n      scope.dismissalWatcher = $rootScope.$on(\"player.dismissAllPanels\", scope.cancelEdit);\n\n      scope.cancelEdit = function () {\n        // hand off to EditController (with the original to be restored)\n        scope.cancelEpisodeEdit(scope.uneditedEpisode);\n      };\n\n      scope.attachChosenAsset = function (asset_id) { // master asset only!\n        scope.episode.replacingMasterAsset = false;\n        var asset = modelSvc.assets[asset_id];\n        var previousAsset = modelSvc.assets[scope.episode.master_asset_id];\n        scope.showmessage = \"New video attached.\";\n        if (previousAsset && (asset.duration < previousAsset.duration)) {\n          var orphans = scope.getItemsAfter(scope.episode.items.concat(scope.episode.scenes), asset.duration);\n          if (orphans.length) {\n            // TODO i18n\n            scope.showmessage = \"Warning: this new video is shorter than the current video and we've detected that some existing content items will be impacted. If you save this edit, these events will have their start and end times adjusted to the new episode end. (If this isn't what you want, choose a different video or hit 'cancel'.)\";\n          }\n        }\n        scope.episode._master_asset_was_changed = true;\n        scope.episode.master_asset_id = asset._id;\n        scope.masterAsset = asset;\n        scope.episode.masterAsset = asset;\n        modelSvc.deriveEpisode(scope.episode);\n      };\n\n      scope.attachPosterAsset = function (assetId) {\n        var asset = modelSvc.assets[assetId];\n        scope.episode.poster_frame_id = assetId;\n        scope.episode.poster = asset;\n        modelSvc.deriveEpisode(scope.episode);\n      };\n\n      scope.assetUploaded = function (assetId) {\n        scope.showUploadButtons = false;\n        scope.showUploadField = false;\n        scope.attachChosenAsset(assetId);\n      };\n      scope.posterUploaded = function (assetId) {\n        scope.showUploadButtonsPoster = false;\n        scope.showUploadFieldPoster = false;\n        scope.attachPosterAsset(assetId);\n      };\n\n      function waitForDuration(onDone, url, type) {\n        return function (state) {\n          if (state === 'player ready') {\n            playbackService.unregisterStateChangeListener(waitForDuration);\n            //push to end of event loop.\n            $timeout(function () {\n              onDone({\n                duration: playbackService.getMetaProp('duration', 'replaceMe'),\n                url,\n                type\n              });\n              //remove temp\n              scope.episode.swap = {};\n            }, 0);\n\n          }\n        };\n      }\n\n      function createAssetFromTmp(tmpAsset) {\n        var asset = Object.create(null);\n        asset.content_type = tmpAsset.type;\n        asset.duration = tmpAsset.duration;\n        asset.url = tmpAsset.url;\n        asset.name = scope.episode.title;\n        asset.description = scope.episode.description;\n        dataSvc.createAsset(scope.episodeContainerId, asset).then(function (data) {\n          modelSvc.cache('asset', data);\n          playbackService.renamePid('replaceMe', data._id);\n          scope.attachChosenAsset(data._id);\n        }).catch(function (e) {\n          console.log('errr', e);\n        });\n      }\n\n      scope.attachMediaSrc = attachMediaSrc;\n      function attachMediaSrc(urlOrEmbedCode) {\n        var contentType;\n        var pmTypeAndMimeType = urlService.checkUrl(urlOrEmbedCode);\n        var type = pmTypeAndMimeType.type;\n\n        if (type === 'wistia' && !authSvc.userHasRole('admin')) {\n          return;\n        }\n\n        if (type.length > 0) {\n          contentType = pmTypeAndMimeType.mimeType;\n          scope.episode.replacingMasterAsset = true;\n          scope.showmessage = 'Getting ' + type + ' video...';\n          var mediaSrcUrl = urlService.parseInput(urlOrEmbedCode);\n\n          scope.episode.swap = {\n            _id: 'replaceMe',\n            mediaSrcArr: [mediaSrcUrl]\n          };\n\n          var afterReady = waitForDuration(createAssetFromTmp, mediaSrcUrl, contentType);\n          playbackService.registerStateChangeListener(afterReady);\n        }\n      }\n      scope.replaceAsset = function (assetType) {\n        assetType = assetType || '';\n        scope[\"showUploadButtons\" + assetType] = true;\n        scope[\"showUploadField\" + assetType] = false;\n      };\n\n      scope.detachMasterAsset = detachMasterAsset;\n      function detachMasterAsset() {\n        scope.episode.masterAsset = null;\n        appState.editEpisode.masterAsset = null;\n        appState.editEpisode._master_asset_was_changed = true;\n        episodeEdit.detatchMasterAsset(scope.episode);\n      }\n\n      scope.saveEpisode = saveEpisode;\n      function saveEpisode() {\n        episodeEdit.saveEpisode(scope.episode);\n      }\n\n      scope.selectText = function (event) {\n        event.target.select(); // convenience for selecting the episode url\n      };\n\n      scope.$on('$destroy', function () {\n        scope.watchEdits();\n        scope.dismissalWatcher();\n        scope.languageWatcher();\n        scope.watchStyleEdits();\n      });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/episode/components/episode-editor/ittEpisodeEditor.ts","'use strict';\n\n\n// Declare the top level application module and its dependencies\n/**\n * @ngdoc interface\n * @name iTT\n * @description\n * The default namespace / angular module which houses the rest of the application code.\n * Officially titled as 'com.inthetelling.story' but iTT seems a little less verbose\n * @requires ngRoute\n * @requires ngAnimate\n * @requires ngSanitize\n * @requires textAngular\n */\n\nconst templates = (require as any).context('../templates', true, /\\.html$/);\nconst componentTemplates = (require as any).context('./directives', true, /\\.html$/);\nconst viewModeTemplates = (require as any).context('../view-modes', true, /\\.html$/);\n\n[templates, componentTemplates, viewModeTemplates].forEach((templateSource) => {\n  templateSource.keys().forEach(path => templateSource(path));\n});\n\nimport '../styles/app.scss';\nimport '../styles/vendor.scss';\n\nimport './plugin/plugins';\nimport 'core-js/client/shim';\nimport 'angular';\nimport 'angular-ui-tree';\n//text angular\nimport 'rangy';\nimport 'rangy/lib/rangy-selectionsaverestore';\nimport 'textAngular/dist/textAngular-sanitize.min';\nimport 'textAngular/dist/textAngular.min';\nimport 'angular-socialshare';\n//end text angular\nimport '../config';\n\nimport './controllers/controllers.module';\nimport './filters/filters';\nimport './services/services.module';\nimport './directives/directives.module';\nimport '../episode/episode.module';\nlet itt = angular.module('iTT', [\n    'ngRoute',\n    'ngAnimate',\n    'ngSanitize',\n    'textAngular',\n    'ui.tree',\n    '720kb.socialshare',\n    'npEpisode',\n    'itt.controllers',\n    'itt.filters',\n    'itt.services',\n    'itt.directives'\n  ]\n)\n  .constant('MIMES', {\n    'assetLib': 'image/*,text/plain,application/pdf,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,text/rtf',\n    'file': 'text/plain,application/pdf,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,text/rtf',\n    'default': 'image/*',\n    'transcripts': 'text/vtt,text/srt'\n  })\n  //TODO merge constants below into playbackservice/index as exports\n  .constant('PLAYERSTATES', {\n    '-1': 'unstarted',\n    '0': 'ended',\n    '1': 'playing',\n    '2': 'paused',\n    '3': 'buffering',\n    '5': 'video cued',\n    '4': 'quality changed',\n    '6': 'player ready'\n  })\n  .constant('PLAYERSTATES_WORD', {\n    'unstarted': '-1',\n    'ended': '0',\n    'playing': '1',\n    'paused': '2',\n    'buffering': '3',\n    'quality changed': '4',\n    'video cued': '5',\n    'player ready': '6'\n  })\n  // Configure routing\n  .config(['$routeProvider', routerConfig])\n  // Configure x-domain resource whitelist (TODO: do we actually need this?)\n  .config(['$sceDelegateProvider', xDomainConfig])\n  // Configure http headers and intercept http errors\n  .config(['$httpProvider', authInterceptorConfig])\n  // Configuration for textAngular toolbar\n  .config(['$provide', textAngularConfig])\n  //config for debug info disable\n  .config(['$compileProvider', debugInfoConfig])\n  .run(['$rootScope', 'errorSvc', runFunction]);\n\nfunction routerConfig($routeProvider) {\n  $routeProvider\n    .when('/', {\n      title: 'Narrative Producer',\n      templateUrl: 'templates/root.html'\n    })\n    .when('/auth', {\n      templateUrl: 'templates/auth.html',\n      reloadOnSearch: false\n    })\n    .when('/account', {\n      template: [\n        '<div class=\"standaloneAncillaryPage\">',\n        '\t<np-nav on-logout=\"logout()\"></np-nav>',\n        '\t<h1>My Account</h1>',\n        '\t<div itt-user></div>',\n        '</div>'\n      ].join(''),\n      controller: ['$scope', 'authSvc', function ($scope, authSvc) {\n        $scope.logout = authSvc.logout;\n      }]\n    })\n    .when('/stories', {\n      title: 'Available Narratives',\n      template: `<np-narratives-container></np-narratives-container>`\n    })\n    .when('/story/:narrativePath', {\n      title: 'Narrative',\n      template: `<np-narrative-container></np-narrative-container>`\n    })\n    .when('/story/:narrativePath/:timelinePath', {\n      template: '<div itt-narrative-timeline></div>',\n      resolve: {\n        product: ['appState', function (appState) {\n          appState.init();\n          appState.product = 'player';\n          appState.productLoadedAs = 'narrative';\n        }]\n      }\n    })\n    .when('/projects', {\n      title: 'Available projects',\n      template: '<np-projects-container></np-projects-container>'\n    })\n    .when('/episode/:epId', {\n      title: 'Narrative Producer',\n      template: '<itt-player-container></itt-player-container>',\n      resolve: {\n        product: ['appState', function (appState) {\n          appState.init();\n          appState.product = 'player';\n          appState.productLoadedAs = 'player';\n        }]\n      }\n    })\n    .when('/episode/:epId/:viewMode', {\n      title: 'Narrative Producer',\n      template: '<itt-player-container></itt-player-container>',\n      resolve: {\n        product: ['appState', function (appState) {\n          appState.init();\n          appState.product = 'player';\n          appState.productLoadedAs = 'player';\n        }]\n      }\n    })\n    .when('/sxs/:epId', {\n      title: 'Narrative Producer',\n      template: '<itt-player-container></itt-player-container>',\n      resolve: {\n        product: ['appState', function (appState) {\n          appState.init();\n          appState.product = 'sxs';\n          appState.productLoadedAs = 'sxs';\n        }]\n      }\n    })\n    .when('/editor/:epId', {\n      title: 'Narrative Producer',\n      template: '<itt-player-container></itt-player-container>',\n      resolve: {\n        product: ['appState', function (appState) {\n          appState.init();\n          appState.product = 'sxs';\n          appState.productLoadedAs = 'sxs';\n        }]\n      }\n    })\n    .when('/producer/:epId', {\n      title: 'Narrative Producer',\n      template: '<itt-player-container></itt-player-container>',\n      resolve: {\n        product: ['$route', 'appState', ($route, appState) => {\n          appState.init();\n          appState.episodeId = appState.episodeId = $route.current.params.epId;\n          appState.product = 'producer';\n          appState.productLoadedAs = 'producer';\n        }]\n      }\n    })\n    .when('/assets/:containerId', {\n      title: 'Container Assets test',\n      controller: 'ContainerAssetsTestController',\n      template: [\n        '<div class=\"standaloneAncillaryPage\">',\n        '\t<np-nav on-logout=\"logout()\"></np-nav>',\n        '\t<div>',\n        '\t\t<sxs-container-assets container-id=\"{{containerId}}\" mime-key=\"assetLib\"></sxs-container-assets>',\n        '\t</div>',\n        '</div>'].join(''),\n      resolve: {\n        authEffects: ['authSvc', function (authSvc) {\n          //to ensure that canAccess is properly set.\n          return authSvc.authenticate().then(angular.noop);\n        }]\n      }\n    })\n    // .when('/event/:eventId', {\n    //   title: 'Event test',\n    //   controller: 'EventTestController',\n    //   templateUrl: 'templates/testbed-event.html'\n    // })\n    .otherwise({\n      title: 'Narrative Producer: Error',\n      controller: 'ErrorController',\n      templateUrl: 'templates/error-404.html'\n    });\n\n  //$locationProvider.html5Mode(false); // TODO we had trouble getting the server config working for this... thought we had it but IE still choked\n}\n\nfunction xDomainConfig($sceDelegateProvider) {\n  $sceDelegateProvider.resourceUrlWhitelist([\n    'self',\n    /.*/,\n    /^http(s)?:\\/\\/platformuniv-p.edgesuite.net/,\n    /^http(s)?:\\/\\/themes.googleusercontent.com/\n  ]);\n}\n\nfunction authInterceptorConfig($httpProvider) {\n  $httpProvider.defaults.useXDomain = true;\n  $httpProvider.defaults.withCredentials = true;\n  delete $httpProvider.defaults.headers.common['X-Requested-With'];\n  $httpProvider.interceptors.push(['$q', 'errorSvc', function ($q, errorSvc) {\n    return {\n      'responseError': function (rejection) {\n\n        if (rejection.data && rejection.data.path_slug) {\n          return $q(function (resolve, reject) {\n            return reject(rejection);\n          });\n        }\n\n        errorSvc.error(rejection);\n        return $q.reject(rejection);\n      }\n    };\n  }]);\n}\n\nfunction textAngularConfig($provide) {\n  $provide.decorator('taOptions', ['taRegisterTool', '$delegate', function (taRegisterTool, taOptions) { // $delegate is the taOptions we are decorating\n    taOptions.defaultFileDropHandler = function (a, b) {\n    }; //jshint ignore:line\n    taOptions.toolbar = [\n      ['h1', 'h2', 'h3'],\n      ['bold', 'italics', 'underline', 'strikeThrough'],\n      ['ul', 'ol'],\n      ['undo', 'redo', 'clear']\n      // ['bold', 'italics', 'underline', 'strikeThrough', 'ul', 'ol', 'redo', 'undo', 'clear'],\n      // ['justifyLeft','justifyCenter','justifyRight','indent','outdent'],\n      // ['html', 'insertImage', 'insertLink', 'insertVideo', 'wordcount', 'charcount']\n    ];\n    return taOptions;\n  }]);\n}\n\nfunction debugInfoConfig($compileProvider) {\n  let isDev = false;\n  const currentHost = window.location.hostname;\n  if (currentHost.indexOf('localhost') === 0 ||\n    currentHost.indexOf('api-dev') === 0 ||\n    currentHost.indexOf('np-dev') === 0) {\n    isDev = true;\n  }\n\n  if (isDev === false) {\n    $compileProvider.debugInfoEnabled(false);\n  }\n}\n\nfunction runFunction($rootScope, errorSvc) {\n\n  $rootScope.$on('$routeChangeSuccess', function (event, currentRoute) {\n    document.title = currentRoute.title ? currentRoute.title : 'Narrative Producer';\n    errorSvc.init(); // clear display of any errors from the previous route\n  });\n  // globally emit rootscope event for certain keypresses:\n  var fhotkb = false; // user's forehead is not on the keyboard\n  $(document).on('keydown', function (e) {\n    if (\n      fhotkb ||\n      document.activeElement.tagName === 'INPUT' ||\n      document.activeElement.tagName === 'TEXTAREA' ||\n      document.activeElement.attributes.contenteditable\n    ) {\n      return;\n    }\n\n    fhotkb = true;\n    if (e.keyCode === 27) {\n      $rootScope.$emit('userKeypress.ESC');\n      e.preventDefault();\n    }\n    if (e.which === 32) {\n      $rootScope.$emit('userKeypress.SPACE');\n      e.preventDefault();\n    }\n\n  });\n  $(document).on('keyup', function () {\n    fhotkb = false; // oh good they've woken up\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/app.ts","/**\n * Created by githop on 6/14/17.\n */\n\n\n\n//const / type pattern\nexport const SOCIAL_IMAGE_SQUARE: string = 'social_image_square';\nexport type SOCIAL_IMAGE_SQUARE = 'social_image_square';\n\nexport const SOCIAL_IMAGE_WIDE: string = 'social_image_wide';\nexport type SOCIAL_IMAGE_WIDE =  'social_image_wide';\n\nexport type TSocialTagTypes = SOCIAL_IMAGE_WIDE | SOCIAL_IMAGE_SQUARE;\n\nexport const CHANGE_MAGNET: string = 'magnet.changeMagnet';\nexport type CHANGE_MAGNET = 'magnet.changeMagnet';\n\nexport const JUMP_TO_MAGNET: string = 'magnet.jumpToMagnet';\nexport type JUMP_TO_MAGNET = 'magnet.jumpToMagnet';\n\nexport const UPDATE_MAGNET: string = 'magnet.updateMagnet';\nexport type UPDATE_MAGNET = 'magnet.updateMagnet';\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/constants.ts","/**\n * Created by githop on 3/30/17.\n */\n\nimport 'angular';\n\nimport ContainerAssetsTestController from './ContainerAssetsTestController';\nimport EditController from './EditController';\nimport ErrorController from './ErrorController';\nimport EventTestController from './EventTestController';\nimport ItemController from './ItemController';\nimport PlayerController from './PlayerController';\nimport SceneController from './SceneController';\nimport SearchPanelController from './SearchPanelController';\nimport TimelineController from './TimelineController';\n\nconst ittControllers = angular.module('itt.controllers', [])\n  .controller('EditController', EditController)\n  .controller('ErrorController', ErrorController)\n  .controller('EventTestController', EventTestController)\n  .controller('ItemController', ItemController)\n  .controller('PlayerController', PlayerController)\n  .controller('SceneController', SceneController)\n  .controller('SearchPanelController', SearchPanelController)\n  .controller('TimelineController', TimelineController)\n  .controller('ContainerAssetsTestController', ContainerAssetsTestController);\n\nexport default ittControllers;\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/controllers/controllers.module.ts","/*\n Stash for shared information, to save us a lot of $watching and $emitting.\n It's convenient.  Maybe -too- convenient.\n\n I have a sinking feeling this is probably an elaborate wheel-reinvention of $rootScope, but hey, it works\n\n */\n\nconst noAvatarImg = require('../../images/no-avatar.gif');\n/**\n * @ngdoc service\n * @name iTT.service:appState\n * @description\n * POJO designed to store application state during app runtime. All values are initiazed as boolean and set to false.\n * Values are then updated in place by injecting the appState into the relevant destination\n * and overwriting the initial values\n * @requires $interval\n * @requires config\n * @property {Object} user whatever authSvc gets back from getAccessToken\n * @property {String} episodeId ID of current episode (Initialized as bool set to false).\n * @property {String} episodeSegmentId ID of current episode segment (only relevant in narratives)\n * @property {String} narrativeId also only relevant in narratives\n * @property {String} timelineId ID of timeline\n * @property {Boolean} isFramed are we inside an iframe?  Don't use !== because IE8 gets it wrong\n * @property {Boolean} isTouchDevice Determines whether or not client is touch enabled via user agent\n * @property {Boolean} isIphone iPhone has weird video handling, see  timelineSvc\n * @property {Number} windowWidth width of content pane, updated every 50ms\n * @property {Number} windowHeight height of content pane, updated every 50ms\n * @property {String} viewMode Sets view mode based upon window width\n * @property {Number} producerEditLayer a bit hacky, this.  Only has an effect in producer in discover mode;\n * 0 is default, -1 is background layers only, 1 is foreground layers only\n * @property {Number} time current playhead position (in seconds) relative to timeline NOT TO EPISODE!\n * @property {Number} bufferedPercent portion of video that has been buffered\n * (as pct instead of time because that's how youtube reports it, and that's what we end up displaying anyway)\n * @property {Number} timeMultiplier sets player speed (0.5 = half speed; 2=double;etc)\n * @property {Number} duration duration of timeline (in seconds)\n * @property {String} timelineState \"playing\", \"paused\", or \"buffering\" (set by timelineSvc).\n * Future = \"locked\" (by stop question or etc)\n * @property {Boolean} hasBeenPlayed set to true after first time the video plays\n * (used so we can interrupt that first play with a helpful help)\n * @property {Number} volume Audio for main video\n * @property {Boolean} muted audio for main video\n * @property {Boolean} hideCaptions visibility of \"closed captions\" in watch mode\n * @property {Object} show Object with SearchPanel and NavPanel properties which are booleans\n * @property {Boolean} videoControlsActive whether bottom toolbar is visible\n * @property {Boolean} videoControlsLocked force bottom toolbar to stay in its current visible/hidden state\n * @property {Object} itemDetail Put item data here to show it as a modal overlay\n * @property {Boolean} autoscroll scroll window to make current items visible (in relevant modes)\n * @property {Boolean} autoscrollBlocked User has disabled autoscroll\n * @property {String} product \"player\", \"sxs\", or \"producer\"\n * @property {String} productLoadedAs same as product but only set on initial load,\n * this lets producer toggle back to player preview temporarily\n * @property {Object} editEvent Scene or item currently being edited by user.\n * @property {Object} editEpisode Episode currently being edited by user.\n * yes I did kind of paint myself into a corner here\n * @property {Object} lang set to false so the episode default knows when to override it\n */\n// appState.$inject = ['$interval', 'config'];\n\nconst INITIAL_APP_STATE = {\n  noAvatarImg,\n  user: {}, // whatever authSvc gets back from getAccessToken\n  episodeId: false, // ID of current episode\n  episodeSegmentId: false, // ID of current episode segment (only relevant in narratives)\n  narrativeId: false, // also only relevant in narratives\n  timelineId: false, // ditto\n  resizeIframeReviewMode: false,\n  isFramed: (window.parent != window), // are we inside an iframe?  Don't use !== because IE8 gets it wrong\n  isTouchDevice: (/iPad|iPod|iPhone/.test(navigator.platform) || /Android/.test(navigator.userAgent)),\n  isIEOrEdge: (/Trident|Edge/.test(navigator.userAgent) || /Trident|Edge/.test(navigator.platform)),\n  isIPhone: /iPod|iPhone/.test(navigator.platform), // iPhone has weird video handling, see  timelineSvc\n  iOSVersion: '',\n  windowWidth: 0,\n  windowHeight: 0,\n  viewMode: ($(window).width() > 480) ? 'discover' : 'review', // default view mode\n  producerEditLayer: 0, // a bit hacky, this.  Only has an effect in producer in discover mode,\n  // 0 is default, -1 is background layers only, 1 is foreground layers only\n  hideCaptions: false, // visibility of \"closed captions\" in watch mode\n  show: {\n    searchPanel: false,\n    // helpPanel: false,\n    navPanel: false\n  },\n  videoControlsActive: false, // whether bottom toolbar is visible\n  videoControlsLocked: false, // force bottom toolbar to stay in its current visible/hidden state\n  itemDetail: false, // Put item data here to show it as a modal overlay\n  autoscroll: false, //scroll window to make current items visible (in relevant modes)\n  autoscrollBlocked: false, // User has disabled autoscroll\n  crossEpisodePath: '',\n  product: '',\n  productLoadedAs: '', // same as product but only set on initial load,\n  // this lets producer toggle back to player preview temporarily\n  editEvent: false, // Scene or item currently being edited by user\n  editEpisode: false, // Episode currently being edited by user. yes I did kind of paint myself into a corner here\n// svc.youtubeIsReady: false,\n// Set to true when youtube API finishes loading.  DO NOT set this to false on init,\n// otherwise navigating from episode to episode breaks\n// (we reinit on new episode but that won't trigger youtube's ready event)\n  lang: false // set to false\n};\n\nexport class AppState {\n  user;\n  episodeId;\n  episodeSegmentId;\n  narrativeId;\n  timelineId;\n  isFramed;\n  isTouchDevice;\n  isIEOrEdge;\n  isIPhone;\n  iOSVersion;\n  noAvatarImg;\n  windowWidth;\n  windowHeight;\n  viewMode;\n  producerEditLayer;\n  volume;\n  muted;\n  hideCaptions;\n  show;\n  videoControlsActive;\n  videoControlsLocked;\n  itemDetail;\n  autoscroll;\n  autoscrollBlocked;\n  crossEpisodePath;\n  product: 'player' | 'sxs' | 'producer';\n  productLoadedAs;\n  editEvent;\n  editEpisode;\n  resizeIframeReviewMode;\n  lang;\n  static $inject = ['$interval', 'config'];\n  constructor(private $interval, private config) {\n    this.initService();\n  }\n\n  static getIOSVersion(navigator): number[] | void {\n    const iOSDeviceRe = /iP(hone|od|ad)/;\n    const versionRe = /OS (\\d+)_(\\d+)_?(\\d+)?/;\n    if (iOSDeviceRe.test(navigator.platform) || iOSDeviceRe.test(navigator.userAgent)) {\n      const v = (navigator.appVersion).match(versionRe);\n      return [parseInt(v[1], 10), parseInt(v[2], 10), parseInt(v[3] || 0, 10)];\n    }\n  }\n\n  init() {\n    let crossEpisodePath;\n    if (this.product === 'sxs' || this.product === 'producer') {\n      crossEpisodePath = this.product;\n    } else {\n      crossEpisodePath = 'episode'; // yeah, that was kind of a dumb decision to switch from episode to \"player\"\n    }\n    const overrides = {\n      crossEpisodePath,\n      iOSVersion: AppState.getIOSVersion(navigator),\n      product: this.product,\n      productLoadedAs: this.productLoadedAs,\n      user: this.user || {}\n    };\n\n    Object.assign(this, INITIAL_APP_STATE, overrides);\n  }\n\n  initService() {\n    this.init();\n    this.watchWidth();\n  }\n\n  watchWidth() {\n    this.$interval(\n      () => {\n        this.windowHeight = angular.element(window).height();\n        this.windowWidth = angular.element(window).width();\n      },\n      50,\n      0,\n      false\n    );\n\n    if (this.config.debugInBrowser) {\n      console.log('appState:', this);\n    }\n  }\n\n  isIframedIOS() {\n    return (this.isFramed && this.isIOS());\n  }\n\n  isIOS() {\n    return (this.iOSVersion && this.iOSVersion[0] && this.iOSVersion[0] > 0);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/appState.ts","'use strict';\n\n// TODO make up my mind about 'foo' versus 'isFoo'\n\nimport 'angular';\nimport {SOCIAL_IMAGE_SQUARE, SOCIAL_IMAGE_WIDE} from '../constants';\n\nlet ittFilters = angular.module('itt.filters', [])\n/* List filters */\n.filter('itemLayout', function () {\n\t\treturn function (items, layout) {\n\t\t\tvar ret = [];\n\t\t\tangular.forEach(items, function (item) {\n\t\t\t\tif (item.layouts && item.layouts[0] === layout) {\n\t\t\t\t\tret.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\n\t\t};\n\t})\n\t.filter('mainCol', function() {\n\t\treturn function (items) {\n\t\t\tvar ret = [];\n\t\t\tangular.forEach(items, function(item) {\n\t\t\t\tif (item.layouts && (item.layouts[0] === 'mainBg' || item.layouts[0] === 'mainFg')) {\n\t\t\t\t\tret.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\n\t\t};\n\t})\n\t.filter('altCol', function() {\n\t\treturn function (items) {\n\t\t\tvar ret = [];\n\t\t\tangular.forEach(items, function(item) {\n\t\t\t\tif (item.layouts && (item.layouts[0] === 'altBg' || item.layouts[0] === 'altFg')) {\n\t\t\t\t\tret.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\n\t\t};\n\t})\n\t.filter('annotation', function () {\n\t\treturn function (items) {\n\t\t\tvar ret = [];\n\t\t\tangular.forEach(items, function (item) {\n\t\t\t\tif (item._type === 'Annotation' && !item.templateUrl.match(/(transmedia|definition)/)) {\n\t\t\t\t\tret.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\n\t\t};\n\t})\n\t.filter('transmedia', function () {\n\t\treturn function (items) {\n\t\t\tvar ret = [];\n\t\t\tangular.forEach(items, function (item) {\n\t\t\t\tif (item._type !== 'Annotation' || item.templateUrl.match(/(transmedia|definition)/)) {\n\t\t\t\t\tret.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\n\t\t};\n\t})\n\t.filter('transcript', function () {\n\t\treturn function (items) {\n\t\t\tvar ret = [];\n\t\t\tangular.forEach(items, function (item) {\n\t\t\t\tif (item.isTranscript) {\n\t\t\t\t\tret.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\n\t\t};\n\t})\n\t.filter('isCurrent', function () {\n\t\treturn function (items) {\n\t\t\tvar ret = [];\n\t\t\tangular.forEach(items, function (item) {\n\t\t\t\tif (item.isCurrent) {\n\t\t\t\t\tret.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\n\t\t};\n\t})\n\t.filter('isContent', function () {\n\t\treturn function (items) {\n\t\t\tvar ret = [];\n\t\t\tangular.forEach(items, function (item) {\n\t\t\t\tif (item.isContent) {\n\t\t\t\t\tret.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\n\t\t};\n\t})\n\t.filter('reviewMode', ['appState', function (appState) {\n\t\treturn function (items) {\n\t\t\tvar ret = [];\n\t\t\tvar isProducer = (appState.product === 'producer');\n\t\t\t// player, sxs: non-cosmetic, and isContent or windowFg.\n\t\t\t// producer: everything.\n\t\t\tangular.forEach(items, function (item) {\n\t\t\t\tif (\n\t\t\t\t\tisProducer ||\n\t\t\t\t\t(!item.cosmetic &&\n\t\t\t\t\t\t(item.isContent || item.layouts.indexOf('windowFg') > -1)\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tret.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\n\t\t};\n\t}])\n\t.filter('transcriptandrequired', function () {\n\t\t// returns transcript AND required transmedia:\n\t\treturn function (items) {\n\t\t\tvar ret = [];\n\t\t\tangular.forEach(items, function (item) {\n\t\t\t\tif (item.isTranscript || item.required) {\n\t\t\t\t\tret.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\n\t\t};\n\t})\n\t.filter('transcriptandoptional', function () {\n\t\t// returns transcript AND optional transmedia\n\t\treturn function (items) {\n\t\t\tvar ret = [];\n\t\t\tangular.forEach(items, function (item) {\n\t\t\t\tif (item.isTranscript || (!item.isTranscript && !item.required)) {\n\t\t\t\t\tret.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\n\t\t};\n\t})\n\t.filter('required', function () {\n\t\t// returns only required transmedia (no transcript):\n\t\treturn function (items) {\n\t\t\tvar ret = [];\n\t\t\tangular.forEach(items, function (item) {\n\t\t\t\tif (!item.isTranscript && item.required) {\n\t\t\t\t\tret.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\n\t\t};\n\t})\n\t.filter('optional', function () {\n\t\t// returns only optional transmedia (no transcript)\n\t\treturn function (items) {\n\t\t\tvar ret = [];\n\t\t\tangular.forEach(items, function (item) {\n\t\t\t\tif (!item.isTranscript && !item.required) {\n\t\t\t\t\tret.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ret;\n\t\t};\n\t})\n\t/* Single filters */\n\n/*\n.filter('trustAsHtml', function($sce) {\n\treturn function(val) {\n\t\treturn $sce.trustAsHtml(val);\n\t};\n})\n*/\n.filter('highlightSubstring', function () {\n\t\treturn function (text, search) {\n\t\t\t// console.log(\"Search highlight\",text,search);\n\t\t\tif (!text) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (search || angular.isNumber(search)) {\n\t\t\t\treturn text.toString().replace(new RegExp(search.toString(), 'gi'), '<span class=\"ui-match\">$&</span>');\n\t\t\t} else {\n\t\t\t\treturn text;\n\t\t\t}\n\t\t};\n\t})\n\t.filter('pretty', function () {\n\t\treturn function (json) {\n\t\t\treturn JSON.stringify(json, undefined, 2);\n\t\t};\n\t})\n\t.filter('i18n', ['appState', function (appState) {\n\t\t// Used for plugin data only; other fields precalculate into display_foo.\n\t\t// let's see if this is a huge performance hit, if not maybe we'll skip the precalc...\n\t\treturn function (input) {\n\t\t\tif (!input) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\tif (typeof (input) === 'object') {\n\t\t\t\treturn input[appState.lang] || input.en || \"\";\n\t\t\t}\n\t\t\treturn input;\n\t\t};\n\t}])\n\t.filter('asBytes', function () {\n\t\t// quick + sloppy\n\t\treturn function (b) {\n\t\t\tif (!b) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\tvar kb = Math.floor(b / 1024);\n\t\t\tif (kb < 1024) {\n\t\t\t\treturn kb + \"Kb\";\n\t\t\t}\n\t\t\tvar mb = Math.floor(kb / 10.24) / 100;\n\t\t\treturn mb + \"Mb\";\n\t\t};\n\t})\n\t.filter('asPercent', function () {\n\t\treturn function (n) {\n\t\t\treturn isNaN(n) ? (Math.floor(n * 100)) + \"%\" : '0%';\n\t\t};\n\t})\n\t.filter('stripParams', function () {\n\t\treturn function (x) {\n\t\t\treturn x.substr(0, x.indexOf('?'));\n\t\t};\n\t})\n\t.filter('asTime', function () {\n\t\treturn function (t) {\n\t\t\tif (isNaN(t)) {\n\t\t\t\treturn \"0:00\";\n\t\t\t}\n\t\t\tif (t < 0) {\n\t\t\t\treturn \"0:00\";\n\t\t\t}\n\t\t\treturn Math.floor(t / 60) + \":\" + (\"0\" + Math.floor(t) % 60).slice(-2);\n\t\t};\n\t})\n\t.filter('alpha', function () {\n\t\t// To label ng-repeats by letter, use {{$index | alpha}}\n\t\treturn function (n) {\n\t\t\treturn 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')[n % 26];\n\t\t};\n\t})\n\t.filter('capitalize', function() {\n\t\treturn function(str) {\n\t\t\treturn !!str ? str.charAt(0).toUpperCase() + str.substr(1).toLocaleLowerCase() : '';\n\t\t};\n\t})\n\t.filter('vidsFromCustAdmins', function() {\n\t\t//assets is actually an object when it comes in.\n\t\treturn function(assets) {\n\t\t\tvar notVideos = [];\n\t\t\tangular.forEach(assets, function(asset) {\n\t\t\t\tif (!/video/.test(asset.content_type)) {\n\t\t\t\t\tnotVideos.push(asset);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn notVideos;\n\t\t};\n\t})\n  .filter('langDisplay', ['ittUtils', function(ittUtils) {\n    var _existy = ittUtils.existy;\n    var keys = {\n      'en': 'English',\n      'es': 'Spanish',\n      'zh': 'Chinese',\n      'pt': 'Portuguese',\n      'fr': 'French',\n      'de': 'German',\n      'it': 'Latin'\n    };\n    return function(code) {\n      if (_existy(code)) {\n        return keys[code];\n      }\n      return '';\n    };\n  }])\n  .filter('slugify', ['ittUtils', function(ittUtils) {\n    return function(str) {\n      if (ittUtils.existy(str)) {\n        return ittUtils.slugify(str);\n      }\n      return '';\n    };\n  }])\n  .filter('tagName', [() => {\n    const tagMap = {\n      [SOCIAL_IMAGE_SQUARE]: 'Square',\n      [SOCIAL_IMAGE_WIDE]: 'Wide'\n    };\n    return (str) => {\n      if (str && tagMap.hasOwnProperty(str)) {\n        return tagMap[str];\n      }\n    }\n  }]);\n\nexport default ittFilters;\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/filters/filters.ts","/**\n * Created by githop on 6/28/17.\n */\n\nexport interface IPlayerManager {\n  type: string;\n  getMetaProp(pid: string, prop: string): any;\n  setMetaProp(pid: string, prop: string, val: any): void;\n  getPlayerDiv(pid: string): string;\n  pauseOtherPlayers(pid: string): void;\n  registerStateChangeListener(stateChangeListener: (stateChangeEvent: object) => void): void;\n  unregisterStateChangeListener(cb: () => {}): void;\n  resetPlayerManager(): void;\n  renamePid(oldName: string, newName: string): void;\n  seedPlayerManager(id: string, mainPlayer: boolean, mediaSrcArr: string[]): any;\n  create(id: string): void;\n  pause(pid: string): void;\n  play(pid: string): void;\n  seekTo(pid: string, t: number): void;\n  getCurrentTime(pid: string): number | string | void;\n  getPlayerState(pid: string): string;\n  getBufferedPercent(pid: string): number;\n  toggleMute(pid: string): void;\n  setVolume(pid: string, v: number): void;\n  setSpeed(pid: string, speed: number): void;\n  freezeMetaProps(pid: string): void;\n  unFreezeMetaProps(pid: string): void;\n  stop(pid: string): void;\n  handleTimelineEnd(pid: string): void;\n}\n\nexport interface IMetaProps {\n  mainPlayer: boolean;\n  playerState: string | number;\n  div: string;\n  ready: boolean;\n  startAtTime: number;\n  hasResumedFromStartAt: boolean;\n  duration: number;\n  time: number;\n  hasBeenPlayed: boolean;\n  bufferedPercent: number;\n  timeMultiplier: number;\n  resetInProgress: boolean;\n  autoplay: boolean;\n  volume: number;\n  muted: boolean;\n}\n\nexport interface IMetaObj {\n  instance: any;\n  meta: IMetaProps;\n}\n\nexport const commonMetaProps: IMetaProps = {\n  mainPlayer: false,\n  playerState: '-1',\n  div: '',\n  ready: false,\n  startAtTime: 0,\n  hasResumedFromStartAt: false,\n  duration: 0,\n  time: 0,\n  hasBeenPlayed: false,\n  bufferedPercent: 0,\n  timeMultiplier: 1,\n  resetInProgress: false,\n  autoplay: false,\n  volume: 100,\n  muted: false\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/basePlayerManager/index.ts","import {IScriptLoader} from '../../interfaces';\n/**\n * Created by githop on 4/12/17.\n */\n\ndeclare const Wistia: object;\n\nexport class WistiaScriptLoader implements IScriptLoader {\n  private WISTIA_HREF = 'https://fast.wistia.com/assets/external/E-v1.js';\n\n  static $inject = ['$q'];\n  constructor(private $q: ng.IQService) {  }\n\n  load(assetId: string): ng.IPromise<{}> {\n    return this.$q((resolve) => {\n      if (typeof Wistia === 'undefined') {\n        this._appendScript(assetId, resolve);\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  private _appendScript(id, resolve): void {\n    const tag = <HTMLScriptElement> document.createElement('script');\n    tag.setAttribute('src', this.WISTIA_HREF);\n    tag.setAttribute('type', 'text/javascript');\n    tag.setAttribute('async', '');\n    tag.id = id;\n    const firstScriptTag: HTMLScriptElement = document.getElementsByTagName('script')[0];\n    firstScriptTag.parentElement.insertBefore(tag, firstScriptTag);\n    tag.onload = resolve;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/wistia/wistiaScriptLoader.ts","import {IParsedMediaSrcObj, IUrlSubService} from '../../interfaces';\n/**\n * Created by githop on 4/12/17.\n */\n\nexport interface IWistiaUrlservice extends IUrlSubService {\n  extractId(input: string): string;\n}\n\nexport class WistiaUrlService implements IWistiaUrlservice {\n  public type = 'wistia';\n  public mimetype = `video/x-${this.type}`;\n  private embedUrl = 'http://fast.wistia.net/embed/iframe/';\n  // private parser = new DOMParser();\n\n  getMimeType() {\n    return this.mimetype;\n  }\n\n  parseMediaSrc(mediaSrcArr) {\n    return mediaSrcArr.reduce((pmo: IParsedMediaSrcObj, mediaSrc: string) => {\n      if (WistiaUrlService.isWistia(mediaSrc)) {\n        pmo.mediaSrcArr.push(mediaSrc);\n      }\n      return pmo;\n    }, {type: this.type, mediaSrcArr: []});\n  }\n\n  //TODO: it looks like the embed code itself doesn't contain enough info to map it into a URL\n  // need to know provider_url aka domain\n  parseInput(input: string) {\n    if (WistiaUrlService.isWistia(input)) {\n      //not an embed code, must already be a URL\n      if (!WistiaUrlService.isEmbed(input)) {\n        return input;\n      }\n    }\n  }\n\n  extractId(input: string) {\n    //simple url input for now\n    if (WistiaUrlService.isWistia(input)) {\n      return WistiaUrlService.parseIdfromUrl(input);\n    }\n  }\n\n  canPlay(input) {\n    return WistiaUrlService.isWistia(input);\n  }\n\n  getOutgoingUrl(url, startAt) {\n    //use iframe embed url format.\n    const params = `?autoplay=true&time=${startAt}`;\n    const videoId = WistiaUrlService.parseIdfromUrl(url);\n    const u = `${videoId}${params}`;\n    return this.embedUrl + u;\n  }\n\n  // private parseIdFromEmbedCode(embedCode: string) {\n  //   const doc = this.parser.parseFromString(embedCode, 'text/html');\n  //   const classes = doc.getElementsByClassName('wistia_embed')[0].className;\n  //   return classes.split('_').pop().split('_').pop();\n  // }\n\n  //expand eventually to work with embed codes as well as URLs\n  private static isWistia(url: string) {\n    const re: RegExp = /https?:\\/\\/(.+)?(wistia\\.com|wi\\.st)\\/.*/;\n    return re.test(url);\n  }\n\n  private static isEmbed(input: string) {\n    return /<script/i.test(input);\n  }\n\n  private static parseIdfromUrl(url: string) {\n    //id should be last in the path\n    const path = url.split('/');\n    return path[path.length - 1];\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/wistia/wistiaUrlService.ts","import {IMetaProps, IWistiaMetaProps} from '../../interfaces';\nimport {existy, renameKey} from '../ittUtils';\nimport {commonMetaProps} from './index';\n\n/**\n * Created by githop on 4/26/17.\n */\n\n/*\n prior to v5.0.0 we simulated single inheritance with the\n playerManagerCommons service.\n\n With typescripe we can use actual inheritance to acheive the same\n pattern in a more straight forward manner.\n Eventually we could implement all the player managers as classes\n that extend this one.\n */\n\ninterface IPlayer {\n  instance: any;\n  meta: IMetaProps;\n}\n\nexport abstract class BasePlayerManager {\n  public type: string;\n  protected players: { [pid: string]: IPlayer } = {};\n  protected mainPlayerId: string;\n\n  protected statechangeCallbacks = [];\n\n  static createMetaObj(newProps: any): { instance: any, meta: any } {\n    const metaObj = {\n      instance: null,\n      meta: Object.assign({}, commonMetaProps)\n    };\n\n    Object.assign(commonMetaProps, newProps);\n    Object.assign(metaObj.meta, commonMetaProps);\n    return metaObj;\n  }\n\n  protected getPlayer(pid: string): IPlayer {\n    if (existy(this.players[pid])) {\n      return this.players[pid];\n    }\n  }\n\n  protected setInstance(pid: string, instance: any): void {\n    const player = this.getPlayer(pid);\n    if (existy(player)) {\n      player.instance = instance;\n    }\n  }\n\n  protected setPlayer(pid: string, val: any): void {\n    this.players[pid] = val;\n    // console.log('setPlayer', this.players[pid], pid);\n  }\n\n  //overload\n  getMetaProp<K extends keyof IWistiaMetaProps>(pid: string, prop: K): IWistiaMetaProps[K];\n  getMetaProp(pid: string, prop: any) {\n    const player = this.getPlayer(pid);\n    if (existy(player) && existy(player.meta)) {\n      return player.meta[prop];\n    }\n  }\n\n  setMetaProp<K extends keyof IWistiaMetaProps>(pid: string, prop: K, val: IWistiaMetaProps[K]): void;\n  setMetaProp(pid: string, prop: string, val: any): void {\n    if (existy(this.players[pid]) && this.players[pid].meta) {\n      try {\n        this.players[pid].meta[prop] = val;\n      } catch (e) {\n        console.log('catch read only error:', e, 'prop', prop, 'val', val);\n      }\n    }\n  }\n\n  getPlayerDiv(pid: string): string {\n    return this.getMetaProp(pid, 'div');\n  }\n\n  //must be overridden\n  getPlayerState(pid: string): string | number {\n    return '';\n  }\n  //must be overridden\n  pause(pid: string): void {\n    //noop;\n  }\n\n  stop(pid: string) {\n    //noop\n  }\n\n  freezeMetaProps(pid: string) { /* noop */ }\n\n  unFreezeMetaProps(pid: string) { /* noop */ }\n\n  pauseOtherPlayers(pid: string): void {\n    Object.keys(this.players).forEach((playerId: string) => {\n      if (playerId !== pid) {\n        const otherPlayerState = this.getPlayerState(playerId);\n        if (existy(otherPlayerState)) {\n          if (otherPlayerState === 'playing') {\n            this.pause(playerId);\n          }\n        }\n      }\n    });\n  }\n\n  registerStateChangeListener(cb: (statechangeEvent: object) => void): void {\n    const found = this.statechangeCallbacks.find(listener => {\n      return cb.toString() === listener.toString();\n    });\n\n    if (!found) {\n      this.statechangeCallbacks.push(cb);\n    }\n  }\n\n  unregisterStateChangeListener(cb: () => {}): void {\n    this.statechangeCallbacks = this.statechangeCallbacks.filter(fn => {\n      return fn.toString !== cb.toString();\n    });\n  }\n\n  renamePid(oldName: string, newName: string) {\n    renameKey(oldName, newName, this.players);\n  }\n\n  handleTimelineEnd(pid: string) {\n    //noop;\n  }\n\n  resetPlayerManager() {\n    Object.keys(this.players)\n      .forEach(key => {\n        this.destroyInstance(key, true);\n      });\n    this.players = {};\n  }\n\n  protected destroyInstance(pid: string, doRemove: boolean) {\n    if (!existy(doRemove)) {\n      doRemove = false;\n    }\n\n    this.destroySideEffects(pid);\n\n    if (doRemove === true) {\n      this.setPlayer(pid, {});\n    }\n  }\n\n  protected destroySideEffects(pid: string) {\n    //noop;\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/basePlayerManager/basePlayerManager.ts","/**\n * Created by githop on 4/14/17.\n */\n\n\n\ninterface IPlayerStates {\n  '-1': 'unstarted';\n  '0': 'ended';\n  '1': 'playing';\n  '2': 'paused';\n  '3': 'buffering';\n  '4': 'quality changed';\n  '5': 'video cued';\n  '6': 'player ready';\n}\n\nexport const PLAYERSTATES: IPlayerStates = {\n  '-1': 'unstarted',\n  '0': 'ended',\n  '1': 'playing',\n  '2': 'paused',\n  '3': 'buffering',\n  '5': 'video cued',\n  '4': 'quality changed',\n  '6': 'player ready'\n};\n\nexport const PLAYERSTATES_WORD = {\n  'unstarted': '-1',\n  'ended': '0',\n  'playing': '1',\n  'paused': '2',\n  'buffering': '3',\n  'quality changed': '4',\n  'video cued': '5',\n  'player ready': '6'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/playbackService/index.ts","import { BasePlayerManager } from '../basePlayerManager/basePlayerManager';\nimport {existy} from '../ittUtils';\n\nimport {IMetaProps, IPlayerManager, IScriptLoader, IWistiaUrlservice, Partial} from '../../interfaces';\nimport { PLAYERSTATES } from '../playbackService/index';\n/**\n * Created by githop on 4/12/17.\n */\n\ndeclare global {\n  interface Window { // tslint:disable-line\n    wistiaInitQueue: any[];\n  }\n}\n\nexport interface IWistiaMetaProps extends IMetaProps {\n  videoType: 'wistia';\n  lastVol: number;\n  bufferingInterval: any;\n  lastVideoTime: number;\n}\n\nconst WISTIA_PLAYERSTATES = {\n  'playing': 'playing',\n  'paused': 'paused',\n  'beforeplay': 'unstarted',\n  'ended': 'ended'\n};\n\nconst wistiaMetaProps: Partial<IWistiaMetaProps> = {\n  videoType: 'wistia',\n  lastVol: 100,\n  bufferingInterval: null,\n  lastVideoTime: 0\n};\n\nexport interface IWistiaPlayerManager extends IPlayerManager {\n  destroySideEffects(pid: string): any;\n}\n\n/*\n  wistia PM with inheritance\n */\nexport class WistiaPlayerManager extends BasePlayerManager implements IWistiaPlayerManager {\n  public type = 'wistia';\n  private _bufferCheckIntervalLength = 100;\n  static $inject = ['$interval', 'wistiaScriptLoader', 'wistiaUrlService'];\n  constructor(\n    private $interval: ng.IIntervalService,\n    private wistiaScriptLoader: IScriptLoader,\n    private wistiaUrlService: IWistiaUrlservice) {\n    super();\n  }\n\n  static setPlayerDiv(pid: string, wistiaId: string): string {\n    // use just CSS and no videoFoam to attempt to fix NP-1373\n    // https://wistia.com/doc/embedding#responsive_design_with_inline_embeds\n    return `\n<div class=\"wistia_responsive_padding\" style=\"padding:56.25% 0 0 0;position:relative;\">\n  <div class=\"wistia_responsive_wrapper\" style=\"height:100%;left:0;position:absolute;top:0;width:100%;\">\n    <div id=\"${pid}\" class=\"wistia_embed wistia_async_${wistiaId}\" style=\"height:100%;width:100%\">&nbsp;</div>\n  </div>\n</div>\n`;\n  }\n\n  static formatStateChangeEvent(state: string, emitterId: string): {emitterId: string, state: string} {\n    return {\n      emitterId,\n      state: PLAYERSTATES[state]\n    };\n  }\n\n  seedPlayerManager(id: string, mainPlayer: boolean, mediaSrcArr: string[]): void {\n    if (existy(this.getPlayer(id)) && this.getMetaProp(id, 'startAtTime') > 0) {\n      return;\n    }\n\n    if (mainPlayer) {\n      this.players = {};\n      this.mainPlayerId = id;\n    }\n\n    const wistiaId = this.wistiaUrlService.extractId(mediaSrcArr[0]);\n\n    const newProps = {\n      mainPlayer,\n      div: WistiaPlayerManager.setPlayerDiv(id, wistiaId),\n      wistiaId,\n      ...wistiaMetaProps\n    };\n\n    this.setPlayer(id, WistiaPlayerManager.createMetaObj(newProps));\n  }\n\n  create(pid: string): void {\n    this.createWpInstance(pid)\n      .then(_ => {\n        const threshold = 1.0;\n        const seekThreshold = 2.0;\n        // amount of seconds to allow the wistia time and the timeline to differ before emitting a buffering event.\n        const interval = this.$interval(() => {\n\n          const lastReportedTime = this.getMetaProp(pid, 'lastVideoTime');\n          const timelineTime = this.getMetaProp(pid, 'time');\n          const diff = timelineTime - lastReportedTime;\n          // only buffer if we are off by values between 1 and 2 to avoid accidentally triggering a buffering state\n          // when this interval fires in between seek starting and completing.\n          if (diff >= threshold && diff <= seekThreshold) {\n            this.setMetaProp(pid, 'playerState', 3);\n            this.setMetaProp(pid, 'time', lastReportedTime);\n            this.emitStateChange(pid);\n          }\n\n        }, this._bufferCheckIntervalLength);\n\n        this.setMetaProp(pid, 'bufferingInterval', interval);\n      });\n  }\n\n  getPlayerState(pid: string): string {\n    const instance = this.getInstance(pid);\n    if (instance) {\n      return WISTIA_PLAYERSTATES[instance.state()];\n    }\n  }\n\n  getBufferedPercent(pid: string): number {\n    /*\n     it doesn't appear that wistia has ways to get\n     info on buffered ranges, need to do more research.\n     */\n    return 0;\n  }\n\n  getCurrentTime(pid: string): number | string | void {\n    return this.invokeMethod(pid, 'time');\n  }\n\n  play(pid: string): void {\n    this.invokeMethod(pid, 'play');\n  }\n\n  pause(pid: string): void {\n    this.invokeMethod(pid, 'pause');\n  }\n\n  seekTo(pid: string, t: number): void {\n    this.invokeMethod(pid, 'time', t);\n  }\n\n  setSpeed(pid: string, rate: number) {\n    //noop\n    this.invokeMethod(pid, 'playbackRate', rate);\n  }\n\n  toggleMute(pid: string): void {\n    const isMuted = this.getMetaProp(pid, 'muted');\n    if (isMuted === false) {\n      this.setMetaProp(pid, 'lastVol', this.getMetaProp(pid, 'volume'));\n      this.setVolume(pid, 0);\n    } else {\n      this.setVolume(pid, this.getMetaProp(pid, 'lastVol'));\n    }\n\n    this.setMetaProp(pid, 'muted', !isMuted);\n  }\n\n  setVolume(pid: string, v: number): void {\n    this.invokeMethod(pid, 'volume', v / 100);\n    this.setMetaProp(pid, 'volume', v);\n  }\n\n  destroySideEffects(pid: string) {\n    //noop;\n    this.$interval.cancel(this.getMetaProp(pid, 'bufferingInterval'));\n  }\n\n  private invokeMethod(pid: string, method: string, val?: any): any {\n    const instance = this.getInstance(pid);\n    if (existy(instance)) {\n      try {\n        if (existy(val)) {\n          return instance[method](val);\n        } else {\n          return instance[method]();\n        }\n      } catch (e) {\n        console.log('error trying', method, 'with', instance[method], 'error:', e);\n      }\n    }\n  }\n\n  private getInstance(pid: string): any {\n    if (existy(this.getPlayer(pid)) && this.getMetaProp(pid, 'ready') === true) {\n      return this.getPlayer(pid).instance;\n    }\n  }\n\n  private createWpInstance(pid: string): ng.IPromise<void> {\n\n    const isEmbed = this.mainPlayerId !== pid;\n\n    const wistiaEmbedOptions = {\n      playbar: isEmbed,\n      videoFoam: false,\n      fullscreenButton: isEmbed,\n      controlsVisibleOnLoad: isEmbed,\n      playbackRateControl: isEmbed,\n      playButton: isEmbed,\n      settingsControl: isEmbed,\n      qualityControl: isEmbed,\n      smallPlayButton: isEmbed,\n      volumeControl: isEmbed\n    };\n    return this.wistiaScriptLoader.load(pid)\n      .then(_ =>  {\n        window.wistiaInitQueue = window.wistiaInitQueue || [];\n        window.wistiaInitQueue.push({\n          id: pid,\n          options: wistiaEmbedOptions,\n          onReady: (video) => this.onReady(pid, video)\n        });\n      });\n  }\n\n  private onReady(pid: string, wistiaInstance: any) {\n    this.setInstance(pid, wistiaInstance);\n    this.attachEventListeners(wistiaInstance, pid);\n    this.emitStateChange(pid, 6);\n    this.setMetaProp(pid, 'duration', wistiaInstance.duration());\n  }\n\n  private attachEventListeners(instance: any, pid: string) {\n    //arrow fn so 'this' is preserved\n    //in the final closure\n    const bindPid = (playerId) => {\n      return (fn, ...ev) => {\n        return fn.call(this, playerId, ...ev);\n      };\n    };\n\n    const boundPid = bindPid(pid);\n\n    const wistiaEvents = {\n      'play': (e) => boundPid(this.onPlay),\n      'pause': (e) => boundPid(this.onPause),\n      'seek': (currentTime, lastTime) => boundPid(this.onSeek, currentTime, lastTime),\n      'timechange': (e) => boundPid(this.onTimechange, e)\n    };\n\n    Object.entries(wistiaEvents).forEach(([key, val]) => {\n      instance.bind(key, val);\n    });\n  }\n\n  private onTimechange(pid, timechange) {\n    // check for drift and correct if necessary\n    const curTime = this.getMetaProp(pid, 'time');\n    this.setMetaProp(pid, 'lastVideoTime', timechange);\n\n    if (curTime > timechange) {\n      this.setMetaProp(pid, 'time', timechange);\n    }\n  }\n\n  private onSeek(pid: string, currentTime: number, lastTime: number): void {\n    const duration = this.getMetaProp(pid, 'duration');\n    const padding = 0.3;\n    this.setMetaProp(pid, 'time', currentTime);\n    this.setMetaProp(pid, 'lastVideoTime', currentTime);\n\n    // handle nextScene near end of episode\n    if (Math.floor(duration - currentTime) < padding) {\n      this.setMetaProp(pid, 'playerState', 0);\n      this.emitStateChange(pid);\n      return;\n    }\n\n  }\n\n  private onPlay(pid: string): void {\n    this.setMetaProp(pid, 'playerState', 1);\n    this.emitStateChange(pid);\n    if (pid !== this.mainPlayerId && this.getPlayerState(pid) !== 'unstarted') {\n      this.pauseOtherPlayers(pid);\n    }\n  }\n\n  private onPause(pid: string): void {\n    this.setMetaProp(pid, 'playerState', 2);\n    this.emitStateChange(pid);\n  }\n\n  private emitStateChange(pid: string, forceState?: number): void {\n    let state;\n\n    if (existy(forceState)) {\n      state = forceState;\n    } else {\n      state = this.getMetaProp(pid, 'playerState');\n    }\n\n    this.statechangeCallbacks.forEach(cb => {\n      cb(WistiaPlayerManager.formatStateChangeEvent(state, pid));\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/wistia/wistiaPlayerManager.ts","/**\n * Created by githop on 6/6/17.\n */\n\nexport interface IUploadData {\n  bytesSent: number;\n  bytesTotal: number;\n  percent: number;\n  name: string;\n}\n\nexport interface IUploadsService {\n  uploadTaggedFiles(fileLists: {file: FileList, tag: string}[], containerId: string): ng.IPromise<any>;\n  resetUploads(): void;\n}\n\n//so the upload progess state is not coupled to a component.\nexport class UploadsService implements IUploadsService {\n\n  // uploadsDisplay: IUploadData[];\n  uploadsDisplay = {\n    social_image_square: null,\n    social_image_wide: null\n  };\n  private uploadQueue: ng.IPromise<any>[] = [];\n\n  static $inject = ['$q', 'awsSvc'];\n  constructor(private $q: ng.IQService, private awsSvc) {\n\n  }\n\n  uploadTaggedFiles(fileLists: {file: FileList, tag: string}[], containerId: string): ng.IPromise<any> {\n\n    return this.$q((resolve, reject) => {\n      for (const { file, tag } of fileLists) {\n        this.uploadsDisplay[tag] = {\n          'bytesSent': 0,\n          'bytesTotal': 1,\n          'percent': 0,\n          'name': file[0].name\n        };\n\n        this.uploadQueue.push(this.uploadToAws(containerId, file, tag));\n      }\n\n      return this.$q.all(this.uploadQueue)\n        .then(data => resolve(data))\n        .catch(e => reject(e));\n    });\n\n  }\n\n  resetUploads(): void {\n    this.uploadsDisplay = {\n      social_image_square: null,\n      social_image_wide: null\n    };\n    this.uploadQueue = [];\n  }\n\n  private uploadToAws(containerId, fileList, tagType) {\n    return this.awsSvc.uploadContainerFiles(containerId, fileList, tagType)[0]\n      .then(asset => asset)\n      .catch(e => console.error('upload error', e))\n      .finally(null, (progress) => {\n        this.uploadsDisplay[tagType].bytesSent = progress.bytesSent;\n        this.uploadsDisplay[tagType].bytesTotal = progress.bytesTotal;\n        this.uploadsDisplay[tagType].percent = Math.ceil(progress.bytesSent / progress.bytesTotal * 100);\n      });\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/uploadsService.ts","import { ILinkStatus } from '../models';\nimport { ILinkValidFields, Partial, TUrlFieldContexts } from '../interfaces';\n\n/**\n * Created by githop on 5/2/17.\n */\nexport interface ILinkValidationMessage {\n  showInfo?: boolean;\n  message?: string;\n  doInfo?: boolean;\n  url?: string;\n}\n\nexport interface ILinkValidFields {\n  404: ILinkValidationMessage;\n  301: ILinkValidationMessage;\n  url: ILinkValidationMessage;\n  mixedContent: ILinkValidationMessage;\n  iframeHeaders: ILinkValidationMessage;\n  kaltura: ILinkValidationMessage | null;\n  youtube: ILinkValidationMessage | null;\n  html5: ILinkValidationMessage | null;\n  error: ILinkValidationMessage | null;\n}\n\nexport interface IXFrameOptsResult {\n  urlStatus: ILinkStatus;\n  canEmbed: boolean;\n  location?: string;\n  context?: TUrlFieldContexts;\n}\n\n//the object returned from the x_frame_options proxy\ninterface IXFrameOptsResponse {\n  x_frame_options: string | null;\n  content_security_policy: string | null;\n  location?: string;\n  err?: string;\n  response_code: number;\n}\n\n//validatedFields is a prop on the ittUrlField directive controller but any object\n//that implements the interface would work.\nexport interface IValidationDisplay {\n  validatedFields: Partial<ILinkValidFields>;\n}\n\nexport interface IValidationSvc {\n  checkXFrameOpts(url: string): ng.IPromise<IXFrameOptsResult>;\n  urlIsEmbeddable(url: string, cspOrXFrameHeader: any): boolean;\n  mixedContent(viewVal: string, displayObj: IValidationDisplay): boolean;\n  mixedContentUrl(url: string): boolean;\n  validateUrl(viewVal: string, displayObj: IValidationDisplay): boolean;\n  inspectHeadersAsync(viewVal: string,\n                      displayObj: IValidationDisplay,\n                      cachedResults?: ILinkStatus,\n                      context?: TUrlFieldContexts): ng.IPromise<IXFrameOptsResult>;\n}\n\nexport class ValidationService implements IValidationSvc {\n  static $inject = ['$http', '$location', '$q', 'authSvc', 'config', 'ittUtils', 'urlService'];\n\n  constructor(\n    private $http: ng.IHttpService,\n    private $location: ng.ILocationService,\n    private $q: ng.IQService,\n    private authSvc,\n    private config,\n    private ittUtils,\n    private urlService) {\n  }\n\n  static parseCSP(csp: string): object {\n    if (csp != null) {\n      return csp.split(';').reduce(\n        (result: object, directive: string) => {\n          const directiveSet = directive.trim().split(/\\s+/g);\n          const key = directiveSet.shift();\n          if (key) {\n            result[key] = directiveSet;\n          }\n          return result;\n        },\n        {}\n      );\n    }\n  }\n\n  checkXFrameOpts(url: string): ng.IPromise<IXFrameOptsResult> {\n    const encodedUrl = encodeURIComponent(url);\n    //HTTP methods could one day be implemented in a parent class.\n    return this.SANE_GET('/x_frame_options_proxy?url=' + encodedUrl)\n      .then((resp: IXFrameOptsResponse) => this.handleSuccess(resp))\n      .then((result: IXFrameOptsResponse) => this.canEmbed(result, url))\n      .catch(e => ValidationService.handleErrors(e));\n  }\n\n  urlIsEmbeddable(url: string, cspOrXFrameHeader: any): boolean {\n    const xFrameCanEmbed = this.xFrameHeaderCanEmbed(url, cspOrXFrameHeader.x_frame_options);\n    const cspCanEmbed = this.cspCanEmbed(url, cspOrXFrameHeader.content_security_policy);\n\n    return xFrameCanEmbed && cspCanEmbed;\n  }\n\n\n  mixedContent(viewVal: string, displayObj: IValidationDisplay): boolean {\n    if (this.mixedContentUrl(viewVal)) {\n      //mixed content detected!\n      displayObj.validatedFields['mixedContent'] = { message: 'Mixed Content Detected', showInfo: true };\n      return true;\n    } else {\n      displayObj.validatedFields['mixedContent'] = { message: '', showInfo: false };\n      return false;\n    }\n  }\n\n  mixedContentUrl(url: string): boolean {\n    return this.ittUtils.existy(url) && /^http:\\/\\//.test(url);\n  }\n\n  validateUrl(viewVal: string, displayObj: IValidationDisplay): boolean {\n    const isValidVideoUrl = this.urlService.isVideoUrl(viewVal)\n      || this.ittUtils.isValidURL(viewVal)\n      || ValidationService.emailOrPlaceholder(viewVal);\n\n    if (viewVal === '' && !ValidationService.emailOrPlaceholder(viewVal)) {\n      displayObj.validatedFields['url'] = { showInfo: true, message: 'Url cannot be blank' };\n      return false;\n    } else if (isValidVideoUrl) {\n      displayObj.validatedFields['url'] = { showInfo: false };\n      return true;\n    } else {\n      displayObj.validatedFields['url'] = { showInfo: true, message: viewVal + ' is not a valid URL' };\n      return false;\n    }\n  }\n\n  inspectHeadersAsync(viewVal: string,\n                      displayObj: IValidationDisplay,\n                      cachedResults?: ILinkStatus,\n                      context?: TUrlFieldContexts): ng.IPromise<IXFrameOptsResult> {\n    if (cachedResults != null) {\n      return this.$q((resolve) => {\n\n        const xFrameOptsObj: IXFrameOptsResult = {\n          canEmbed: this.urlIsEmbeddable(viewVal, cachedResults),\n          location: cachedResults.location,\n          urlStatus: {\n            content_security_policy: cachedResults.content_security_policy,\n            x_frame_options: cachedResults.x_frame_options,\n            response_code: cachedResults.response_code,\n            err: cachedResults.err\n          } as ILinkStatus\n        };\n\n        const obj = this.handleXframeOptsObj(viewVal, xFrameOptsObj, displayObj) as IXFrameOptsResult;\n        return resolve(obj);\n      });\n    }\n\n    //bail out if empty or link to youtube/kaltura/html5 video, mixed content, email or placeholder val\n    if (viewVal === '' || this.urlService.isVideoUrl(viewVal) || ValidationService.emailOrPlaceholder(viewVal)) {\n      return this.$q((resolve) => {\n        displayObj.validatedFields['iframeHeaders'] = { showInfo: false };\n        const stubXFOR: IXFrameOptsResult = {\n          canEmbed: true,\n          location: null,\n          urlStatus: {\n            content_security_policy: null, x_frame_options: null, response_code: null, err: null\n          } as ILinkStatus\n        };\n        if (this.urlService.checkUrl(viewVal).type === 'kaltura') {\n          stubXFOR.location = this.urlService.parseInput(viewVal);\n        }\n\n        return resolve(stubXFOR);\n      });\n    }\n\n    return this.checkXFrameOpts(viewVal)\n    //xFrameOptsObj will have at least x_frame_options field and could have response_code and location fields\n      .then(\n        (xFOResult: IXFrameOptsResult) => this.handleXframeOptsObj(viewVal, xFOResult, displayObj) as IXFrameOptsResult\n      );\n  }\n\n  private static emailOrPlaceholder(val: string): boolean {\n    return /mailto:/.test(val) || val === 'https://';\n  }\n\n  private static handleErrors(error) {\n    console.warn('xFrameOpts error:', error);\n    return { canEmbed: false };\n  }\n\n  private cspCanEmbed(url: string, csp: string): boolean {\n    //frame-ancestors: null -> true\n    //frame-ancestors: 'self' - url contains host domain -> true\n    //frame-ancestors: sources-list contains host domain -> true\n    //frame-ancestors: 'none' -> false\n\n    if (csp == null) {\n      return true;\n    }\n\n    const cspObj = ValidationService.parseCSP(csp);\n    const ancestorSourceList = cspObj['frame-ancestors'];\n\n    if (ancestorSourceList == null || ancestorSourceList.length === 0) {\n      return true;\n\n    } else {\n\n      const currentHost = this.$location.host();\n\n      //handle 'self', 'none' or a frame-ancestor list with only 1 member.\n      if (ancestorSourceList.length === 1) {\n        const onlyAncestor = ancestorSourceList[0];\n        //if CSP is self and the URL is our own, or the only frame-ancestor comes from our own\n        if ((onlyAncestor === '\\'self\\'' && url.includes(currentHost)) || onlyAncestor.includes(currentHost)) {\n          return true;\n        }\n\n        if (onlyAncestor === '\\'none\\'') {\n          return false;\n        }\n      }\n\n      //loop over list of sources\n      for (const source of ancestorSourceList) {\n        if (source.includes(currentHost)) {\n          return true;\n        }\n      }\n\n\n      return false;\n    }\n  }\n\n  private xFrameHeaderCanEmbed(url: string, header: string): boolean {\n    let canEmbed = false;\n    if (header == null || header === 'null') {\n      return true;\n    }\n\n    switch (true) {\n      case /SAMEORIGIN/i.test(header):\n        let currentOrigin = this.$location.host();\n        const parseInputUrl = document.createElement('a');\n        parseInputUrl.href = url;\n        //check our origin\n        if (currentOrigin === parseInputUrl.hostname) {\n          canEmbed = true;\n        }\n        break;\n      case /ALLOW-FROM/i.test(header):\n        //check if we're on the list\n        //split on comma to get CSV array of strings; e.g: [\"ALLOW-FROM: <url>\", \" ALLOW-FROM: <url>\", ...]\n        const xFrameArr = header.split(',');\n        currentOrigin = this.$location.host();\n        angular.forEach(xFrameArr, (i) => {\n          const url = i.trim().split(' ')[1];\n          const aElm = document.createElement('a');\n          aElm.href = url;\n          if (currentOrigin === aElm.hostname) {\n            canEmbed = true;\n          }\n        });\n        break;\n      case /DENY/i.test(header):\n        //do nothing\n        break;\n    }\n    return canEmbed;\n  }\n\n  private handleXframeOptsObj(\n    viewVal: string, XFOResult: IXFrameOptsResult, // tslint:disable-line\n    displayObj: IValidationDisplay): IXFrameOptsResult | ng.IPromise<'404'> {\n    let tipText = '';\n\n    if (this.ittUtils.existy(XFOResult.location)) {\n      tipText = viewVal + ' redirected to ' + XFOResult.location;\n      displayObj.validatedFields['301'] = {\n        showInfo: true,\n        message: tipText,\n        doInfo: true\n      };\n    }\n\n    if (this.ittUtils.existy(XFOResult.urlStatus.response_code) && XFOResult.urlStatus.response_code === 422) {\n      tipText = viewVal + ' cannot be found';\n      displayObj.validatedFields['404'] = { showInfo: true, message: tipText };\n      return this.$q.reject('404');\n    }\n\n    if (XFOResult.urlStatus.err != null && XFOResult.urlStatus.response_code !== 999) {\n\n      displayObj.validatedFields['iframeHeaders'] = {\n        showInfo: true,\n        message: viewVal + ' cannot be embedded: ' + XFOResult.urlStatus.err\n      };\n\n    } else if (!XFOResult.canEmbed && !this.mixedContentUrl(viewVal)) {\n      tipText = 'Embedded link template is disabled because ' + viewVal + ' does not allow iframing';\n      //we got redirected to resource that can't be embedded.\n      //merge the errors into one.\n      if (XFOResult.location) {\n        tipText += '. ' + displayObj.validatedFields['301'].message;\n        displayObj.validatedFields['301'] = {};\n      }\n      displayObj.validatedFields['iframeHeaders'] = { showInfo: true, message: tipText, doInfo: true };\n    } else {\n      displayObj.validatedFields['iframeHeaders'] = { showInfo: false };\n    }\n\n    return XFOResult;\n  }\n\n  private handleSuccess(result: IXFrameOptsResponse): IXFrameOptsResponse {\n    //result could have response_code, location, or x_frame_options fields.\n    //not null, so normalize string\n    if (this.ittUtils.existy(result.x_frame_options)) {\n      result.x_frame_options = result.x_frame_options.toUpperCase();\n    }\n    // console.log('x-frame-opts: ', result);\n    return result;\n  }\n\n  private canEmbed(result: IXFrameOptsResponse, url: string): IXFrameOptsResult {\n\n    const urlStatus: ILinkStatus = {\n      content_security_policy: result.content_security_policy,\n      x_frame_options: result.x_frame_options,\n      err: result.err,\n      response_code: result.response_code\n    };\n\n    const xFrameOptsObj: IXFrameOptsResult = Object.create(null);\n    const location = result.location;\n\n    if (result.response_code === 999) {\n      xFrameOptsObj.canEmbed = false;\n    } else {\n      xFrameOptsObj.canEmbed = this.urlIsEmbeddable(url, result);\n    }\n\n    Object.assign(xFrameOptsObj, { location }, { urlStatus });\n    return xFrameOptsObj;\n  }\n\n  private SANE_GET(path) {\n    return this.authSvc.authenticate()\n      .then(() => {\n        return this.$http.get(this.config.apiDataBaseUrl + path)\n          .then((resp) => {\n            return resp.data;\n          });\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/validation.svc.ts","/*\n There are two separate types of user activity to capture, which go to separate API endpoints.\n Some types must contain additional info in a \"data\" object:\n\n episode activity:\n episodeLoad\t\t\t\t\ttriggered immediately when episode is loaded\n episodeUnload        triggered immediately when episode is navigated away from.\n episodeEnd\t\t\t\t\ttriggered when user reaches end of episode\n play\t\t\t\t\t\t\t\ttriggered when user hits play\n pause\t\t\t\t\t\t\t\ttriggered when user hits pause\n seek\t\t\t\t\t\t\t\ttriggered whenever user changes the playhead position.\n seekFrom:\ttimestamp of origin\n method:\t\t\"scrubTimeline\", \"sceneMenu\", \"nextScene\", \"prevScene\", \"clickedOnEvent\".\n eventID:\tinclude if method was \"clickedOnEvent\"\n modeChange\t\t\t\t\ttriggered when episode is loaded (since default isn't always the same), and on user changes of mode\n mode: \"watch\",\"discover\",\"review\"\n playbackRateChange\ttriggered when user changes the playback speed\n playbackRate: 1\n stall\t\t\t\t\t\t\t\ttriggered when video playback stalls unintentionally\n lowBandwidth\t\t\t\ttriggered when we switch to a lower-bandwidth video stream due to too many stall events\n search (TODO)\t\t\t\t(search is incremental, so will have to think about how/when to capture this)\n\n event activity: captures interaction with specific transmedia items (\"events\").\n Different types of event can define their own interactions, but the core ones will be\n viewed\t\t\t\t\t\t\tplayer reached the event's start_time by any method\n interacted\t\t\t\t\tuser clicked a transmedia link, for example\n completed\t\t\t\t\t\tup to the transmedia item to define what constitutes \"completion\"\n question-answered\t\tfor quiz questions.  Data field should be {answer: 'answer text', correct: t/f}\n */\n\nexport interface IAnalyticsSvc {\n  captureEpisodeActivity(name: AnalyticType, data?): void;\n  captureEventActivity(name: AnalyticType, eventID, data?: IAnalyticData, force?): void;\n  forceCaptureEventActivityWithPromise(name: AnalyticType, eventID, data: IAnalyticData): ng.IPromise<void>;\n  captureEventActivityWithPromise?(name: AnalyticType, eventID, data): ng.IPromise<void>;\n  readEpisodeActivity(epId: string): ng.IPromise<any>;\n  readEventActivity(eventId, activityType): ng.IPromise<any>;\n  startPolling(): void;\n  stopPolling(): void;\n}\n\nimport {AppState} from '../appState';\n\ntype AnalyticType = 'episodeLoad' | 'episodeUnload' | 'play' | 'pause' | 'seek' | 'modeChange';\n\ninterface IAnalytic {\n  name: AnalyticType;\n  walltime: Date;\n  age?: any;\n  event_id?: string;\n  timestamp?: number;\n  data?: IAnalyticData;\n}\n\ninterface IAnalyticData {\n  method?: 'scrubTimeline' | 'sceneMenu' | 'nextScene' | 'prevScene' | 'clickedOnEvent';\n  mode?: 'discover' | 'review' | 'watch';\n  seekStart?: number;\n}\n\nexport class AnalyticsSvc implements IAnalyticsSvc {\n  private activityQueue: IAnalytic[] = [];\n  private pollInterval: any;\n  private pollLength: number = 10 * 1000;\n  static Name = 'analyticsSvc'; // tslint:disable-line\n  static $inject = ['$q', '$http', '$routeParams', '$interval', 'config', 'appState', 'playbackService'];\n\n  constructor(private $q: ng.IQService,\n              private $http: ng.IHttpService,\n              private $routeParams,\n              private $interval: ng.IIntervalService,\n              private config,\n              private appState: AppState,\n              private playbackService) {\n  }\n\n  startPolling() {\n    this.pollInterval = this.$interval(() => this.flushActivityQueue(), this.pollLength);\n  }\n\n  stopPolling() {\n    // send any pending metrics\n    this.flushActivityQueue();\n    this.$interval.cancel(this.pollInterval);\n  }\n\n  captureEpisodeActivity(name: AnalyticType, data?) {\n    if ((this.appState.user && this.appState.user._id) && (!this.appState.user.track_episode_metrics)) {\n      return;\n    }\n\n    const userActivity: IAnalytic = {\n      'name': name,\n      'walltime': new Date(),\n      //if metaProps time hasn't been set,\n      'timestamp': this.playbackService.getMetaProp('time') || 0 // TODO this is timeline time, we want episode time!\n    };\n\n    if (data) {\n      userActivity.data = data;\n    }\n\n    this.activityQueue.push(userActivity);\n  }\n\n  captureEventActivity(name: AnalyticType, eventID, data?, force?) {\n    if (!force) {\n      if (this.config.disableAnalytics || (this.appState.user._id && !this.appState.user.track_event_actions)) {\n        return;\n      }\n    }\n    if (data === undefined) {\n      console.warn('captureEventActivity called with no data for event ', eventID);\n    }\n    // console.log(data);\n    this.activityQueue.push({\n      'name': name,\n      'event_id': eventID,\n      'walltime': new Date(),\n      'data': data\n    });\n  }\n\n  readEpisodeActivity(epId) {\n    return this.$http.get(`${this.config.apiDataBaseURl}/v2/episodes/${epId}/episode_user_metrics`)\n      .then((respData) => respData)\n      .catch(err => console.log('error'));\n  }\n\n  readEventActivity(eventId, activityType) {\n    return this.$http.get(`${this.config.apiDataBaseUrl}/v2/events/${eventId}/event_user_actions`)\n      .then(resp => resp.data)\n      .then((respData: IAnalytic[]) => {\n        if (activityType) {\n          for (let i = 0; i < respData.length; i++) { // tslint:disable-line\n            const activity = respData[i];\n            if (activity.name === activityType) {\n              return true;\n            }\n          }\n        } else {\n          return respData;\n        }\n      });\n  }\n\n  forceCaptureEventActivityWithPromise(name, eventId, data) {\n    this.captureEventActivity(name, eventId, data, true);\n    return this.flushActivityQueue();\n  }\n\n  private flushActivityQueue(): ng.IPromise<any> {\n\n    return this.$q((resolve) => {\n\n      if (this.activityQueue.length === 0) {\n        return resolve('');\n      }\n\n      if (!this.appState.episodeId) {\n        resolve();\n      }\n\n      const actions = angular.copy(this.activityQueue);\n      this.activityQueue = [];\n\n      const now = new Date();\n      let episodeUserMetrics = [];\n      const eventUserActions = [];\n\n      angular.forEach(actions, (action) => {\n        action.age = (+now - +action.walltime) / 1000;\n        delete action.walltime;\n        if (action.event_id) {\n          eventUserActions.push(action);\n        } else {\n          episodeUserMetrics.push(action);\n        }\n      });\n      episodeUserMetrics = this.dejitter(episodeUserMetrics);\n\n      const posts = [];\n      if (eventUserActions.length > 0) {\n        const euaPath = this.config.apiDataBaseUrl + '/v2/episodes/' + this.appState.episodeId + '/event_user_actions';\n        posts.push(\n          this.$http.post(euaPath,\n            {\n              'event_user_actions': eventUserActions\n            })\n        );\n      }\n      if (episodeUserMetrics.length > 0) {\n        posts.push(this.$http.post(\n          this.config.apiDataBaseUrl + '/v2/episodes/' + this.appState.episodeId + '/episode_user_metrics',\n          {\n            'episode_user_metrics': episodeUserMetrics\n          })\n        );\n      }\n\n      console.log('flushing queue!', eventUserActions, episodeUserMetrics);\n\n      return this.$q.all(posts);\n    });\n  }\n\n  private dejitter(events) {\n    // Consolidate repeated seek events into one single seek event before sending to API.\n    // TODO prevent this happening in the first place :)\n    if (events.length === 0) {\n      return [];\n    }\n    const ret = [];\n    for (let i = 0; i < events.length - 1; i++) {\n      // if this event and the next one are both seek events, and this event's timestamp matches\n      // the next event's seekStart, skip this event and set the next event's seekStart to this one's.\n      // otherwise just put it into the queue.\n      const a = events[i];\n      const b = events[i + 1];\n      if (a.name === 'seek' && b.name === 'seek' &&\n        (a.timestamp === b.data.seekStart)) {\n        b.data.seekStart = a.data.seekStart;\n      } else {\n        ret.push(events[i]);\n      }\n    }\n    ret.push(events[events.length - 1]);\n    return ret;\n  }\n}\n/* tslint:disable */\n// analyticsSvc.$inject = ['$q', '$http', '$routeParams', '$interval', 'config', 'appState', 'playbackService'];\n// function analyticsSvc($q, $http, $routeParams, $interval, config, appState, playbackService) {\n//   // console.log('analyticsSvc factory');\n//   var svc = Object.create(null);\n//\n//   svc.activityQueue = []; // contains events not yet sent to the server.\n//\n//   var flusher = $interval(function () {\n//     svc.flushActivityQueue();\n//   }, 10000);\n//\n//   // don't try to capture when running from local data or if it's disabled in config:\n//   if ($routeParams.local || config.disableAnalytics) {\n//     // console.log(\"No analytics for local data; cancelling activity queue\");\n//     $interval.cancel(flusher);\n//   }\n//\n//   // for episode-related activity\n//   svc.captureEpisodeActivity = function (name, data) {\n//\n//     if (config.disableAnalytics) {\n//       return;\n//     }\n//\n//     if ((appState.user && appState.user._id) && (!appState.user.track_episode_metrics)) {\n//       return;\n//     }\n//\n//     const userActivity = {\n//       'name': name,\n//       'walltime': new Date(),\n//       //if metaProps time hasn't been set,\n//       'timestamp': playbackService.getMetaProp('time') || 0 // TODO this is timeline time, we want episode time!\n//     };\n//     if (data) {\n//       userActivity.data = data;\n//     }\n//\n//     svc.activityQueue.push(userActivity);\n//   };\n//\n//   // for transmedia-related activity\n//   svc.captureEventActivity = function (name, eventID, data, force?) {\n//     if (!force) {\n//       if (config.disableAnalytics || (appState.user._id && !appState.user.track_event_actions)) {\n//         return;\n//       }\n//     }\n//     if (data === undefined) {\n//       console.warn('captureEventActivity called with no data for event ', eventID);\n//     }\n//     // console.log(data);\n//     svc.activityQueue.push({\n//       'name': name,\n//       'event_id': eventID,\n//       'walltime': new Date(),\n//       'data': data\n//     });\n//   };\n//\n//   svc.forceCaptureEventActivityWithPromise = function (name, eventID, data) {\n//     //we know this is syncronous\n//     svc.captureEventActivity(name, eventID, data, true);\n//     return svc.flushActivityQueue(); //this is async, and returns a promise.\n//   };\n//   svc.captureEventActivityWithPromise = function (name, eventID, data) {\n//     //we know this is syncronous\n//     svc.captureEventActivity(name, eventID, data);\n//     return svc.flushActivityQueue(); //this is async, and returns a promise.\n//   };\n//\n//   // read from API:\n//   svc.readEpisodeActivity = function (epId) {\n//     // console.log(\"analyticsSvc readEpisodeActivity\");\n//     var defer = $q.defer();\n//     $http({\n//       method: 'GET',\n//       url: config.apiDataBaseUrl + '/v2/episodes/' + epId + '/episode_user_metrics'\n//     })\n//       .success(function (respData) {\n//         // console.log(\"read episode activity SUCCESS\", respData, respStatus, respHeaders);\n//         defer.resolve(respData);\n//       })\n//       .error(function () {\n//         // console.log(\"read episode activity ERROR\", respData, respStatus, respHeaders);\n//         defer.reject();\n//       });\n//     return defer.promise;\n//   };\n//\n//   // if activityType is omitted, returns all user data for that event id\n//   // if it's included, returns true if the user has at least once triggered that activityType, false if not\n//   svc.readEventActivity = function (eventId, activityType) {\n//     // console.log(\"analyticsSvc.readEventActivity\", \"eventId\", \"activityType\");\n//     var defer = $q.defer();\n//     $http({\n//       method: 'GET',\n//       url: config.apiDataBaseUrl + '/v2/events/' + eventId + '/event_user_actions'\n//     })\n//       .success(function (respData) {\n//         // console.log(\"read event activity SUCCESS\", respData, respStatus, respHeaders);\n//         if (activityType) {\n//           var matchedType = false;\n//           for (var i = 0; i < respData.length; i++) {\n//             var activity = respData[i];\n//             if (activity.name === activityType) {\n//               matchedType = true;\n//             }\n//           }\n//           defer.resolve(matchedType);\n//         } else {\n//           // no activityType specified so return everything:\n//           defer.resolve(respData);\n//         }\n//       })\n//       .error(function () {\n//         // console.log(\"read event activity ERROR\", respData, respStatus, respHeaders);\n//         defer.reject();\n//       });\n//     return defer.promise;\n//   };\n//\n//   svc.flushActivityQueue = function () {\n//     var defer = $q.defer();\n//     if (svc.activityQueue.length === 0) {\n//       defer.resolve('');\n//     }\n//     if (!appState.episodeId) {\n//       defer.resolve(); // iOS with ?t= param is trying to post metrics before it has an episode ID. TODO figure out wtf is causing that...\n//     }\n//\n//     var actions = angular.copy(svc.activityQueue);\n//     svc.activityQueue = [];\n//\n//     var now = new Date();\n//     var episodeUserMetrics = [];\n//     var eventUserActions = [];\n//\n//     angular.forEach(actions, function (action) {\n//       action.age = (now - action.walltime) / 1000;\n//       delete action.walltime;\n//       if (action.event_id) {\n//         eventUserActions.push(action);\n//       } else {\n//         episodeUserMetrics.push(action);\n//       }\n//     });\n//     episodeUserMetrics = svc.dejitter(episodeUserMetrics);\n//\n//     var posts = [];\n//     if (eventUserActions.length > 0) {\n//       posts.push($http.post(config.apiDataBaseUrl + '/v2/episodes/' + appState.episodeId + '/event_user_actions', {\n//         'event_user_actions': eventUserActions\n//       }));\n//     }\n//     if (episodeUserMetrics.length > 0) {\n//       posts.push($http.post(config.apiDataBaseUrl + '/v2/episodes/' + appState.episodeId + '/episode_user_metrics', {\n//         'episode_user_metrics': episodeUserMetrics\n//       }));\n//     }\n//     $q.all(posts).then(function () {\n//       defer.resolve();\n//     });\n//\n//     return defer.promise;\n//   };\n//\n//   svc.dejitter = function (events) {\n//     // Consolidate repeated seek events into one single seek event before sending to API.\n//     // TODO prevent this happening in the first place :)\n//     if (events.length === 0) {\n//       return [];\n//     }\n//     var ret = [];\n//     for (var i = 0; i < events.length - 1; i++) {\n//       // if this event and the next one are both seek events, and this event's timestamp matches\n//       // the next event's seekStart, skip this event and set the next event's seekStart to this one's.\n//       // otherwise just put it into the queue.\n//       var a = events[i];\n//       var b = events[i + 1];\n//       if (a.name === 'seek' && b.name === 'seek' &&\n//         (a.timestamp === b.data.seekStart)) {\n//         b.data.seekStart = a.data.seekStart;\n//       } else {\n//         ret.push(events[i]);\n//       }\n//     }\n//     ret.push(events[events.length - 1]);\n//     return ret;\n//   };\n//\n//   return svc;\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/analyticsSvc/analyticsSvc.ts","/**\n * Created by githop on 3/30/17.\n */\n\nimport 'angular';\n\nimport {AppState} from './appState';\nimport authSvc from './authSvc/authSvc';\nimport awsSvc from './awsSvc';\nimport config from './config';\nimport dataSvc from './dataSvc/dataSvc';\nimport errorSvc from './errorSvc';\nimport imageResize from './imageResizeSvc';\nimport {ittUtils} from './ittUtils';\nimport mockSvc from './mockSvc';\nimport modelSvc from './modelSvc/modelSvc';\nimport playbackService from './playbackService/playbackService';\nimport questionAnswersSvc from './questionAnswersSvc';\nimport recursionHelper from './recursionHelper';\nimport selectService from './selectService';\nimport timelineSvc from './timelineSvc/timelineSvc';\nimport urlService from './urlService';\nimport playerManagerCommons from './basePlayerManager/playerManagerCommons';\nimport html5PlayerManager from './html5/html5PlayerManager.svc';\nimport html5UrlService from './html5/html5UrlService';\nimport kalturaPlayerManager from './kaltura/kalturaPlayerManager';\nimport kalturaScriptLoader from './kaltura/kalturaScriptLoader';\nimport kalturaUrlService from './kaltura/kalturaUrlService';\nimport youTubePlayerManager from './youtube/YouTubePlayerManager.svc';\nimport YTScriptLoader from './youtube/youtubeScriptLoader';\nimport youtubeUrlService from './youtube/youtubeUrlService';\nimport {\n  WistiaPlayerManager,\n  WistiaScriptLoader,\n  WistiaUrlService\n} from './wistia/index';\n\nimport {UploadsService} from './uploadsService';\nimport {ValidationService} from './validation.svc';\nimport {AnalyticsSvc} from './analyticsSvc/analyticsSvc';\n\nlet servicesModule = angular.module('itt.services', [])\n  .service('appState', AppState)\n  .factory('authSvc', authSvc)\n  .factory('awsSvc', awsSvc)\n  .factory('config', config)\n  .factory('dataSvc', dataSvc)\n  .factory('errorSvc', errorSvc)\n  .factory('imageResize', imageResize)\n  .factory('ittUtils', ittUtils)\n  .factory('mockSvc', mockSvc)\n  .factory('modelSvc', modelSvc)\n  .factory('playbackService', playbackService)\n  .factory('questionAnswersSvc', questionAnswersSvc)\n  .factory('recursionHelper', recursionHelper)\n  .factory('selectService', selectService)\n  .factory('timelineSvc', timelineSvc)\n  .factory('urlService', urlService)\n  .factory('playerManagerCommons', playerManagerCommons)\n  .factory('html5PlayerManager', html5PlayerManager)\n  .factory('html5UrlService', html5UrlService)\n  .factory('kalturaPlayerManager', kalturaPlayerManager)\n  .factory('kalturaScriptLoader', kalturaScriptLoader)\n  .factory('kalturaUrlService', kalturaUrlService)\n  .factory('youTubePlayerManager', youTubePlayerManager)\n  .factory('YTScriptLoader', YTScriptLoader)\n  .factory('youtubeUrlService', youtubeUrlService)\n  .service('wistiaUrlService', WistiaUrlService)\n  .service('wistiaPlayerManager', WistiaPlayerManager)\n  .service('wistiaScriptLoader', WistiaScriptLoader)\n  .service('analyticsSvc', AnalyticsSvc)\n  .service('validationSvc', ValidationService)\n  .service('uploadsService', UploadsService);\n\nexport default servicesModule;\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/services/services.module.ts","import { IModelSvc, Partial } from '../interfaces';\nimport { IDataSvc } from '../services/dataSvc/dataSvc';\nimport { existy } from '../services/ittUtils';\n\n/**\n * Created by githop on 1/31/17.\n */\n\nconst TEMPLATE = `\n<div class=\"field\">\n  <div class=\"label\">Batch Upload Transcripts\n  </div>\n  <div class=\"input\">\n    <div ng-if=\"!$ctrl.showUploader\">\n      <span><button ng-click=\"$ctrl.showUploader = true\">Batch Upload Transcripts</button></span>\n    </div>\n\n\n    <itt-asset-uploader\n      ng-if=\"$ctrl.showUploader\"\n      episode-id=\"{{$ctrl.episodeId}}\"\n      mime-types=\"{{$ctrl.mimes}}\"\n      on-filedrop=\"$ctrl.handleTranscriptFiles(data)\"\n      file-receive=\"$ctrl.transcripts\"\n      callback=\"$ctrl.onUploadComplete()\">\n    </itt-asset-uploader>\n\n    <np-modal\n      wrapper-class=\"responsive-modal__wrapper\"\n      modal-class=\"responsive-modal__content\"\n      ng-if=\"$ctrl.showOptions\">\n      <div class=\"smart-sentences__wrapper\">\n        <div><p>\n          Thank you for using this new feature currently in Beta! Are you sure you want to proceed? Once saved,\n          transcript entries must be individually edited or deleted. This page will automatically refresh after\n          transcripts have successfully uploaded.</p>\n        </div>\n        <div class=\"smart-sentences__input\">\n          <div>\n            <input class=\"smart-sentences__input\" id=\"groupParam\" type=\"checkbox\" ng-model=\"$ctrl.selectedParam\"\n                   ng-false-value=\"'none'\"\n                   ng-true-value=\"'group_into_sentences'\"/>\n          </div>\n          <div>\n            <label class=\"smart-sentences__input\"\n                   for=\"groupParam\">Group transcript segments into complete sentences (recommended for closed caption\n              transcripts)</label>\n          </div>\n        </div>\n        <div>\n          <button ng-click=\"$ctrl.commenseUpload()\">upload transcripts</button>\n          <button ng-click=\"$ctrl.cancelUpload()\">cancel</button>\n        </div>\n      </div>\n\n    </np-modal>\n  </div>\n</div>`;\n\nexport const TRANSCRIPT_UPLOAD = 'TRANSCRIPT_UPLOAD';\ninterface ITranscriptPayload {\n  payload: {\n    type: 'TRANSCRIPT_UPLOAD';\n    promises: ng.IPromise<any>;\n    files: FileList;\n  };\n}\n\nclass UploadTranscriptsController implements ng.IComponentController {\n  mimes: any;\n  episodeId: string;\n  showOptions: boolean = false;\n  showUploader: boolean = false;\n  selectedParam: string = 'none';\n  maxDuration: number = null;\n  transcripts: Partial<ITranscriptPayload> = {};\n  private _maxDurParam: string = 'max_subtitle_duration';\n  private files: FileList | null;\n  static $inject = ['MIMES', 'modelSvc', 'dataSvc', 'timelineSvc'];\n  constructor(\n    public MIMES,\n    public modelSvc: IModelSvc,\n    public dataSvc: IDataSvc,\n    public timelineSvc) {\n\n  }\n\n  $onInit() {\n    this.mimes = this.MIMES.transcripts;\n  }\n\n  cancelUpload() {\n    this.files = null;\n    this.showUploader = false;\n    this.showOptions = false;\n  }\n\n  handleTranscriptFiles(data: FileList): void {\n    this.showOptions = true;\n    this.files = data;\n  }\n\n  commenseUpload() {\n    const params = this.formatParams();\n    const files = this.files;\n    const promises = this._handleTranscripts(this.episodeId, files[0], params);\n    this.transcripts = {\n      payload: {\n        promises,\n        files,\n        type: TRANSCRIPT_UPLOAD\n      }\n    };\n  }\n\n  onUploadComplete() {\n    //to reset the component;\n    this.cancelUpload();\n    window.location.reload();\n  }\n\n  formatParams() {\n    const optionalParams = {};\n    if (this.selectedParam !== 'none') {\n      optionalParams[this.selectedParam] = true;\n    }\n\n    if (existy(this.maxDuration)) {\n      optionalParams[this._maxDurParam] = this.maxDuration;\n    }\n\n    return optionalParams;\n  }\n\n  private _handleTranscripts(episodeId, postData, params) {\n    const fd = new FormData();\n    fd.append('subtitles', postData);\n    return this.dataSvc.batchUploadTranscripts(episodeId, fd, params);\n  }\n\n}\n\nexport class UploadTranscripts implements ng.IComponentOptions {\n  bindings: any = {\n    episodeId: '@'\n  };\n  template: string = TEMPLATE;\n  controller = UploadTranscriptsController;\n  static Name: string = 'ittUploadTranscripts'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittUploadTranscriptsField.ts","import {IModelSvc, IDataSvc} from '../interfaces';\nimport {TRANSCRIPT_UPLOAD} from './ittUploadTranscriptsField';\n\ninterface AssetUploaderBindings {\n  containerId?: string;\n  episodeId?: string;\n  callback?: (data: any) => any;\n  onFiledrop?: (data: any) => any;\n  fileReceive?: any;\n  mimeTypes: string;\n  instructions?: string;\n  errorText?: string;\n  multiple?: boolean;\n}\n\nclass AssetUploaderController implements ng.IComponentController, AssetUploaderBindings {\n  //bindings\n  containerId: string;\n  episodeId: string;\n  callback: (data: any) => any;\n  onFiledrop?: (data: any) => { data: FileList };\n  fileReceive?: any;\n  mimeTypes: string;\n  instructions: string | undefined;\n  errorText: string;\n  multiple: boolean = false;\n  //props\n  uploadsinprogress = 0;\n  paused: boolean = false;\n  errormessage: string;\n  uploadStatus = [];\n  uploads = [];\n  manPage: string;\n  private droptarget: JQuery;\n  private fileinput: JQuery;\n  private mimeTypesArr: string[];\n  static $inject = ['$timeout', '$element', 'awsSvc', 'appState', 'modelSvc', 'dataSvc'];\n\n  constructor(public $timeout: ng.ITimeoutService,\n              public $element,\n              public awsSvc,\n              public appState,\n              public modelSvc: IModelSvc,\n              public dataSvc: IDataSvc) {\n  }\n\n  $onInit() {\n    if (this.instructions === undefined) {\n      this.manPage = 'We support uploads of most common file formats, including .doc, .docx, .jpeg, .jpg, .pdf, .png, .ppt, .pptx, .rtf, .txt, and .zip. ';\n    } else {\n      this.manPage = this.instructions;\n    }\n\n    if (this.mimeTypes == null) {\n      //allow basically doc, image, or video.\n      this.mimeTypesArr = ['application/*', 'image/*', 'video/*', 'text/*', 'audio/*', 'model/*'];\n    } else {\n      this.mimeTypesArr = (<string>this.mimeTypes).split(',');\n    }\n\n    if (this.errorText === undefined) {\n      this.errorText = 'Whoops! You may want to try that again!';\n    }\n\n    //normalize passed in params\n    this.mimeTypesArr = this.mimeTypesArr.map(m => m.trim());\n  }\n\n  $postLink() {\n    this.$timeout(() => { // need to wait for the DOM\n      this.droptarget = this.$element.find('.uploadDropTarget');\n      this.fileinput = this.$element.find('.uploadFileInput');\n      this.uploadsinprogress = 0;\n      this.droptarget[0].addEventListener('drop', (ev) => this.handleDrop(ev));\n      this.droptarget[0].addEventListener('dragover', (ev) => this.handleDragOver(ev));\n      this.droptarget[0].addEventListener('dragenter', (ev) => this.handleDragEnter(ev));\n      this.droptarget[0].addEventListener('dragleave', (ev) => this.handleDragLeave(ev));\n    });\n  }\n\n  $onChanges(changesObj) {\n    if (changesObj.fileReceive) {\n      const { fileReceive: { currentValue } } = changesObj;\n      const { payload } = currentValue;\n      if (payload != null) {\n        switch (payload.type) {\n          case TRANSCRIPT_UPLOAD:\n            const {promises, files} = payload;\n            this.commenseUploads(files, promises);\n            break;\n        }\n      }\n    }\n  }\n\n  //pause and resume and cancel are currently broken on story prior to refactoring into component...\n  pauseUpload() {\n    this.awsSvc.pauseUpload();\n    this.paused = true;\n  };\n\n  resumeUpload() {\n    this.awsSvc.resumeUpload();\n    this.paused = false;\n  };\n\n  cancelUpload() {\n    this.awsSvc.cancelUpload();\n  };\n\n  private handleUploads(files: FileList) {\n    if (this.multiple) {\n      if (files.length > 1 || this.uploads.length > 0) {\n        this.errormessage = 'You may only upload one file at a time here.';\n        return false;\n      }\n    }\n\n    if (!this.checkMimeType(files)) {\n      this.errormessage = this.errorText;\n      return;\n    }\n\n    //if optional onFiledrop attr is used,\n    //emit FileList to parent component and bail\n    if (this.onFiledrop) {\n      this.onFiledrop({data: files});\n      return;\n    }\n\n    this.commenseUploads(files);\n  }\n\n  private commenseUploads(files, data?) {\n    const {oldstack, newstack} = this.setupUploadDisplay(files, data);\n    this.processUploads(oldstack, newstack, files);\n  }\n\n  private setupUploadDisplay(files, data?) {\n    let oldstack = this.uploads.length;\n    let newstack = this.uploads.length + files.length;\n    this.uploadsinprogress = this.uploadsinprogress + files.length;\n\n    this.uploadStatus.push({\n      'bytesSent': 0,\n      'bytesTotal': 1,\n      'percent': 0,\n      'name': files[0].name\n    });\n\n    if (this.containerId) {\n      this.uploads = this.uploads.concat(this.awsSvc.uploadContainerFiles(this.containerId, files));\n    } else if (this.episodeId) {\n      this.uploads = this.uploads.concat(data);\n    } else {\n      this.uploads = this.uploads.concat(this.awsSvc.uploadUserFiles(this.appState.user._id, files));\n    }\n\n    return {oldstack, newstack};\n  }\n\n  private checkMimeType(files): boolean {\n    let acceptMimeTypes = false;\n    //because fileList object is not iterable, convert it to an array for .forEach to work\n    Array.from(files).forEach((file: File) => {\n      let fileType = file.type;\n\n      if (this.episodeId) {\n        let ext = file.name.match(/(vtt|srt)/);\n        if (ext && ext.length) {\n          fileType = 'text/' + ext[0];\n        }\n      }\n\n      this.mimeTypesArr.forEach((m: string) => {\n        const paramStrEndsWithStar = AssetUploaderController.strEndsWith(m, '*');\n        if (paramStrEndsWithStar) {\n          const mimeTypeUntilWildcard = m.slice(0, -1);\n          const applicationTypesMatch = AssetUploaderController.strStartsWith(fileType, mimeTypeUntilWildcard);\n          if (applicationTypesMatch) {\n            acceptMimeTypes = true;\n          }\n        } else {\n          if (fileType === m) {\n            acceptMimeTypes = true;\n          }\n        }\n        this.errorText = fileType + ' uploads are not allowed here.';\n      });\n    });\n    return acceptMimeTypes;\n  }\n\n  private processUploads(oldstack, newstack, files) {\n    for (let i = oldstack; i < newstack; i++) {\n      ((i) => { // closure for i\n        this.uploadStatus[i] = {\n          'bytesSent': 0,\n          'bytesTotal': 1,\n          'percent': 0,\n          'name': files[i - oldstack].name\n        };\n\n        this.uploads[i]\n          .then((data) => {\n            if (this.episodeId && this.callback) {\n              this.callback({data: data});\n              this.uploadStatus[i].done = true;\n              this.oneDone();\n              return;\n            }\n\n            this.modelSvc.cache('asset', data.file);\n            if (this.callback) {\n              this.callback({data: data.file._id});\n            }\n            this.uploadStatus[i].done = true;\n            this.oneDone();\n          })\n          .catch(error => {\n            this.uploadStatus[i].error = error;\n          })\n          //second arg $q finally is 'nofify' to handle updaing upload progress\n          .finally(null, update => {\n            this.uploadStatus[i].bytesSent = update.bytesSent;\n            this.uploadStatus[i].bytesTotal = update.bytesTotal;\n            this.uploadStatus[i].percent = Math.ceil(update.bytesSent / update.bytesTotal * 100);\n          });\n      })(i);\n    }\n  }\n\n  private oneDone() {\n    this.uploadsinprogress = this.uploadsinprogress - 1;\n    if (this.uploadsinprogress === 0) {\n      this.fileinput.value = '';\n      this.paused = false;\n    }\n  };\n\n  private handleDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.handleDragLeave(e);\n    this.handleUploads(e.dataTransfer.files);\n  };\n\n  private handleDragOver(e) {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    this.handleDragEnter(e);\n    return false;\n  };\n\n  private handleDragEnter(e) {\n    this.droptarget.addClass('droppable');\n  };\n\n  private handleDragLeave(e) {\n    this.droptarget.removeClass('droppable');\n  };\n\n  private static strStartsWith(str, prefix) {\n    return str.indexOf(prefix) === 0;\n  }\n\n  private static strEndsWith(str, match) {\n    return str.substring(str.length - match.length, str.length) === match;\n  }\n\n}\n\nexport class AssetUploader implements ng.IComponentOptions {\n  static Name: string = 'ittAssetUploader';\n  bindings: any = {\n    containerId: '@?', // If no container ID is supplied, the uploaded asset(s) will be placed in user space instead.\n    episodeId: '@?', //for uploading transcripts\n    callback: '&?', // function that will be called for each uploaded file (with the newly cretaed asset's ID)\n    onFiledrop: '&?',\n    fileReceive: '<?',\n    mimeTypes: '@?',\n    instructions: '@?',\n    errorText: '@?',\n    multiple: '<?'\n  };\n  templateUrl: string = 'templates/producer/asset-uploader.html';\n  controller: ng.IComponentController = AssetUploaderController;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittAssetUploader.ts","/**\n * Created by githop on 3/22/17.\n */\n\nconst TEMPLATE = `\n<np-tooltip tip-text=\"{{$ctrl.tipText}}\" ng-click=\"$ctrl.bubbleEvent($event)\">\n   <a class=\"icon__button\" ng-class=\"$ctrl.light ? 'button__clipboard--light' : 'button__clipboard'\"></a>\n</np-tooltip>\n`;\n\ninterface IClipboardBindings extends ng.IComponentController {\n  sourceText: string;\n  tipText?: string;\n  light?: boolean;\n  customNotice?: boolean;\n  onCopy: ($event: { $event: ng.IAngularEvent }) => { $event: ng.IAngularEvent };\n}\n\nclass ClipboardController implements IClipboardBindings {\n  sourceText: string;\n  tipText?: string;\n  light?: boolean;\n  customNotice?: boolean;\n  onCopy: ($event: { $event: ng.IAngularEvent }) => { $event: ng.IAngularEvent };\n  //\n  private _defaultText: string;\n  static $inject = ['$timeout'];\n  constructor(private $timeout: ng.ITimeoutService) {\n\n  }\n\n  static copyText(text: string) {\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.setSelectionRange(0, textArea.value.length);\n    document.execCommand('copy');\n    document.body.removeChild(textArea);\n  }\n\n  $onInit() {\n    if (this.tipText == null) {\n      this.tipText = 'Click to copy URL';\n    }\n    this._defaultText = this.tipText;\n  }\n\n  bubbleEvent($event: ng.IAngularEvent) {\n    ClipboardController.copyText(this.sourceText);\n    this.onCopy({ $event });\n    if (this.customNotice == null) {\n      this.tipText = 'Copied';\n      this.$timeout(\n        () => {\n          this.tipText = this._defaultText;\n        },\n        1500\n      );\n    }\n  }\n\n}\n\ninterface IComponentBindings {\n  [binding: string]: '<' | '<?' | '&' | '&?' | '@' | '@?' | '=' | '=?';\n}\n\nexport class Clipboard implements ng.IComponentOptions {\n  transclude = true;\n  bindings: IComponentBindings = {\n    sourceText: '@',\n    tipText: '@?',\n    light: '<?',\n    customNotice: '<?',\n    onCopy: '&'\n  };\n  template: string = TEMPLATE;\n  controller = ClipboardController;\n  static Name: string = 'npClipboard'; // tslint:disable-line\n}\n\n// ittClipboard.$inject = ['ittUtils'];\n//\n// export default function ittClipboard(ittUtils) {\n//   return {\n//     restrict: 'EA',\n//     transclude: true,\n//     template: `\n//     <np-tooltip tip-text=\"{{$ctrl.tipText}}\" ng-click=\"$ctrl.bubbleEvent($event)\">\n//        <a class=\"icon__button\" ng-class=\"$ctrl.light ? 'button__clipboard--light' : 'button__clipboard'\"></a>\n//       </np-tooltip>\n//     `,\n//     scope: {\n//       sourceText: '@',\n//       tipText: '@?',\n//       onCopy: '&',\n//       light: '<?',\n//       customNotice: '<?'\n//     },\n//     controller: [function () {\n//       var ctrl = this;\n//       var _ngTimeout = ittUtils.ngTimeout;\n//       var _defaultText = ctrl.tipText || 'Click to copy URL';\n//       angular.extend(ctrl, {\n//         tipText: _defaultText,\n//         bubbleEvent: bubbleEvent\n//       });\n//\n//       function bubbleEvent($event) {\n//         copyText(ctrl.sourceText);\n//         ctrl.onCopy({$event: $event});\n//         if (ctrl.customNotice == null) {\n//           ctrl.tipText = 'Copied!';\n//           _ngTimeout(function () {\n//             ctrl.tipText = _defaultText;\n//           }, 1500);\n//         }\n//       }\n//\n//       function copyText(text) {\n//         var textArea = document.createElement('textarea');\n//         textArea.value = text;\n//         document.body.appendChild(textArea);\n//         textArea.focus();\n//         textArea.setSelectionRange(0, textArea.value.length);\n//         document.execCommand('copy');\n//         document.body.removeChild(textArea);\n//       }\n//\n//     }],\n//     controllerAs: '$ctrl',\n//     bindToController: true\n//   };\n// }\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittClipboard.ts","/* For admin screen episode list */\nimport { createInstance, IContainer, ICustomer, INarrative } from '../models';\nimport { IDataSvc, IModelSvc, IEpisodeEditService } from '../interfaces';\nimport { capitalize, existy, omit, pick } from '../services/ittUtils';\n\ninterface IContainerBindings extends ng.IComponentController {\n  container: IContainer;\n  depth: Number;\n  onContainerClick: ($ev: { $container: { container: IContainer, bool: boolean } }) => ({\n    $ev: { $container: { container: IContainer, bool: boolean }\n  }});\n  onContainerAdd: ($ev: { $container: IContainer }) => ({ $container: IContainer });\n  onContainerRemove: ($ev: { $container: IContainer }) => ({ $container: IContainer });\n}\n\nclass ContainerController implements IContainerBindings {\n  container: IContainer;\n  depth: number;\n  onContainerClick: ($ev: { $container: { container: IContainer, bool: boolean } }) => ({\n    $ev: { $container: { container: IContainer, bool: boolean }\n    }});\n  onContainerAdd: ($ev: { $container: IContainer }) => ({ $container: IContainer });\n  onContainerRemove: ($ev: { $container: IContainer }) => ({ $container: IContainer });\n  //\n  showNarrativeModal: boolean;\n  resolvingNarrative: boolean;\n  customers: ICustomer[];\n  customer: ICustomer;\n  containers: { [containerId: string]: IContainer };\n  isDemoServer: boolean;\n  containerTypes: string[] = ['customer', 'project', 'module', 'episode'];\n  static $inject = ['$timeout', '$location', 'appState', 'modelSvc', 'dataSvc', 'authSvc', 'episodeEdit'];\n  constructor(\n    private $timeout: ng.ITimeoutService,\n    private $location: ng.ILocationService,\n    public appState,\n    private modelSvc: IModelSvc,\n    private dataSvc: IDataSvc,\n    private authSvc,\n    private episodeEdit: IEpisodeEditService) {\n\n  }\n\n  get isAdmin() {\n    return this.authSvc.userHasRole('admin');\n  }\n\n  get canAccess() {\n    return this.isAdmin || this.authSvc.userHasRole('customer admin');\n  }\n\n  get containerType() {\n    if (this.depth > 0) {\n      return capitalize(this.containerTypes[this.depth]);\n    }\n  }\n\n  $onInit() {\n    this.customers = this.modelSvc.getCustomersAsArray();\n  }\n\n  toggleNarrativeModal() {\n    this.showNarrativeModal = !this.showNarrativeModal;\n  }\n\n  postNewNarrative({ narrative, containerId }: { containerId: string, narrative: INarrative }) {\n    this.resolvingNarrative = true;\n    this.dataSvc.generateNewNarrative(containerId, narrative).then((narrativeResp: INarrative) => {\n      this.modelSvc.cache('narrative', narrativeResp);\n      this.$location.path('/story/' + narrativeResp._id);\n      this.resolvingNarrative = false;\n    });\n  }\n\n  getLinkStatusReport(customerId: string): void {\n    this.dataSvc.getCustomerLinkStatusReportSpreadsheet(customerId);\n  }\n\n  selectText(event: any): void {\n    event.target.select(); // convenience for selecting the episode url\n  }\n\n  onToggleChildren(bool: boolean) {\n    const container = this.container;\n    this.onContainerClick({ $container: { container, bool } });\n  }\n\n  renameContainer() {\n    const newContainer = createInstance<IContainer>(\n      'Container',\n      pick(this.container, ['_id', 'customer_id', 'episodes', 'keywords', 'parent_id', 'sort_order'])\n    );\n    newContainer.name = {\n      en: this.container.newContainerName\n    };\n    this.dataSvc.updateContainer(newContainer).then(() => {\n      this.container.editingContainer = false;\n    });\n  }\n\n  addContainer(container: IContainer) {\n    const newContainer = {\n      'customer_id': this.container.customer_id,\n      'parent_id': this.container._id,\n      'name': {\n        en: angular.copy(this.container.newContainerTitle)\n      }\n    };\n    this.dataSvc.createContainer(newContainer).then((newContainer: IContainer) => {\n      console.log('Created container:', newContainer);\n      if (this.depth === 2) {\n        return this.episodeEdit.addEpisodeToContainer(newContainer)\n        // onContainerAdd will force a sort\n          .then((container: IContainer) => this.onContainerAdd({ $container: container }))\n          .catch((e: any) => console.log('error adding episode to container'));\n      } else {\n        this.onContainerAdd({ $container: container });\n      }\n    });\n    this.container.newContainerTitle = '';\n    this.container.addingContainer = false;\n    //container.showChildren will be undefined at the project level.\n    if (!existy(container.showChildren) || container.showChildren === false) {\n      this.onToggleChildren(false);\n    }\n  }\n\n  deleteContainer() {\n    this.onContainerRemove({ $container: this.container });\n  }\n}\n\ninterface IComponentBindings {\n  [binding: string]: '<' | '<?' | '&' | '&?' | '@' | '@?' | '=' | '=?';\n}\n\nexport class Container implements ng.IComponentOptions {\n  bindings: IComponentBindings = {\n    container: '<',\n    containers: '<',\n    depth: '<',\n    onContainerClick: '&',\n    onContainerAdd: '&',\n    onContainerRemove: '&'\n  };\n  templateUrl: string = 'templates/container.html';\n  controller = ContainerController;\n  static Name: string = 'npContainer'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittContainer.ts","import { IContainer } from '../models';\nimport { IDataSvc, IModelSvc } from '../interfaces';\n\nconst TEMPLATE = `\n<!-- consider breaking these into separate templates altogether, since they have different purposes -->\n<!-- used in narrative creation -->\n<div ng-style=\"{'text-indent': 1 * $ctrl.depth + 'em'}\">\n  <div ng-if=\"!$ctrl.container.episodes.length\"\n      class=\"container\"\n      ng-class=\"{isOpen: $ctrl.container.wasClicked, isClosed: !$ctrl.container.wasClicked}\"\n      ng-click=\"$ctrl.toggle();$ctrl.loadChildren()\"\n      ng-bind-html=\"$ctrl.container.display_name\">\n  </div>\n  <div ng-if=\"$ctrl.container.episodes.length\" ng-style=\"{'text-indent': $ctrl.depth === 3 ? '4em' : ''}\">\n    <span class=\"hoverIndicator\">\n      <a\n        ng-click=\"$ctrl.onNodeClick({node: $ctrl.container.episodes[0]})\"\n        ng-bind-html=\"$ctrl.containers[$ctrl.container._id].display_name\"></a>({{$ctrl.container.status}})\n    </span>\n  </div>\n</div>\n<np-container-episodes\n  ng-if=\"$ctrl.container.wasClicked\"\n  ng-repeat=\"child in $ctrl.container.children\" \n  container=\"$ctrl.containers[child._id]\"\n  for-admin=\"true\"\n  depth=\"$ctrl.depth + 1\"\n  on-node-click=\"$ctrl.onNodeClick({ node: node })\">\n</np-container-episodes>\n`;\n\ninterface IContainerEpisodesBindings extends ng.IComponentController {\n  container: IContainer;\n  forAdmin: boolean;\n  depth: number;\n  onNodeClick: (node: string) => ({ node });\n}\n\nclass ContainerEpisodesController implements IContainerEpisodesBindings {\n  container: IContainer;\n  forAdmin: boolean;\n  depth: number;\n  onNodeClick: (e: any) => any;\n  //props\n  containers: any;\n  crossEpisodePath: string;\n  episodeId: string;\n  static $inject = ['modelSvc', 'appState', 'dataSvc'];\n\n  constructor(\n    private modelSvc: IModelSvc,\n    private appState,\n    private dataSvc: IDataSvc) {\n    //\n  }\n\n  $onInit() {\n    this.containers = this.modelSvc.containers;\n    this.crossEpisodePath = this.appState.crossEpisodePath;\n    this.episodeId = this.appState.episodeId;\n  }\n\n  loadChildren() {\n    if (this.containers[this.container._id].haveNotLoadedChildData) {\n      this.dataSvc.getContainer(this.container._id);\n    }\n  }\n\n  toggle() {\n    this.container.wasClicked = !this.container.wasClicked;\n  }\n}\n\ninterface IComponentBindings {\n  [binding: string]: '<' | '<?' | '&' | '&?' | '@' | '@?' | '=' | '=?';\n}\n\nexport class ContainerEpisodes implements ng.IComponentOptions {\n  bindings: IComponentBindings = {\n    container: '<',\n    forAdmin: '<',\n    depth: '<',\n    onNodeClick: '&'\n  };\n  template: string = TEMPLATE;\n  controller = ContainerEpisodesController;\n  static Name: string = 'npContainerEpisodes'; // tslint:disable-line\n}\n\n// ittContainerEpisodes.$inject = ['modelSvc', 'recursionHelper', 'appState', 'dataSvc'];\n//\n// export default function ittContainerEpisodes(modelSvc, recursionHelper, appState, dataSvc) {\n//   return {\n//     restrict: 'A',\n//     replace: false,\n//     scope: {\n//       container: '=ittContainerEpisodes',\n//       forAdmin: '=forAdmin',\n//       onNodeClick: '&',\n//       rootContext: '='\n//     },\n//     templateUrl: \"templates/containerepisodes.html\",\n//     controller: ['$scope', function ($scope) {\n//\n//       $scope.selectEpisode = function (e) {\n//         $scope.onNodeClick({node: e});\n//         console.log('ctrl select epi', e);\n//         // $scope.emit('episodeSelected', e);\n//       };\n//     }],\n//\n//     compile: function (element) {\n//       // Use the compile function from the recursionHelper,\n//       // And return the linking function(s) which it returns\n//       return recursionHelper.compile(element, function (scope) {\n//\n//         scope.containers = modelSvc.containers;\n//         scope.crossEpisodePath = appState.crossEpisodePath;\n//         scope.episodeId = appState.episodeId;\n//\n//         scope.loadChildren = function () {\n//           if (modelSvc.containers[scope.container._id].haveNotLoadedChildData) {\n//             dataSvc.getContainer(scope.container._id);\n//           }\n//         };\n//         scope.toggle = function () {\n//           scope.container.wasClicked = !scope.container.wasClicked;\n//         };\n//         // scope.selectEpisode = function (e) {\n//         // \t// console.log(scope.container.episodes[0]);\n//         // \t// console.log('hmm', scope.onChoice);\n//         // \tscope.$emit('episodeSelected', e);\n//         // };\n//\n//       });\n//     }\n//   };\n//\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittContainerEpisodes.ts","/**\n * Created by githop on 6/16/16.\n */\nconst TEMPLATE = `\n<div ng-mouseenter=\"$ctrl.mouseEvent(true)\" ng-mouseleave=\"$ctrl.mouseEvent(false)\">\n\t<span class=\"pencil__content\" ng-transclude></span>\n\t<span style=\"text-indent: 0\">\n\t\t<span class=\"edit-pencil\" ng-click=\"$ctrl.sendEdit($event)\" ng-if=\"$ctrl.showPencil || $ctrl.force\"></span>\n\t</span>\n</div>\n`;\n\ninterface IEditPencilBindings extends ng.IComponentController {\n  canAccess?: boolean;\n  force?: boolean;\n  onEdit: ($event: {$event: ng.IAngularEvent}) => { $event: ng.IAngularEvent };\n}\n\nclass EditPencilController implements IEditPencilBindings {\n  canAccess?: boolean;\n  force?: boolean;\n  onEdit: ($event: {$event: ng.IAngularEvent}) => { $event: ng.IAngularEvent };\n  //\n  showPencil: boolean = false;\n  static $inject = [];\n  sendEdit($event: ng.IAngularEvent) {\n    this.showPencil = false;\n    this.onEdit({ $event });\n  }\n\n  mouseEvent(bool: boolean) {\n    if (this.canAccess) {\n      this.showPencil = bool;\n    }\n  }\n\n}\n\ninterface IComponentBindings {\n  [binding: string]: '<' | '<?' | '&' | '&?' | '@' | '@?' | '=' | '=?';\n}\n\nexport class EditPencil implements ng.IComponentOptions {\n  transclude = true;\n  bindings: IComponentBindings = {\n    canAccess: '<?',\n    force: '<?',\n    onEdit: '&'\n  };\n  template: string = TEMPLATE;\n  controller = EditPencilController;\n  static Name: string = 'npEditPencil'; // tslint:disable-line\n}\n\n\n// export default function ittEditPencil() {\n//   return {\n//     restrict: 'EA',\n//     transclude: true,\n//     scope: {\n//       canAccess: '=?',\n//       force: '=?',\n//       onEdit: '&'\n//     },\n//     template: [\n//       '<div>',\n//       '\t<span class=\"pencil__content\" ng-transclude></span>',\n//       '\t<span style=\"text-indent: 0\">',\n//       '\t\t<span class=\"edit-pencil\" ng-click=\"sendEdit($event)\" ng-if=\"showPencil || force\"></span>',\n//       '\t</span>',\n//       '</div>'\n//     ].join(' '),\n//     link: function (scope, elm) {\n//       scope.showPencil = false;\n//\n//       scope.sendEdit = sendEdit;\n//       elm.mouseenter(mouseenter);\n//       elm.mouseleave(mouseleave);\n//\n//       function sendEdit($ev) {\n//         scope.showPencil = false;\n//         scope.onEdit({$event: $ev});\n//       }\n//\n//       function mouseenter() {\n//         if (scope.canAccess === true) {\n//           scope.$apply(function () {\n//             scope.showPencil = true;\n//           });\n//         }\n//       }\n//\n//       function mouseleave() {\n//         if (scope.canAccess === true) {\n//           scope.$apply(function () {\n//             scope.showPencil = false;\n//           });\n//         }\n//       }\n//\n//     }\n//   };\n// }\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittEditPencil.ts","/**\n * Created by githop on 6/30/16.\n */\nimport { IEvent } from '../models';\nimport { existy } from '../services/ittUtils';\n\nconst TEMPLATE = `\n<div class=\"field\">\n  <div class=\"label\">Flags</div>\n  <div class=\"input\">\n    <span ng-repeat=\"flag in $ctrl._flags\">\n      <span ng-if=\"flag !== 'invertColor'\">\n        <label for=\"{{$ctrl._ids[flag]}}\"></label>\n        <input id=\"{{$ctrl._ids[flag]}}\"\n          type=\"checkbox\"\n          itt-dynamic-model=\"'$ctrl.data.' + flag\"\n          ng-change=\"$ctrl.handleChange()\"/>{{$ctrl._displays[flag]}}\n      </span>\n      <span ng-if=\"flag === 'invertColor'\">\n        <label for=\"{{$ctrl._ids[flag]}}\"></label>\n        <input id=\"{{$ctrl._ids[flag]}}\"\n          type=\"checkbox\"\n          ng-model=\"$ctrl.itemForm.color\"\n          ng-true-value=\"'Invert'\"\n          ng-false-value=\"''\"\n          ng-change=\"$ctrl.handleChange()\"/>{{$ctrl._displays[flag]}}\n      </span>\n    </span>\n  </div>\n</div>\n`;\n\ninterface IFlagsBindings extends ng.IComponentController {\n  flags: string[];\n  data: IEvent;\n  templateUrl: string;\n  itemForm?: ng.IFormController;\n}\n\nclass FlagsController implements IFlagsBindings {\n  flags: string[];\n  data: IEvent;\n  templateUrl: string;\n  itemForm?: ng.IFormController;\n  _flags: any;\n  _displays = {\n    required: 'Required',\n    stop: 'Stop item',\n    cosmetic: 'Cosmetic',\n    chapter_marker: 'Chapter Event',\n    invertColor: 'Invert Color'\n  };\n  _ids = {\n    required: 'itemRequired',\n    stop: 'itemStop',\n    cosmetic: 'itemCosmetic',\n    chapter_marker: 'itemChapter',\n    invertColor: 'Invert'\n  };\n  static $inject = ['$timeout', 'selectService'];\n\n  constructor(private $timeout, private selectService) {\n    //\n  }\n\n  $onInit() {\n    this._flags = angular.copy(this.flags);\n  }\n\n  $onChanges(changesObj) {\n    if (changesObj.templateUrl) {\n      const { previousValue, currentValue } = changesObj.templateUrl;\n      this.$timeout(() => this.setFlags(currentValue, previousValue));\n    }\n  }\n\n  handleChange() {\n    if (this.data.hasOwnProperty('stop')) {\n      this.selectService.onSelectChange(this.data, this.itemForm);\n    }\n  }\n\n  setFlags(newVal, oldVal) {\n    //reset invert color when switching between templates.\n    // only reset if we are the right type and the value changes\n    // e.g. ignore undefined -> string\n    if (newVal !== oldVal && typeof newVal === typeof oldVal) {\n      this.itemForm.color = '';\n    }\n\n    if (newVal) {\n\n      if (newVal === 'templates/item/image-fill.html') {\n        this._flags = this._flags.filter((f) => {\n          return f !== 'stop';\n        });\n      } else {\n        this._flags = this.flags;\n      }\n\n      if (!FlagsController._h1OrH2(newVal)) {\n        if (this._isEditingItemForm()) {\n          this.itemForm.color = '';\n        }\n\n        this._flags = this._flags.filter((f) => {\n          return f !== 'chapter_marker';\n        });\n      } else {\n        this._flags = this.flags;\n        if (this._isEditingItemForm()) {\n          this.itemForm.color = 'Invert';\n        }\n      }\n    }\n  }\n\n  private static _h1OrH2(url) {\n    return (url === 'templates/item/text-h1.html' || url === 'templates/item/text-h2.html');\n  }\n\n  private _isEditingItemForm() {\n    return existy(this.itemForm) && this.data._id === 'internal:editing';\n  }\n}\n\n\nexport class Flags implements ng.IComponentOptions {\n  bindings: any = {\n    flags: '=',\n    data: '=',\n    templateUrl: '@',\n    //for the invertColor option\n    itemForm: '=?'\n  };\n  template: string = TEMPLATE;\n  controller = FlagsController;\n  static Name: string = 'npFlags'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittFlags.ts","/**\n * Created by githop on 3/16/17.\n */\nimport { ICustomer, INarrative, ITimeline } from '../../models';\nimport { existy, slugify } from '../../services/ittUtils';\n\nconst TEMPLATE = `\n<div ng-if=\"!$ctrl.clipboardMode\">\n  <div ng-if=\"$ctrl.narrative.guest_access_allowed === true\">\n    <label for=\"{{$ctrl.display.id[$ctrl.type]}}\">Guest Accessible URL:\n      <itt-validation-tip ng-if=\"$ctrl[$ctrl.type].error\" text=\"{{$ctrl[$ctrl.type].error}}\"></itt-validation-tip>\n      <p class=\"--break-word\">\n        <small ng-class=\"{ 'error-red': $ctrl[$ctrl.type].error, unselectable: $ctrl[$ctrl.type].error }\">\n          {{$ctrl.formatGuestAccessibleUrl()}}\n        </small>\n      </p>\n    </label>\n    <input\n      id=\"{{$ctrl.display.id[$ctrl.type]}}\"\n      type=\"text\"\n      name=\"path\"\n      placeholder=\"{{$ctrl.display.placeholder}}\"\n      itt-valid-pathslug\n      narrative-id=\"{{$ctrl.narrative._id}}\"\n      ng-model=\"$ctrl[$ctrl.type].path_slug.en\">\n  </div>\n</div>\n<np-clipboard\n  ng-if=\"$ctrl.clipboardMode\"\n  source-text=\"{{$ctrl.formatUrlToCopy()}}\"\n  on-copy=\"$event.stopPropagation()\">\n</np-clipboard>\n`;\n\ninterface IGuestAccessibleUrlBindings extends ng.IComponentController {\n  narrative: INarrative;\n  timeline?: ITimeline;\n  customer?: ICustomer;\n  clipboardMode?: string;\n  subDomain: string;\n}\n\ninterface IDisplay {\n  placeholder: string;\n  id: { timeline: string, narrative: string };\n}\n\nclass GuestAccessibleUrlController implements IGuestAccessibleUrlBindings {\n  narrative: INarrative;\n  timeline?: ITimeline;\n  customer?: ICustomer;\n  clipboardMode?: string;\n  subDomain: string;\n  type: 'timeline' | 'narrative';\n  display: IDisplay;\n  private protocol: string = 'https://';\n  private domain: string = '.narrasys.com/';\n  private pathPrefix: string;\n  static $inject = [];\n\n  constructor() {\n    //\n  }\n\n  $onInit() {\n    this.type = existy(this.timeline) ? 'timeline' : 'narrative';\n    this.display = {\n      id: {\n        timeline: 'tlPath',\n        narrative: 'nPath'\n      },\n      placeholder: 'human-friendly-link-to ' + this.type\n    };\n\n    const _subDomain =\n      existy(this.subDomain) && this.subDomain ||\n      existy(this.narrative.narrative_subdomain) && this.narrative.narrative_subdomain;\n\n    this.pathPrefix = this.protocol + _subDomain + this.domain;\n  }\n\n  formatLTIUrl() {\n    if (existy(this.narrative)) {\n      if (this.type === 'timeline') {\n        return this.pathPrefix + 'auth/lti?narrative=' + this.narrative._id + '&timeline=' + this.timeline._id;\n      }\n      return this.pathPrefix + 'auth/lti?narrative=' + this.narrative._id;\n    }\n  }\n\n  formatGuestAccessibleUrl() {\n    const hasNarrative = existy(this.narrative);\n    const hasNarrativePathslug = hasNarrative\n      && existy(this.narrative.path_slug)\n      && existy(this.narrative.path_slug.en);\n\n    const hasTimeline = existy(this.timeline);\n    const hasTimelinePathslug = hasTimeline && existy(this.timeline.path_slug) && existy(this.timeline.path_slug.en);\n    if (this.type === 'timeline' && hasTimelinePathslug) {\n      return this.pathPrefix + '#/story/' + this.narrative.path_slug.en + '/' + slugify(this.timeline.path_slug.en);\n    }\n\n    if (hasNarrativePathslug) {\n      return this.pathPrefix + '#/story/' + slugify(this.narrative.path_slug.en);\n    }\n  }\n\n  formatUrlToCopy() {\n    if (existy(this.narrative) && this.narrative.guest_access_allowed === false) {\n      return this.formatLTIUrl();\n    } else {\n      return this.formatGuestAccessibleUrl();\n    }\n  }\n}\n\ninterface IComponentBindings {\n  [binding: string]: '<' | '<?' | '&' | '&?' | '@' | '@?' | '=' | '=?';\n}\n\nexport class GuestAccessibleUrl implements ng.IComponentOptions {\n  bindings: IComponentBindings = {\n    narrative: '<',\n    timeline: '<?',\n    customer: '<?',\n    clipboardMode: '@?',\n    subDomain: '@?'\n  };\n  template: string = TEMPLATE;\n  controller = GuestAccessibleUrlController;\n  static Name: string = 'npGuestAccessibleUrl'; // tslint:disable-line\n}\n\n /* tslint:disable */\n// export default function ittGuestAccessibleUrl() {\n//   return {\n//     restrict: 'EA',\n//     template: [\n//       '<div ng-if=\"!$ctrl.clipboardMode\">',\n//       ' <div ng-if=\"$ctrl.narrative.guest_access_allowed === true\">',\n//       '\t    <label for=\"{{$ctrl.display.id[$ctrl.type]}}\">Guest Accessible URL:',\n//       '       <itt-validation-tip ng-if=\"$ctrl[$ctrl.type].error\" text=\"{{$ctrl[$ctrl.type].error}}\"></itt-validation-tip>',\n//       '       <p class=\"--break-word\"><small ng-class=\"{ \\'error-red\\': $ctrl[$ctrl.type].error, unselectable: $ctrl[$ctrl.type].error }\">{{$ctrl.formatGuestAccessibleUrl()}}</small></p>',\n//       '     </label>',\n//       '     <input id=\"{{$ctrl.display.id[$ctrl.type]}}\" type=\"text\" name=\"path\" placeholder=\"{{$ctrl.display.placeholder}}\" itt-valid-pathslug narrative-id=\"{{$ctrl.narrative._id}}\" ng-model=\"$ctrl[$ctrl.type].path_slug.en\">',\n//       ' </div>',\n//       '</div>',\n//       '<a ng-if=\"$ctrl.clipboardMode\" itt-clipboard source-text=\"{{$ctrl.formatUrlToCopy()}}\" on-copy=\"$event.stopPropagation()\"></a>'\n//     ].join(''),\n//     scope: {\n//       narrative: '=',\n//       timeline: '=?',\n//       customer: '=?',\n//       clipboardMode: '@?',\n//       subDomain: '@?'\n//     },\n//     controller: ['ittUtils', function (ittUtils) {\n//       var ctrl = this;\n//       var _existy = ittUtils.existy;\n//       var _slugify = ittUtils.slugify;\n//       var protocol = 'https://';\n//       var domain = '.narrasys.com/';\n//       var pathPrefix;\n//\n//       angular.extend(ctrl, {\n//         type: _existy(ctrl.timeline) ? 'timeline' : 'narrative',\n//         display: null,\n//         formatLTIUrl: formatLTIUrl,\n//         formatGuestAccessibleUrl: formatGuestAccessibleUrl,\n//         formatUrlToCopy: formatUrlToCopy\n//       });\n//\n//       onInit();\n//\n//       function onInit() {\n//         ctrl.display = {\n//           id: {\n//             timeline: 'tlPath',\n//             narrative: 'nPath'\n//           },\n//           placeholder: 'human-friendly-link-to ' + ctrl.type\n//         };\n//         var _subDomain = _existy(ctrl.subDomain) && ctrl.subDomain || _existy(ctrl.narrative.narrative_subdomain) && ctrl.narrative.narrative_subdomain;\n//         pathPrefix = protocol + _subDomain + domain;\n//       }\n//\n//       function formatUrlToCopy() {\n//         if (_existy(ctrl.narrative) && ctrl.narrative.guest_access_allowed === false) {\n//           return formatLTIUrl();\n//         } else {\n//           return formatGuestAccessibleUrl();\n//         }\n//       }\n//\n//       function formatLTIUrl() {\n//         if (_existy(ctrl.narrative)) {\n//           if (ctrl.type === 'timeline') {\n//             return pathPrefix + 'auth/lti?narrative=' + ctrl.narrative._id + '&timeline=' + ctrl.timeline._id;\n//           }\n//           return pathPrefix + 'auth/lti?narrative=' + ctrl.narrative._id;\n//         }\n//       }\n//\n//       function formatGuestAccessibleUrl() {\n//         var hasNarrative = _existy(ctrl.narrative);\n//         var hasNarrativePathslug = hasNarrative && _existy(ctrl.narrative.path_slug) && _existy(ctrl.narrative.path_slug.en);\n//         var hasTimeline = _existy(ctrl.timeline);\n//         var hasTimelinePathslug = hasTimeline && _existy(ctrl.timeline.path_slug) && _existy(ctrl.timeline.path_slug.en);\n//         if (ctrl.type === 'timeline' && hasTimelinePathslug) {\n//           return pathPrefix + '#/story/' + ctrl.narrative.path_slug.en + '/' + _slugify(ctrl.timeline.path_slug.en);\n//         }\n//\n//         if (hasNarrativePathslug) {\n//           return pathPrefix + '#/story/' + _slugify(ctrl.narrative.path_slug.en);\n//         }\n//\n//       }\n//\n//     }],\n//     controllerAs: '$ctrl',\n//     bindToController: true\n//   };\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/guest-accessible-url/npGuestAccessibleUrl.ts","/**\n * Created by githop on 12/11/15.\n */\n\nconst TEMPLATE = `\n<div class=\"loading\">\n\t<div class=\"spinner\">\n\t\t<div class=\"rotating pie\"></div>\n\t\t<div class=\"filler pie\"></div>\n\t\t<div class=\"mask\"></div>\n\t</div>\n\tLoading\n</div>\n\n`;\nexport class Loading implements ng.IComponentOptions {\n  template: string = TEMPLATE;\n  static Name: string = 'npLoading'; // tslint:disable-line\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittLoading.ts","/**\n * Created by githop on 6/1/16.\n */\n\nconst TEMPLATE = `\n<div ng-class=\"$ctrl.wrapperClass\">\n  <div ng-class=\"$ctrl.modalClass\">\n    <ng-transclude></ng-transclude>\n  </div>\n</div>\n`;\n\ninterface IModalBindings extends ng.IComponentController {\n  modalClass?: string;\n  wrapperClass?: string;\n}\n\nclass ModalController implements IModalBindings {\n  modalClass?: string;\n  wrapperClass?: string;\n\n  $onInit() {\n    if (this.wrapperClass == null) {\n      this.wrapperClass = 'itt__modal';\n    }\n  }\n}\n\ninterface IComponentBindings {\n  [binding: string]: '<' | '<?' | '&' | '&?' | '@' | '@?' | '=' | '=?';\n}\n\nexport class Modal implements ng.IComponentOptions {\n  transclude = true;\n  bindings: IComponentBindings = {\n    modalClass: '@?',\n    wrapperClass: '@?'\n  };\n  template: string = TEMPLATE;\n  controller = ModalController;\n  static Name: string = 'npModal'; // tslint:disable-line\n}\n/* tslint:disable */\n// export default function ittModal() {\n//   return {\n//     restrict: 'EA',\n//     transclude: true,\n//     scope: {\n//       modalClass: '@',\n//       wrapperClass: '@?'\n//     },\n//     template: [\n//       '<div class=\"{{wrapperClass ? wrapperClass : \\'itt__modal\\'}}\"><div class=\"{{modalClass}}\"><ng-transclude></ng-transclude></div></div>'\n//     ].join(' ')\n//   };\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittModal.ts","/*\n\n TODO:\n split this file up into separate directive files\n when displaying a narrative, compare its user_id to the current user's id to set isOwner\n i18n\n\n To create a narrative:\n * get the user ID, make a group containing that ID,\n * create narrative with name,description,group id\n\n TO add a timeline:\n * user chooses a parent episode\n\n * create timeline with name,description,hidden,path, sort_order\n * make a child episode of parent episode\n * make an episode segment (needs timeline id, start, end, child episode id, sort_order)\n\n * then reload narrative/resolve\n\n (resolve should sort timelines and segments, API won't necessarily handle this for us)\n\n to update narrative or timeline: just send the basic fields, not the fully-resolved data.\n\n\n */\nimport { createInstance, IAsset, ICustomer, IEpisode, INarrative, ITempTimeline, ITimeline } from '../models';\nimport { IDataSvc, IModelSvc } from '../interfaces';\nimport { bitwiseCeil, existy, stripHtmlTags } from '../services/ittUtils';\n\ninterface INarrativeDetailBindings extends ng.IComponentController {\n  narrative: INarrative;\n  customers: ICustomer[];\n}\n\nclass NarrativeDetailController implements INarrativeDetailBindings {\n  narrative: INarrative;\n  customers: ICustomer[];\n  isOwner: boolean;\n  user: any;\n  canAccess: boolean;\n  editingNarrative: boolean;\n  timelineUnderEdit: ITimeline;\n  tmpTimeline: ITimeline;\n  showEpisodeList: boolean;\n  totalNarrativeDuration: number;\n  treeOpts = {\n    accept: (/*sourceNodeScope, destNodesScope, destIndex*/) => true,\n    dropped: (event) => {\n      const destIndex = event.dest.index;\n      const srcIndex = event.source.index;\n      if (destIndex !== srcIndex) {\n        this.narrative.timelines = NarrativeDetailController._updateSortOrder(destIndex, this.narrative.timelines);\n        this._persistTimelineSortUpdate(this.narrative.timelines[destIndex]);\n      }\n\n    }\n  };\n  static $inject = ['$routeParams', 'authSvc', 'appState', 'dataSvc', 'modelSvc'];\n  constructor(\n    private $routeParams,\n    private authSvc,\n    private appState,\n    private dataSvc: IDataSvc,\n    private modelSvc: IModelSvc) {\n    //\n  }\n\n  $onInit() {\n    this.isOwner = false;\n    this.user = this.appState.user;\n    if (this.authSvc.userHasRole('admin') || this.authSvc.userHasRole('customer admin')) {\n      this.canAccess = true;\n    }\n    this._setTotalNarrativeDuration(this.narrative.timelines);\n  }\n\n  logout() {\n    this.authSvc.logout();\n  }\n\n  toggleEditNarrativeModal($undo: INarrative) {\n    const cachedNarratives = existy(this.customers[0]) &&\n      existy(this.customers[0].narratives) &&\n      this.customers[0].narratives.length > 1;\n    //need list of other narratives to for validation of path slugs.\n    if (!cachedNarratives) {\n      this.dataSvc.getNarrativeList(this.customers[0])\n        .then(() => {\n          this.editingNarrative = !this.editingNarrative;\n        });\n    } else {\n      this.editingNarrative = !this.editingNarrative;\n    }\n\n    if ($undo != null) {\n      this.narrative = $undo;\n    }\n  }\n\n  toggleEditingTimeline(tl: ITimeline) {\n    this.timelineUnderEdit = tl;\n  }\n\n  doneEditingTimeline() {\n    this.timelineUnderEdit = null;\n    //remove tmp tl from timelines;\n    this.narrative.timelines = this.narrative.timelines.filter((tl: ITimeline) => {\n      return tl !== this.tmpTimeline;\n    });\n    this.tmpTimeline = null;\n  }\n\n  toggleOwnership() {\n    this.isOwner = !this.isOwner;\n  }\n\n  toggleEpisodeList() {\n    this.showEpisodeList = !this.showEpisodeList;\n  }\n\n  updateNarrative(update) {\n    this.dataSvc.updateNarrative(update).then((resp: {data: INarrative}) => {\n      this.editingNarrative = false;\n      //updateNarrative returns just the new narrative object, without timelines array\n      //merge the existing narrative on scope with the one returned via our post resp.\n      angular.extend(this.narrative, resp.data);\n      const cust = this.modelSvc.customers[resp.data.customer_id];\n      this.modelSvc.assocNarrativesWithCustomer(cust, [resp.data]);\n    });\n  }\n\n  updateTimeline(newTimeline: ITimeline, oldTimeline: ITimeline) {\n    this.dataSvc.storeTimeline(this.narrative._id, newTimeline).then((resp) => {\n      angular.extend(oldTimeline, resp);\n      this.doneEditingTimeline();\n    });\n  }\n\n  addTmpTimeline(currTl: ITimeline, timelines: ITimeline[]) {\n    let currSortOrder;\n    let fromTl;\n    let nextTlSortOrder;\n    let currIndex;\n    let newIndex;\n\n    if (!existy(currTl)) {\n      currSortOrder = 0;\n      newIndex = 0;\n    } else {\n      currIndex = timelines.indexOf(currTl);\n      newIndex = currIndex + 1;\n      fromTl = timelines[currIndex];\n      currSortOrder = fromTl.sort_order;\n      if (timelines.slice(-1)[0] === fromTl) {\n        currSortOrder += 100;\n      } else {\n        nextTlSortOrder = timelines[currIndex + 1].sort_order;\n        currSortOrder = bitwiseCeil((nextTlSortOrder + currSortOrder) / 2);\n      }\n\n    }\n    // ok to use createInstance outside of modelSvc#cache here\n    // because we do not have a case for 'timelines' in modelSvc#cache\n    const newTimeline = createInstance<ITimeline>('Timeline', {\n      name: { en: '' },\n      description: { en: '' },\n      hidden: false,\n      sort_order: currSortOrder,\n      isTemp: true,\n      index: newIndex\n    });\n    //favor slice over splice as splice mutates array in place.\n    const head = timelines.slice(0, newIndex);\n    const tail = timelines.slice(newIndex, timelines.length);\n    head.push(newTimeline);\n    this.narrative.timelines = head.concat(tail);\n    this.tmpTimeline = newTimeline;\n    //to open episode select modal\n    this.toggleEpisodeList();\n  }\n\n  onEpisodeSelect(epId: string) {\n    //if tmpTimeline is not set, assume\n    // this is the first timeline to create;\n    this.dataSvc.getEpisodeOverview(epId).then((episodeData: IEpisode) => {\n      this.tmpTimeline.parent_episode = episodeData;\n\n      if (existy(episodeData.description)) {\n        this.tmpTimeline.description.en = stripHtmlTags(episodeData.description.en);\n      }\n\n      this.tmpTimeline.name.en = stripHtmlTags(episodeData.title.en);\n      return episodeData;\n    }).then((episodeData) => {\n      this.dataSvc.getSingleAsset(episodeData.master_asset_id).then((data: IAsset) => {\n        if (data) {\n          this.tmpTimeline.duration = data.duration;\n        } else {\n          this.tmpTimeline.duration = 0;\n        }\n        //to close episode select modal after select\n        this.toggleEpisodeList();\n        //to open the timeline editor modal\n        this.persistTmpTimeline(this.tmpTimeline);\n      });\n    });\n  }\n\n  persistTmpTimeline(tl) {\n    this.narrative.timelines = NarrativeDetailController._updateSortOrder(tl.index, this.narrative.timelines);\n\n    const storeChildEpisode = (childEpisode) => {\n      return this.dataSvc.storeTimeline(this.narrative._id, tl).then((tlData) => {\n        return { d: tlData, e: childEpisode };\n      });\n    };\n\n    const handleEpisodeSegment = (config: {d: ITempTimeline, e: IEpisode}) => {\n      const tlData = config.d;\n      const childEpisode = config.e;\n      this.dataSvc.createEpisodeSegment(tlData._id, {\n        episode_id: childEpisode._id,\n        start_time: 0,\n        end_time: tl.duration,\n        sort_order: 0,\n        timeline_id: tlData._id\n      }).then((segmentData) => {\n        tlData.episode_segments = [segmentData];\n        angular.forEach(this.narrative.timelines, (tl: ITempTimeline | ITimeline) =>  {\n          if (tl.sort_order === tlData.sort_order) {\n            angular.extend(tl, tlData, { isTemp: false });\n          }\n        });\n        this.tmpTimeline = null;\n        this.doneEditingTimeline();\n        this._setTotalNarrativeDuration(this.narrative.timelines);\n      });\n    };\n\n    const logErr = (e: any) => console.log(e);\n\n    this.dataSvc.createChildEpisode({\n      parent_id: tl.parent_episode._id\n    })\n      .then(storeChildEpisode)\n      .then(handleEpisodeSegment)\n      .catch(logErr);\n\n  }\n\n  editorAction(newTl: ITempTimeline, currTl: ITimeline) {\n    if (newTl.isTemp === true) {\n      this.persistTmpTimeline(newTl);\n    } else {\n      this.updateTimeline(newTl, currTl);\n    }\n  }\n\n  deleteTimeline(tl: ITimeline) {\n    this.dataSvc.deleteTimeline(tl._id).then(() => {\n      this.narrative.timelines = this.narrative.timelines.filter((t) => {\n        return tl._id !== t._id;\n      });\n      this.doneEditingTimeline();\n      this._setTotalNarrativeDuration(this.narrative.timelines);\n    });\n  }\n\n  exportToSpreadsheet(nId: string) {\n    this.dataSvc.getNarrativeExportAsSpreadsheet(nId);\n  }\n\n  private static _updateSortOrder(destIndex: number, _arr: ITimeline[]): ITimeline[] {\n    const arr = [..._arr]; // copy to avoid mutation ;)\n    const len = arr.length;\n    let sortIndex = 0;\n    if (destIndex > 0) {\n\n      if (destIndex === len - 1) {\n        sortIndex = arr[destIndex - 1].sort_order + 100;\n      } else {\n        sortIndex = bitwiseCeil((arr[destIndex - 1].sort_order + arr[destIndex + 1].sort_order) / 2);\n      }\n\n    }\n    let prevSortIndex = sortIndex;\n    arr[destIndex].sort_order = sortIndex;\n    let _destIndex = destIndex + 1;\n    sortIndex += 1;\n    for (; _destIndex < len; _destIndex += 1) {\n      if (prevSortIndex >= arr[_destIndex].sort_order) {\n        arr[_destIndex].sort_order = sortIndex;\n      }\n      prevSortIndex = sortIndex;\n      sortIndex += 1;\n    }\n\n    return arr;\n  }\n\n  private _setTotalNarrativeDuration(timelines: ITimeline[]): void {\n    this.totalNarrativeDuration = timelines\n      .map((tl: ITimeline) => tl.episode_segments.map((s: any) => s.end_time)[0])\n      .reduce(\n      (accm, durs) => accm + durs,\n      0\n    );\n  }\n\n  private _persistTimelineSortUpdate(timeline: ITimeline) {\n    this.dataSvc.storeTimeline(this.narrative._id, timeline).then((resp) => {\n      angular.extend(timeline, resp);\n    });\n  }\n}\n\ninterface IComponentBindings {\n  [binding: string]: '<' | '&' | '@' | '=';\n}\nexport class NarrativeDetail implements ng.IComponentOptions {\n  bindings: IComponentBindings = {\n    narrative: '<',\n    customers: '<'\n  };\n  templateUrl: string = 'templates/narrative/default.html';\n  controller = NarrativeDetailController;\n  static Name: string = 'npNarrativeDetail'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/npNarrativeDetail.ts","/**\n * Created by githop on 6/16/16.\n */\n\nimport { createInstance, ICustomer, INarrative } from '../models';\n\nimport { SOCIAL_IMAGE_SQUARE, SOCIAL_IMAGE_WIDE } from '../constants';\nimport { IUploadsService, Partial } from '../interfaces';\nimport { existy, pick } from '../services/ittUtils';\n/* tslint:disable */\n/**\n * @ngdoc directive\n * @name iTT.directive:ittNarrativeEditor\n * @restrict 'EA'\n * @scope\n * @description\n * A presentational component used to edit narratives\n * @param {Object} narrative the narrative to edit\n * @param {Array} customers an array of customers associated with the narrative\n * @param {customerId:string, containerId:string, name:string} containerInfo container specific info to set on the narrative\n * @param {Function} onDone output to call when on cancel.\n * @param {function} onUpdate output to call when saving.\n * @example\n * <pre>\n *  //containers page\n *  <np-narrative-editor\n customers=\"customers\"\n container-info=\"{containerId: container._id, customerId: container.customer_id, name: container.name}\"\n on-done=\"toggleNarrativeModal()\"\n on-update=\"postNewNarrative(data)\">\n </np-narrative-editor>\n\n //narrative show/index pages\n <np-narrative-editor\n customers=\"$ctrl.selectedCustomer\"\n narrative=\"$ctrl.narrativeToEdit\"\n on-done=\"$ctrl.closeAddOrEditModal()\"\n on-update=\"$ctrl.addOrUpdateNarrative(n)\">\n </np-narrative-editor>\n * </pre>\n */\n/* tslint:enable */\n\nconst TEMPLATE = `\n<div class=\"narrative__edit\">\n  <h2>Narrative Settings</h2>\n  <form name=\"nEditForm\">\n    <div ng-show=\"$ctrl.containerInfo && $ctrl.canAccess\">\n      <label for=\"nCustomer\">Customer\n        <itt-validation-tip ng-if=\"nEditForm.customer.$invalid\" text=\"A customer must be set\"></itt-validation-tip>\n      </label>\n      <select id=\"nCustomer\" name=\"customer\" required ng-model=\"$ctrl.selectedCustomer\"\n              ng-change=\"$ctrl.selectCustomer($ctrl.selectedCustomer)\"\n              ng-options=\"cust.name for cust in $ctrl.customers track by cust._id\"></select></br>\n    </div>\n    <div ng-if=\"$ctrl.selectedCustomer && $ctrl.containerInfo == null\">\n      <h5>{{$ctrl.selectedCustomer.name}}</h5>\n    </div>\n    <label id=\"nName\">Narrative Title\n      <itt-validation-tip ng-if=\"nEditForm.name.$invalid\" text=\"Title is required\"></itt-validation-tip>\n    </label>\n    <input for=\"nName\" type=\"text\" name=\"name\" placeholder=\"Add Narrative Title\"\n           ng-model=\"$ctrl.narrative.name.en\" required>\n    <label for=\"nDescription\">Description</label>\n    <textarea id=\"nDescription\" name=\"description\" placeholder=\"Add a Description\"\n              ng-model=\"$ctrl.narrative.description.en\"></textarea>\n    <div ng-if=\"!$ctrl.hidePathSlug\">\n      <np-guest-accessible-url\n        narrative=\"$ctrl.narrative\"\n        sub-domain=\"{{$ctrl.narrative.narrative_subdomain}}\"\n        customer=\"$ctrl.selectedCustomer\">\n      </np-guest-accessible-url>\n    </div>\n    <label for=\"nSupportUrl\">Support Url\n      <itt-validation-tip ng-if=\"nEditForm.supportUrl.$invalid\" text=\"Not a valid URL\"></itt-validation-tip>\n    </label>\n    <input id=\"nSupportUrl\" type=\"text\" name=\"supportUrl\" itt-valid-url placeholder=\"link for support\"\n           ng-model=\"$ctrl.narrative.support_url\"/>\n    <div class=\"narrative-flags\">\n      <div>\n        <input id=\"nNewWindow\" type=\"checkbox\" ng-model=\"$ctrl.narrative.disable_new_window\"/>\n        <label for=\"nNewWindow\">Disable New Window</label>\n      </div>\n      <div>\n        <input id=\"nDisableNav\" type=\"checkbox\" ng-model=\"$ctrl.narrative.disable_navigation\"/>\n        <label for=\"nDisableNav\">Disable Navigation</label>\n      </div>\n      <div>\n        <input\n          id=\"nGuestAccess\"\n          type=\"checkbox\"\n          ng-change=\"$ctrl.guestAccessEffects()\"\n          ng-model=\"$ctrl.narrative.guest_access_allowed\"/>\n        <label for=\"nGuestAccess\">Enable Guest Access</label>\n      </div>\n      <div ng-if=\"$ctrl.trueAdmin && $ctrl.narrative._id\">\n        <input\n          id=\"socialshare-checkbox\"\n          type=\"checkbox\"\n          ng-disabled=\"$ctrl.narrative.disableSocialshare\"\n          ng-model=\"$ctrl.narrative.enable_social_sharing\"/>\n        <label for=\"socialshare-checkbox\">Enable Socialshare</label>\n      </div>\n    </div>\n    <itt-enable-socialshare\n      ng-if=\"$ctrl.trueAdmin && $ctrl.narrative._id\"\n      container-id=\"{{$ctrl.selectedCustomer.root_container_id}}\"\n      editor-form=\"nEditForm\"\n      narrative=\"$ctrl.narrative\">\n    </itt-enable-socialshare>\n    <div class=\"ancillaryNav\">\n      <button class=\"done\" ng-click=\"$ctrl.handleUpdate($ctrl.narrative)\"\n              ng-disabled=\"nEditForm.$invalid || $ctrl.narrative.error\">Save\n      </button>\n      <button class=\"done\" ng-click=\"$ctrl.cancel()\">Cancel</button>\n    </div>\n  </form>\n</div>\n`;\n\ninterface IContainerInfo {\n  containerId: string;\n  customerId: string;\n  name: string;\n}\n\ninterface INarrativeEditorEmit {\n  $narrative?: Partial<INarrative>;\n  $data?: { narrative: Partial<INarrative>, containerId: string };\n}\n\ninterface INarrativeEditorBindings extends ng.IComponentController {\n  narrative: INarrative;\n  customers: ICustomer[];\n  containerInfo: IContainerInfo;\n  hidePathSlug: any;\n  onDone: ($undo: any) => any;\n  onUpdate: (a: INarrativeEditorEmit) => INarrativeEditorEmit;\n}\n\nclass NarrativeEditorController implements INarrativeEditorBindings {\n  narrative: INarrative;\n  customers: ICustomer[];\n  containerInfo: IContainerInfo;\n  hidePathSlug: any;\n  onDone: ($undo: any) => any;\n  onUpdate: (a: INarrativeEditorEmit) => INarrativeEditorEmit;\n  selectedCustomer: ICustomer;\n  private _narrative: Partial<INarrative>;\n  static $inject = ['authSvc', 'uploadsService'];\n\n  constructor(private authSvc, private uploadsService: IUploadsService) {\n    //\n  }\n\n  $onInit() {\n    if (this.narrative) {\n      if (this.narrative.social_image_square != null || this.narrative.social_image_wide != null) {\n        this.narrative.social_image_wide = null;\n        this.narrative.social_image_square = null;\n      }\n    }\n    this._narrative = angular.copy(this.narrative);\n    this._setNameFromContainer();\n    this._setCustomer();\n    this.guestAccessEffects();\n  }\n\n  cancel() {\n    this.narrative = angular.copy(this._narrative) as INarrative;\n    this.onDone({ $undo: this.narrative });\n  }\n\n  trueAdmin() {\n    return this.authSvc.userHasRole('admin');\n  }\n\n  canAccess() {\n    return this.trueAdmin() || this.authSvc.userHasRole('customer admin');\n  }\n\n  guestAccessEffects() {\n    if (this.narrative == null) {\n      return;\n    }\n\n    if (this.narrative.guest_access_allowed === false) {\n      this.narrative.enable_social_sharing = false;\n      this.narrative.disableSocialshare = true;\n    } else {\n      this.narrative.disableSocialshare = false;\n    }\n  }\n\n  selectCustomer(c: ICustomer) {\n    this.selectedCustomer = c;\n  }\n\n  handleUpdate(n: Partial<INarrative>) {\n    //use selected customer from setCustomer() or from drop down select\n    if (existy(this.selectedCustomer)) {\n      n.customer_id = this.selectedCustomer._id;\n\n    }\n    const fields: Array<keyof INarrative> = [\n      'name',\n      'description',\n      'customer_id',\n      'guest_access_allowed',\n      'enable_social_sharing',\n      'narrative_image_ids',\n      'path_slug',\n      'support_url',\n      'disable_navigation',\n      'disable_new_window',\n      '_id'\n    ];\n\n    const narrative = createInstance<INarrative>('Narrative', pick(n, fields));\n    const socialImagesToUpload: Array<{file: FileList, tag: string}> = [];\n    if (n.social_image_square) {\n      socialImagesToUpload.push({ file: n.social_image_square.file, tag: SOCIAL_IMAGE_SQUARE });\n    }\n\n    if (n.social_image_wide) {\n      socialImagesToUpload.push({ file: n.social_image_wide.file, tag: SOCIAL_IMAGE_WIDE });\n    }\n\n    //if there are pending social image uploads, upload them\n    //then push the asset ID in the img ids array.\n    if (socialImagesToUpload.length > 0) {\n      this.uploadsService.uploadTaggedFiles(socialImagesToUpload, this.selectedCustomer.root_container_id)\n        .then((assets) => {\n          assets.forEach((asset: any) => narrative.narrative_image_ids.push(asset.file._id));\n          this.uploadsService.resetUploads();\n          this.onUpdate({ $narrative: narrative });\n          return;\n        });\n    } else if (existy(this.containerInfo)) {\n      const { containerId } = this.containerInfo;\n      this.onUpdate({ $data: { narrative, containerId } });\n    } else {\n      this.onUpdate({ $narrative: narrative });\n    }\n  }\n\n  private _setNameFromContainer() {\n    if (existy(this.containerInfo)) {\n      if (existy(this.narrative)) {\n        this.narrative.name = this.containerInfo.name;\n      } else {\n        this.narrative = { name: this.containerInfo.name };\n      }\n    }\n  }\n\n  private _setCustomer() {\n    if (this.customers && this.customers.length === 1) {\n      this.selectCustomer(this.customers[0]);\n    } else {\n      if (existy(this.narrative) || existy(this.containerInfo)) {\n        const cId = existy(this.containerInfo) && this.containerInfo.customerId || this.narrative.customer_id;\n        this.selectCustomer(this.customers.filter((c: ICustomer) => c._id === cId)[0]);\n      } else {\n        this.customers.unshift({ name: 'Select a Customer' } as any);\n      }\n    }\n  }\n}\n\nexport class NarrativeEditor implements ng.IComponentOptions {\n  bindings: any = {\n    narrative: '<?',\n    customers: '<',\n    containerInfo: '<?',\n    hidePathSlug: '<?',\n    onDone: '&',\n    onUpdate: '&'\n  };\n  template: string = TEMPLATE;\n  controller = NarrativeEditorController;\n  static Name: string = 'npNarrativeEditor'; // tslint:disable-line\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/npNarrativeEditor.ts","import { ICustomer, INarrative } from '../models';\nimport { IDataSvc, IModelSvc } from '../interfaces';\nimport { existy } from '../services/ittUtils';\n\ninterface INarrativeListBindings extends ng.IComponentController {\n  customersData: ICustomer[];\n}\n\nclass NarrativeListController implements INarrativeListBindings {\n  customersData: ICustomer[];\n  narrativeSelect: boolean = false;\n  narrativeRow: any;\n  narrativeToEdit: INarrative;\n  user: any = null;\n  selectedCustomer: ICustomer[];\n  canAccess: boolean = false;\n  static $inject = ['$location', 'authSvc', 'appState', 'dataSvc', 'modelSvc', 'ittUtils'];\n  constructor(\n    private $location: ng.ILocationService,\n    private authSvc,\n    private appState,\n    private dataSvc: IDataSvc,\n    private modelSvc: IModelSvc) {\n    //\n  }\n\n  $onInit() {\n    this.user = this.appState.user;\n    if (this.authSvc.userHasRole('admin') || this.authSvc.userHasRole('customer admin')) {\n      this.canAccess = true;\n    }\n\n    this._updateAllEvenOdd();\n  }\n\n  logout() {\n    this.authSvc.logout();\n  }\n\n  setSelectedNarrative(customer: ICustomer): void {\n    const cachedNarratives = existy(customer.narratives) && customer.narratives.length > 1;\n    this.selectedCustomer = [customer];\n    //need list of other narratives to for validation of path slugs.\n    if (!cachedNarratives) {\n      this.dataSvc.getNarrativeList(customer)\n        .then(() => {\n          this.narrativeSelect = !this.narrativeSelect;\n        });\n    } else {\n      this.narrativeSelect = !this.narrativeSelect;\n    }\n  }\n\n  customerRowClick(customer: ICustomer, $ev: ng.IAngularEvent): void {\n    $ev.stopPropagation();\n    customer.isActive = !customer.isActive;\n    this.narrativeRow = null;\n    this.customersData.forEach((cust) => {\n      if (customer._id !== cust._id) {\n        cust.isActive = false;\n      }\n    });\n  }\n\n  gotoNarrative(narrativeId: string, $ev: ng.IAngularEvent): void {\n    $ev.stopPropagation();\n    this.$location.path('/story/' + narrativeId);\n  }\n\n  toggleRow(customer: ICustomer, $ev: ng.IAngularEvent) {\n    $ev.stopPropagation();\n    customer.showNarratives = !customer.showNarratives;\n    if (customer.showNarratives) {\n      this._toggleNarrativesOpened(customer);\n    } else {\n      customer.showNarratives = false;\n      this._toggleNarrativesClosed();\n    }\n  }\n\n  setRowClasses(customer: ICustomer) {\n    return {\n      'hoverIndicator': !customer.showNarratives,\n      'container__row--even': customer.evenOdd === false,\n      'container__row--odd': customer.evenOdd === true,\n      'isActive': customer.isActive\n    };\n  }\n\n  setNarrativeRowClasses(customer: ICustomer, narrative: INarrative) {\n    return {\n      'hoverIndicator': customer.showNarratives,\n      'container__row--even': narrative.evenOdd === false,\n      'container__row--odd': narrative.evenOdd === true,\n      'isActive': narrative === this.narrativeRow\n    };\n  }\n\n  setNarrativeToEdit($ev: ng.IAngularEvent, narrative: INarrative, customer: ICustomer) {\n    $ev.stopPropagation();\n    this.narrativeToEdit = narrative;\n    this.selectedCustomer = [customer];\n  }\n\n  closeAddOrEditModal(narrative: INarrative, navigate: boolean) {\n    this.narrativeSelect = false;\n    this.selectedCustomer = [];\n    this.narrativeToEdit = null;\n    if (narrative && navigate) {\n      this.$location.path('/story/' + narrative._id);\n      return;\n    }\n\n    if (narrative) { // undo any edits\n      for (let c = 0; c < this.customersData.length; c += 1) {\n        if (this.customersData[c]._id === narrative.customer_id) {\n          for (let n = 0; n < this.customersData[c].narratives.length; n += 1) {\n            if (this.customersData[c].narratives[n]._id === narrative._id) {\n              this.customersData[c].narratives[n] = narrative;\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  addOrUpdateNarrative($narrative: INarrative): void {\n    const method = $narrative._id == null ? 'createNarrative' : 'updateNarrative';\n    this._addOrUpdateNarr($narrative, method)\n      .then((narrative: INarrative) => this.closeAddOrEditModal(narrative, true))\n      .catch((err: any) => this._handleErr(err));\n  }\n\n  toggleNarrativeRow(narrative: INarrative, $ev: ng.IAngularEvent) {\n    $ev.stopPropagation();\n\n    if (this.narrativeRow === null) {\n      this.narrativeRow = narrative;\n    } else if (narrative === this.narrativeRow) {\n      this.narrativeRow = null;\n    } else {\n      this.narrativeRow = narrative;\n    }\n\n    //close any selected customers\n    this.customersData.forEach((cust) => {\n      cust.isActive = false;\n    });\n  }\n\n  private _toggleNarrativesOpened(customer: ICustomer) {\n    //lazily load customers and cache them for later\n    if (!existy(customer.narratives) || customer.narratives.length === 0) {\n      //fetch and cache is async and will handle setting the evenOdd on the narratives/customers\n      //after they have resolved.\n      this._fetchAndCacheNarratives(customer);\n    }\n    //if we already cached our narratives and the list length is odd\n    //need to update the customers evenOdd.\n    if (existy(customer.narratives) && customer.narratives.length >= 1) {\n      this._updateAllEvenOdd();\n    }\n\n  }\n\n  private _fetchAndCacheNarratives(customer: ICustomer) {\n    this.dataSvc.getNarrativeList(customer).then(() => {\n      //setting evenOdd after fetching should only need to happen the first time.\n      this._updateAllEvenOdd();\n    });\n  }\n\n  private _updateAllEvenOdd() {\n    let rest = 1;\n    const len = this.customersData.length;\n    for (; rest <= len; rest += 1) {\n      if (rest - 1 === 0) {\n        this.customersData[0].evenOdd = false;\n      }\n      const nextCust = this.customersData[rest];\n      const currentCust = this.customersData[rest - 1];\n      let lastNarr = null;\n\n      if (existy(currentCust.narratives) && currentCust.narratives.length > 0 && currentCust.showNarratives === true) {\n        this._updateNarrativeEvenOdd(currentCust);\n        lastNarr = currentCust.narratives[currentCust.narratives.length - 1];\n      }\n\n      if (!existy(nextCust)) {\n        return;\n      }\n\n      if (existy(lastNarr)) {\n        nextCust.evenOdd = !lastNarr.evenOdd;\n      } else {\n        nextCust.evenOdd = !currentCust.evenOdd;\n      }\n\n    }\n  }\n\n  private _updateNarrativeEvenOdd(customer: ICustomer): void {\n    customer.narratives = customer.narratives\n      .sort((a, b) => {\n        const aName = a.name.en.toLowerCase();\n        const bName = b.name.en.toLowerCase();\n        if (aName < bName) {\n          return -1;\n        } else if (aName > bName) {\n          return 1;\n        }\n        return 0;\n      })\n      .reduce(\n        (narrs, narr, index) => {\n          if (index === 0) {\n            //set first narrative to be opposite of customer\n            narr.evenOdd = !customer.evenOdd;\n            narrs.push(narr);\n            return narrs;\n          }\n\n          //continue alternating scheme by looking at the prior index and flipping it.\n          narr.evenOdd = !narrs[index - 1].evenOdd;\n          narrs.push(narr);\n          return narrs;\n        },\n        []\n      );\n  }\n\n  private _toggleNarrativesClosed() {\n    this._updateAllEvenOdd();\n  }\n\n  private _addOrUpdateNarr(n: INarrative, method: 'createNarrative' | 'updateNarrative') {\n    return this.dataSvc[method](n)\n      .then((resp: {data: INarrative}) => {\n        const narrative = resp.data;\n        let customer = this.modelSvc.customers[narrative.customer_id];\n        customer = this.modelSvc.assocNarrativesWithCustomer(customer, [narrative]);\n        const custOnScope = this.customersData.filter((cust: ICustomer) => cust._id === customer._id);\n        if (custOnScope.length === 1) {\n          this._updateNarrativeEvenOdd(customer);\n          custOnScope[0] = customer;\n          if (method === 'createNarrative') {\n            return narrative;\n          }\n        }\n      });\n  }\n\n  private _handleErr(err: any) {\n    if (err.data.path_slug) {\n      this.narrativeToEdit.error = 'path slug is already taken';\n    }\n  }\n}\n\n\nexport class NarrativeList implements ng.IComponentOptions {\n  bindings: any = {\n    customersData: '<'\n  };\n  templateUrl: string = 'templates/narrativelist.html';\n  controller = NarrativeListController;\n  static Name: string = 'npNarrativeList'; // tslint:disable-line\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/npNarrativeList.ts","import { IDataSvc, IModelSvc } from '../interfaces';\nimport { ICustomer } from '../models';\n\nconst TEMPLATE = `\n<div class=\"standaloneAncillaryPage\">\n\t<np-nav on-logout=\"$ctrl.logout()\"></np-nav>\n\t<h1>Narratives</h1>\n\t<np-loading ng-if=\"$ctrl.customersData == null\"></np-loading>\n\t<np-narrative-list\n\t  ng-if=\"$ctrl.customersData\"\n\t  class=\"np-narrative-container\"\n\t  customers-data=\"$ctrl.customersData\">\n\t</np-narrative-list>\n</div>\n`;\n\ninterface INarrativesContainerBindings extends ng.IComponentController {\n\n}\n\nclass NarrativesContainerController implements INarrativesContainerBindings {\n  customersData: ICustomer[];\n  static $inject = ['$q', 'authSvc', 'dataSvc', 'modelSvc'];\n  constructor(\n    private $q: ng.IQService,\n    private authSvc,\n    private dataSvc: IDataSvc,\n    private modelSvc: IModelSvc) {\n    //\n  }\n\n  $onInit() {\n    this._resolveCustomers()\n      .then((c: ICustomer[]) => this.customersData = this.modelSvc.getCustomersAsArray());\n  }\n\n  logout() {\n    this.authSvc.logout();\n  }\n\n  private _resolveCustomers(): ng.IPromise<ICustomer[]> {\n    //needs to be an array\n    const cachedCustomers = this.modelSvc.getCustomersAsArray();\n    //if use visits /story/:id prior to visiting this route, they will have a single\n    //narrative in modelSvc. We consider the cache 'empty' if the only narrative\n    //in it came from loading data for /story/:id. Otherwise when they visit\n    // /stories, the only listing they would see would be the narrative from\n    // /stories/:id.\n    const isCached = Object.keys(cachedCustomers).length > 0;\n\n    if (isCached) {\n      //since this is going to be displayed in a dropdown, it needs to be an array of objects.\n\n      return this.$q.resolve(cachedCustomers);\n    }\n\n    return this.authSvc.authenticate()\n      .then(() => this.dataSvc.getCustomerList())\n      .then((customers: ICustomer[]) => customers);\n  }\n}\n\n\nexport class NarrativesContainer implements ng.IComponentOptions {\n  bindings: any = {};\n  template: string = TEMPLATE;\n  controller = NarrativesContainerController;\n  static Name: string = 'npNarrativesContainer'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/npNarrativesContainer.ts","import { ICustomer, INarrative } from '../models';\nimport { existy } from '../services/ittUtils';\nimport { IDataSvc, IModelSvc } from '../interfaces';\nconst TEMPLATE = `\n<div class=\"standaloneAncillaryPage\">\n\t<np-nav on-logout=\"$ctrl.logout()\"></np-nav>\n  <np-loading ng-if=\"$ctrl.narrative == null && $ctrl.customers == null\"></np-loading>\n  <np-narrative-detail\n    ng-if=\"$ctrl.narrative && $ctrl.customers\"\n    class=\"np-narrative-container\"\n    narrative=\"$ctrl.narrative\"\n    customers=\"$ctrl.customers\">\n  </np-narrative-detail> \n</div>\n`;\n\ninterface INarrativeContainerBindings extends ng.IComponentController {\n\n}\nclass NarrativeContainerController implements INarrativeContainerBindings {\n  narrative: INarrative;\n  customers: ICustomer[];\n  static $inject = ['$q', '$routeParams', 'modelSvc', 'dataSvc', 'authSvc'];\n  constructor(\n    private $q: ng.IQService,\n    private $routeParams,\n    private modelSvc: IModelSvc,\n    private dataSvc: IDataSvc,\n    private authSvc) {\n    //\n  }\n\n  $onInit() {\n    this._resolveNarrative()\n      .then(({ n, c }) => {\n        this.narrative = n;\n        this.customers = c;\n      });\n  }\n\n  logout() {\n    this.authSvc.logout();\n  }\n\n  private _resolveNarrative(): ng.IPromise<{ n: INarrative, c: ICustomer[] }> {\n    const pathOrId = this.$routeParams.narrativePath;\n    const cachedNarr = this.modelSvc.getNarrativeByPathOrId(pathOrId);\n    let cachedCustomer;\n\n    const doPullFromCache = existy(cachedNarr)\n      && existy(cachedNarr.path_slug)\n      && existy(cachedNarr.timelines)\n      && (cachedNarr.path_slug.en === pathOrId || cachedNarr._id === pathOrId);\n\n    if (doPullFromCache) {\n      cachedCustomer = this.modelSvc.customers[cachedNarr.customer_id];\n      return this.$q.resolve({ n: cachedNarr, c: [cachedCustomer] });\n    }\n\n    return this.dataSvc.getNarrative(pathOrId)\n      .then((narrativeData: INarrative) => {\n        return this.dataSvc.getCustomer(narrativeData.customer_id, true)\n          .then((customer: ICustomer) => ({ n: narrativeData, c: [customer] }));\n      });\n  }\n}\n\n\nexport class NarrativeContainer implements ng.IComponentOptions {\n  template: string = TEMPLATE;\n  controller = NarrativeContainerController;\n  static Name: string = 'npNarrativeContainer'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/npNarrativeContainer.ts","/**\n * Created by githop on 9/22/16.\n */\n\nconst bannerImg = require('../../images/Narrasys_Banner.svg');\nconst logo = require('../../images/customer/Narrasys-Tree.png');\n\nconst TEMPLATE = `\n<div>\n\t<header class=\"nav__header\">\n\t\t<div class=\"nav__item\">\n\t\t\t<img ng-if=\"!$ctrl.inPlayer\" ng-src=\"{{::$ctrl.bannerImg}}\"/>\n\t\t\t<img ng-if=\"$ctrl.inPlayer\" ng-src=\"{{::$ctrl.logo}}\"/>\n\t\t</div>\n\t\t<div class=\"nav__item\" ng-if=\"$ctrl.appState.user._id\">\n\t\t\t<div class=\"nav__controls\">\n\t\t\t\t<div class=\"navControls__item item--left\">\n\t\t\t\t\t<div class=\"nav__user\" ng-click=\"$ctrl.goToAccounts()\">\n\t\t\t\t\t\t<img ng-src=\"{{$ctrl.appState.user.avatar || $ctrl.noAvatar}}\">\n\t\t\t\t\t\t<a class=\"nav__button\" ng-if=\"$ctrl.appState.user\">{{$ctrl.appState.user.name}}</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<a class=\"nav__button\"\n\t\t\t\t\t  ng-if=\"$ctrl.currentPath !== '/projects' && $ctrl.canAccess\" href=\"/#/projects\">My Projects</a>\n\t\t\t\t\t<a class=\"nav__button\"\n\t\t\t\t\t  ng-if=\"$ctrl.currentPath !== '/stories' && $ctrl.canAccess\" href=\"/#/stories\">My Narratives</a>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"navControls__item item--right\">\n\t\t\t\t\t<a class=\"nav__button\" ng-click=\"$ctrl.onLogout()\">Log out</a>\n\t\t\t\t\t<a class=\"nav__button\" \n\t\t\t\t\t  ng-if=\"$ctrl.canAccess\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://support.narrasys.com\">Help</a>\n\t\t\t\t<div>\n\t\t\t</div>\n\t\t</div>\n\t</header>\n</div>\n`;\n\ninterface INavBindings extends ng.IComponentController {\n  inPlayer: boolean;\n  onLogout: () => void;\n}\n\nclass NavController implements INavBindings {\n  inPlayer: boolean;\n  onLogout: () => void;\n  //\n  bannerImg: string = bannerImg;\n  logo: string = logo;\n  canAccess: boolean;\n  static $inject = ['$location', 'appState', 'authSvc'];\n\n  constructor(\n    private $location: ng.ILocationService,\n    private appState,\n    private authSvc) {\n    //\n  }\n\n  get currentPath() {\n    return this.$location.path();\n  }\n\n  get noAvatar() {\n    return this.appState.noAvatarImg;\n  }\n\n  $onInit() {\n    this.authSvc.authenticate().then(() => {\n      this.canAccess = this.authSvc.userHasRole('admin')\n        || this.authSvc.userHasRole('customer admin')\n        || this.authSvc.userHasRole('instructor');\n    });\n  }\n\n  goToAccounts() {\n    if (this.canAccess) {\n      this.$location.url('/account');\n    }\n  }\n}\n\ninterface IComponentBindings {\n  [binding: string]: '<' | '<?' | '&' | '&?' | '@' | '@?' | '=' | '=?';\n}\n\nexport class Nav implements ng.IComponentOptions {\n  bindings: IComponentBindings = {\n    inPlayer: '<?',\n    onLogout: '&?'\n  };\n  template: string = TEMPLATE;\n  controller = NavController;\n  static Name: string = 'npNav'; // tslint:disable-line\n}\n/* tslint:disable */\n// export default function ittNav() {\n//   return {\n//     restrict: 'EA',\n//     scope: {\n//       onLogout: '&',\n//       inPlayer: '=?'\n//     },\n//     template: `\n//       `,\n//     controller: ['$location', 'appState', 'authSvc', function ($location, appState, authSvc) {\n//       var ctrl = this;\n//       ctrl.currentPath = $location.path();\n//       ctrl.appState = appState;\n//       ctrl.goToAccounts = goToAccounts;\n//       ctrl.bannerImg = bannerImg;\n//       ctrl.noAvatar = appState.noAvatarImg;\n//       ctrl.logo = logo;\n//       authSvc.authenticate().then(function () {\n//         ctrl.canAccess = authSvc.userHasRole('admin') || authSvc.userHasRole('customer admin') || authSvc.userHasRole('instructor');\n//       });\n//\n//       function goToAccounts() {\n//         if (ctrl.canAccess) {\n//           $location.url('/account');\n//         }\n//       }\n//     }],\n//     controllerAs: '$ctrl',\n//     bindToController: true\n//   };\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittNav.ts","/**\n * Created by githop on 6/30/16.\n */\nimport { IModelSvc } from '../interfaces';\nimport { createInstance, IAnnotation, IEpisode, IEvent, IScene } from '../models';\n\nconst TEMPLATE = `\n<div class=\"field\" ng-if=\"$ctrl.isVisible\">\n\t<div class=\"label\">{{$ctrl.labelText}}</div>\n\t<div class=\"input\" ng-class=\"{layouts: $ctrl.labelText === 'Template' && $ctrl.data.producerItemType === 'scene'}\">\n\t\t<select\n\t\t  ng-if=\"$ctrl.context === 'event'\"\n\t\t  ng-model=\"$ctrl.data.templateUrl\"\n\t\t  ng-change=\"$ctrl.onSelectChange($ctrl.data, $ctrl.itemForm)\"\n\t\t  ng-options=\"option.url as option.name for option in $ctrl.data.templateOpts\"\n\t\t  itt-options-disabled=\"option.isDisabled for option in $ctrl.data.templateOpts\">\n    </select>\n    \n    <select\n      ng-if=\"$ctrl.context === 'episode'\"\n\t\t  ng-model=\"$ctrl.data.template_id\"\n\t\t  ng-change=\"$ctrl.onEpisodeTemplateChange()\"\n\t\t  ng-options=\"option.id as option.name for option in $ctrl.data.templateOpts\">\n    </select>\n\t</div>\n</div>`;\n\ninterface ITemplateSelectBindings extends ng.IComponentController {\n  data: IEvent | IEpisode;\n  itemForm?: ng.IFormController;\n  onEpisodeEdit: (ev: any) => ({ $data: { episode: IEpisode, templateId: string } });\n}\n\nclass TemplateSelectController implements ITemplateSelectBindings {\n  data: IEvent | IEpisode;\n  labelText: string = 'Template';\n  isAnnotation: boolean;\n  isEpisode: boolean;\n  context: 'episode' | 'event' = 'event';\n  onEpisodeEdit: (ev: any) => ({ $data: { episode: IEpisode, templateId: string } });\n  static $inject = ['selectService', 'modelSvc'];\n  constructor(public selectService, public modelSvc: IModelSvc) {\n    //\n  }\n\n  $onInit() {\n    this.isAnnotation = this.data instanceof IAnnotation;\n    this.isEpisode = this.data instanceof IEpisode;\n\n    if (this.data instanceof IEpisode) {\n      this.context = 'episode';\n    }\n\n    if (this.isAnnotation) {\n      const currentScene = this.selectService.getSceneName(this.modelSvc.scene((this.data as IScene).scene_id));\n      const isCenterVV = currentScene === 'centerVV';\n      const isMondrian = currentScene === 'centerVVMondrian';\n      //remove H1s for certain layouts - TS-1137\n      if (isCenterVV || isMondrian) {\n        (this.data as IEvent).templateOpts.forEach((tmpl: any) => {\n          if (tmpl.name === 'Header 1') {\n            tmpl.isDisabled = true;\n          }\n        });\n      }\n    }\n\n\n\n    //for episodes, not items (aka events).\n    //need a type of 'episode' for our selectSerivce\n    //switch statement\n    if (!this.data.hasOwnProperty('producerItemType')) {\n      this.data.producerItemType = 'episode';\n      this.labelText = 'Theme';\n    }\n  }\n\n  get isVisible() {\n    return this.selectService.getVisibility('templateSelect');\n  }\n\n  onSelectChange(item: IEvent, form: ng.IFormController) {\n    this.selectService.onSelectChange(item, form);\n  }\n\n  onEpisodeTemplateChange() {\n    const dataToEmit = {\n      $data: {\n        episode: this.data as IEpisode,\n        templateId: this.data.template_id\n      }\n    };\n    this.onEpisodeEdit(dataToEmit);\n  }\n\n}\n\nexport class TemplateSelect implements ng.IComponentOptions {\n  bindings: any = {\n    data: '=',\n    itemForm: '=?',\n    onEpisodeEdit: '&'\n  };\n  template: string = TEMPLATE;\n  controller = TemplateSelectController;\n  static Name: string = 'npTemplateSelect'; // tslint:disable-line\n}\n\n// export default function ittTemplateSelect() {\n//   return {\n//     restrict: 'EA',\n//     scope: {\n//       data: '=',\n//       itemForm: '=?'\n//     },\n//     template: `\n// <div class=\"field\" ng-if=\"$ctrl.isVisible('templateSelect')\">\n// \t<div class=\"label\">{{$ctrl.labelText}}</div>\n// \t<div class=\"input\" ng-class=\"{layouts: $ctrl.labelText === 'Template' && $ctrl.data.producerItemType === 'scene'}\">\n// \t\t<select\n// \t\t  ng-model=\"$ctrl.data.templateUrl\"\n// \t\t  ng-change=\"$ctrl.onSelectChange($ctrl.data, $ctrl.itemForm)\"\n// \t\t  ng-options=\"option.url as option.name for option in $ctrl.data.templateOpts\"\n// \t\t  itt-options-disabled=\"option.isDisabled for option in $ctrl.data.templateOpts\">\n//     </select>\n// \t</div>\n// </div>\n//       `,\n//     controller: ['selectService', 'modelSvc', function (selectService, modelSvc) {\n//       var ctrl = this;\n//       ctrl.isVisible = selectService.getVisibility.bind(selectService);\n//       ctrl.onSelectChange = selectService.onSelectChange.bind(selectService);\n//       ctrl.getSelectOpts = selectService.getSelectOpts.bind(selectService);\n//       ctrl.labelText = 'Template';\n//\n//       var isAnnotation = ctrl.data.producerItemType === 'annotation';\n//       var currentScene, isCenterVV, isMondrian;\n//       if (isAnnotation) {\n//         currentScene = selectService.getSceneName(modelSvc.scene(ctrl.data.scene_id));\n//         isCenterVV = currentScene === 'centerVV';\n//         isMondrian = currentScene === 'centerVVMondrian';\n//         //remove H1s for certain layouts - TS-1137\n//         if (isCenterVV || isMondrian) {\n//           angular.forEach(ctrl.data.templateOpts, function (tmpl) {\n//             if (tmpl.name === 'Header 1') {\n//               tmpl.isDisabled = true;\n//             }\n//           });\n//         }\n//       }\n//\n//\n//       //for episodes, not items (aka events).\n//       //need a type of 'episode' for our selectSerivce\n//       //switch statement\n//       if (!ctrl.data.hasOwnProperty('producerItemType')) {\n//         ctrl.data.producerItemType = 'episode';\n//         ctrl.labelText = 'Theme';\n//       }\n//     }],\n//     controllerAs: '$ctrl',\n//     bindToController: true\n//\n//   };\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittTemplateSelect.ts","import { existy, pick } from '../services/ittUtils';\n\nimport { SOCIAL_IMAGE_SQUARE, SOCIAL_IMAGE_WIDE } from '../constants';\nimport { INarrative, ITempTimeline, ITimeline } from '../models';\n/**\n * Created by githop on 6/16/16.\n */\n\nconst TEMPLATE = `\n<div class=\"timeline__edit\">\n  <form name=\"tlEditForm\">\n    <label for=\"tlName\">Name\n      <itt-validation-tip ng-if=\"tlEditForm.name.$invalid\" text=\"Name is required\"></itt-validation-tip>\n    </label>\n    <input type=\"text\" name=\"name\" ng-model=\"$ctrl._timeline.name.en\" id=\"tlName\" required>\n    <label for=\"tlDescription\">Description</label>\n    <textarea id=\"tlDescription\" name=\"description\" placeholder=\"Insert Description...\"\n              ng-model=\"$ctrl._timeline.description.en\"></textarea>\n    <np-guest-accessible-url narrative=\"$ctrl.narrative\" timeline=\"$ctrl._timeline\"></np-guest-accessible-url>\n    <label>Hidden</label>\n    <input type=\"checkbox\" ng-model=\"$ctrl._timeline.hidden\"/>\n    <itt-enable-socialshare\n      ng-if=\"$ctrl.trueAdmin\"\n      narrative=\"$ctrl.narrative\"\n      container-id=\"{{$ctrl.containerId}}\"\n      editor-form=\"tlEditForm\"\n      timeline=\"$ctrl._timeline\">\n    </itt-enable-socialshare>\n    <div class=\"ancillaryNav\">\n      <button class=\"button\" ng-disabled=\"tlEditForm.$invalid || $ctrl._timeline.error\"\n              ng-click=\"$ctrl.handleUpdate($ctrl._timeline)\">Save\n      </button>\n      <button class=\"button\" ng-click=\"$ctrl.confirmDelete()\">Delete</button>\n      <button class=\"button\" ng-click=\"$ctrl.onDone()\">Cancel</button>\n    </div>\n  </form>\n</div>\n<np-modal modal-class=\"modal__center-center\" ng-if=\"$ctrl.underDelete\">\n  <h2>Are you sure?</h2>\n  <p>delete: </p>\n  <p class=\"under__delete\"><strong>{{$ctrl._timeline.name.en}}?</strong></p>\n  <button ng-click=\"$ctrl.onDelete({ $timeline: $ctrl._timeline })\">yes</button>\n  <button ng-click=\"$ctrl.underDelete = false\">no</button>\n</np-modal>\n`;\n\ninterface ITimelineEditorBindings extends ng.IComponentController {\n  timeline: ITimeline;\n  narrative: INarrative;\n  containerId: string;\n  onUpdate: ($ev: { $timeline: ITimeline }) => ({ $timeline: ITimeline });\n  onDelete: ($ev: { $timeline: ITimeline }) => ({ $timeline: ITimeline });\n  onDone: () => void;\n}\n\nclass TimelineEditorController implements ITimelineEditorBindings {\n  timeline: ITimeline | ITempTimeline;\n  narrative: INarrative;\n  containerId: string;\n  onUpdate: ($ev: { $timeline: ITimeline }) => ({ $timeline: ITimeline });\n  onDelete: ($ev: { $timeline: ITimeline }) => ({ $timeline: ITimeline });\n  onDone: () => void;\n  host: string;\n  private _timeline: ITimeline;\n  private trueAdmin: boolean;\n  private underDelete: boolean = false;\n  static $inject = ['$location', 'config', 'uploadsService', 'authSvc'];\n  constructor(\n    private $location: ng.ILocationService,\n    private config,\n    private uploadsService,\n    private authSvc) {\n    //\n  }\n\n  $onInit() {\n    this.host = this.$location.protocol() + ':' + this.config.apiDataBaseUrl;\n    this.trueAdmin = this.authSvc.userHasRole('admin');\n    if (existy(this.timeline) && (this.timeline as ITempTimeline).isTemp === true) {\n      this._timeline = this.timeline;\n    } else {\n      this._timeline = angular.copy(this.timeline);\n    }\n  }\n\n  handleUpdate(t: ITempTimeline) {\n    const tlFileds: Array<keyof ITempTimeline> = [\n      '_id',\n      'name',\n      'description',\n      'hidden',\n      'sort_order',\n      'path_slug',\n      'episode_segments',\n      'timeline_image_ids'\n    ];\n\n    const tlToSave = pick(t, tlFileds);\n\n    const socialImagesToUpload: Array<{file: FileList, tag: string}> = [];\n    if (t.social_image_square) {\n      socialImagesToUpload.push({ file: t.social_image_square.file, tag: SOCIAL_IMAGE_SQUARE });\n    }\n\n    if (t.social_image_wide) {\n      socialImagesToUpload.push({ file: t.social_image_wide.file, tag: SOCIAL_IMAGE_WIDE });\n    }\n\n    if (socialImagesToUpload.length > 0) {\n      this.uploadsService.uploadTaggedFiles(socialImagesToUpload, this.containerId)\n        .then((assets) => {\n          assets.forEach((asset: any) => tlToSave.timeline_image_ids.push(asset.file._id));\n          this.uploadsService.resetUploads();\n          this.onUpdate({ $timeline: tlToSave });\n          return;\n        });\n    } else {\n      this.onUpdate({ $timeline: tlToSave });\n    }\n  }\n\n  confirmDelete() {\n    this.underDelete = true;\n  }\n}\n\nexport class TimelineEditor implements ng.IComponentOptions {\n  bindings: any = {\n    timeline: '<',\n    narrative: '<',\n    containerId: '@?',\n    onUpdate: '&',\n    onDelete: '&',\n    onDone: '&'\n  };\n  template: string = TEMPLATE;\n  controller = TimelineEditorController;\n  static Name: string = 'npTimelineEditor'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/npTimelineEditor.ts","/**\n * Created by githop on 9/28/16.\n */\n\nconst TEMPLATE = `\n<span class=\"ittTooltip\" ng-mouseenter=\"$ctrl.mouseAction(true)\" ng-mouseleave=\"$ctrl.mouseAction(false)\">\n\t<ng-transclude></ng-transclude>\n\t<span\n\t  ng-if=\"$ctrl.showTip\" ng-class=\"$ctrl.css\" style=\"text-indent: 0;\">{{$ctrl.tipText}}</span>\n</span>\n`;\n\ninterface ITooltipBindings extends ng.IComponentController {\n  tipText: string;\n  css?: string;\n}\n\nclass TooltipController implements ITooltipBindings {\n  tipText: string;\n  css?: string;\n  //\n  showTip: boolean;\n\n  $onInit() {\n    if (this.css == null) {\n      this.css = 'ittTooltip__text';\n    }\n  }\n\n  mouseAction(bool: boolean) {\n    this.showTip = bool;\n  }\n}\n\ninterface IComponentBindings {\n  [binding: string]: '<' | '<?' | '&' | '&?' | '@' | '@?' | '=' | '=?';\n}\n\nexport class Tooltip implements ng.IComponentOptions {\n  transclude = true;\n  bindings: IComponentBindings = {\n    tipText: '@',\n    css: '@?'\n  };\n  template: string = TEMPLATE;\n  controller = TooltipController;\n  static Name: string = 'npTooltip'; // tslint:disable-line\n}\n/* tslint:disable */\n// export default function ittTooltip() {\n//   return {\n//     restrict: 'EA',\n//     transclude: true,\n//     scope: {\n//       tipText: '@',\n//       css: '@?'\n//     },\n//     template: [\n//       '<span class=\"ittTooltip\">',\n//       '\t<ng-transclude></ng-transclude>',\n//       '\t<span ng-if=\"showTip\" class=\"{{css ? css : \\'ittTooltip__text\\'}}\" style=\"text-indent: 0;\">{{tipText}}</span>',\n//       '</span>'\n//     ].join(''),\n//     link: function (scope, elm) {\n//       elm.mouseenter(onMouseenter);\n//       function onMouseenter() {\n//         scope.$apply(function () {\n//           scope.showTip = true;\n//         });\n//       }\n//\n//       elm.mouseleave(onMouseleave);\n//       function onMouseleave() {\n//         scope.$apply(function () {\n//           scope.showTip = false;\n//         });\n//       }\n//     }\n//   };\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittTooltip.ts","import {\n  ILinkValidationMessage,\n  ILinkValidFields,\n  IValidationSvc,\n  IXFrameOptsResult,\n  Partial\n} from '../interfaces';\nimport { IEpisode, ILink, ILinkStatus } from '../models';\n\n/**\n * Created by githop on 6/30/16.\n */\n\nexport type TUrlFieldContexts = 'episode' | 'producer' | 'editor' | 'editor-video';\n\nconst TEMPLATE = `\n<div class=\"field\">\n  <div class=\"label\">{{$ctrl.label || \"URL\"}}\n    <span ng-repeat=\"(field, val) in $ctrl.validatedFields\">\n      <itt-validation-tip ng-if=\"val.showInfo\" text=\"{{val.message}}\" do-info=\"val.doInfo\"></itt-validation-tip>\n     </span>\n  </div>\n  <div class=\"input\" ng-if=\"$ctrl.context !== 'episode'\">\n    <div  class=\"ittUrl__escapeLink\">\n      <input\n        id=\"urlEscapeLink\"\n        type=\"checkbox\"\n        ng-change=\"$ctrl.updateTemplateOpts()\"\n        ng-true-value=\"'_blank'\"\n        ng-false-value=\"'_self'\"\n        ng-disabled=\"!$ctrl.canEmbed\"\n        ng-model=\"$ctrl.data.target\"/>\n      <span class=\"escapelink\"></span>\n      <label for=\"urlEscapeLink\">Force new tab</label>\n\n    </div>\n    <input\n      type=\"text\"\n      name=\"itemUrl\"\n      ng-blur=\"$ctrl.onUrlFieldChange($ctrl.eventUrl)\"\n      ng-focus=\"$ctrl.onFocused()\"\n      ng-model=\"$ctrl.eventUrl\"/>\n  </div>\n  <div class=\"input\" ng-if=\"$ctrl.context === 'episode'\">\n    <input\n      type=\"text\"\n      ng-model=\"$ctrl.data\"\n      itt-valid-episode-url\n      on-validation-notice=\"$ctrl.handleEpisodeValidationMessage($notice)\"/>\n    <button ng-if=\"$ctrl.data\" ng-click=\"$ctrl.onAttach({$url: $ctrl.data})\">Attach Video</button>\n  </div>\n</div>\n`;\n\ninterface IUrlFieldBindings extends ng.IComponentController {\n  data: ILink | IEpisode;\n  eventUrl?: string;\n  context: 'episode' | 'producer' | 'editor' | 'editor-video';\n  label: string;\n  onAttach: (ev) => ({$url: string});\n  ittItemForm: ng.IFormController;\n}\n\nclass UrlFieldController implements IUrlFieldBindings {\n  data: ILink;\n  context: 'episode' | 'producer' | 'editor' | 'editor-video' = 'producer';\n  label: string;\n  eventUrl: string;\n  onAttach: (ev) => ({$url: string});\n  ittItemForm: ng.IFormController;\n  validatedFields: Partial<ILinkValidFields> = {\n    url: null,\n    iframeHeaders: null,\n    '404': null,\n    '301': null,\n    mixedContent: null\n  };\n  message: ILinkValidationMessage = {\n    showInfo: false,\n    message: '',\n    doInfo: false\n  };\n  canEmbed: boolean;\n\n  static $inject = ['validationSvc'];\n  constructor(\n    private validationSvc: IValidationSvc) {\n    //\n  }\n\n  $onInit() {\n    this.eventUrl = this.data.url;\n    if (this.context !== 'episode') {\n      this.onUrlFieldChange(this.eventUrl, this.data.url_status);\n    }\n  }\n\n  updateTemplateOpts() {\n    this.data.templateOpts = this._disableTemplateOpts(this.data.target === '_blank');\n  }\n\n  onFocused(): void {\n    // if user focuses input, eagerly set form to invalid and allow blur event to handle recovery\n    this._setValidity(false);\n  }\n\n  onUrlFieldChange(url: string, urlStatus?: ILinkStatus): void {\n    if (url === 'https://') {\n      this._setValidity(false);\n      return;\n    }\n\n    this._itemUrlValidationPipeline(url, urlStatus, this.context);\n  }\n\n  handleEpisodeValidationMessage(notice) {\n    this.validatedFields = {\n      kaltura: null,\n      youtube: null,\n      html5: null,\n      error: null\n    };\n    Object.assign(this.validatedFields, notice);\n  }\n\n  private async _inspectHeaders(url, cachedResults, context?: TUrlFieldContexts) {\n    try {\n      const {\n        canEmbed,\n        location,\n        urlStatus\n      }: IXFrameOptsResult = await this.validationSvc.inspectHeadersAsync(url, this, cachedResults, context);\n\n      this._setValidity(true);\n      const isMixedContent = this.validationSvc.mixedContent(location || url, this);\n      //since all HTTP links are checked, it is possible that the target site\n      //allows for iframing, but is not served from a secure context so it would not\n      //be iframeable in our app.\n      this.canEmbed = canEmbed && !isMixedContent;\n      if (!this.canEmbed) {\n        this.data.target = '_blank';\n      }\n      this.data.templateOpts = this._disableTemplateOpts(!this.canEmbed);\n      this.data.url_status = Object.assign(new ILinkStatus(), urlStatus);\n      this.data.url = location || url;\n      this.eventUrl = this.data.url;\n    } catch (e) {\n      this._setValidity(false);\n    }\n  }\n\n  private _itemUrlValidationPipeline(url: string, cachedResults?: ILinkStatus, context?: TUrlFieldContexts): void {\n    this._resetFields();\n    const isValidUrl = this._setValidity(this.validationSvc.validateUrl(url, this));\n\n    if (isValidUrl) { //only do async stuff if necessary\n      this._inspectHeaders(url, cachedResults, context);\n    }\n  }\n\n  private _disableTemplateOpts(val: boolean): any[] {\n    if (val === true) {\n      this.data.showInlineDetail = false;\n    }\n\n    if (this.context === 'editor' || this.context === 'editor-video') {\n      //editors do not have the option to specify the template.\n      return;\n    }\n\n    return this.data.templateOpts.map((opt) => {\n      if (opt.name === 'Embedded link' || opt.name === 'Link modal') {\n        opt.isDisabled = val;\n      }\n      return opt;\n    });\n  }\n\n  private _setValidity(val: boolean, field: string = 'itemUrl'): boolean {\n    if (this.ittItemForm != null) {\n      this.ittItemForm.$setValidity(field, val, null);\n    }\n    return val;\n  }\n\n  private _resetFields(): void {\n    Object.keys(this.validatedFields)\n      .forEach((key: string) => this.validatedFields[key] = this.message);\n  }\n}\n\nexport class UrlField implements ng.IComponentOptions {\n  bindings: any = {\n    data: '=',\n    context: '@?',\n    label: '@',\n    onAttach: '&',\n    ittItemForm: '<?'\n  };\n  template: string = TEMPLATE;\n  controller = UrlFieldController;\n  static Name: string = 'npUrlField'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/npUrlField.ts","/**\n *\n * Created by githop on 6/30/16.\n */\nimport {IEvent} from '../models';\n\nconst TEMPLATE = `\n<div class=\"field\" ng-if=\"$ctrl.selectService.getVisibility('videoPosition')\">\n  <div class=\"label\">Video Postion</div>\n  <div class=\"input\">\n    <select\n      ng-model=\"$ctrl.data.layouts[0]\"\n      ng-options=\"option.value as option.name for option in $ctrl.selectService.getSelectOpts('video')\">\n    </select>\n  </div>\n</div>\n`;\n\ninterface IVideoPositionSelectBindings {\n  data: IEvent;\n}\n\nclass VideoPositionSelectController implements IVideoPositionSelectBindings {\n  data: IEvent;\n  static $inject = ['$rootScope', '$timeout', 'selectService'];\n  constructor(\n    public $rootScope: ng.IRootScopeService,\n    public $timeout: ng.ITimeoutService,\n    public selectService) {\n    //\n  }\n}\n\nexport class VideoPositionSelect implements ng.IComponentOptions {\n  bindings: any = {\n    data: '='\n  };\n  template: string = TEMPLATE;\n  controller = VideoPositionSelectController;\n  static Name: string = 'ittVideoPositionSelect'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittVideoPositionSelect.ts","/* WARN I badly misnamed this; it's used in  producer.  TODO eliminate the sxs prefix, it never made sense anyway */\n\nimport {IDataSvc, IModelSvc} from '../interfaces';\n\nimport {SOCIAL_IMAGE_SQUARE, SOCIAL_IMAGE_WIDE} from '../constants';\nimport { IAsset } from '../models';\nimport { omit } from '../services/ittUtils';\n\ninterface ISxsContainerAssetsBindings {\n  containerId: string;\n  mimeKey?: string;\n  context?: string;\n  onAssetSelect?: ($assetId: string) => string;\n  onAssetRemove?: ($ev: { $assetId: string }) => ({ $assetId: string });\n}\n\nclass SxsContainerAssetsController implements ng.IComponentController, ISxsContainerAssetsBindings {\n  containerId: string;\n  mimeKey?: string;\n  context?: string;\n  onAssetSelect?: ($assetId) => string;\n  onAssetRemove?: ($ev: { $assetId: string }) => ({ $assetId: string });\n  //\n  mimes: string;\n  isAdmin: boolean;\n  isCustAdmin: boolean;\n  canAccess: boolean;\n  showParent: boolean;\n  container: any;\n  assets: { [assetId: string]: IAsset };\n  onlyImages: boolean;\n  gridView: boolean;\n  assetToDelete: IAsset;\n  static $inject = ['$rootScope', '$q', 'dataSvc', 'modelSvc', 'awsSvc', 'appState', 'MIMES', 'authSvc'];\n  constructor(\n    public $rootScope: ng.IRootScopeService,\n    private $q: ng.IQService,\n    public dataSvc: IDataSvc,\n    public modelSvc: IModelSvc,\n    public awsSvc,\n    public appState,\n    public MIMES,\n    public authSvc) { }\n\n  $onInit() {\n    this.$q((resolve, reject) => {\n      if (this.modelSvc.containers[this.containerId]) {\n        // console.log(\"Container already loaded\");\n        this.container = this.modelSvc.containers[this.containerId];\n        if (!this.container.assetsHaveLoaded) {\n          // console.log(\"Assets had not loaded, getting them\");\n          this.dataSvc.getContainerAssets(this.containerId)\n            .then(resolve);\n        } else {\n          resolve();\n        }\n\n      } else {\n        // console.log(\"Getting container\");\n        this.dataSvc.getContainer(this.containerId).then(() => {\n          this.container = this.modelSvc.containers[this.containerId];\n          this.dataSvc.getContainerAssets(this.containerId)\n            .then(resolve);\n        });\n      }\n    }).then(_ => {\n      //filter assets if necessary\n      if (this.context === 'narrative') {\n        this.assets = Object.keys(this.modelSvc.assets)\n          .reduce((newAssets: any, assetKey: any) => {\n            const asset = this.modelSvc.assets[assetKey];\n            if (asset.tags && asset.tags[0] === SOCIAL_IMAGE_SQUARE || asset.tags[0] === SOCIAL_IMAGE_WIDE) {\n              newAssets[assetKey] = asset;\n            }\n            return newAssets;\n          }, {});\n      } else {\n        this.assets = this.modelSvc.assets;\n      }\n\n      this.isCustAdmin = this.authSvc.userHasRole('customer admin');\n      this.isAdmin = this.authSvc.userHasRole('admin');\n      this.canAccess = this.isCustAdmin || this.isAdmin;\n\n      if (this.MIMES[this.mimeKey]) {\n        this.mimes = this.MIMES[this.mimeKey];\n        if (this.isAdmin) {\n          this.mimes += ',video/*';\n        }\n      } else {\n        this.mimes = this.MIMES.default;\n      }\n    });\n  }\n\n  up() {\n    this.showParent = true;\n  }\n\n  toggleImages() {\n    this.onlyImages = !this.onlyImages;\n  }\n\n  toggleGrid() {\n    this.gridView = !this.gridView;\n  }\n\n  assetClick(assetId) {\n    console.log('User clicked on asset ', assetId);\n    //when it comes time to emit data from a component\n    //\"isolate scope &\" is a better fit than pubsub with $rootScope\n    if (this.context && this.context === 'narrative') {\n      this.onAssetSelect({$assetId: assetId});\n      return;\n    }\n    this.$rootScope.$emit('UserSelectedAsset', assetId);\n  }\n\n  requestDeleteAsset($asset: IAsset, $ev: ng.IAngularEvent) {\n    // to avoid triggering the click handler on the <tr> element.\n    $ev.stopPropagation();\n    this.assetToDelete = $asset;\n  }\n\n  deleteAsset(id: string): void {\n    this.dataSvc.deleteAsset(id)\n      .then(() => {\n        //delete local copies on scope and modelSvc\n        this.assets = omit(this.assets, id);\n        this.modelSvc.assets = omit(this.modelSvc.assets, id);\n      })\n      .catch(e => console.log(e))\n      .finally(() => this.assetToDelete = null);\n  }\n}\n\nexport class SxsContainerAssets implements ng.IComponentOptions {\n  bindings: any = {\n    containerId: '@',\n    mimeKey: '@?',\n    context: '@?',\n    onAssetSelect: '&?'\n  };\n  templateUrl: string = 'templates/producer/container-assets.html';\n  controller: ng.IComponentController = SxsContainerAssetsController;\n  static Name: string = 'sxsContainerAssets'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/sxsContainerAssets.ts","/**\n * Created by githop on 5/26/17.\n */\nimport { IAsset, INarrative, ITimeline } from '../../models';\n\nimport { IDataSvc, IimageResize } from '../../interfaces';\nimport { IModelSvc } from '../../services/modelSvc/modelSvc';\n\nimport { SOCIAL_IMAGE_SQUARE, SOCIAL_IMAGE_WIDE, TSocialTagTypes } from '../../constants';\n/**\n * Created by githop on 5/22/17.\n */\n\n/* tslint:disable: no-trailing-whitespace */\nconst TEMPLATE = `\n<div ng-if=\"$ctrl.narrative.enable_social_sharing\" class=\"socialshare-filedrop\">\n\n  <div ng-repeat=\"(tag, imgObj) in $ctrl.images\" ng-class=\"'itt-filedrop__' + tag\">\n    <itt-filedrop\n      on-error=\"$ctrl.display[tag].error\"\n      on-drop=\"$ctrl.handleImage(files, tag)\">\n      \n      <itt-filedrop-target>\n        <div class=\"itt-filedrop__wrapper\" ng-if=\"imgObj.path == null\">\n          <span class=\"itt-filedrop__placeholder --default-image-opacity\" ng-class=\"tag + '--default'\"></span>\n        </div>\n      </itt-filedrop-target>\n\n      <itt-filedrop-preview>\n        <div ng-if=\"imgObj.path\">\n          <div class=\"socialshare__img\">\n            <itt-upload-progress upload=\"$ctrl.uploadsService.uploadsDisplay[tag]\"></itt-upload-progress>\n            <img\n              ng-class=\"{\n                '--drop-error': $ctrl.display[tag].error,\n                '--default-image-opacity': $ctrl.display[tag].defaultFromNarrative\n              }\"\n              ng-src=\"{{imgObj.path}}\"/>\n          </div>\n        </div>\n      </itt-filedrop-preview> \n\n    </itt-filedrop> \n    <div>{{$ctrl.display[tag].text}}</div>\n  </div>\n\n  <!--begin social controls-->\n  <div class=\"socialshare__controls\">\n    <button\n      ng-disabled=\"$ctrl.isUsingDefaultImages()\"\n      ng-click=\"$ctrl.resetImgs()\">\n      {{$ctrl.isUsingDefaultImages() ? 'Default images in use' : 'Use default images'}}\n    </button>\n    <button ng-click=\"$ctrl.toggleBrowseUploaded()\">Browse uploaded</button>\n    <label class=\"button\" for=\"fileBtn\">Upload new</label>\n\n    <input id=\"fileBtn\" type=\"file\" accept=\"image/*\" itt-files-handler on-selected=\"$ctrl.handleImage(files)\"/>\n  </div>\n  <!--end social controls-->\n\n  <!--begin browse uploaded-->\n  <np-modal wrapper-class=\"responsive-modal__wrapper\" modal-class=\"narrative__modal\" ng-if=\"$ctrl.browseUploaded\">\n    <div class=\"scrollContainer\">\n      <sxs-container-assets\n        container-id=\"{{$ctrl.containerId}}\"\n        on-asset-select=\"$ctrl.uploadedAssetSelected($assetId)\"\n        context=\"narrative\">\n      </sxs-container-assets>\n    </div>\n    <div class=\"controlsContainer\">\n      <button ng-click=\"$ctrl.toggleBrowseUploaded()\">Cancel</button>\n    </div>\n  </np-modal>\n  <!--end browse uploaded-->\n</div>\n`;\n\n/* tslint:enable */\n\ninterface IEnableSocialShareBindings {\n  narrative: any;\n  containerId: string;\n  timeline?: any;\n  editorForm: ng.IFormController;\n}\n\ninterface ITagPayload {\n  assetId?: string;\n  name?: string;\n  file?: FileList | null;\n  path: string | null;\n}\n\ninterface IDisplay {\n  text: string;\n  error: boolean;\n  defaultFromNarrative: boolean;\n}\n\ninterface ITagDisplay {\n  social_image_square: IDisplay;\n  social_image_wide: IDisplay;\n}\n\ninterface IImages {\n  social_image_square: ITagPayload;\n  social_image_wide: ITagPayload;\n}\n\nconst DEFAULT_DISPLAY_TEXT = {\n  social_image_square: 'Recommend 576 x 576',\n  social_image_wide: 'Recommend 1200 x 630'\n};\n\nconst initialImages = {\n  social_image_square: { file: null, path: null },\n  social_image_wide: { file: null, path: null }\n};\n\nconst initialDisplay = {\n  social_image_square: {\n    text: DEFAULT_DISPLAY_TEXT[SOCIAL_IMAGE_SQUARE],\n    error: false,\n    defaultFromNarrative: false\n  },\n  social_image_wide: {\n    text: DEFAULT_DISPLAY_TEXT[SOCIAL_IMAGE_WIDE],\n    error: false,\n    defaultFromNarrative: false\n  }\n};\n\nclass EnableSocialshareController implements ng.IComponentController, IEnableSocialShareBindings {\n  narrative: INarrative;\n  timeline: ITimeline;\n  containerId: string;\n  editorForm: ng.IFormController;\n  //\n  browseUploaded: boolean = false;\n  images: IImages;\n  display: ITagDisplay;\n  model: any;\n  private files = {\n    social_image_square: { file: null },\n    social_image_wide: { file: null }\n  };\n  private type: 'narrative' | 'timeline';\n\n  static $inject = ['$q', '$timeout', 'uploadsService', 'imageResize', 'dataSvc', 'modelSvc'];\n\n  constructor(private $q: ng.IQService,\n              private $timeout: ng.ITimeoutService,\n              public uploadsService,\n              private imageResize: IimageResize,\n              private dataSvc: IDataSvc,\n              private modelSvc: IModelSvc) {\n  }\n\n  $onInit() {\n    if (this.timeline == null) {\n      this.type = 'narrative';\n    } else {\n      this.type = 'timeline';\n    }\n    this.model = this[this.type];\n    this.setInitialDisplay();\n    this.fetchAssetsOnInit();\n  }\n\n  resetImgs(): void {\n\n    if (this.type === 'timeline') {\n      if (this.narrative.narrative_image_ids && this.narrative.narrative_image_ids.length === 2) {\n        this.narrative.narrative_image_ids.forEach((nAssedId: string) => {\n          const asset = this.modelSvc.assets[nAssedId];\n          const tagType = asset.tags[0];\n          this.images[tagType] = { assetId: asset._id, path: asset.url } as ITagPayload;\n          this.display[tagType].defaultFromNarrative = true;\n        });\n      } else {\n        this.setInitialDisplay();\n      }\n\n      this.timeline.timeline_image_ids = [];\n      return;\n    }\n\n    this.narrative.narrative_image_ids = [];\n    this.images = Object.assign({}, initialImages);\n  }\n\n  isUsingDefaultImages(): boolean {\n    const fromNarrative = this.display[SOCIAL_IMAGE_SQUARE].defaultFromNarrative === true &&\n      this.display[SOCIAL_IMAGE_WIDE].defaultFromNarrative === true;\n\n    const narrasysBranded = this.images[SOCIAL_IMAGE_SQUARE].path == null &&\n      this.images[SOCIAL_IMAGE_WIDE].path == null;\n\n    return fromNarrative || narrasysBranded;\n  }\n\n  toggleBrowseUploaded() {\n    this.browseUploaded = !this.browseUploaded;\n  }\n\n  uploadedAssetSelected(assetId) {\n    const imgAsset = this.modelSvc.assets[assetId];\n    this.setImageFromAsset(imgAsset, false);\n    this.browseUploaded = false;\n  }\n\n  handleImage(data, currTag?: TSocialTagTypes): void {\n    this.checkAspectRatio(data[0])\n      .then(({ images, tag }) => {\n\n        if (currTag != null && currTag !== tag) {\n          return this.$q.reject({ currTag, tag, errorType: 'TAG_MISMATCH' });\n        }\n        this.files[tag].file = data;\n        this.images = Object.assign({}, this.images, images);\n        //set a reference to the uploaded file\n        this.model[tag] = { file: data };\n        this.setValidity();\n      })\n      .catch(e => this.handleTagmismatchError(e.errorType, e.currTag, e.tag));\n  }\n\n  private setInitialDisplay(): void {\n    this.display = angular.copy(initialDisplay);\n    this.images = angular.copy(initialImages);\n  }\n\n  private fetchAssetsOnInit() {\n    if (this.type === 'narrative') {\n      this.fetchNarrativeImageAssets();\n    }\n\n    if (this.type === 'timeline') {\n      this.fetchImageAssetsTimeline();\n    }\n  }\n\n  private fetchNarrativeImageAssets() {\n    if (this.narrative && this.narrative.narrative_image_ids && this.narrative.narrative_image_ids.length > 0) {\n      this.getImageAssets('narrative').then(() => void 0);\n    }\n  }\n\n  private fetchImageAssetsTimeline() {\n\n    interface ILoadStatus {\n      narrative: string[];\n      timeline: string[];\n      use?: 'timeline' | 'narrative';\n    }\n\n    const loadStatus: ILoadStatus = {\n      narrative: [],\n      timeline: []\n    };\n\n    if (this.timeline.timeline_image_ids && this.timeline.timeline_image_ids.length > 0) {\n      // queue timeline ids for loading\n      loadStatus.timeline = [...this.timeline.timeline_image_ids];\n      // set narrative to only be loaded\n      loadStatus.use = 'timeline';\n    } else {\n      loadStatus.use = 'narrative';\n    }\n\n    if (this.narrative.narrative_image_ids && this.narrative.narrative_image_ids.length > 0) {\n      // queue narrative ids for loading\n      loadStatus.narrative = [...this.narrative.narrative_image_ids];\n    }\n\n    const allIds = [...loadStatus.narrative, ...loadStatus.timeline];\n    // the above assets need to be retrieved either from teh API or the cache\n    // only fetch the necessary ids that aren't already cached\n    const idsToFetch = allIds.reduce(\n      (toFetch: string[], id: string) => {\n        if (!this.modelSvc.assets[id]) {\n          toFetch.push(id);\n        }\n        return toFetch;\n      },\n      []\n    );\n\n    const setCorrectImagesFromAssets = () => {\n      loadStatus[loadStatus.use].forEach((id: string) => {\n        // the second parameter when true will set the $ctrl.images (for display) with assets from the\n        // narrative but avoid putting the ID's from these assets into the timeline.timeline_image_ids array\n        this.setImageFromAsset(this.modelSvc.assets[id], loadStatus.use === 'narrative');\n      });\n    };\n\n    // get assets and set them for use in display\n    if (idsToFetch.length > 0) {\n      this.dataSvc.fetchAndCacheAssetsByIds(idsToFetch).then(setCorrectImagesFromAssets);\n    } else {\n      setCorrectImagesFromAssets();\n    }\n  }\n\n  private getImageAssets(type: 'narrative' | 'timeline', skipImgIdArray: boolean = false) {\n    return this.$q((resolve) => {\n      const assetsToFetch = [];\n      this[type][type + '_image_ids'].forEach((assetId: string) => {\n        if (assetId && this.modelSvc.assets[assetId]) {\n          this.setImageFromAsset(this.modelSvc.assets[assetId], skipImgIdArray);\n        } else {\n          assetsToFetch.push(assetId);\n        }\n      });\n\n      if (assetsToFetch.length > 0) {\n        this.dataSvc.fetchAndCacheAssetsByIds(assetsToFetch)\n          .then((assets: IAsset[]) => {\n            assets.forEach((asset: IAsset) => this.setImageFromAsset(asset, skipImgIdArray));\n            return resolve();\n          });\n      }\n\n      return resolve();\n    });\n  }\n\n  private handleTagmismatchError(errorType: string, currentTag: TSocialTagTypes, newTag: TSocialTagTypes) {\n    this.display[currentTag].error = true;\n    this.display[currentTag].text = 'The aspect ratio is not correct.';\n    this.$timeout(\n      () => {\n        this.display[currentTag].error = false;\n        this.display[currentTag].text = DEFAULT_DISPLAY_TEXT[currentTag];\n      },\n      3 * 1000\n    );\n  }\n\n  private checkAspectRatio(file: File) {\n    return this.imageResize.readFileToImg(file)\n      .then((img: HTMLImageElement) => {\n        const tag: TSocialTagTypes = this.imageResize.getImageTagType(img.width, img.height);\n        const images = { [tag]: { name: file.name, path: img.src } };\n        return { images, tag };\n      });\n  }\n\n  private setImageFromAsset(asset: IAsset, skipImgIdArray: boolean = false): void {\n    const tagType = asset.tags[0];\n    const currentImage = this.images[tagType];\n\n    this.images[tagType] = { assetId: asset._id, path: asset.url } as ITagPayload;\n    this.display[tagType].defaultFromNarrative = false;\n    if (skipImgIdArray) {\n      this.display[tagType].defaultFromNarrative = true;\n      this.setValidity();\n      return;\n    }\n\n    if (currentImage && currentImage.assetId) {\n      this.removeImageId(currentImage.assetId);\n    }\n\n    this.addImageId(asset._id);\n    this.setValidity();\n  }\n\n  private setValidity() {\n    const { social_image_square, social_image_wide } = this.images;\n    const isMixedDefault = this.display[SOCIAL_IMAGE_SQUARE].defaultFromNarrative !==\n      this.display[SOCIAL_IMAGE_WIDE].defaultFromNarrative;\n\n    const bothPathsSet = typeof social_image_square.path === 'string' && typeof social_image_wide.path === 'string';\n    const bothPathsNull = social_image_square.path == null && social_image_wide.path == null;\n    // if either path is null consider invalid or we have mixed default images\n    const isValid = !isMixedDefault && (bothPathsSet || bothPathsNull);\n\n    this.editorForm.$setValidity(this.editorForm.$name, isValid, this.editorForm);\n  }\n\n  private removeImageId(targetId: string): void {\n    this.model[this.type + '_image_ids'] = this.model[this.type + '_image_ids'].filter(id => targetId !== id);\n  }\n\n  private addImageId(targetId: string): void {\n    if (!this.model[this.type + '_image_ids'].includes(targetId)) {\n      this.model[this.type + '_image_ids'].push(targetId);\n    }\n  }\n}\n\nexport class EnableSocialshare implements ng.IComponentOptions {\n  bindings: any = {\n    containerId: '@?',\n    narrative: '<',\n    timeline: '<?',\n    editorForm: '<'\n  };\n  template: string = TEMPLATE;\n  controller = EnableSocialshareController;\n  static Name: string = 'ittEnableSocialshare'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/socialshare/ittEnableSocialshare.ts","/**\n * Created by githop on 5/26/17.\n */\nimport {Partial} from '../../interfaces';\nimport {IDataSvc} from '../../services/dataSvc/dataSvc';\n/**\n * Created by githop on 5/18/17.\n */\n\nexport interface IEmailFields {\n  to_email_address: string;\n  to_email_name: string;\n  from_email_address: string;\n  from_name: string;\n  subject: string;\n  message: string;\n  sender_copy: boolean;\n}\n\ntype SupportedProviders = 'facebook' | 'twitter' | 'google' | 'linkedin' | 'email' | 'reddit';\ninterface ISocialShareBindings {\n  providers: SupportedProviders[];\n  subdomain: string;\n  shareTitle?: string;\n  paths: { narrative: string, timeline?: {url: string, id: string} };\n}\n\nclass SocialShareController implements ng.IComponentController, ISocialShareBindings {\n  // bindings\n  providers: SupportedProviders[];\n  subdomain: string;\n  shareTitle?: string;\n  paths: {narrative: string, timeline: {url: null, id: null}};\n  // props\n  stubUrl: string = 'https://thecareerplaybook.narrasys.com/narratives/jim-citrin';\n  expanded: boolean = false;\n  emailshareExpanded: boolean = false;\n  textCopied: boolean = false;\n  email: Partial<IEmailFields> = {};\n  static $inject = ['Socialshare', 'dataSvc'];\n  constructor(public Socialshare, private dataSvc: IDataSvc) {} // tslint:disable-line\n\n  $onInit() {\n    //MVP only works in player, so require full timeline path\n    if (this.subdomain && this.paths && this.paths.narrative && this.paths.timeline) {\n      this.stubUrl = SocialShareController.formatShareUrl(\n        this.subdomain, this.paths.narrative, this.paths.timeline.url\n      );\n    }\n  }\n\n  onShare(provider: SupportedProviders) {\n    // available providers, params: https://github.com/720kb/angular-socialshare\n    const shareConfig = {\n      provider,\n      attrs: {}\n    };\n\n    switch (provider) {\n      case 'email':\n        this.toggleEmailshare();\n        return;\n      case 'linkedin':\n      case 'twitter':\n      case 'reddit':\n        // these providers in 720.kb use the socialshareText attr.\n        Object.assign(shareConfig.attrs, {socialshareText: this.shareTitle}, {socialshareUrl: this.stubUrl});\n        break;\n      default:\n        Object.assign(shareConfig.attrs, { socialshareUrl: this.stubUrl });\n    }\n\n    this.Socialshare.share(shareConfig);\n    this.closeAll();\n  }\n\n  toggleExpanded() {\n    this.expanded = !this.expanded;\n    this.textCopied = false;\n    this.emailshareExpanded = false;\n  }\n\n  ontextCopied(e: any) {\n    this.textCopied = true;\n  }\n\n  handleEmailShare(email: IEmailFields, ngForm: ng.IFormController) {\n    if (ngForm.$invalid) {\n      ngForm.$error.required.forEach(field => {\n        field.$setTouched();\n      });\n      return;\n    }\n    this.dataSvc.sendSocialshareEmail(this.paths.timeline.id, email)\n      .then(resp => this.closeAll())\n      .catch(e => console.log('error!', e));\n\n  }\n\n  private static formatShareUrl(subDomain: string, narrativePath: string, timelinePath: string): string {\n    let protocol = 'https://';\n    let rootDomain = '.narrasys.com/narratives/';\n    return `${protocol}${subDomain}${rootDomain}${narrativePath}/${timelinePath}`;\n  }\n\n  private closeAll() {\n    this.expanded = false;\n    this.textCopied = false;\n    this.emailshareExpanded = false;\n  }\n\n  private toggleEmailshare() {\n    this.emailshareExpanded = !this.emailshareExpanded;\n  }\n\n}\n\nexport class IttSocialShare implements ng.IComponentOptions {\n  bindings: any = {\n    providers: '<',\n    subdomain: '@',\n    shareTitle: '@',\n    paths: '<'\n  };\n  templateUrl: string = 'scripts/directives/socialshare/social-share.html';\n  controller = SocialShareController;\n  static Name: string = 'ittSocialShare'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/socialshare/ittSocialShare.ts","/**\n * Created by githop on 6/5/17.\n */\n\nconst TEMPLATE = `\n<div class=\"itt-filedrop itt-filedrop--border\" ng-class=\"{'--drop-error': $ctrl.onError}\"> \n  <div ng-transclude=\"target\"></div>\n  \n   <div class=\"itt-filedrop__wrapper\" ng-if=\"$ctrl.onError\">\n    <span class=\"itt-filedrop__placeholder --drop-error\"></span>\n   </div>\n  \n  <div ng-if=\"!$ctrl.error\" ng-transclude=\"preview\"></div>\n</div>\n`;\n\ninterface IFileDropBindings extends ng.IComponentController {\n  onError: boolean;\n  onDrop: ($ev: {files: FileList}) => { files: FileList };\n}\n\nclass FiledropController implements IFileDropBindings {\n  onError: boolean;\n  onDrop: ($ev: {files: FileList}) => { files: FileList };\n  static $inject = ['$element'];\n  constructor(public $element) {\n  }\n\n  $postLink() {\n    this.attachListeners();\n  }\n\n  $onDestroy() {\n    this.removeListeners();\n  }\n\n  private attachListeners(): void {\n    this.$element[0].addEventListener('drop', (e: Event) => this.handleDrop(e));\n    this.$element[0].addEventListener('dragover', (e: Event) => this.handleDragOver(e));\n    this.$element[0].addEventListener('dragenter', (e: Event) => this.handleDragEnter(e));\n    this.$element[0].addEventListener('dragleave', (e: Event) => this.handleDragLeave(e));\n  }\n\n  private removeListeners(): void {\n    this.$element[0].removeEventListener('drop', (e: Event) => this.handleDrop(e));\n    this.$element[0].removeEventListener('dragover', (e: Event) => this.handleDragOver(e));\n    this.$element[0].removeEventListener('dragenter', (e: Event) => this.handleDragEnter(e));\n    this.$element[0].removeEventListener('dragleave', (e: Event) => this.handleDragLeave(e));\n  }\n\n  private handleDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.handleDragLeave(e);\n    this.onDrop({ files: e.dataTransfer.files });\n  }\n\n  private handleDragOver(e) {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    this.handleDragEnter(e);\n    return false;\n  }\n\n  private handleDragEnter(ev) {\n    this.$element.children().addClass('itt-filedrop--droppable');\n  }\n\n  private handleDragLeave(ev) {\n    this.$element.children().removeClass('itt-filedrop--droppable');\n  }\n}\n\ninterface IComponentBindings {\n  [binding: string]: '<' | '<?' | '&' | '&?' | '@' | '@?' | '=' | '=?';\n}\nexport class Filedrop implements ng.IComponentOptions {\n  transclude = {\n    'target': 'ittFiledropTarget',\n    'preview': 'ittFiledropPreview'\n  };\n  bindings: IComponentBindings = {\n    onError: '<',\n    onDrop: '&'\n  };\n  template: string = TEMPLATE;\n  controller = FiledropController;\n  static Name: string = 'ittFiledrop'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittFiledrop.ts","/**\n * Created by githop on 6/6/17.\n */\n\nimport {IUploadData} from '../interfaces';\n\nconst TEMPLATE = `\n\n<div class=\"upload-progress\" ng-if=\"$ctrl.upload != null\">\n  <h5>{{$ctrl.upload.name}} - {{$ctrl.upload.percent}}%</h5>\n  <progress\n    ng-attr-max=\"{{$ctrl.upload.bytesTotal}}\"\n    ng-attr-value=\"{{$ctrl.upload.bytesSent}}\">\n  </progress>\n</div>\n\n<!--<div class=\"upload-progress\">-->\n  <!--<p>File name! - 80%</p>-->\n  <!--<progress max=\"10\" value=\"8\"></progress>-->\n<!--</div>-->\n\n`;\n\nexport class UploadProgress implements ng.IComponentOptions {\n  static Name: string = 'ittUploadProgress';\n  bindings: any = {\n    upload: '<'\n  };\n  template: string = TEMPLATE;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/ittUploadProgress.ts","const TEMPLATE = `\n<div class=\"standaloneAncillaryPage\">\n\t<np-nav on-logout=\"$ctrl.logout()\"></np-nav>\n\n\t<h1>Projects</h1>\n  <np-episode-list class=\"np-container\" context=\"episode\"></np-episode-list>\n</div>\n`;\n\ninterface IProjectsContainerBindings extends ng.IComponentController {\n}\n\nclass ProjectsContainerController implements IProjectsContainerBindings {\n  static $inject = ['authSvc'];\n  constructor(private authSvc) {\n    //\n  }\n\n  $onInit() {\n    //\n  }\n\n  logout() {\n    this.authSvc.logout();\n  }\n}\nexport class ProjectsContainer implements ng.IComponentOptions {\n  template: string = TEMPLATE;\n  controller = ProjectsContainerController;\n  static Name: string = 'npProjectsContainer'; // tslint:disable-line\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/npProjectsContainer.ts","/**\n * Created by githop on 3/30/17.\n */\n\nimport autofocus from './autofocus';\nimport ittAnnotationField from './ittAnnotationField';\nimport { AssetUploader } from './ittAssetUploader';\nimport { Clipboard } from './ittClipboard';\nimport ittColorSelect from './ittColorSelect';\nimport { Container } from './ittContainer';\nimport { ContainerEpisodes } from './ittContainerEpisodes';\nimport ittDescriptionField from './ittDescriptionField';\nimport ittDisplaySelect from './ittDisplaySelect';\nimport ittDynamicModel from './ittDynamicModel';\nimport { EditPencil } from './ittEditPencil';\nimport ittFileField from './ittFileField';\nimport ittFilesHandler from './ittFilesHandler';\nimport { Flags } from './ittFlags';\nimport ittFlotr2Chart from './ittFlotChart';\nimport { GuestAccessibleUrl } from './guest-accessible-url/npGuestAccessibleUrl';\nimport ittHighlightSelect from './ittHighlightSelect';\nimport ittIframe from './ittIframe';\nimport ittImageField from './ittImageField';\nimport ittItem from './ittItem';\nimport ittItemDetailModal from './ittItemDetailModal';\nimport ittItemEditor from './ittItemEditor';\nimport ittLanguageFlags from './ittLanguageFlags';\nimport ittLanguageSelect from './ittLanguageSelect';\nimport { Loading } from './ittLoading';\nimport ittLogin from './ittLogin';\nimport ittMagnet from './magnet/ittMagnet';\nimport ittMagnetized from './magnet/ittMagnetized';\nimport ittMcQuestion from './ittMcQuestion';\nimport { Modal } from './ittModal';\nimport { NarrativeDetail } from './npNarrativeDetail';\nimport { NarrativeEditor } from './npNarrativeEditor';\nimport { NarrativeList } from './npNarrativeList';\nimport { NarrativesContainer } from './npNarrativesContainer';\nimport { NarrativeContainer } from './npNarrativeContainer';\nimport ittNarrativeTimeline from './ittNarrativeTimeline';\nimport { Nav } from './ittNav';\nimport ittOptionsDisabled from './ittOptionsDisabled';\nimport ittQuestionOptions from './ittQuestionOptions';\nimport ittQuestionTextField from './ittQuestionTextField';\nimport ittQuestionTypeSelect from './ittQuestionTypeSelect';\nimport ittReviewMode from './ittReviewMode';\nimport ittRouteLoading from './ittRouteLoading';\nimport ittScene from './ittScene';\nimport ittSearchPanel from './ittSearchPanel';\nimport ittShowFocus from './ittShowFocus';\nimport { ittShowHideVisualOnly, visualHideAnimation } from './ittShowHideVisualOnly';\nimport ittSpeakerField from './ittSpeakerField';\nimport ittSpeakerThumbField from './ittSpeakerThumbField';\nimport ittTabs from './ittTabs';\nimport ittTab from './ittTab';\nimport { TemplateSelect } from './ittTemplateSelect';\nimport ittTimeField from './ittTimeField';\nimport ittTimeline from './ittTimeline';\nimport { TimelineEditor } from './npTimelineEditor';\nimport ittTimestampSelect from './ittTimestampSelect';\nimport ittTitleField from './ittTitleField';\nimport ittToolbarStory from './ittToolbarStory';\nimport { Tooltip } from './ittTooltip';\nimport ittTranscriptField from './ittTranscriptField';\nimport ittTransitionSelect from './ittTransitionSelect';\nimport ittTypographySelect from './ittTypographySelect';\nimport { UploadTranscripts } from './ittUploadTranscriptsField';\nimport { UrlField } from './npUrlField';\nimport ittUser from './ittUser';\nimport ittValidAsset from './ittValidAsset';\nimport ittValidationTip from './ittValidationTip';\nimport ittValidEpisodeUrl from './ittValidEpisodeUrl';\nimport ittValidPathslug from './ittValidPathslug';\nimport ittValidUrl from './ittValidUrl';\nimport ittVideo from './ittVideo';\nimport { VideoPositionSelect } from './ittVideoPositionSelect';\nimport ittVolumeSlider from './ittVolumeSlider';\nimport ittWidthWatch from './ittWidthWatch';\nimport sxsAddContent from './sxsAddContent';\nimport sxsAnnotatorAutocomplete from './sxsAnnotatorAutocomplete';\nimport { SxsContainerAssets } from './sxsContainerAssets';\nimport sxsInputI18n from './sxsInputI18n';\nimport sxsInputTime from './sxsInputTime';\nimport { EnableSocialshare, IttSocialShare } from './socialshare/index';\nimport { Filedrop } from './ittFiledrop';\nimport { UploadProgress } from './ittUploadProgress';\nimport { ittPlayerContainer } from './ittPlayerContainer';\nimport { ProjectsContainer } from './npProjectsContainer';\n\nconst directivesModule = angular.module('itt.directives', [])\n  .directive('ittAnnotationField', ittAnnotationField)\n  .component(AssetUploader.Name, new AssetUploader())\n  .component(Clipboard.Name, new Clipboard())\n  .directive('ittColorSelect', ittColorSelect)\n  .component(Container.Name, new Container())\n  .component(ContainerEpisodes.Name,  new ContainerEpisodes())\n  .directive('ittDescriptionField', ittDescriptionField)\n  .directive('ittDisplaySelect', ittDisplaySelect)\n  .directive('ittDynamicModel', ittDynamicModel)\n  .component(EditPencil.Name, new EditPencil())\n  .directive('ittFileField', ittFileField)\n  .directive('ittFilesHandler', ittFilesHandler)\n  .component(Flags.Name, new Flags())\n  .directive('ittFlotr2Chart', ittFlotr2Chart)\n  .component(GuestAccessibleUrl.Name, new GuestAccessibleUrl())\n  .directive('ittHighlightSelect', ittHighlightSelect)\n  .directive('ittIframe', ittIframe)\n  .directive('ittImageField', ittImageField)\n  .directive('ittItem', ittItem)\n  .directive('ittItemDetailModal', ittItemDetailModal)\n  .directive('ittItemEditor', ittItemEditor)\n  .directive('ittLanguageFlags', ittLanguageFlags)\n  .directive('ittLanguageSelect', ittLanguageSelect)\n  .component(Loading.Name, new Loading())\n  .directive('ittLogin', ittLogin)\n  .directive('ittMagnet', ittMagnet)\n  .directive('ittMagnetized', ittMagnetized)\n  .directive('ittMcQuestion', ittMcQuestion)\n  .component(Modal.Name, new Modal())\n  .component(NarrativeEditor.Name, new NarrativeEditor())\n  .component(NarrativeList.Name, new NarrativeList())\n  .directive('ittNarrativeTimeline', ittNarrativeTimeline)\n  .component(Nav.Name, new Nav())\n  .directive('ittOptionsDisabled', ittOptionsDisabled)\n  .directive('ittQuestionOptions', ittQuestionOptions)\n  .directive('ittQuestionTextField', ittQuestionTextField)\n  .directive('ittQuestionTypeSelect', ittQuestionTypeSelect)\n  .directive('ittReviewMode', ittReviewMode)\n  .directive('ittRouteLoading', ittRouteLoading)\n  .directive('ittScene', ittScene)\n  .directive('ittSearchPanel', ittSearchPanel)\n  .directive('ittShowFocus', ittShowFocus)\n  .directive('ittShowHideVisualOnly', ittShowHideVisualOnly)\n  .animation('.visual-hide', visualHideAnimation)\n  .directive('ittSpeakerField', ittSpeakerField)\n  .directive('ittSpeakerThumbField', ittSpeakerThumbField)\n  .directive('ittTabs', ittTabs)\n  .directive('ittTab', ittTab)\n  .component(TemplateSelect.Name, new TemplateSelect())\n  .directive('ittTimeField', ittTimeField)\n  .directive('ittTimeline', ittTimeline)\n  .component(TimelineEditor.Name, new TimelineEditor())\n  .directive('ittTimestampSelect', ittTimestampSelect)\n  .directive('ittTitleField', ittTitleField)\n  .directive('ittToolbarStory', ittToolbarStory)\n  .component(Tooltip.Name,  new Tooltip())\n  .directive('ittTranscriptField', ittTranscriptField)\n  .directive('ittTransitionSelect', ittTransitionSelect)\n  .directive('ittTypographySelect', ittTypographySelect)\n  .component(UploadTranscripts.Name, new UploadTranscripts())\n  .component(UrlField.Name, new UrlField())\n  .directive('ittUser', ittUser)\n  .directive('ittValidAsset', ittValidAsset)\n  .directive('ittValidationTip', ittValidationTip)\n  .directive('ittValidEpisodeUrl', ittValidEpisodeUrl)\n  .directive('ittValidPathslug', ittValidPathslug)\n  .directive('ittValidUrl', ittValidUrl)\n  .directive('ittVideo', ittVideo)\n  .component(VideoPositionSelect.Name, new VideoPositionSelect())\n  .directive('ittVolumeSlider', ittVolumeSlider)\n  .directive('ittWidthWatch', ittWidthWatch)\n  .directive('sxsAddContent', sxsAddContent)\n  .directive('sxsAnnotatorAutocomplete', sxsAnnotatorAutocomplete)\n  .component(SxsContainerAssets.Name, new SxsContainerAssets())\n  .directive('sxsInputI18n', sxsInputI18n)\n  .directive('sxsInputTime', sxsInputTime)\n  .directive('autofocus', autofocus)\n  .component(IttSocialShare.Name, new IttSocialShare())\n  .component(EnableSocialshare.Name, new EnableSocialshare())\n  .component(Filedrop.Name, new Filedrop())\n  .component(UploadProgress.Name, new UploadProgress())\n  .directive('ittPlayerContainer', ittPlayerContainer)\n  .component(NarrativeDetail.Name, new NarrativeDetail())\n  .component(NarrativeContainer.Name, new NarrativeContainer())\n  .component(ProjectsContainer.Name, new ProjectsContainer())\n  .component(NarrativesContainer.Name, new NarrativesContainer());\n\nexport default directivesModule;\n\n\n\n// WEBPACK FOOTER //\n// ./app/scripts/directives/directives.module.ts","import { IContainer } from '../../../scripts/models';\nimport { existy, omit } from '../../../scripts/services/ittUtils';\n\nconst TEMPLATE = `\n<div ng-if=\"$ctrl.context === 'episode' && $ctrl.userHasRole('admin') || $ctrl.userHasRole('customer admin')\">\n  <np-loading ng-if=\"$ctrl.loading\"></np-loading>\n\n  <np-container\n    ng-repeat=\"child in $ctrl.root.children\"\n    depth=\"0\"\n    container=\"child\"\n    containers=\"$ctrl.modelSvc.containers\"\n    on-container-remove=\"$ctrl.onRequestContainerRemove($container)\"\n    on-container-click=\"$ctrl.onContainerClick($container)\"\n    on-container-add=\"$ctrl.onContainerAdd($container)\">\n  </np-container>\n  \n  <np-modal class=\"modal__center-center\" ng-if=\"$ctrl.containerToDelete != null\">\n    <h4>Delete</h4>\n    {{$ctrl.containerToDelete.name.en}}?\n    <div>\n      <button ng-click=\"$ctrl.removeContainer($ctrl.containerToDelete)\">Delete</button>\n      <button ng-click=\"$ctrl.containerToDelete = null\">cancel</button>\n    </div>\n  </np-modal>\n  \n  <div ng-if=\"$ctrl.showAdmin\">\n    Looks like you aren't logged in as an admin -- <a ng-click=\"logout();\">try again</a>.\n  </div>\n</div>\n\n<!--for the add timeline modal in /story/:id-->\n<div ng-if=\"$ctrl.context === 'narrative'\">\n      Choose an episode:\n      <button ng-click=\"$ctrl.onCancel()\">cancel</button>\n      <np-container-episodes\n        ng-repeat=\"child in $ctrl.root.children\"\n        depth=\"0\"\n        on-node-click=\"$ctrl.selectEpisode(node)\"\n        for-admin=\"true\"\n        container=\"$ctrl.containers[child._id]\">\n      </np-container-episodes>\n</div>\n`;\n\nconst gatherIds = (container: IContainer, ids = []) => {\n  ids.push(container._id);\n  if (container.children && container.children.length > 0) {\n    container.children.forEach((child) => {\n      gatherIds(child, ids);\n    });\n  }\n  return ids;\n};\n\ninterface IEpisodeListBindings extends ng.IComponentController {\n  context: 'narrative' | 'episode';\n  onCancel?: (e: any) => any;\n  onEpisodeSelect?: (e: any) => any;\n}\n\nclass EpisodeListController implements IEpisodeListBindings {\n  context: 'narrative' | 'episode';\n  onCancel?: (e: any) => any;\n  onEpisodeSelect?: (e: any) => any;\n  loading: boolean;\n  failedLogin: boolean;\n  containers: IContainer[];\n  lastClickedContainer: { container: IContainer, bool: boolean };\n  root: IContainer;\n  containerToDelete: IContainer;\n  static $inject = ['$location', '$timeout', 'authSvc', 'dataSvc', 'modelSvc'];\n  constructor(\n    private $location: ng.ILocationService,\n    private $timeout: ng.ITimeoutService,\n    private authSvc,\n    private dataSvc,\n    private modelSvc) {\n    //\n  }\n\n  get showAdmin() {\n    return !(\n      this.userHasRole('admin')\n      || this.userHasRole('customer admin')\n      || (!this.loading && (this.failedLogin || this.root.children.length === 0))\n    );\n  }\n\n  $onInit() {\n    this.loading = true;\n    this.containers = this.modelSvc.containers;\n    this.dataSvc.getCustomerList();\n    this.dataSvc.getContainerRoot()\n      .then((rootIDs) => {\n        this.root = {\n          children: []\n        } as IContainer;\n\n        rootIDs.forEach((id: string) => {\n          this.root.children.push(this.modelSvc.containers[id]);\n        });\n\n        this.walkContainers(this.root.children, true, true);\n        this.loading = false;\n      })\n      .catch((e: any) => {\n        this.failedLogin = true;\n        this.loading = false;\n      });\n  }\n\n  selectEpisode(e) {\n    this.onEpisodeSelect({ node: e });\n  }\n\n  logout() {\n    this.authSvc.logout();\n  }\n\n  userHasRole(role) {\n    return this.authSvc.userHasRole(role);\n  }\n\n  onContainerAdd($container) {\n    this.walkContainers(this.root.children, !$container.evenOdd, false);\n  }\n\n  onRequestContainerRemove($container) {\n    this.containerToDelete = $container;\n  }\n\n  removeContainer($container) {\n    this.dataSvc.deleteContainer($container._id)\n      .then(() => this.removeContainerSuccess($container))\n      .catch((e: any) => console.log('error removing container!'))\n      .finally(() => this.containerToDelete = null);\n  }\n\n  removeContainerSuccess($container) {\n    this.modelSvc.containers = omit(this.modelSvc.containers, ...gatherIds($container));\n    this.walkContainers(this.root.children, !$container.evenOdd, true);\n  }\n\n  walkContainers(containerList: IContainer[], _evenOdd: boolean, findLastContainer: boolean) {\n    let evenOdd = _evenOdd; // no-param-reassign\n\n    containerList.sort((a, b) => {\n      if (a.name.en.toLowerCase() < b.name.en.toLowerCase()) {\n        return -1;\n      } else if (a.name.en.toLowerCase() > b.name.en.toLowerCase()) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    containerList.forEach((_container) => {\n      const container = this.modelSvc.containers[_container._id];\n      if (container == null) {\n        return;\n      }\n      container.evenOdd = evenOdd;\n      evenOdd = !evenOdd;\n\n      if (container.isActive && findLastContainer) {\n        this.lastClickedContainer = { container, bool: false };\n      }\n\n      if (container.showChildren && container.children) {\n        evenOdd = this.walkContainers((container.children), evenOdd, findLastContainer);\n      }\n    });\n\n    return evenOdd;\n  }\n\n  onContainerClick($container) {\n    if ($container.container.children) {\n\n      if ($container.bool === false) {\n        $container.container.showChildren = !$container.container.showChildren;\n      }\n\n      // have already loaded kids\n      this.walkContainers(this.root.children, true, false);\n    } else {\n\n      this.dataSvc.getContainer($container.container._id).then((id) => {\n        $container.container = this.modelSvc.containers[id];\n\n        if ($container.bool === false) {\n          $container.container.showChildren = true;\n        }\n\n        this.walkContainers(this.root.children, true, false);\n      });\n    }\n    if ($container.bool === true) {\n      if (existy(this.lastClickedContainer)) {\n        if (this.lastClickedContainer.container !== $container.container) {\n          this.lastClickedContainer.container.isActive = false;\n          this.lastClickedContainer = $container;\n          this.lastClickedContainer.container.isActive = true;\n        } else {\n          this.lastClickedContainer.container.isActive = !this.lastClickedContainer.container.isActive;\n        }\n\n      } else {\n        this.lastClickedContainer = $container;\n        this.lastClickedContainer.container.isActive = true;\n      }\n    }\n  }\n\n}\n\ninterface IComponentBindings {\n  [binding: string]: '<' | '<?' | '&' | '&?' | '@' | '@?' | '=' | '=?';\n}\n\nexport class EpisodeList implements ng.IComponentOptions {\n  bindings: IComponentBindings = {\n    context: '@',\n    onCancel: '&?',\n    onEpisodeSelect: '&?'\n  };\n  template: string = TEMPLATE;\n  controller = EpisodeListController;\n  static Name: string = 'npEpisodeList'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/episode/components/episode-list/ittEpisodeList.ts","import * as WebFont from 'webfontloader';\nimport { IFont, IEpisodeTemplate } from '../../scripts/models';\n\nexport interface IEpisodeTheme {\n  sheetLoading: boolean;\n  setTheme(template: IEpisodeTemplate): ng.IPromise<void>;\n  loadThemeStyleSheet(templateId: string): ng.IPromise<void>;\n  loadFontFamily(font: IFont): void;\n}\n\nexport class EpisodeTheme implements IEpisodeTheme {\n  linkId: string = 'np-template-theme';\n  linkTag: HTMLLinkElement;\n  private imgElm: HTMLImageElement;\n  private _sheetLoading: boolean = false;\n  static Name = 'episodeTheme'; // tslint:disable-line\n  static $inject = ['$q', 'config'];\n  constructor(\n    private $q: ng.IQService,\n    private config) {\n    //\n  }\n\n  get sheetLoading() {\n    return this._sheetLoading;\n  }\n\n  set sheetLoading(val: boolean) {\n    this._sheetLoading = val;\n  }\n\n  setTheme(template: IEpisodeTemplate): ng.IPromise<void> {\n    return this.loadThemeStyleSheet(template.id)\n      .then(() => this.loadFontFamily(template.fonts));\n  }\n\n  loadThemeStyleSheet(templateId: string): ng.IPromise<void> {\n    if (this.linkTag != null) {\n      this._changeHref(templateId);\n    } else {\n      this._appendLinkTag(templateId);\n    }\n\n    return this._imgLoadEvtHack();\n  }\n\n  loadFontFamily(font: IFont): void {\n    if (font != null) {\n      WebFont.load(font);\n    }\n  }\n\n  private _imgLoadEvtHack(): ng.IPromise<void> {\n    // https://www.viget.com/articles/js-201-run-a-function-when-a-stylesheet-finishes-loading\n    this.sheetLoading = true;\n    return this.$q((resolve) => {\n      this.imgElm = document.createElement('img');\n      this.imgElm.src = this.linkTag.href;\n      document.body.appendChild(this.imgElm);\n\n      this.imgElm.onerror = () => {\n        document.body.removeChild(this.imgElm);\n        this.sheetLoading = false;\n        return resolve(void 0);\n      };\n    });\n  }\n\n  private _changeHref(id): void {\n    this.linkTag.setAttribute('href', this._getHrefPath(id));\n  }\n\n  private _getHrefPath(templateId): string {\n    return `https:${this.config.apiDataBaseUrl}/v1/templates/${templateId}.css`;\n  }\n\n  private _appendLinkTag(templateId: string): void {\n    const link = document.createElement('link');\n    link.setAttribute('id', this.linkId);\n    link.setAttribute('rel', 'stylesheet');\n    link.setAttribute('href', this._getHrefPath(templateId));\n    this.linkTag = link;\n    document.head.appendChild(this.linkTag);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/episode/services/episodeTheme.service.ts","import {\n  createInstance, IAsset,\n  IContainer,\n  IEpisode,\n  IEpisodeTemplate,\n  IEvent,\n  IScene,\n  ITemplate\n} from '../../scripts/models';\nimport { IDataSvc, IEpisodeTheme, IModelSvc, Partial, ITimelineSvc } from '../../scripts/interfaces';\n\nexport interface IEpisodeEditService {\n  updateEpisodeTemplate(episode: IEpisode, templateId: string): ng.IPromise<IEpisode>;\n  addEpisodeToContainer(newContainer: IContainer): ng.IPromise<IContainer>;\n  setEpisodeToEdit(): void;\n  saveEpisode(episode: IEpisode): void;\n  detatchMasterAsset(episode: IEpisode): any;\n}\n\nexport class EpisodeEditService implements IEpisodeEditService {\n  static Name = 'episodeEdit'; // tslint:disable-line\n  static $inject = [\n    '$timeout',\n    'appState',\n    'selectService',\n    'modelSvc',\n    'dataSvc',\n    'episodeTheme',\n    'playbackService',\n    'timelineSvc'\n  ];\n\n  constructor(private $timeout: ng.ITimeoutService,\n              private appState,\n              private selectService,\n              private modelSvc: IModelSvc,\n              private dataSvc: IDataSvc,\n              private episodeTheme: IEpisodeTheme,\n              private playbackService,\n              private timelineSvc: ITimelineSvc) {\n    //\n  }\n\n  updateEpisodeTemplate(episode: IEpisode, templateId: string): ng.IPromise<IEpisode> {\n    const template = this.dataSvc.getTemplate(templateId) as IEpisodeTemplate;\n    const copy = createInstance<IEpisode>('Episode', episode);\n    copy.template = template;\n    copy.template_id = template.id;\n    const derived = this.modelSvc.deriveEpisode(copy);\n    this.modelSvc.cache('episode', derived); // because resolveEpisodeEvents pulls from cache by ID\n    const resolved = this.modelSvc.resolveEpisodeEvents(derived._id); // needed for template or style changes\n    return this.episodeTheme.setTheme(template)\n      .then(() => resolved);\n  }\n\n  addEpisodeToContainer(newContainer: IContainer): ng.IPromise<IContainer> {\n    const newEpisode: Partial<IEpisode> = {\n      'container_id': newContainer._id,\n      'title': angular.copy(newContainer.name)\n    };\n    return this.dataSvc.fetchTemplates()\n      .then(() => this.dataSvc.getEpisodeTemplatesByCustomerIds([newContainer.customer_id]))\n      .then((templates: any) => {\n        // do template stuff...\n        // if the customer does not have a custom template, use the unbranded one\n        if (templates.length === 1) {\n          newEpisode.template_id = templates[0].id;\n        } else {\n          // if they have a custom template, use the first template (by their customer id) that\n          // is not the unbranded one\n          const customerTemplate = templates.filter(t => t.name !== 'Unbranded');\n          newEpisode.template_id = customerTemplate[0].id;\n        }\n      })\n      .then(() => {\n        return this.dataSvc.createEpisode(newEpisode)\n          .then((epResp: IEpisode) => {\n            const newScene = {\n              '_type': 'Scene',\n              'title': {},\n              'description': {},\n              'templateUrl': 'templates/scene/1col.html',\n              'start_time': 0,\n              'end_time': 0,\n              'episode_id': epResp._id\n            } as IScene;\n            return newScene;\n          })\n          .then((firstScene: IScene) => this.dataSvc.storeItem(firstScene))\n          .then(() => newContainer);\n      });\n  }\n\n  setEpisodeToEdit(): void {\n    const episode = this.modelSvc.episodes[this.appState.episodeId];\n    const customerId = this.modelSvc.containers[episode.container_id].customer_id;\n    this.appState.editEpisode = episode;\n    this.appState.editEpisode.templateOpts = this.selectService.getTemplates('episode', [customerId]);\n    this.appState.videoControlsActive = true; // TODO see playerController showControls;\n    this.appState.videoControlsLocked = true; // this may not be sufficient on touchscreens\n  }\n\n  detatchMasterAsset(episode: IEpisode) {\n    this.dataSvc.detachMasterAsset(episode)\n      .then((data) => {\n        window.location.reload(); //?? not sure what to do next.\n      });\n  }\n\n  saveEpisode($episode: IEpisode) {\n    const toSave = angular.copy(this.appState.editEpisode);\n    console.log('wtf?', toSave);\n\n    this.dataSvc.storeEpisode(toSave)\n      .then((data: any) => {\n        this.modelSvc.cache('episode', this.dataSvc.resolveIDs(data));\n        if (this.appState.editEpisode._master_asset_was_changed) {\n          delete this.modelSvc.episodes[data._id]._master_asset_was_changed; // probably unnecessary\n          const duration = this.modelSvc.assets[data.master_asset_id].duration;\n          const endTime = duration - 0.01;\n          this.modelSvc.episodes[this.appState.episodeId].masterAsset = this.modelSvc.assets[$episode.master_asset_id];\n          this.modelSvc.episodes[this.appState.episodeId].master_asset_id = data.master_asset_id;\n\n          /*\n           iterate through episode.scenes.\n           if start time > duration, delete the scene.\n           if end time > duration, set end time to duration.\n           iterate through episode.items.\n           if start or end time > duration, set to duration.\n\n           update ending scene\n           resolveEpisode and resolveEpisodeEvents\n\n           */\n          const modifiedEvents = [];\n          const deletedScenes = [];\n\n          const episode = this.modelSvc.episodes[toSave._id];\n          angular.forEach(episode.scenes, (scene) => {\n\n            if (scene.start_time > duration) {\n              deletedScenes.push(scene);\n            } else if (scene.end_time > duration) {\n              scene.end_time = endTime;\n              modifiedEvents.push(scene);\n            }\n          });\n          angular.forEach(episode.items, (item) => {\n            if (item.start_time > duration) {\n              item.start_time = endTime;\n            }\n            if (item.end_time > duration) {\n              item.end_time = endTime;\n            }\n            modifiedEvents.push(item);\n          });\n\n          const endingScene = this.modelSvc.events['internal:endingscreen:' + toSave._id];\n          if (endingScene) { // if episode was shortened, this might have been one that was deleted\n            endingScene.start_time = endTime;\n            endingScene.end_time = endTime;\n          } else {\n            this.modelSvc.addEndingScreen(toSave._id);\n          }\n\n          this.modelSvc.resolveEpisodeEvents(this.appState.episodeId);\n          // modelSvc.resolveEpisodeContainers(appState.episodeId); // only needed for navigation_depth changes\n          this.modelSvc.resolveEpisodeAssets(this.appState.episodeId); // TODO I suspect this is unnecessary...\n          this.playbackService.setMetaProp('duration', duration);\n          this.appState.editEpisode = false;\n          this.appState.videoControlsLocked = false;\n          this.timelineSvc.init(this.appState.episodeId);\n\n          // push each of modifiedEvents to server (TODO combine these into one call!)\n          angular.forEach(modifiedEvents, (event) => {\n            if (event._id.indexOf('internal') < 0) {\n              this.dataSvc.storeItem(event);\n            }\n          });\n          // ditto for orphaned scenes\n          angular.forEach(deletedScenes, (scene) => {\n            if (scene._id.indexOf('internal') < 0) {\n              this.dataSvc.deleteItem(scene._id);\n            }\n          });\n\n          // HACK HACK HACK super brute force -- something is going screwy with the timeline and video here,\n          // especially when we switch from youtube to native or vv.  Force it with a full reload.\n          // (Note this makes a lot of the above re-init code redundant,\n          // but I'm hopeful I'll someday have time to fix this prOH HA HA HA I COULDNT SAY IT WITH A STRAIGHT FACE)\n          this.$timeout(\n            () => {\n              window.location.reload();\n            },\n            500\n          );\n\n        } else {\n          // modelSvc.resolveEpisodeContainers(appState.episodeId); // only needed for navigation_depth changes\n          this.modelSvc.resolveEpisodeEvents(this.appState.episodeId);\n          this.modelSvc.resolveEpisodeAssets(this.appState.episodeId);\n          this.appState.editEpisode = false;\n          this.appState.videoControlsLocked = false;\n\n        }\n      })\n      .catch((data) => {\n        console.error('FAILED TO STORE EPISODE', data);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/episode/services/episodeEdit.service.ts","const TEMPLATE = `\n{{$ctrl.copyrightOrg}} player &#169;\n<span ng-bind-html=\"$ctrl.now | date:'yyyy'\"></span>\n<a\n  ng-href=\"//{{$ctrl.orgLinkUrl}}\"\n  target=\"_blank\"\n  rel=\"noopener noreferrer\">{{$ctrl.orgLinkText}}</a>. All rights reserved.\n<br>\n<a href=\"/privacy.html\" target=\"_blank\">Privacy</a>\n<span ng-if=\"$ctrl.supportUrl\"> -\n\t<a ng-href=\"{{$ctrl.supportUrl}}\">Support</a>\n</span>\n`;\n\ninterface ICopyrightBindings extends ng.IComponentController {\n  org: 'np' | 'itt';\n  supportUrl?: string;\n}\n\nclass CopyrightController implements ICopyrightBindings {\n  org: 'np' | 'itt';\n  now: Date = new Date;\n  itt = {\n    copyrightOrg: 'TELLING STORY',\n    orgLinkUrl: 'inthetelling.com',\n    orgLinkText: 'IN THE TELLING'\n  };\n  np = {\n    copyrightOrg: 'Narrative',\n    orgLinkUrl: 'narrasys.com',\n    orgLinkText: 'Narrasys'\n  };\n\n  get copyrightOrg() {\n    return this[this.org].copyrightOrg;\n  }\n\n  get orgLinkUrl() {\n    return this[this.org].orgLinkUrl;\n  }\n\n  get orgLinkText() {\n    return this[this.org].orgLinkText;\n  }\n}\n\n\nexport class Copyright implements ng.IComponentOptions {\n  bindings: any = {\n    org: '@',\n    supportUrl: '@'\n  };\n  template: string = TEMPLATE;\n  controller = CopyrightController;\n  static Name: string = 'npCopyright'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/episode/components/copyright/npCopyright.ts","import { IEpisodeTemplate } from '../../../scripts/models';\nconst TEMPLATE = `\n<div ng-if=\"$ctrl.appState.viewMode != 'watch'\" ng-class=\"$ctrl.brandingDivClass\">\n\n  <div ng-if=\"$ctrl.proTemplate\" class=\"branding--content\">\n    <np-copyright org=\"np\" class=\"professional__copyright\"></np-copyright>  \n    <div class=\"professional__logo\"></div>\n  </div>\n  \n  <a\n    ng-if=\"!$ctrl.proTemplate\"\n    ng-repeat=\"logoImg in $ctrl.logos\"\n    ng-class=\"logoImg.css_class\"\n    ng-href=\"{{logoImg.url}}\"\n    target=\"_blank\"\n    rel=\"noopener noreferrer\">\n      <img ng-src=\"{{logoImg.src}}\" alt=\"{{logoImg.alt_text}}\"/>\n  </a>\n  <np-copyright ng-if=\"!$ctrl.proTemplate\" class=\"copyright\" org=\"np\"></np-copyright>\n</div>\n\n<div ng-if=\"$ctrl.bannerLogo != null\" ng-class=\"$ctrl.bannerLogo.css_class\">\n  <img\n    ng-if=\"$ctrl.bannerLogo.src\"\n    ng-src=\"{{$ctrl.bannerLogo.src}}\"\n    alt=\"{{ctrl.bannerLogo.alt_text}}\"/>\n</div>\n`;\n\ninterface IEpisodeFooterBindings extends ng.IComponentController {\n  templateData: IEpisodeTemplate;\n}\n\nclass EpisodeFooterController implements IEpisodeFooterBindings {\n  templateData: IEpisodeTemplate;\n  brandingDivClass: string;\n  static $inject = ['appState'];\n  constructor(public appState) {\n    //\n  }\n\n  get proTemplate() {\n    if (this.templateData) {\n      return this.templateData.pro_episode_template;\n    }\n  }\n\n  get bannerLogo() {\n    if (this.templateData && this.templateData.css_configuration != null) {\n      return this.templateData.css_configuration.legacy_banner_logo;\n    }\n  }\n\n  get logos() {\n    if (this.templateData && this.templateData.css_configuration != null) {\n      return this.templateData.css_configuration.legacy_logos;\n    }\n  }\n\n  $onChanges(changesObj) {\n    const legacyFooterClass = 'branding footer';\n    const proFooterClass = 'professional__branding';\n    if (!changesObj.templateData.isFirstChange()) {\n      if (this.templateData.pro_episode_template) {\n        this.brandingDivClass = proFooterClass;\n      } else {\n        this.brandingDivClass = legacyFooterClass;\n      }\n    }\n  }\n}\n\n\nexport class EpisodeFooter implements ng.IComponentOptions {\n  bindings: any = {\n    templateData: '<'\n  };\n  template: string = TEMPLATE;\n  controller = EpisodeFooterController;\n  static Name: string = 'npEpisodeFooter'; // tslint:disable-line\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/episode/components/episode-footer/npEpisodeFooter.ts","import ittEpisode from './components/episode/ittEpisode';\nimport ittEpisodeEditor from './components/episode-editor/ittEpisodeEditor';\nimport { EpisodeList } from './components/episode-list/ittEpisodeList';\nimport { EpisodeTheme } from './services/episodeTheme.service';\nimport { EpisodeEditService } from './services/episodeEdit.service';\nimport { Copyright } from './components/copyright/npCopyright';\nimport { EpisodeFooter } from './components/episode-footer/npEpisodeFooter';\n\nconst npEpisodeModule = angular.module('npEpisode', []);\nconst services = [\n  EpisodeTheme,\n  EpisodeEditService\n];\n\nconst components = [\n  EpisodeList,\n  Copyright,\n  EpisodeFooter\n];\n\nservices.forEach((service) => {\n  npEpisodeModule.service(service.Name, service);\n});\n\ncomponents.forEach((cmp) => {\n  npEpisodeModule.component(cmp.Name, new cmp);\n});\n\nnpEpisodeModule\n  .directive('ittEpisode', ittEpisode)\n  .directive('ittEpisodeEditor', ittEpisodeEditor);\n\nexport default npEpisodeModule;\n\n\n\n// WEBPACK FOOTER //\n// ./app/episode/episode.module.ts","var path = 'templates/scene/debug.html';\nvar html = \" <pre>{{scene | pretty}}</pre>\";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/scene/debug.html\n// module id = mNIM\n// module chunks = 0","var path = 'templates/scene/centered.html';\nvar html = \"<div class=\\\"scene centered\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=col> <div itt-magnet class=videoMagnet> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \"> </div> <div class=\\\"pane mainPane\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainBgItems| isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: (contentItems | isCurrent).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: contentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in (contentItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/scene/centered.html\n// module id = mbIM\n// module chunks = 0","var path = 'view-modes/review-mode/reviewmode.html';\nvar html = \"<div ng-show=\\\"appState.viewMode == 'review'\\\" class=searchMode> <div itt-magnet id=searchVideoMagnet class=videoMagnet> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \"> </div> <div itt-search-panel></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/view-modes/review-mode/reviewmode.html\n// module id = mrOr\n// module chunks = 0","var path = 'templates/item/usc-badges-inner.html';\nvar html = \"<span> <img style=max-width:5em;float:left;margin-right:.5em ng-src={{plugin.credlyImageUrl}}> <b>{{plugin.achievement}}</b> <span ng-if=plugin.eligibleForBadges> <p>Complete the following requirements to earn a <a ng-href=https://credly.com/recipients/{{plugin.credlyBadgeId}} target=_blank>USC Scholar's Badge</a>:</p> <div style=\\\"clear:both;margin:1em 1.2em;font-size:90%\\\"> <div ng-repeat=\\\"req in plugin.requirements\\\"> <img ng-if=req.achieved style=width:1em;height:1em;margin-left:-1.2em src=\" + require(\"/Users/githop/dev/js/client/app/images/checkmark.png\") + \"> <img ng-if=!req.achieved style=width:1em;height:1em;margin-left:-1.2em src=\" + require(\"/Users/githop/dev/js/client/app/images/checkmark-empty.png\") + \"> <span style=\\\"\\\">{{req.name}}</span> </div> </div> <p ng-if=\\\"plugin.totalAchieved != plugin.requirements.length\\\"> You have completed {{plugin.totalAchieved}} of {{plugin.requirements.length}} parts of this achievement. </p> <div ng-if=\\\"plugin.totalAchieved == plugin.requirements.length && !plugin.gotBadge\\\"> <p>Congratulations! You are eligible for a USC Scholar’s Badge. Enter your email address to claim it:</p> <input type=text ng-model=plugin.userEmail> <input type=button value=Go ng-click=badger()> <span ng-if=plugin.gettingBadge> <small>Getting your badge...</small> </span> <div ng-if=plugin.error> <small>We're sorry, there was an error retrieving your badge. Please try again later.</small> </div> </div> <div ng-if=plugin.gotBadge> Your badge is in the mail. <span ng-if=plugin.alreadyHadBadge>(It looks like you've already acquired this badge; you might want to check your spam folder for an email from credly.com.)</span> </div> </span> <span ng-if=!plugin.eligibleForBadges> <p>We're sorry, guest users are not eligibile for USC Scholar's Badges.</p> </span> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/usc-badges-inner.html\n// module id = nd4G\n// module chunks = 0","var path = 'templates/producer/item.html';\nvar html = \"<div class=\\\"itemEdit authoringForm\\\"> <form name=ittItemForm class=doValidate> <div ng-if=\\\"appState.product == 'sxs'\\\" class=authoringFormScrollContainer> <itt-time-field></itt-time-field> <div ng-include=itemEditor></div> </div> <div ng-if=\\\"appState.product == 'producer'\\\"> <div itt-tabs class=ittTabs> <div itt-tab class=ittTab ng-if=\\\"selectService.showTab(item.producerItemType, 'Item')\\\" title=\\\"{{item.producerItemType | capitalize}}\\\"> <label ng-if=\\\"languages.length > 1\\\" style=float:right;padding-right:24px for=itemLangSelect>Current Language <select id=itemLangSelect size=1 ng-model=appState.lang ng-change=forcePreview() ng-options=\\\"language.code as ('['+language.code.toUpperCase()+']') for language in languages\\\"> </select> </label> <div ng-switch on=item.producerItemType> <div ng-switch-when=link> <itt-time-field></itt-time-field> <itt-title-field do-validate=true data=item itt-item-form=ittItemForm></itt-title-field> <np-url-field data=item itt-item-form=ittItemForm></np-url-field> <itt-description-field data=item></itt-description-field> <np-template-select data=item item-form=itemForm></np-template-select> <itt-image-field></itt-image-field> <np-flags data=item template-url={{item.templateUrl}} item-form=itemForm flags=\\\"['required', 'stop', 'cosmetic']\\\"></np-flags> </div> <div ng-switch-when=transcript> <itt-time-field></itt-time-field> <itt-speaker-field></itt-speaker-field> <itt-transcript-field data=item itt-item-form=ittItemForm></itt-transcript-field> <itt-speaker-thumb-field></itt-speaker-thumb-field> </div> <div ng-switch-when=annotation> <itt-time-field></itt-time-field> <itt-title-field data=item></itt-title-field> <itt-annotation-field data=item itt-item-form=ittItemForm></itt-annotation-field> <np-template-select data=item item-form=itemForm></np-template-select> <itt-speaker-field></itt-speaker-field> <np-flags data=item template-url={{item.templateUrl}} item-form=itemForm flags=\\\"['stop', 'cosmetic', 'chapter_marker', 'invertColor']\\\"></np-flags> </div> <div ng-switch-when=file> <itt-time-field></itt-time-field> <itt-title-field do-validate=true data=item itt-item-form=ittItemForm></itt-title-field> <itt-file-field></itt-file-field> <itt-description-field data=item></itt-description-field> <np-flags data=item template-url={{item.templateUrl}} item-form=itemForm flags=\\\"['required', 'stop', 'cosmetic']\\\"></np-flags> </div> <div ng-switch-when=image> <itt-time-field></itt-time-field> <itt-title-field do-validate=true data=item itt-item-form=ittItemForm></itt-title-field> <itt-image-field></itt-image-field> <itt-description-field data=item></itt-description-field> <np-template-select data=item item-form=itemForm></np-template-select> <itt-display-select data=item item-form=itemForm></itt-display-select> <np-flags data=item template-url={{item.templateUrl}} item-form=itemForm flags=\\\"['required', 'stop', 'cosmetic']\\\"></np-flags> </div> <div ng-switch-when=question> <span class=\\\"eventIcon icon-question\\\"></span> <itt-time-field></itt-time-field> <itt-title-field do-validate=true data=item itt-item-form=ittItemForm></itt-title-field> <itt-question-text-field data=item do-validate=false itt-item-form=ittItemForm></itt-question-text-field> <itt-question-type-select data=item></itt-question-type-select> <itt-image-field></itt-image-field> <itt-question-options></itt-question-options> </div> <div ng-switch-when=chapter> <itt-time-field></itt-time-field> <itt-title-field do-validate=true data=item itt-item-form=ittItemForm></itt-title-field> <itt-description-field data=item></itt-description-field> </div> <div ng-switch-when=video> <h4>{{item.producerItemType}}</h4> </div> <div ng-switch-default> <h4>Default!</h4> </div> </div> </div> <div itt-tab class=ittTab ng-if=\\\"selectService.showTab(item.producerItemType, 'Style')\\\" title=\\\"{{item.producerItemType === 'scene' ? 'Layout' : 'Style'}}\\\"> <div ng-switch on=item.producerItemType> <div ng-switch-when=link> <itt-display-select></itt-display-select> </div> <div ng-switch-when=transcript> <np-template-select data=item item-form=itemForm></np-template-select> </div> <div ng-switch-when=annotation> <itt-display-select></itt-display-select> </div> <div ng-switch-when=scene> <itt-time-field></itt-time-field> <np-template-select data=item item-form=itemForm></np-template-select> <itt-video-position-select data=item></itt-video-position-select> <itt-display-select data=item></itt-display-select> </div> <div ng-switch-when=question> <np-template-select data=item item-form=itemForm></np-template-select> <itt-display-select data=item item-form=itemForm></itt-display-select> <np-flags data=item template-url={{item.templateUrl}} item-form=itemForm flags=\\\"['required', 'stop', 'cosmetic']\\\"></np-flags> </div> <div ng-switch-when=chapter> <h4>{{item.producerItemType}}</h4> </div> <div ng-switch-when=video> <h4>{{item.producerItemType}}</h4> </div> <div ng-switch-default> <h4>Default!</h4> </div> </div> </div> <div itt-tab class=ittTab ng-if=\\\"selectService.showTab(item.producerItemType, 'Customize')\\\" title=Customize> <div ng-switch on=item.producerItemType> <div ng-switch-when=link> <itt-typography-select></itt-typography-select> <itt-color-select></itt-color-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> <div ng-switch-when=transcript> <itt-typography-select></itt-typography-select> <itt-color-select></itt-color-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> <div ng-switch-when=annotation> <itt-typography-select></itt-typography-select> <itt-color-select></itt-color-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> <div ng-switch-when=scene> <itt-typography-select></itt-typography-select> <itt-color-select></itt-color-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> <div ng-switch-when=file> <itt-typography-select></itt-typography-select> <itt-color-select></itt-color-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> <div ng-switch-when=image> <itt-typography-select></itt-typography-select> <itt-color-select></itt-color-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> <div ng-switch-when=question> <itt-typography-select></itt-typography-select> <itt-color-select></itt-color-select> <itt-timestamp-select></itt-timestamp-select> <itt-highlight-select></itt-highlight-select> <itt-transition-select></itt-transition-select> </div> <div ng-switch-when=chapter> <h4>{{item.producerItemType}}</h4> </div> <div ng-switch-when=video> <h4>{{item.producerItemType}}</h4> </div> <div ng-switch-default> <h4>Default!</h4> </div> </div> </div> </div> </div> <div class=ittTabFoot> <a ng-click=cancelEdit()>Cancel</a> &nbsp; &nbsp; <button ng-if=\\\"\\n\\t\\t\\titem._id != 'internal:editing' &&\\n\\t\\t\\t!(item._type == 'Scene' && item.start_time <= 0.01)\\n\\t\\t\\\" ng-click=deleteEvent(item._id)>Delete </button> <button ng-click=saveEvent() ng-disabled=\\\"blockDoubleClicks || ittItemForm.$invalid\\\">Save</button> </div> </form> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/item.html\n// module id = p2SB\n// module chunks = 0","var path = 'templates/player.html';\nvar html = \"<div class=ios-iframe-overlay ng-if=showIframeIOSOverlay ng-click=iframeIOSOverlayHandler()></div> <div ng-class=\\\"{\\n\\tisTouchDevice: appState.isTouchDevice,\\n\\tisFramed: appState.isFramed,\\n\\tisProducer: (appState.product == 'producer'),\\n\\tisSxS: (appState.product == 'sxs'),\\n\\n\\tcanEditContent: (!appState.editEvent && !appState.editEpisode) && (appState.product == 'producer' || appState.product == 'sxs')\\n\\t}\\\"> <div class=player> <itt-toolbar-story></itt-toolbar-story> <np-loading ng-if=loading></np-loading> <div ng-show=!loading itt-episode ng-class=\\\"{\\n\\t\\tpadForEditing: appState.editEvent || appState.editEpisode,\\n\\t\\tshowBackgroundOnly: appState.producerEditLayer < 0,\\n\\t\\tshowForegroundOnly: appState.producerEditLayer > 0,\\n\\t}\\\"></div> <div class=toolbar-bottom itt-show-hide-visual-only=appState.videoControlsActive ng-mouseenter=showControls(); ng-click=showControls(); ng-mouseleave=allowControlsExit()> <div class=toolbar-bottom-fill> <div ng-show=\\\"appState.editEvent || appState.editEpisode\\\" class=\\\"navPanel editPanel\\\"> <div ng-if=appState.editEvent itt-item-editor=appState.editEvent></div> <div ng-if=appState.editEpisode itt-episode-editor=appState.editEpisode></div> </div> <div itt-timeline></div> </div> </div> <div class=toolbar-bottom-controltrigger ng-mouseenter=showControls(); ng-click=showControls(); ng-focus=showControls()></div> </div> <div class=\\\"animate transitionFade\\\" ng-if=\\\"appState.videoControlsActive && (appState.product == 'sxs' || appState.product == 'producer')\\\" ng-mouseenter=showControls(); ng-click=showControls(); ng-focus=showControls() sxs-add-content></div> <div class=autoscroll ng-if=\\\"appState.autoscroll && appState.autoscrollBlocked\\\" ng-click=enableAutoscroll()> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/autoscroll.svg\") + \" width=32 height=32> </div> <div ng-show=show.navPanel class=modal-backdrop ng-click=\\\"hidePanel('navPanel')\\\"></div> <div ng-show=show.profilePanel class=modal-backdrop ng-click=\\\"hidePanel('profilePanel')\\\"></div> <div ng-show=appState.itemDetail class=modal-backdrop ng-click=\\\"appState.itemDetail=false\\\"></div> <div ng-if=appState.itemDetail itt-item-detail-modal=appState.itemDetail></div> <div ng-if=show.profilePanel> <np-modal modal-class=account__modal wrapper-class=account__modal--wrapper> <button ng-hide=\\\"appState.isFramed ||  !(userHasRole('admin') || userHasRole('customer admin'))\\\" class=button ng-click=\\\"editInfo = !editInfo\\\">{{editInfo ? 'Done Editing' : 'Edit Profile'}}</button> <a class=button ng-click=\\\"show.profilePanel = false\\\">close</a> <np-nav ng-if=\\\"!editInfo && ((userHasRole('admin') || userHasRole('customer admin')) && !appState.isFramed)\\\" on-logout=$parent.logout() in-player=true></np-nav> <div ng-if=\\\"editInfo || appState.isFramed ||  !(userHasRole('admin') || userHasRole('customer admin'))\\\"> <div itt-user></div> </div> </np-modal> </div> <div ng-cloak ng-if=\\\"show.wileyNag &&  (appState.productLoadedAs == 'player'\\n\\t \\t\\t\\t|| (appState.productLoadedAs == 'narrative'\\n\\t \\t\\t\\t&& !narrative.disable_new_window ) )\\\" class=\\\"wileyNag animate transitionFade\\\"> <div> <span style=float:right>⤴</span> <span style=float:right;display:inline-block;padding:5px>Go here for best view</span> </div> <a class=goAway ng-click=noWileyNag()>Don't show this again</a> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/player.html\n// module id = p3P+\n// module chunks = 0","var path = 'templates/item/review-transmedia.html';\nvar html = \"<span ng-class=\\\"{isCosmetic: item.cosmetic}\\\"> <div ng-if=item.sxs ng-include=item.templateUrl></div> <span ng-if=!item.sxs> <span ng-if=\\\"item.layouts[0] == 'windowFg'\\\" ng-include=\\\"'templates/item/review-windowfg.html'\\\"></span> <span ng-if=\\\"item.layouts[0] != 'windowFg'\\\"> <div ng-if=item.data._pluginType ng-include=item.templateUrl></div> <span ng-if=!item.data._pluginType> <a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button tabindex=0 class=\\\"startTime displayTime\\\" aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <span ng-if=\\\"item._type == 'Annotation'\\\"> <div class=text> <div class=title> <div ng-if=item.display_annotator class=authorName ng-bind-html=item.display_annotator></div> <div ng-if=item.display_title class=authorName ng-bind-html=item.display_title></div> </div> <div ng-bind-html=item.display_annotation></div> </div> </span> <span ng-if=\\\"item._type != 'Annotation'\\\"> <div class=text> <div class=title> <a tabindex=0 ng-if=handleOutgoingLinkDisplay() class=\\\"fakeLink escapelink\\\" ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> <a tabindex=0 role=button class=fakeLink ng-if=!handleOutgoingLinkDisplay() x-ng-keypress=toggleDetailOnKeyPress($event) ng-click=toggleDetailView() ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\" aria-label=\\\"Toggle detail display of {{item.display_title}}\\\"></a> </div> <div ng-bind-html=item.display_description></div> </div> <div class=itemDetail ng-if=\\\"item.showInlineDetail && item._type == 'Link'\\\"> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) class=escapelink>(new window)</a> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </div> <div class=itemDetail ng-if=\\\"item.showInlineDetail && item._type != 'Link'\\\"> <div class=touchable style=position:relative> <img ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> </div> </span> </div> </span> </span> </span> <div class=clear></div> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/review-transmedia.html\n// module id = phYv\n// module chunks = 0","var path = 'templates/item/sxs-video.html';\nvar html = \"<div class=\\\"itemTemplate sxs-item\\\"> <a class=edit-event ng-click=editItem() ng-if=item.editableByThisUser>[Edit]</a> <div class=avatar> <img ng-src=\\\"{{item.avatar.url || appState.noAvatar }}\\\"> </div> <div class=itemHead> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <div class=text> <div class=title ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <a class=escapelink ng-click=outgoingLink(item.url)>New window</a> <div ng-if=!handleOutgoingLinkDisplay()> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <div class=sxs-video> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/sxs-video.html\n// module id = q06B\n// module chunks = 0","var path = 'templates/scene/centeredPro.html';\nvar html = \"<div class=\\\"scene centered-pro\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div itt-item=item class=\\\"item animate banner-pull-quote\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" ng-repeat=\\\"item in (contentItems | isCurrent | filter:{templateUrl: 'templates/item/text-h1.html'} )\\\"> </div> <div class=col> <div itt-magnet class=videoMagnet> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \"> </div> <div class=\\\"pane mainPane\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainBgItems| isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: (contentItems | isCurrent).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: contentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in (contentItems | isCurrent | filter:centeredProTransmedia  )\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/scene/centeredPro.html\n// module id = qZRx\n// module chunks = 0","var path = 'templates/item/image-linkonly.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=category> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=text> <div class=title> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.asset.url,$event) ng-click=outgoingLink(item.asset.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <div class=text ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/image-linkonly.html\n// module id = qpRi\n// module chunks = 0","module.exports = __webpack_public_path__ + \"images/Narrasys_Banner.02a409f34b80c72134169a171c9c8852.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/images/Narrasys_Banner.svg\n// module id = rFfA\n// module chunks = 0","var path = 'templates/producer/item/sxs-link.html';\nvar html = \"<span class=\\\"eventIcon icon-link\\\"></span> <itt-title-field do-validate=false data=item itt-item-form=ittItemForm></itt-title-field> <np-url-field data=item context=editor itt-item-form=ittItemForm></np-url-field> <itt-description-field data=item></itt-description-field> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/item/sxs-link.html\n// module id = rGHM\n// module chunks = 0","var path = 'templates/producer/container-assets.html';\nvar html = \"<div ng-if=$ctrl.showParent> <sxs-container-assets container-id={{$ctrl.container.parent_id}}></sxs-container-assets> </div> <div class=containerAssets> <div ng-if=\\\"$ctrl.appState.product != 'sxs' && $ctrl.container.parent_id && !$ctrl.showParent\\\"> <a class=goUp ng-click=$ctrl.up()>Parent container</a> </div> <div class=title>{{$ctrl.container.display_name}} - Asset Library </div> <div class=controls> <a ng-click=$ctrl.toggleImages()> <span ng-if=$ctrl.onlyImages>Images</span> <span ng-if=!$ctrl.onlyImages>All</span> </a> &nbsp; <a ng-click=$ctrl.toggleGrid()> <span ng-if=$ctrl.gridView>▦</span> <span ng-if=!$ctrl.gridView>☰</span> </a> </div> <div class=scrollPane ng-if=!$ctrl.hideItems> <div ng-if=$ctrl.gridView> <div class=grid ng-repeat=\\\"asset in $ctrl.isCustAdmin ? ($ctrl.assets | vidsFromCustAdmins) : $ctrl.assets\\\" ng-if=\\\"asset.container_id == $ctrl.containerId && !($ctrl.onlyImages && asset._type != 'Asset::Image')\\\" ng-click=$ctrl.assetClick(asset._id)> <div ng-if=\\\"asset._type == 'Asset::Image'\\\"> <img class=thumbnail ng-src={{asset.url}}> </div> <div ng-if=\\\"asset._type != 'Asset::Image'\\\"> <div class=thumbnail>{{asset._type}}</div> </div> {{asset.display_name}} <span ng-if=asset.tags[0]> - {{asset.tags[0] | tagName}}</span> </div> </div> <table ng-if=!$ctrl.gridView> <tr ng-repeat=\\\"asset in $ctrl.isCustAdmin ? ($ctrl.assets | vidsFromCustAdmins) : $ctrl.assets\\\" ng-if=\\\"asset.container_id == $ctrl.containerId && !($ctrl.onlyImages && asset._type != 'Asset::Image')\\\" ng-click=$ctrl.assetClick(asset._id)> <td> <div ng-if=\\\"asset._type == 'Asset::Image'\\\"> <img class=thumbnail ng-src={{asset.url}}> </div> </td> <td>{{asset.size |asBytes}}</td> <td>{{asset.content_type}}</td> <td> {{asset.display_name}} </td> <td ng-if=asset.tags[0]>{{asset.tags[0] | tagName}}</td> <td class=delete-button__container> <np-tooltip tip-text=\\\"Delete Asset\\\"> <a ng-click=\\\"$ctrl.requestDeleteAsset(asset, $event)\\\" class=delete__button></a> </np-tooltip> </td> </tr> </table> </div> <br> <np-modal class=modal__center-center ng-if=\\\"$ctrl.assetToDelete != null\\\"> <h4>Delete</h4> {{$ctrl.assetToDelete.display_name}}? <div> <button ng-click=$ctrl.deleteAsset($ctrl.assetToDelete._id)>Delete</button> <button ng-click=\\\"$ctrl.assetToDelete = null\\\">cancel</button> </div> </np-modal> <itt-asset-uploader container-id={{$ctrl.container._id}} mime-types={{$ctrl.mimes}} multiple=true ng-if=\\\"$ctrl.canAccess && $ctrl.context !== 'narrative'\\\"> </itt-asset-uploader> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/producer/container-assets.html\n// module id = rLXe\n// module chunks = 0","module.exports = __webpack_public_path__ + \"images/aspectratiopreserver-16x9.81dd48a755a6e8f01bfc872a4d2ab76a.gif\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/images/aspectratiopreserver-16x9.gif\n// module id = rXKF\n// module chunks = 0","var path = 'templates/item/image-caption.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"captionContainer touchable\\\"> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> <div class=caption> <div class=\\\"title item__title item__title--image-caption\\\" ng-bind-html=\\\"item.display_title | highlightSubstring: appState.searchText\\\"></div> <div class=\\\"text item__text item__text--image-caption\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> </div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/image-caption.html\n// module id = rdiM\n// module chunks = 0","var path = 'templates/scene/1col.html';\nvar html = \"<div class=\\\"scene onecol\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div itt-magnet class=videoMagnet ng-class=\\\"{hasLeftSidebar: mainContentHasLeftSidebar, hasRightSidebar: mainContentHasRightSidebar}\\\"> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \"> </div> <div class=col> <div class=\\\"pane mainPane\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainBgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer stretchToViewport\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (mainContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (mainContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: mainContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: mainContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: mainContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in showCurrent ? (contentItems | isCurrent) : contentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/scene/1col.html\n// module id = rfeV\n// module chunks = 0","var path = 'templates/searchpanel.html';\nvar html = \"<div ng-class=episode.styleCss class=searchPanel__wrapper> <div aria-label=\\\"sort toggle\\\" class=searchfilters aria-controls=sortableSearch> <div> Sorted by <button tabindex=0 class=\\\"fakeLink fake-link--search-results\\\" ng-click=toggleSortBy(sortBy) aria-label=\\\"toggles sort to {{getToggledValue(sortBy)}}\\\">{{getFriendlySortText(sortBy)}}</button> </div> </div> <div class=scrollContainer> <div class=\\\"searchResults content\\\" id=sortableSearch itt-width-watch ng-class=\\\"{isNarrow: isNarrow}\\\"> <div ng-if=\\\"sortBy == 'startTime'\\\" class=sortByTime> <h1 ng-bind-html=episode.display_title></h1> <div ng-repeat=\\\"scene in episode.scenes\\\"> <span ng-switch=appState.product> <div ng-switch-when=producer ng-repeat=\\\"item in scene.items\\\" ng-show=\\\"([item.searchableText] | filter:appState.searchText).length\\\" class=\\\"item animate\\\" ng-class=item.state itt-item=item forcetemplate=searchresults-all> </div> <div ng-switch-default ng-repeat=\\\"item in scene.items | filter: {cosmetic: false }\\\" ng-show=\\\"([item.searchableText] | filter:appState.searchText).length\\\" class=\\\"item animate\\\" ng-class=item.state itt-item=item forcetemplate=searchresults-all> </div> </span> </div> </div> <div ng-if=\\\"sortBy == 'type'\\\" class=sortByType> <div ng-repeat=\\\"category in typeCategories\\\"> <h3 ng-if=\\\"matchedItems.length > 0\\\" ng-bind-html=showTypes[category].name></h3> <div class=\\\"item animate\\\" ng-repeat=\\\"item in matchedItems=(showTypes[category].items | orderBy:'start_time')\\\" ng-show=\\\"([item.searchableText] | filter:appState.searchText).length\\\" ng-class=item.state itt-item=item forcetemplate=searchresults-all> </div> </div> <div ng-if=\\\"(episode.items | filter:{'searchableText': appState.searchText||'', 'cosmetic': false}).length == 0\\\"> (Nothing matched your search.) </div> </div> </div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/searchpanel.html\n// module id = sGzq\n// module chunks = 0","module.exports = __webpack_public_path__ + \"images/Narrasys_Logo.df561103178efc6ff2c87d7f47387f90.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/images/customer/Narrasys_Logo.png\n// module id = teY+\n// module chunks = 0","var path = 'templates/scene/pip.html';\nvar html = \"<div class=\\\"scene pip\\\" ng-class=\\\"scene.styleCss + ' '+ scene.state\\\"> <div class=\\\"pane altPane stretchToViewport\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in (altBgItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer\\\" ng-class=\\\"{\\n\\t\\t\\t\\tsingleitem: showCurrent\\n\\t\\t\\t\\t\\t? (altContentItems | isCurrent).length == 1\\n\\t\\t\\t\\t\\t: (altContentItems).length == 1,\\n\\t\\t\\t\\tallowHighlights: !showCurrent,\\n\\t\\t\\t\\thasLeftSidebar: altContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: altContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: altContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in showCurrent ? (altContentItems | isCurrent) : altContentItems\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> <div class=clear></div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in (altFgItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> <div ng-class=\\\"{padForBottomToolbar: appState.videoControlsActive}\\\"> <div class=videoPositioner> <div itt-magnet class=videoMagnet> <img src=\" + require(\"/Users/githop/dev/js/client/app/images/aspectratiopreserver-16x9.gif\") + \"> </div> </div> <div class=\\\"pane mainPane\\\"> <div class=\\\"fill bgLayer\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in (mainBgItems | isCurrent)\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> <div class=\\\"content contentLayer showCurrent\\\" ng-class=\\\"{\\n\\t\\t\\t\\thasLeftSidebar: mainContentHasLeftSidebar,\\n\\t\\t\\t\\thasRightSidebar: mainContentHasRightSidebar,\\n\\t\\t\\t\\tisNarrow: isNarrow,\\n\\t\\t\\t\\tisEmpty: mainContentItems.length == 0\\n\\t\\t\\t}\\\" itt-width-watch> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainContentItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item> </div> </div> <div class=clear></div> </div> </div> <div class=\\\"fill fgLayer overlay\\\"> <div class=\\\"item animate\\\" ng-repeat=\\\"item in mainFgItems | isCurrent\\\" ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item></div> </div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/scene/pip.html\n// module id = uFtN\n// module chunks = 0","var path = 'templates/item/link-withimage-notitle.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text\\\"> <span ng-if=handleOutgoingLinkDisplay()> <span ng-if=!item.targetTop> <a tabindex=0 ng-if=item.asset.url x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)> <img ng-src={{item.asset.url}} class=img--link-with-image-no-title> </a> </span> <span ng-if=item.targetTop> <a tabindex=0 target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)> <img ng-src={{item.asset.url}} class=img--link-with-image-no-title> </a> </span> </span> <span ng-if=!handleOutgoingLinkDisplay()> <img ng-click=toggleDetailView() ng-src={{item.asset.url}} class=img--link-with-image-no-title> </span> <div class=\\\"item__text item__text--link text--link-with-image\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> </div> <div class=itemDetail ng-if=item.showInlineDetail> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) class=\\\"escapelink item__link--escape-link escape-link--link-with-image\\\">(new window)</a> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </div> <div class=clear></div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/link-withimage-notitle.html\n// module id = un+J\n// module chunks = 0","var path = 'view-modes/discover-mode/discovermode.html';\nvar html = \"<div class=discoverMode ng-if=\\\"appState.viewMode == 'discover'\\\"> <div class=\\\"fill windowBg bgLayer\\\"> <div ng-class=\\\"item.styleCss + ' ' + item.state\\\" itt-item=item class=\\\"item animate\\\" ng-repeat=\\\"item in scene.items | isCurrent | itemLayout:'windowBg'\\\"> </div> </div> <div itt-scene=scene episode=episode class=scene__container></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/view-modes/discover-mode/discovermode.html\n// module id = vjhS\n// module chunks = 0","var path = 'templates/item/sxs-image.html';\nvar html = \"<div class=\\\"itemTemplate sxs-item\\\"> <a class=edit-event ng-click=editItem() ng-if=item.editableByThisUser>[Edit]</a> <div class=avatar> <img ng-src=\\\"{{item.avatar.url || '/images/no-avatar.gif'}}\\\"> </div> <div class=itemHead> <div class=authorName ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></div> </div> <div> <b ng-bind-html=item.title.en></b> <p style=text-align:center> </p><div ng-if=item.asset.url class=touchable> <img x-ng-click=forceModal() ng-src={{item.asset.url}}> <div class=touchableIndicator></div> </div> <p></p> </div> <div class=text ng-bind-html=item.description.en></div> <div class=clear></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/sxs-image.html\n// module id = vxq4\n// module chunks = 0","var path = 'templates/container.html';\nvar html = \" <div class=container ng-if=$ctrl.container ng-class=\\\"{\\n     hoverIndicator: $ctrl.depth === 3,\\n     isActive: $ctrl.container.isActive,\\n     'container__row--odd': $ctrl.container.evenOdd === false,\\n     'container__row--even': $ctrl.container.evenOdd === true\\n     }\\\" ng-style=\\\"{'text-indent': 1 * $ctrl.depth + 'em' }\\\" ng-if=$ctrl.container._id> <span ng-class=\\\"{\\n\\tisOpen: $ctrl.container.showChildren && $ctrl.depth !== 3,\\n\\tisClosed: !$ctrl.container.showChildren && $ctrl.depth !== 3\\n\\t}\\\" ng-click=$ctrl.onToggleChildren(false)> </span> <np-modal modal-class=narrative__modal ng-if=$ctrl.showNarrativeModal> <np-narrative-editor customers=$ctrl.customers container-info=\\\"{\\n      containerId: $ctrl.container._id,\\n      customerId: $ctrl.container.customer_id,\\n      name: $ctrl.container.name\\n      }\\\" hide-path-slug=::true on-done=$ctrl.toggleNarrativeModal($undo) on-update=$ctrl.postNewNarrative($data)> </np-narrative-editor> <itt-route-loading is-loading=$ctrl.resolvingNarrative></itt-route-loading> </np-modal> <div ng-class=\\\"{hoverIndicator: $ctrl.depth !== 3, isActive: $ctrl.container.isActive && depth !== 3}\\\"> <div ng-if=\\\"$ctrl.depth === 3\\\"> <np-tooltip tip-text={{$ctrl.container.status}} class=published__state ng-style=\\\"$ctrl.container.isActive && { 'top':'17.5px' }\\\" style=text-indent:0> <span ng-class=\\\"{\\n          isPublished: $ctrl.container.status === 'Published',\\n          isUnPublished: $ctrl.container.status !== 'Published'\\n          }\\\"></span> </np-tooltip> </div> <div class=delete-button__container ng-style=\\\"$ctrl.depth != 3 && {'padding-right': '5.5px'}\\\" ng-if=\\\"$ctrl.depth > 0 && $ctrl.container.isActive && !$ctrl.container.editingContainer\\\"> <np-tooltip tip-text=\\\"Delete {{$ctrl.containerType}}?\\\"> <a ng-click=$ctrl.deleteContainer($ctrl.container._id) class=delete__button></a> </np-tooltip> </div> <span ng-if=!$ctrl.container.editingContainer ng-style=\\\"$ctrl.depth === 3 ? {'text-indent': '4em'} : ''\\\"> <np-edit-pencil ng-if=\\\"$ctrl.depth !== 0\\\" can-access=true on-edit=\\\"$ctrl.container.editingContainer = true\\\"> <a ng-click=$ctrl.onToggleChildren(true)>{{$ctrl.container.name.en}}</a> </np-edit-pencil> <a ng-if=\\\"$ctrl.depth === 0\\\" ng-click=$ctrl.onToggleChildren(true)>{{$ctrl.container.name.en}}</a> </span> <div ng-if=\\\"$ctrl.depth === 0\\\"> <div ng-if=!$ctrl.container.addingContainer> <div ng-if=$ctrl.container.isActive class=button__row> <div> <np-tooltip tip-text=\\\"Add Project\\\"> <a class=\\\"icon__button button__add-inverted\\\" ng-click=\\\"$ctrl.container.addingContainer = true\\\"></a> </np-tooltip> <np-tooltip tip-text=\\\"Link Status Report\\\"> <a ng-if=$ctrl.isAdmin class=\\\"icon__button button__link-status\\\" ng-click=$ctrl.getLinkStatusReport($ctrl.container.customer_id)></a> </np-tooltip> </div> </div> </div> <div ng-if=$ctrl.container.addingContainer> <label>Name:&nbsp; <input ng-model=$ctrl.container.newContainerTitle type=text autofocus>&nbsp; </label> <button ng-click=\\\"$ctrl.container.addingContainer = false\\\">Cancel</button> <button ng-disabled=!$ctrl.container.newContainerTitle ng-click=$ctrl.addContainer($ctrl.container)>Add</button> </div> </div> <div ng-if=\\\"$ctrl.depth === 1\\\"> <div ng-if=!$ctrl.container.addingContainer> <div ng-if=$ctrl.container.isActive class=button__row> <div> <np-tooltip tip-text=\\\"Add Module\\\"> <a class=\\\"icon__button button__add-inverted\\\" ng-click=\\\"$ctrl.container.addingContainer = true\\\"></a> </np-tooltip> <np-tooltip tip-text=\\\"Go to assets\\\"> <a class=\\\"icon__button button__assets\\\" ng-href=#/assets/{{$ctrl.container._id}}></a> </np-tooltip> <np-tooltip tip-text=\\\"Generate new narrative\\\"> <a ng-if=$ctrl.canAccess class=\\\"icon__button button__generateNarrative\\\" ng-click=$ctrl.toggleNarrativeModal()></a> </np-tooltip> </div> </div> </div> <div ng-if=$ctrl.container.addingContainer> <label>Name:&nbsp; <input ng-model=$ctrl.container.newContainerTitle type=text autofocus>&nbsp; </label> <button ng-click=\\\"$ctrl.container.addingContainer = false\\\">Cancel</button> <button ng-disabled=!$ctrl.container.newContainerTitle ng-click=$ctrl.addContainer($ctrl.container)>Add</button> </div> </div> <div ng-if=\\\"$ctrl.depth === 2\\\"> <div ng-if=!$ctrl.container.addingContainer> <div ng-if=$ctrl.container.isActive class=button__row> <np-tooltip tip-text=\\\"Add Episode\\\"> <a class=\\\"icon__button button__add-inverted\\\" ng-click=\\\"$ctrl.container.addingContainer = true\\\"></a> </np-tooltip> <np-tooltip tip-text=\\\"Go to assets\\\"> <a class=\\\"icon__button button__assets\\\" ng-href=#/assets/{{$ctrl.container._id}}></a> </np-tooltip> <np-tooltip tip-text=\\\"Generate new narrative\\\"> <a ng-if=$ctrl.canAccess class=\\\"icon__button button__generateNarrative\\\" ng-click=$ctrl.toggleNarrativeModal()></a> </np-tooltip> </div> </div> <div ng-if=$ctrl.container.addingContainer> <label>Name:&nbsp; <input ng-model=$ctrl.container.newContainerTitle type=text autofocus>&nbsp; </label> <button ng-click=\\\"$ctrl.container.addingContainer = false\\\">Cancel</button> <button ng-disabled=!$ctrl.container.newContainerTitle ng-click=$ctrl.addContainer($ctrl.container)>Add</button> </div> </div> <span ng-if=$ctrl.container.editingContainer> <label>Name:&nbsp; <input ng-model=$ctrl.container.newContainerName ng-init=\\\"$ctrl.container.newContainerName = $ctrl.container.name.en\\\" type=text autofocus>&nbsp; </label> <button ng-click=\\\"$ctrl.container.editingContainer = false\\\">Cancel</button> <button ng-disabled=\\\"!$ctrl.container.newContainerName || $ctrl.container.newContainerName == $ctrl.container.name.en\\\" ng-click=$ctrl.renameContainer()>Save</button> </span> </div> <div ng-if=\\\"$ctrl.depth == 3 && $ctrl.container.isActive\\\" class=container style=text-indent:4em> <div class=episode__button-row> <div class=episode__button> <np-tooltip tip-text=\\\"Go to editor\\\"> <a class=\\\"icon__button button__editor\\\" ng-if=$ctrl.isDemoServer href=#/editor/{{$ctrl.container.episodes[0]}}></a> </np-tooltip> <np-tooltip tip-text=\\\"Go to producer\\\"> <a class=\\\"icon__button button__producer\\\" href=#/producer/{{$ctrl.container.episodes[0]}}></a> </np-tooltip> <np-tooltip tip-text=\\\"Go to assets\\\"> <a class=\\\"icon__button button__assets\\\" ng-href=#/assets/{{$ctrl.container._id}}></a> </np-tooltip> <np-tooltip tip-text=\\\"Generate new narrative\\\"> <a ng-if=$ctrl.canAccess class=\\\"icon__button button__generateNarrative\\\" title=\\\"Generate new narrative\\\" ng-click=$ctrl.toggleNarrativeModal()></a> </np-tooltip> </div> </div> </div> <np-container ng-if=\\\"$ctrl.depth < 3 && $ctrl.container.showChildren\\\" ng-repeat=\\\"child in $ctrl.container.children\\\" depth=\\\"$ctrl.depth + 1\\\" container=$ctrl.containers[child._id] containers=$ctrl.modelSvc.containers on-container-remove=\\\"$ctrl.onContainerRemove({ $container })\\\" on-container-click=\\\"$ctrl.onContainerClick({ $container })\\\" on-container-add=\\\"$ctrl.onContainerAdd({ $container })\\\"> </np-container> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/container.html\n// module id = w5Vi\n// module chunks = 0","var path = 'templates/item/pullquote-noattrib.html';\nvar html = \" <a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=\\\"itemTemplate headerItem\\\"> <div class=category></div> <div class=\\\"pullquote item__text item__text--pullquote\\\" ng-bind-html=\\\"item.display_annotation | highlightSubstring: appState.searchText\\\"></div> <div class=pullquoteSpeaker ng-if=item.display_annotator> — <span ng-bind-html=\\\"item.display_annotator | highlightSubstring: appState.searchText\\\"></span></div> </div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/pullquote-noattrib.html\n// module id = wXer\n// module chunks = 0","var path = 'templates/player-timeline.html';\nvar html = \"<span> <div ng-if=showPlayer> <itt-player-container></itt-player-container> </div> </span> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/player-timeline.html\n// module id = x+pf\n// module chunks = 0","var path = 'templates/item/link.html';\nvar html = \"<a class=edit-event ng-click=editItem()> <span>Edit item</span> </a> <div class=itemTemplate> <div class=itemHead> <a role=button aria-label=\\\"Seek video to {{item.displayStartTime}}\\\" tabindex=0 class=\\\"startTime displayTime\\\" x-ng-click=seek(item.start_time) x-ng-keypress=\\\"seekOnKeyPress(item.start_time, $event)\\\">{{item.displayStartTime}}</a> <div class=\\\"category item__title\\\"> <span ng-if=item.required>(Required viewing)</span> </div> </div> <div class=\\\"text item__text\\\"> <span ng-if=handleOutgoingLinkDisplay()> <span ng-if=!item.targetTop> <div class=\\\"title item__title item__title--link title--link-with-image\\\"> <a tabindex=0 class=\\\"escapelink item__link--escape-link escape-link--link-with-image\\\" x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <a tabindex=0 ng-if=item.asset.url x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)> <img ng-if=item.asset.url ng-src={{item.asset.url}}> </a> </span> <span ng-if=item.targetTop> <div class=\\\"title item__title item__title--link title--link-with-image\\\"> <a tabindex=0 target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <a tabindex=0 target=_top x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url)> <img ng-if=item.asset.url ng-src={{item.asset.url}}> </a> </span> </span> <span ng-if=!handleOutgoingLinkDisplay()> <div class=\\\"title item__title item__title--link title--link-with-image\\\"> <a role=button x-ng-keypress=toggleDetailOnKeyPress($event) class=\\\"fakeLink item__link--fake-link\\\" tabindex=0 ng-click=toggleDetailView() ng-bind-html=\\\"item.display_title || '(Untitled)' | highlightSubstring: appState.searchText\\\"></a> </div> <img ng-if=item.asset.url ng-click=toggleDetailView() ng-src={{item.asset.url}}> </span> <div class=\\\"item__text item__text--link text--link-with-image\\\" ng-bind-html=\\\"item.display_description | highlightSubstring: appState.searchText\\\"></div> </div> </div> <div class=itemDetail ng-if=item.showInlineDetail> <a tabindex=0 x-ng-keypress=outgoingLinkOnKeyPress(item.url,$event) ng-click=outgoingLink(item.url) class=\\\"escapelink item__link--escape-link escape-link--link-with-image\\\">(new window)</a> <itt-iframe ng-if=!item.isVideoUrl x-src={{item.url}} item=item></itt-iframe> <itt-video ng-if=item.isVideoUrl media-src-arr=[item.url] player-id=item._id main-player=false> </itt-video> </div> <div class=clear></div> \";\nwindow.angular.module('ng').run(['$templateCache', function(c) { c.put(path, html) }]);\nmodule.exports = path;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/templates/item/link.html\n// module id = zuiT\n// module chunks = 0"],"sourceRoot":""}